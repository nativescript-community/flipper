

declare module bolts {
	export class AggregateException extends java.lang.Exception {
		public static class: java.lang.Class<bolts.AggregateException>;
		public constructor();
		public constructor(param0: string, param1: java.util.List<any>);
		/** @deprecated */
		public getCauses(): native.Array<java.lang.Throwable>;
		public printStackTrace(param0: java.io.PrintStream): void;
		public printStackTrace(param0: java.io.PrintWriter): void;
		public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
		public constructor(param0: string, param1: native.Array<java.lang.Throwable>);
		public constructor(param0: java.lang.Throwable);
		public constructor(param0: string, param1: java.lang.Throwable);
		/** @deprecated */
		public getErrors(): java.util.List<java.lang.Exception>;
		public getInnerThrowables(): java.util.List<java.lang.Throwable>;
		public constructor(param0: java.util.List<any>);
		public printStackTrace(): void;
		public constructor(param0: string);
	}
}

declare module bolts {
	export class AndroidExecutors extends java.lang.Object {
		public static class: java.lang.Class<bolts.AndroidExecutors>;
		public static newCachedThreadPool(): java.util.concurrent.ExecutorService;
		public static newCachedThreadPool(param0: java.util.concurrent.ThreadFactory): java.util.concurrent.ExecutorService;
		public static allowCoreThreadTimeout(param0: java.util.concurrent.ThreadPoolExecutor, param1: boolean): void;
		public static uiThread(): java.util.concurrent.Executor;
	}
	export module AndroidExecutors {
		export class UIThreadExecutor extends java.lang.Object implements java.util.concurrent.Executor {
			public static class: java.lang.Class<bolts.AndroidExecutors.UIThreadExecutor>;
			public execute(param0: java.lang.Runnable): void;
		}
	}
}

declare module bolts {
	export class BoltsExecutors extends java.lang.Object {
		public static class: java.lang.Class<bolts.BoltsExecutors>;
		public static background(): java.util.concurrent.ExecutorService;
	}
	export module BoltsExecutors {
		export class ImmediateExecutor extends java.lang.Object implements java.util.concurrent.Executor {
			public static class: java.lang.Class<bolts.BoltsExecutors.ImmediateExecutor>;
			public execute(param0: java.lang.Runnable): void;
		}
	}
}

declare module bolts {
	export class CancellationToken extends java.lang.Object {
		public static class: java.lang.Class<bolts.CancellationToken>;
		public isCancellationRequested(): boolean;
		public toString(): string;
		public throwIfCancellationRequested(): void;
		public register(param0: java.lang.Runnable): bolts.CancellationTokenRegistration;
	}
}

declare module bolts {
	export class CancellationTokenRegistration extends java.lang.Object implements java.io.Closeable {
		public static class: java.lang.Class<bolts.CancellationTokenRegistration>;
		public close(): void;
	}
}

declare module bolts {
	export class CancellationTokenSource extends java.lang.Object implements java.io.Closeable {
		public static class: java.lang.Class<bolts.CancellationTokenSource>;
		public constructor();
		public close(): void;
		public isCancellationRequested(): boolean;
		public cancelAfter(param0: number): void;
		public toString(): string;
		public getToken(): bolts.CancellationToken;
		public cancel(): void;
	}
}

declare module bolts {
	export class Capture<T>  extends java.lang.Object {
		public static class: java.lang.Class<bolts.Capture<any>>;
		public constructor();
		public get(): T;
		public set(param0: T): void;
		public constructor(param0: T);
	}
}

declare module bolts {
	export class Continuation<TTaskResult, TContinuationResult>  extends java.lang.Object {
		public static class: java.lang.Class<bolts.Continuation<any,any>>;
		/**
		 * Constructs a new instance of the bolts.Continuation<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			then(param0: bolts.Task<TTaskResult>): TContinuationResult;
		});
		public constructor();
		public then(param0: bolts.Task<TTaskResult>): TContinuationResult;
	}
}

declare module bolts {
	export class ExecutorException extends java.lang.RuntimeException {
		public static class: java.lang.Class<bolts.ExecutorException>;
		public constructor();
		public constructor(param0: string, param1: java.lang.Throwable);
		public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
		public constructor(param0: java.lang.Throwable);
		public constructor(param0: java.lang.Exception);
		public constructor(param0: string);
	}
}

declare module bolts {
	export class Task<TResult>  extends java.lang.Object {
		public static class: java.lang.Class<bolts.Task<any>>;
		public static BACKGROUND_EXECUTOR: java.util.concurrent.ExecutorService;
		public static UI_THREAD_EXECUTOR: java.util.concurrent.Executor;
		public continueWith(param0: bolts.Continuation<any,any>, param1: bolts.CancellationToken): bolts.Task<any>;
		public getResult(): TResult;
		public static whenAllResult(param0: java.util.Collection<any>): bolts.Task<any>;
		public static forError(param0: java.lang.Exception): bolts.Task<any>;
		public static getUnobservedExceptionHandler(): bolts.Task.UnobservedExceptionHandler;
		public getError(): java.lang.Exception;
		public static call(param0: java.util.concurrent.Callable<any>, param1: bolts.CancellationToken): bolts.Task<any>;
		public static cancelled(): bolts.Task<any>;
		public static forResult(param0: any): bolts.Task<any>;
		public static call(param0: java.util.concurrent.Callable<any>, param1: java.util.concurrent.Executor, param2: bolts.CancellationToken): bolts.Task<any>;
		public static call(param0: java.util.concurrent.Callable<any>): bolts.Task<any>;
		public continueWhile(param0: java.util.concurrent.Callable<java.lang.Boolean>, param1: bolts.Continuation<java.lang.Void,bolts.Task<java.lang.Void>>, param2: bolts.CancellationToken): bolts.Task<java.lang.Void>;
		public continueWithTask(param0: bolts.Continuation<any,any>, param1: java.util.concurrent.Executor, param2: bolts.CancellationToken): bolts.Task<any>;
		public static delay(param0: number): bolts.Task<java.lang.Void>;
		public static delay(param0: number, param1: bolts.CancellationToken): bolts.Task<java.lang.Void>;
		public onSuccessTask(param0: bolts.Continuation<any,any>): bolts.Task<any>;
		public static callInBackground(param0: java.util.concurrent.Callable<any>): bolts.Task<any>;
		public continueWhile(param0: java.util.concurrent.Callable<java.lang.Boolean>, param1: bolts.Continuation<java.lang.Void,bolts.Task<java.lang.Void>>, param2: java.util.concurrent.Executor, param3: bolts.CancellationToken): bolts.Task<java.lang.Void>;
		public static setUnobservedExceptionHandler(param0: bolts.Task.UnobservedExceptionHandler): void;
		public continueWithTask(param0: bolts.Continuation<any,any>): bolts.Task<any>;
		public onSuccessTask(param0: bolts.Continuation<any,any>, param1: bolts.CancellationToken): bolts.Task<any>;
		public onSuccess(param0: bolts.Continuation<any,any>, param1: java.util.concurrent.Executor): bolts.Task<any>;
		public onSuccess(param0: bolts.Continuation<any,any>, param1: bolts.CancellationToken): bolts.Task<any>;
		public continueWith(param0: bolts.Continuation<any,any>, param1: java.util.concurrent.Executor): bolts.Task<any>;
		public makeVoid(): bolts.Task<java.lang.Void>;
		public continueWith(param0: bolts.Continuation<any,any>): bolts.Task<any>;
		public continueWith(param0: bolts.Continuation<any,any>, param1: java.util.concurrent.Executor, param2: bolts.CancellationToken): bolts.Task<any>;
		public cast(): bolts.Task<any>;
		public static call(param0: java.util.concurrent.Callable<any>, param1: java.util.concurrent.Executor): bolts.Task<any>;
		public onSuccess(param0: bolts.Continuation<any,any>, param1: java.util.concurrent.Executor, param2: bolts.CancellationToken): bolts.Task<any>;
		public isFaulted(): boolean;
		public isCancelled(): boolean;
		public continueWhile(param0: java.util.concurrent.Callable<java.lang.Boolean>, param1: bolts.Continuation<java.lang.Void,bolts.Task<java.lang.Void>>, param2: java.util.concurrent.Executor): bolts.Task<java.lang.Void>;
		public continueWhile(param0: java.util.concurrent.Callable<java.lang.Boolean>, param1: bolts.Continuation<java.lang.Void,bolts.Task<java.lang.Void>>): bolts.Task<java.lang.Void>;
		public static whenAny(param0: java.util.Collection<any>): bolts.Task<bolts.Task<any>>;
		public static callInBackground(param0: java.util.concurrent.Callable<any>, param1: bolts.CancellationToken): bolts.Task<any>;
		public static whenAll(param0: java.util.Collection<any>): bolts.Task<java.lang.Void>;
		public waitForCompletion(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
		public onSuccessTask(param0: bolts.Continuation<any,any>, param1: java.util.concurrent.Executor): bolts.Task<any>;
		/** @deprecated */
		public static create(): bolts.Task.TaskCompletionSource;
		public waitForCompletion(): void;
		public isCompleted(): boolean;
		public onSuccess(param0: bolts.Continuation<any,any>): bolts.Task<any>;
		public onSuccessTask(param0: bolts.Continuation<any,any>, param1: java.util.concurrent.Executor, param2: bolts.CancellationToken): bolts.Task<any>;
		public static whenAnyResult(param0: java.util.Collection<any>): bolts.Task<any>;
		public continueWithTask(param0: bolts.Continuation<any,any>, param1: java.util.concurrent.Executor): bolts.Task<any>;
		public continueWithTask(param0: bolts.Continuation<any,any>, param1: bolts.CancellationToken): bolts.Task<any>;
	}
	export module Task {
		export class TaskCompletionSource extends bolts.TaskCompletionSource<any> {
			public static class: java.lang.Class<bolts.Task.TaskCompletionSource>;
		}
		export class UnobservedExceptionHandler extends java.lang.Object {
			public static class: java.lang.Class<bolts.Task.UnobservedExceptionHandler>;
			/**
			 * Constructs a new instance of the bolts.Task$UnobservedExceptionHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				unobservedException(param0: bolts.Task<any>, param1: bolts.UnobservedTaskException): void;
			});
			public constructor();
			public unobservedException(param0: bolts.Task<any>, param1: bolts.UnobservedTaskException): void;
		}
	}
}

declare module bolts {
	export class TaskCompletionSource<TResult>  extends java.lang.Object {
		public static class: java.lang.Class<bolts.TaskCompletionSource<any>>;
		public constructor();
		public getTask(): bolts.Task<TResult>;
		public trySetCancelled(): boolean;
		public setError(param0: java.lang.Exception): void;
		public setResult(param0: TResult): void;
		public trySetError(param0: java.lang.Exception): boolean;
		public setCancelled(): void;
		public trySetResult(param0: TResult): boolean;
	}
}

declare module bolts {
	export class UnobservedErrorNotifier extends java.lang.Object {
		public static class: java.lang.Class<bolts.UnobservedErrorNotifier>;
		public setObserved(): void;
		public finalize(): void;
		public constructor(param0: bolts.Task<any>);
	}
}

declare module bolts {
	export class UnobservedTaskException extends java.lang.RuntimeException {
		public static class: java.lang.Class<bolts.UnobservedTaskException>;
		public constructor();
		public constructor(param0: string, param1: java.lang.Throwable);
		public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
		public constructor(param0: java.lang.Throwable);
		public constructor(param0: string);
	}
}

declare module com {
	export module facebook {
		export module binaryresource {
			export class BinaryResource extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.binaryresource.BinaryResource>;
				/**
				 * Constructs a new instance of the com.facebook.binaryresource.BinaryResource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					openStream(): java.io.InputStream;
					read(): native.Array<number>;
					size(): number;
				});
				public constructor();
				public read(): native.Array<number>;
				public openStream(): java.io.InputStream;
				public size(): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module binaryresource {
			export class ByteArrayBinaryResource extends java.lang.Object implements com.facebook.binaryresource.BinaryResource {
				public static class: java.lang.Class<com.facebook.binaryresource.ByteArrayBinaryResource>;
				public constructor(param0: native.Array<number>);
				public read(): native.Array<number>;
				public openStream(): java.io.InputStream;
				public size(): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module binaryresource {
			export class FileBinaryResource extends java.lang.Object implements com.facebook.binaryresource.BinaryResource {
				public static class: java.lang.Class<com.facebook.binaryresource.FileBinaryResource>;
				public static createOrNull(param0: java.io.File): com.facebook.binaryresource.FileBinaryResource;
				public read(): native.Array<number>;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public getFile(): java.io.File;
				public openStream(): java.io.InputStream;
				public size(): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class BaseCacheEventListener extends java.lang.Object implements com.facebook.cache.common.CacheEventListener {
					public static class: java.lang.Class<com.facebook.cache.common.BaseCacheEventListener>;
					public onWriteAttempt(param0: com.facebook.cache.common.CacheEvent): void;
					public constructor();
					public onHit(param0: com.facebook.cache.common.CacheEvent): void;
					public onCleared(): void;
					public onMiss(param0: com.facebook.cache.common.CacheEvent): void;
					public onWriteException(param0: com.facebook.cache.common.CacheEvent): void;
					public onEviction(param0: com.facebook.cache.common.CacheEvent): void;
					public onReadException(param0: com.facebook.cache.common.CacheEvent): void;
					public onWriteSuccess(param0: com.facebook.cache.common.CacheEvent): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class CacheErrorLogger extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.cache.common.CacheErrorLogger>;
					/**
					 * Constructs a new instance of the com.facebook.cache.common.CacheErrorLogger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						logError(param0: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory, param1: java.lang.Class<any>, param2: string, param3: java.lang.Throwable): void;
					});
					public constructor();
					public logError(param0: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory, param1: java.lang.Class<any>, param2: string, param3: java.lang.Throwable): void;
				}
				export module CacheErrorLogger {
					export class CacheErrorCategory {
						public static class: java.lang.Class<com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory>;
						public static READ_DECODE: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static READ_FILE: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static READ_FILE_NOT_FOUND: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static READ_INVALID_ENTRY: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static WRITE_ENCODE: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static WRITE_CREATE_TEMPFILE: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static WRITE_UPDATE_FILE_NOT_FOUND: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static WRITE_RENAME_FILE_TEMPFILE_NOT_FOUND: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static WRITE_RENAME_FILE_TEMPFILE_PARENT_NOT_FOUND: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static WRITE_RENAME_FILE_OTHER: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static WRITE_CREATE_DIR: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static WRITE_CALLBACK_ERROR: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static WRITE_INVALID_ENTRY: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static DELETE_FILE: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static EVICTION: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static GENERIC_IO: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static OTHER: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static values(): native.Array<com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory>;
						public static valueOf(param0: string): com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class CacheEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.cache.common.CacheEvent>;
					/**
					 * Constructs a new instance of the com.facebook.cache.common.CacheEvent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getCacheKey(): com.facebook.cache.common.CacheKey;
						getResourceId(): string;
						getItemSize(): number;
						getCacheSize(): number;
						getCacheLimit(): number;
						getException(): java.io.IOException;
						getEvictionReason(): com.facebook.cache.common.CacheEventListener.EvictionReason;
					});
					public constructor();
					public getCacheLimit(): number;
					public getCacheKey(): com.facebook.cache.common.CacheKey;
					public getItemSize(): number;
					public getCacheSize(): number;
					public getException(): java.io.IOException;
					public getResourceId(): string;
					public getEvictionReason(): com.facebook.cache.common.CacheEventListener.EvictionReason;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class CacheEventListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.cache.common.CacheEventListener>;
					/**
					 * Constructs a new instance of the com.facebook.cache.common.CacheEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onHit(param0: com.facebook.cache.common.CacheEvent): void;
						onMiss(param0: com.facebook.cache.common.CacheEvent): void;
						onWriteAttempt(param0: com.facebook.cache.common.CacheEvent): void;
						onWriteSuccess(param0: com.facebook.cache.common.CacheEvent): void;
						onReadException(param0: com.facebook.cache.common.CacheEvent): void;
						onWriteException(param0: com.facebook.cache.common.CacheEvent): void;
						onEviction(param0: com.facebook.cache.common.CacheEvent): void;
						onCleared(): void;
					});
					public constructor();
					public onWriteAttempt(param0: com.facebook.cache.common.CacheEvent): void;
					public onHit(param0: com.facebook.cache.common.CacheEvent): void;
					public onCleared(): void;
					public onMiss(param0: com.facebook.cache.common.CacheEvent): void;
					public onWriteException(param0: com.facebook.cache.common.CacheEvent): void;
					public onEviction(param0: com.facebook.cache.common.CacheEvent): void;
					public onReadException(param0: com.facebook.cache.common.CacheEvent): void;
					public onWriteSuccess(param0: com.facebook.cache.common.CacheEvent): void;
				}
				export module CacheEventListener {
					export class EvictionReason {
						public static class: java.lang.Class<com.facebook.cache.common.CacheEventListener.EvictionReason>;
						public static CACHE_FULL: com.facebook.cache.common.CacheEventListener.EvictionReason;
						public static CONTENT_STALE: com.facebook.cache.common.CacheEventListener.EvictionReason;
						public static USER_FORCED: com.facebook.cache.common.CacheEventListener.EvictionReason;
						public static CACHE_MANAGER_TRIMMED: com.facebook.cache.common.CacheEventListener.EvictionReason;
						public static values(): native.Array<com.facebook.cache.common.CacheEventListener.EvictionReason>;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static valueOf(param0: string): com.facebook.cache.common.CacheEventListener.EvictionReason;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class CacheKey extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.cache.common.CacheKey>;
					/**
					 * Constructs a new instance of the com.facebook.cache.common.CacheKey interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						toString(): string;
						equals(param0: any): boolean;
						hashCode(): number;
						containsUri(param0: globalAndroid.net.Uri): boolean;
						getUriString(): string;
					});
					public constructor();
					public equals(param0: any): boolean;
					public getUriString(): string;
					public toString(): string;
					public containsUri(param0: globalAndroid.net.Uri): boolean;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class CacheKeyUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.cache.common.CacheKeyUtil>;
					public static getFirstResourceId(param0: com.facebook.cache.common.CacheKey): string;
					public constructor();
					public static getResourceIds(param0: com.facebook.cache.common.CacheKey): java.util.List<string>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class DebuggingCacheKey extends com.facebook.cache.common.SimpleCacheKey {
					public static class: java.lang.Class<com.facebook.cache.common.DebuggingCacheKey>;
					public equals(param0: any): boolean;
					public getUriString(): string;
					public toString(): string;
					public constructor(param0: string);
					public containsUri(param0: globalAndroid.net.Uri): boolean;
					public getCallerContext(): any;
					public hashCode(): number;
					public constructor(param0: string, param1: any, param2: globalAndroid.net.Uri);
					public getSourceUri(): globalAndroid.net.Uri;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class MultiCacheKey extends java.lang.Object implements com.facebook.cache.common.CacheKey {
					public static class: java.lang.Class<com.facebook.cache.common.MultiCacheKey>;
					public equals(param0: any): boolean;
					public getUriString(): string;
					public toString(): string;
					public containsUri(param0: globalAndroid.net.Uri): boolean;
					public getCacheKeys(): java.util.List<com.facebook.cache.common.CacheKey>;
					public hashCode(): number;
					public constructor(param0: java.util.List<com.facebook.cache.common.CacheKey>);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class NoOpCacheErrorLogger extends java.lang.Object implements com.facebook.cache.common.CacheErrorLogger {
					public static class: java.lang.Class<com.facebook.cache.common.NoOpCacheErrorLogger>;
					public logError(param0: com.facebook.cache.common.CacheErrorLogger.CacheErrorCategory, param1: java.lang.Class<any>, param2: string, param3: java.lang.Throwable): void;
					public static getInstance(): com.facebook.cache.common.NoOpCacheErrorLogger;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class NoOpCacheEventListener extends java.lang.Object implements com.facebook.cache.common.CacheEventListener {
					public static class: java.lang.Class<com.facebook.cache.common.NoOpCacheEventListener>;
					public onWriteAttempt(param0: com.facebook.cache.common.CacheEvent): void;
					public static getInstance(): com.facebook.cache.common.NoOpCacheEventListener;
					public onHit(param0: com.facebook.cache.common.CacheEvent): void;
					public onCleared(): void;
					public onMiss(param0: com.facebook.cache.common.CacheEvent): void;
					public onWriteException(param0: com.facebook.cache.common.CacheEvent): void;
					public onEviction(param0: com.facebook.cache.common.CacheEvent): void;
					public onReadException(param0: com.facebook.cache.common.CacheEvent): void;
					public onWriteSuccess(param0: com.facebook.cache.common.CacheEvent): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class SimpleCacheKey extends java.lang.Object implements com.facebook.cache.common.CacheKey {
					public static class: java.lang.Class<com.facebook.cache.common.SimpleCacheKey>;
					public equals(param0: any): boolean;
					public getUriString(): string;
					public toString(): string;
					public constructor(param0: string);
					public containsUri(param0: globalAndroid.net.Uri): boolean;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class WriterCallback extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.cache.common.WriterCallback>;
					/**
					 * Constructs a new instance of the com.facebook.cache.common.WriterCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						write(param0: java.io.OutputStream): void;
					});
					public constructor();
					public write(param0: java.io.OutputStream): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module common {
				export class WriterCallbacks extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.cache.common.WriterCallbacks>;
					public static from(param0: native.Array<number>): com.facebook.cache.common.WriterCallback;
					public constructor();
					public static from(param0: java.io.InputStream): com.facebook.cache.common.WriterCallback;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module disk {
				export class DefaultDiskStorage extends java.lang.Object implements com.facebook.cache.disk.DiskStorage {
					public static class: java.lang.Class<com.facebook.cache.disk.DefaultDiskStorage>;
					public getStorageName(): string;
					public purgeUnexpectedResources(): void;
					public insert(param0: string, param1: any): com.facebook.cache.disk.DiskStorage.Inserter;
					public getDumpInfo(): com.facebook.cache.disk.DiskStorage.DiskDumpInfo;
					public remove(param0: com.facebook.cache.disk.DiskStorage.Entry): number;
					public getResource(param0: string, param1: any): com.facebook.binaryresource.BinaryResource;
					public contains(param0: string, param1: any): boolean;
					public isExternal(): boolean;
					public touch(param0: string, param1: any): boolean;
					public getEntries(): java.util.Collection<com.facebook.cache.disk.DiskStorage.Entry>;
					public remove(param0: string): number;
					public constructor(param0: java.io.File, param1: number, param2: com.facebook.cache.common.CacheErrorLogger);
					public clearAll(): void;
					public isEnabled(): boolean;
					public getEntries(): java.util.List<com.facebook.cache.disk.DiskStorage.Entry>;
				}
				export module DefaultDiskStorage {
					export class EntriesCollector extends java.lang.Object implements com.facebook.common.file.FileTreeVisitor {
						public static class: java.lang.Class<com.facebook.cache.disk.DefaultDiskStorage.EntriesCollector>;
						public visitFile(param0: java.io.File): void;
						public getEntries(): java.util.List<com.facebook.cache.disk.DiskStorage.Entry>;
						public postVisitDirectory(param0: java.io.File): void;
						public preVisitDirectory(param0: java.io.File): void;
					}
					export class EntryImpl extends java.lang.Object implements com.facebook.cache.disk.DiskStorage.Entry {
						public static class: java.lang.Class<com.facebook.cache.disk.DefaultDiskStorage.EntryImpl>;
						public getSize(): number;
						public getTimestamp(): number;
						public getResource(): com.facebook.binaryresource.BinaryResource;
						public getId(): string;
						public getResource(): com.facebook.binaryresource.FileBinaryResource;
					}
					export class FileInfo extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.cache.disk.DefaultDiskStorage.FileInfo>;
						public type: string;
						public resourceId: string;
						public static fromFile(param0: java.io.File): com.facebook.cache.disk.DefaultDiskStorage.FileInfo;
						public toPath(param0: string): string;
						public createTempFile(param0: java.io.File): java.io.File;
						public toString(): string;
					}
					export class FileType extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.cache.disk.DefaultDiskStorage.FileType>;
						/**
						 * Constructs a new instance of the com.facebook.cache.disk.DefaultDiskStorage$FileType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public static TEMP: string;
						public static CONTENT: string;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class IncompleteFileException extends java.io.IOException {
						public static class: java.lang.Class<com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException>;
						public expected: number;
						public actual: number;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: number, param1: number);
						public constructor(param0: string);
					}
					export class InserterImpl extends java.lang.Object implements com.facebook.cache.disk.DiskStorage.Inserter {
						public static class: java.lang.Class<com.facebook.cache.disk.DefaultDiskStorage.InserterImpl>;
						public constructor(param0: com.facebook.cache.disk.DefaultDiskStorage, param1: string, param2: java.io.File);
						public commit(param0: any): com.facebook.binaryresource.BinaryResource;
						public writeData(param0: com.facebook.cache.common.WriterCallback, param1: any): void;
						public cleanUp(): boolean;
					}
					export class PurgingVisitor extends java.lang.Object implements com.facebook.common.file.FileTreeVisitor {
						public static class: java.lang.Class<com.facebook.cache.disk.DefaultDiskStorage.PurgingVisitor>;
						public visitFile(param0: java.io.File): void;
						public postVisitDirectory(param0: java.io.File): void;
						public preVisitDirectory(param0: java.io.File): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module disk {
				export class DefaultEntryEvictionComparatorSupplier extends java.lang.Object implements com.facebook.cache.disk.EntryEvictionComparatorSupplier {
					public static class: java.lang.Class<com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier>;
					public constructor();
					public get(): com.facebook.cache.disk.EntryEvictionComparator;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module disk {
				export class DiskCacheConfig extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.cache.disk.DiskCacheConfig>;
					public getIndexPopulateAtStartupEnabled(): boolean;
					public static newBuilder(param0: globalAndroid.content.Context): com.facebook.cache.disk.DiskCacheConfig.Builder;
					public getVersion(): number;
					public getMinimumSizeLimit(): number;
					public getCacheErrorLogger(): com.facebook.cache.common.CacheErrorLogger;
					public getEntryEvictionComparatorSupplier(): com.facebook.cache.disk.EntryEvictionComparatorSupplier;
					public getBaseDirectoryPathSupplier(): com.facebook.common.internal.Supplier<java.io.File>;
					public getDefaultSizeLimit(): number;
					public getLowDiskSpaceSizeLimit(): number;
					public getCacheEventListener(): com.facebook.cache.common.CacheEventListener;
					public getDiskTrimmableRegistry(): com.facebook.common.disk.DiskTrimmableRegistry;
					public getBaseDirectoryName(): string;
					public getContext(): globalAndroid.content.Context;
				}
				export module DiskCacheConfig {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.cache.disk.DiskCacheConfig.Builder>;
						public setMaxCacheSize(param0: number): com.facebook.cache.disk.DiskCacheConfig.Builder;
						public setBaseDirectoryName(param0: string): com.facebook.cache.disk.DiskCacheConfig.Builder;
						public build(): com.facebook.cache.disk.DiskCacheConfig;
						public setDiskTrimmableRegistry(param0: com.facebook.common.disk.DiskTrimmableRegistry): com.facebook.cache.disk.DiskCacheConfig.Builder;
						public setVersion(param0: number): com.facebook.cache.disk.DiskCacheConfig.Builder;
						public setCacheErrorLogger(param0: com.facebook.cache.common.CacheErrorLogger): com.facebook.cache.disk.DiskCacheConfig.Builder;
						public setEntryEvictionComparatorSupplier(param0: com.facebook.cache.disk.EntryEvictionComparatorSupplier): com.facebook.cache.disk.DiskCacheConfig.Builder;
						public setMaxCacheSizeOnVeryLowDiskSpace(param0: number): com.facebook.cache.disk.DiskCacheConfig.Builder;
						public setIndexPopulateAtStartupEnabled(param0: boolean): com.facebook.cache.disk.DiskCacheConfig.Builder;
						public setBaseDirectoryPath(param0: java.io.File): com.facebook.cache.disk.DiskCacheConfig.Builder;
						public setBaseDirectoryPathSupplier(param0: com.facebook.common.internal.Supplier<java.io.File>): com.facebook.cache.disk.DiskCacheConfig.Builder;
						public setMaxCacheSizeOnLowDiskSpace(param0: number): com.facebook.cache.disk.DiskCacheConfig.Builder;
						public setCacheEventListener(param0: com.facebook.cache.common.CacheEventListener): com.facebook.cache.disk.DiskCacheConfig.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module disk {
				export class DiskStorage extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.cache.disk.DiskStorage>;
					/**
					 * Constructs a new instance of the com.facebook.cache.disk.DiskStorage interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isEnabled(): boolean;
						isExternal(): boolean;
						getResource(param0: string, param1: any): com.facebook.binaryresource.BinaryResource;
						contains(param0: string, param1: any): boolean;
						touch(param0: string, param1: any): boolean;
						purgeUnexpectedResources(): void;
						insert(param0: string, param1: any): com.facebook.cache.disk.DiskStorage.Inserter;
						getEntries(): java.util.Collection<com.facebook.cache.disk.DiskStorage.Entry>;
						remove(param0: com.facebook.cache.disk.DiskStorage.Entry): number;
						remove(param0: string): number;
						clearAll(): void;
						getDumpInfo(): com.facebook.cache.disk.DiskStorage.DiskDumpInfo;
						getStorageName(): string;
					});
					public constructor();
					public purgeUnexpectedResources(): void;
					public insert(param0: string, param1: any): com.facebook.cache.disk.DiskStorage.Inserter;
					public getDumpInfo(): com.facebook.cache.disk.DiskStorage.DiskDumpInfo;
					public getStorageName(): string;
					public remove(param0: com.facebook.cache.disk.DiskStorage.Entry): number;
					public getResource(param0: string, param1: any): com.facebook.binaryresource.BinaryResource;
					public contains(param0: string, param1: any): boolean;
					public isExternal(): boolean;
					public touch(param0: string, param1: any): boolean;
					public getEntries(): java.util.Collection<com.facebook.cache.disk.DiskStorage.Entry>;
					public remove(param0: string): number;
					public clearAll(): void;
					public isEnabled(): boolean;
				}
				export module DiskStorage {
					export class DiskDumpInfo extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.cache.disk.DiskStorage.DiskDumpInfo>;
						public entries: java.util.List<com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry>;
						public typeCounts: java.util.Map<string,java.lang.Integer>;
						public constructor();
					}
					export class DiskDumpInfoEntry extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry>;
						public path: string;
						public type: string;
						public size: number;
						public firstBits: string;
						public constructor(param0: string, param1: string, param2: number, param3: string);
					}
					export class Entry extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.cache.disk.DiskStorage.Entry>;
						/**
						 * Constructs a new instance of the com.facebook.cache.disk.DiskStorage$Entry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getId(): string;
							getTimestamp(): number;
							getSize(): number;
							getResource(): com.facebook.binaryresource.BinaryResource;
						});
						public constructor();
						public getSize(): number;
						public getTimestamp(): number;
						public getResource(): com.facebook.binaryresource.BinaryResource;
						public getId(): string;
					}
					export class Inserter extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.cache.disk.DiskStorage.Inserter>;
						/**
						 * Constructs a new instance of the com.facebook.cache.disk.DiskStorage$Inserter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							writeData(param0: com.facebook.cache.common.WriterCallback, param1: any): void;
							commit(param0: any): com.facebook.binaryresource.BinaryResource;
							cleanUp(): boolean;
						});
						public constructor();
						public commit(param0: any): com.facebook.binaryresource.BinaryResource;
						public writeData(param0: com.facebook.cache.common.WriterCallback, param1: any): void;
						public cleanUp(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module disk {
				export class DiskStorageCache extends java.lang.Object implements com.facebook.cache.disk.FileCache, com.facebook.common.disk.DiskTrimmable {
					public static class: java.lang.Class<com.facebook.cache.disk.DiskStorageCache>;
					public static START_OF_VERSIONING: number;
					public hasKey(param0: com.facebook.cache.common.CacheKey): boolean;
					public awaitIndex(): void;
					public isIndexReady(): boolean;
					public getDumpInfo(): com.facebook.cache.disk.DiskStorage.DiskDumpInfo;
					public probe(param0: com.facebook.cache.common.CacheKey): boolean;
					public getCount(): number;
					public constructor(param0: com.facebook.cache.disk.DiskStorage, param1: com.facebook.cache.disk.EntryEvictionComparatorSupplier, param2: com.facebook.cache.disk.DiskStorageCache.Params, param3: com.facebook.cache.common.CacheEventListener, param4: com.facebook.cache.common.CacheErrorLogger, param5: com.facebook.common.disk.DiskTrimmableRegistry, param6: globalAndroid.content.Context, param7: java.util.concurrent.Executor, param8: boolean);
					public trimToNothing(): void;
					public hasKeySync(param0: com.facebook.cache.common.CacheKey): boolean;
					public getSize(): number;
					public remove(param0: com.facebook.cache.common.CacheKey): void;
					public trimToMinimum(): void;
					public getResource(param0: com.facebook.cache.common.CacheKey): com.facebook.binaryresource.BinaryResource;
					public insert(param0: com.facebook.cache.common.CacheKey, param1: com.facebook.cache.common.WriterCallback): com.facebook.binaryresource.BinaryResource;
					public clearOldEntries(param0: number): number;
					public clearAll(): void;
					public isEnabled(): boolean;
				}
				export module DiskStorageCache {
					export class CacheStats extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.cache.disk.DiskStorageCache.CacheStats>;
						public increment(param0: number, param1: number): void;
						public getSize(): number;
						public set(param0: number, param1: number): void;
						public getCount(): number;
						public reset(): void;
						public isInitialized(): boolean;
					}
					export class Params extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.cache.disk.DiskStorageCache.Params>;
						public mCacheSizeLimitMinimum: number;
						public mLowDiskSpaceCacheSizeLimit: number;
						public mDefaultCacheSizeLimit: number;
						public constructor(param0: number, param1: number, param2: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module disk {
				export class DynamicDefaultDiskStorage extends java.lang.Object implements com.facebook.cache.disk.DiskStorage {
					public static class: java.lang.Class<com.facebook.cache.disk.DynamicDefaultDiskStorage>;
					public getStorageName(): string;
					public purgeUnexpectedResources(): void;
					public insert(param0: string, param1: any): com.facebook.cache.disk.DiskStorage.Inserter;
					public getDumpInfo(): com.facebook.cache.disk.DiskStorage.DiskDumpInfo;
					public remove(param0: com.facebook.cache.disk.DiskStorage.Entry): number;
					public getResource(param0: string, param1: any): com.facebook.binaryresource.BinaryResource;
					public contains(param0: string, param1: any): boolean;
					public isExternal(): boolean;
					public touch(param0: string, param1: any): boolean;
					public getEntries(): java.util.Collection<com.facebook.cache.disk.DiskStorage.Entry>;
					public remove(param0: string): number;
					public clearAll(): void;
					public isEnabled(): boolean;
					public constructor(param0: number, param1: com.facebook.common.internal.Supplier<java.io.File>, param2: string, param3: com.facebook.cache.common.CacheErrorLogger);
				}
				export module DynamicDefaultDiskStorage {
					export class State extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.cache.disk.DynamicDefaultDiskStorage.State>;
						public delegate: com.facebook.cache.disk.DiskStorage;
						public rootDirectory: java.io.File;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module disk {
				export class EntryEvictionComparator extends java.util.Comparator<com.facebook.cache.disk.DiskStorage.Entry> {
					public static class: java.lang.Class<com.facebook.cache.disk.EntryEvictionComparator>;
					/**
					 * Constructs a new instance of the com.facebook.cache.disk.EntryEvictionComparator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						compare(param0: any, param1: any): number;
						equals(param0: any): boolean;
						reversed(): java.util.Comparator<any>;
						thenComparing(param0: java.util.Comparator<any>): java.util.Comparator<any>;
						thenComparing(param0: any /* any*/, param1: java.util.Comparator<any>): java.util.Comparator<any>;
						thenComparing(param0: any /* any*/): java.util.Comparator<any>;
						thenComparingInt(param0: any /* any*/): java.util.Comparator<any>;
						thenComparingLong(param0: any /* any*/): java.util.Comparator<any>;
						thenComparingDouble(param0: any /* any*/): java.util.Comparator<any>;
						reverseOrder(): java.util.Comparator<any>;
						naturalOrder(): java.util.Comparator<any>;
						nullsFirst(param0: java.util.Comparator<any>): java.util.Comparator<any>;
						nullsLast(param0: java.util.Comparator<any>): java.util.Comparator<any>;
						comparing(param0: any /* any*/, param1: java.util.Comparator<any>): java.util.Comparator<any>;
						comparing(param0: any /* any*/): java.util.Comparator<any>;
						comparingInt(param0: any /* any*/): java.util.Comparator<any>;
						comparingLong(param0: any /* any*/): java.util.Comparator<any>;
						comparingDouble(param0: any /* any*/): java.util.Comparator<any>;
					});
					public constructor();
					public compare(param0: any, param1: any): number;
					public static comparing(param0: any /* any*/): java.util.Comparator<any>;
					public static nullsFirst(param0: java.util.Comparator<any>): java.util.Comparator<any>;
					public thenComparingDouble(param0: any /* any*/): java.util.Comparator<any>;
					public static comparingLong(param0: any /* any*/): java.util.Comparator<any>;
					public thenComparing(param0: java.util.Comparator<any>): java.util.Comparator<any>;
					public thenComparingInt(param0: any /* any*/): java.util.Comparator<any>;
					public static reverseOrder(): java.util.Comparator<any>;
					public thenComparingLong(param0: any /* any*/): java.util.Comparator<any>;
					public static nullsLast(param0: java.util.Comparator<any>): java.util.Comparator<any>;
					public static comparingDouble(param0: any /* any*/): java.util.Comparator<any>;
					public equals(param0: any): boolean;
					public static comparing(param0: any /* any*/, param1: java.util.Comparator<any>): java.util.Comparator<any>;
					public thenComparing(param0: any /* any*/, param1: java.util.Comparator<any>): java.util.Comparator<any>;
					public reversed(): java.util.Comparator<any>;
					public static naturalOrder(): java.util.Comparator<any>;
					public thenComparing(param0: any /* any*/): java.util.Comparator<any>;
					public static comparingInt(param0: any /* any*/): java.util.Comparator<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module disk {
				export class EntryEvictionComparatorSupplier extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.cache.disk.EntryEvictionComparatorSupplier>;
					/**
					 * Constructs a new instance of the com.facebook.cache.disk.EntryEvictionComparatorSupplier interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						get(): com.facebook.cache.disk.EntryEvictionComparator;
					});
					public constructor();
					public get(): com.facebook.cache.disk.EntryEvictionComparator;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module disk {
				export class FileCache extends java.lang.Object implements com.facebook.common.disk.DiskTrimmable {
					public static class: java.lang.Class<com.facebook.cache.disk.FileCache>;
					/**
					 * Constructs a new instance of the com.facebook.cache.disk.FileCache interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isEnabled(): boolean;
						getResource(param0: com.facebook.cache.common.CacheKey): com.facebook.binaryresource.BinaryResource;
						hasKeySync(param0: com.facebook.cache.common.CacheKey): boolean;
						hasKey(param0: com.facebook.cache.common.CacheKey): boolean;
						probe(param0: com.facebook.cache.common.CacheKey): boolean;
						insert(param0: com.facebook.cache.common.CacheKey, param1: com.facebook.cache.common.WriterCallback): com.facebook.binaryresource.BinaryResource;
						remove(param0: com.facebook.cache.common.CacheKey): void;
						getSize(): number;
						getCount(): number;
						clearOldEntries(param0: number): number;
						clearAll(): void;
						getDumpInfo(): com.facebook.cache.disk.DiskStorage.DiskDumpInfo;
						trimToMinimum(): void;
						trimToNothing(): void;
					});
					public constructor();
					public hasKey(param0: com.facebook.cache.common.CacheKey): boolean;
					public getDumpInfo(): com.facebook.cache.disk.DiskStorage.DiskDumpInfo;
					public probe(param0: com.facebook.cache.common.CacheKey): boolean;
					public getCount(): number;
					public trimToNothing(): void;
					public hasKeySync(param0: com.facebook.cache.common.CacheKey): boolean;
					public getSize(): number;
					public remove(param0: com.facebook.cache.common.CacheKey): void;
					public trimToMinimum(): void;
					public getResource(param0: com.facebook.cache.common.CacheKey): com.facebook.binaryresource.BinaryResource;
					public insert(param0: com.facebook.cache.common.CacheKey, param1: com.facebook.cache.common.WriterCallback): com.facebook.binaryresource.BinaryResource;
					public clearOldEntries(param0: number): number;
					public clearAll(): void;
					public isEnabled(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module disk {
				export class ScoreBasedEvictionComparatorSupplier extends java.lang.Object implements com.facebook.cache.disk.EntryEvictionComparatorSupplier {
					public static class: java.lang.Class<com.facebook.cache.disk.ScoreBasedEvictionComparatorSupplier>;
					public get(): com.facebook.cache.disk.EntryEvictionComparator;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module cache {
			export module disk {
				export class SettableCacheEvent extends java.lang.Object implements com.facebook.cache.common.CacheEvent {
					public static class: java.lang.Class<com.facebook.cache.disk.SettableCacheEvent>;
					public getCacheLimit(): number;
					public getItemSize(): number;
					public getCacheSize(): number;
					public setEvictionReason(param0: com.facebook.cache.common.CacheEventListener.EvictionReason): com.facebook.cache.disk.SettableCacheEvent;
					public setCacheKey(param0: com.facebook.cache.common.CacheKey): com.facebook.cache.disk.SettableCacheEvent;
					public getResourceId(): string;
					public recycle(): void;
					public setResourceId(param0: string): com.facebook.cache.disk.SettableCacheEvent;
					public setCacheLimit(param0: number): com.facebook.cache.disk.SettableCacheEvent;
					public setItemSize(param0: number): com.facebook.cache.disk.SettableCacheEvent;
					public getEvictionReason(): com.facebook.cache.common.CacheEventListener.EvictionReason;
					public static obtain(): com.facebook.cache.disk.SettableCacheEvent;
					public getCacheKey(): com.facebook.cache.common.CacheKey;
					public getException(): java.io.IOException;
					public setException(param0: java.io.IOException): com.facebook.cache.disk.SettableCacheEvent;
					public setCacheSize(param0: number): com.facebook.cache.disk.SettableCacheEvent;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module callercontext {
			export class CallerContextVerifier extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.callercontext.CallerContextVerifier>;
				/**
				 * Constructs a new instance of the com.facebook.callercontext.CallerContextVerifier interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					verifyCallerContext(param0: any): void;
				});
				public constructor();
				public verifyCallerContext(param0: any): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module activitylistener {
				export class ActivityListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.activitylistener.ActivityListener>;
					/**
					 * Constructs a new instance of the com.facebook.common.activitylistener.ActivityListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onActivityCreate(param0: globalAndroid.app.Activity): void;
						onStart(param0: globalAndroid.app.Activity): void;
						onResume(param0: globalAndroid.app.Activity): void;
						onPause(param0: globalAndroid.app.Activity): void;
						onStop(param0: globalAndroid.app.Activity): void;
						onDestroy(param0: globalAndroid.app.Activity): void;
						getPriority(): number;
					});
					public constructor();
					public static MIN_PRIORITY: number;
					public static MAX_PRIORITY: number;
					public getPriority(): number;
					public onStop(param0: globalAndroid.app.Activity): void;
					public onResume(param0: globalAndroid.app.Activity): void;
					public onActivityCreate(param0: globalAndroid.app.Activity): void;
					public onStart(param0: globalAndroid.app.Activity): void;
					public onDestroy(param0: globalAndroid.app.Activity): void;
					public onPause(param0: globalAndroid.app.Activity): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module activitylistener {
				export class ActivityListenerManager extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.activitylistener.ActivityListenerManager>;
					public constructor();
					public static getListenableActivity(param0: globalAndroid.content.Context): com.facebook.common.activitylistener.ListenableActivity;
					public static register(param0: com.facebook.common.activitylistener.ActivityListener, param1: globalAndroid.content.Context): void;
				}
				export module ActivityListenerManager {
					export class Listener extends com.facebook.common.activitylistener.BaseActivityListener {
						public static class: java.lang.Class<com.facebook.common.activitylistener.ActivityListenerManager.Listener>;
						public constructor();
						public onStop(param0: globalAndroid.app.Activity): void;
						public onResume(param0: globalAndroid.app.Activity): void;
						public constructor(param0: com.facebook.common.activitylistener.ActivityListener);
						public getPriority(): number;
						public onPause(param0: globalAndroid.app.Activity): void;
						public onStart(param0: globalAndroid.app.Activity): void;
						public onDestroy(param0: globalAndroid.app.Activity): void;
						public onActivityCreate(param0: globalAndroid.app.Activity): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module activitylistener {
				export class BaseActivityListener extends java.lang.Object implements com.facebook.common.activitylistener.ActivityListener {
					public static class: java.lang.Class<com.facebook.common.activitylistener.BaseActivityListener>;
					public getPriority(): number;
					public onStop(param0: globalAndroid.app.Activity): void;
					public onResume(param0: globalAndroid.app.Activity): void;
					public constructor();
					public onActivityCreate(param0: globalAndroid.app.Activity): void;
					public onStart(param0: globalAndroid.app.Activity): void;
					public onDestroy(param0: globalAndroid.app.Activity): void;
					public onPause(param0: globalAndroid.app.Activity): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module activitylistener {
				export class ListenableActivity extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.activitylistener.ListenableActivity>;
					/**
					 * Constructs a new instance of the com.facebook.common.activitylistener.ListenableActivity interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						addActivityListener(param0: com.facebook.common.activitylistener.ActivityListener): void;
						removeActivityListener(param0: com.facebook.common.activitylistener.ActivityListener): void;
					});
					public constructor();
					public addActivityListener(param0: com.facebook.common.activitylistener.ActivityListener): void;
					public removeActivityListener(param0: com.facebook.common.activitylistener.ActivityListener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module disk {
				export class DiskTrimmable extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.disk.DiskTrimmable>;
					/**
					 * Constructs a new instance of the com.facebook.common.disk.DiskTrimmable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						trimToMinimum(): void;
						trimToNothing(): void;
					});
					public constructor();
					public trimToMinimum(): void;
					public trimToNothing(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module disk {
				export class DiskTrimmableRegistry extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.disk.DiskTrimmableRegistry>;
					/**
					 * Constructs a new instance of the com.facebook.common.disk.DiskTrimmableRegistry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						registerDiskTrimmable(param0: com.facebook.common.disk.DiskTrimmable): void;
						unregisterDiskTrimmable(param0: com.facebook.common.disk.DiskTrimmable): void;
					});
					public constructor();
					public unregisterDiskTrimmable(param0: com.facebook.common.disk.DiskTrimmable): void;
					public registerDiskTrimmable(param0: com.facebook.common.disk.DiskTrimmable): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module disk {
				export class NoOpDiskTrimmableRegistry extends java.lang.Object implements com.facebook.common.disk.DiskTrimmableRegistry {
					public static class: java.lang.Class<com.facebook.common.disk.NoOpDiskTrimmableRegistry>;
					public unregisterDiskTrimmable(param0: com.facebook.common.disk.DiskTrimmable): void;
					public static getInstance(): com.facebook.common.disk.NoOpDiskTrimmableRegistry;
					public registerDiskTrimmable(param0: com.facebook.common.disk.DiskTrimmable): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module executors {
				export class CallerThreadExecutor extends java.util.concurrent.AbstractExecutorService {
					public static class: java.lang.Class<com.facebook.common.executors.CallerThreadExecutor>;
					public invokeAll(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.List<any>;
					public isTerminated(): boolean;
					public invokeAny(param0: java.util.Collection<any>): any;
					public submit(param0: java.lang.Runnable): java.util.concurrent.Future<any>;
					public static getInstance(): com.facebook.common.executors.CallerThreadExecutor;
					public invokeAll(param0: java.util.Collection<any>): java.util.List<any>;
					public isShutdown(): boolean;
					public shutdownNow(): java.util.List<java.lang.Runnable>;
					public execute(param0: java.lang.Runnable): void;
					public shutdown(): void;
					public awaitTermination(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
					public invokeAny(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
					public submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.Future<any>;
					public submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.Future<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module executors {
				export class ConstrainedExecutorService extends java.util.concurrent.AbstractExecutorService {
					public static class: java.lang.Class<com.facebook.common.executors.ConstrainedExecutorService>;
					public invokeAll(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.List<any>;
					public isTerminated(): boolean;
					public invokeAny(param0: java.util.Collection<any>): any;
					public submit(param0: java.lang.Runnable): java.util.concurrent.Future<any>;
					public invokeAll(param0: java.util.Collection<any>): java.util.List<any>;
					public constructor(param0: string, param1: number, param2: java.util.concurrent.Executor, param3: java.util.concurrent.BlockingQueue<java.lang.Runnable>);
					public isShutdown(): boolean;
					public shutdownNow(): java.util.List<java.lang.Runnable>;
					public execute(param0: java.lang.Runnable): void;
					public shutdown(): void;
					public awaitTermination(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
					public constructor();
					public static newConstrainedExecutor(param0: string, param1: number, param2: number, param3: java.util.concurrent.Executor): com.facebook.common.executors.ConstrainedExecutorService;
					public isIdle(): boolean;
					public invokeAny(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
					public submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.Future<any>;
					public submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.Future<any>;
				}
				export module ConstrainedExecutorService {
					export class Worker extends java.lang.Object implements java.lang.Runnable {
						public static class: java.lang.Class<com.facebook.common.executors.ConstrainedExecutorService.Worker>;
						public run(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module executors {
				export class DefaultSerialExecutorService extends com.facebook.common.executors.ConstrainedExecutorService implements com.facebook.common.executors.SerialExecutorService {
					public static class: java.lang.Class<com.facebook.common.executors.DefaultSerialExecutorService>;
					public invokeAll(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.List<any>;
					public isTerminated(): boolean;
					public invokeAny(param0: java.util.Collection<any>): any;
					public submit(param0: java.lang.Runnable): java.util.concurrent.Future<any>;
					public invokeAll(param0: java.util.Collection<any>): java.util.List<any>;
					public constructor(param0: string, param1: number, param2: java.util.concurrent.Executor, param3: java.util.concurrent.BlockingQueue<java.lang.Runnable>);
					public isShutdown(): boolean;
					public shutdownNow(): java.util.List<java.lang.Runnable>;
					public execute(param0: java.lang.Runnable): void;
					public constructor(param0: java.util.concurrent.Executor);
					public shutdown(): void;
					public awaitTermination(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
					public constructor();
					public invokeAny(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
					public submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.Future<any>;
					public submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.Future<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module executors {
				export class HandlerExecutorService extends java.lang.Object implements java.util.concurrent.ScheduledExecutorService {
					public static class: java.lang.Class<com.facebook.common.executors.HandlerExecutorService>;
					/**
					 * Constructs a new instance of the com.facebook.common.executors.HandlerExecutorService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						quit(): void;
						isHandlerThread(): boolean;
						schedule(param0: java.lang.Runnable, param1: number, param2: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
						schedule(param0: java.util.concurrent.Callable<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
						scheduleAtFixedRate(param0: java.lang.Runnable, param1: number, param2: number, param3: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
						scheduleWithFixedDelay(param0: java.lang.Runnable, param1: number, param2: number, param3: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
						shutdown(): void;
						shutdownNow(): java.util.List<java.lang.Runnable>;
						isShutdown(): boolean;
						isTerminated(): boolean;
						awaitTermination(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
						submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.Future<any>;
						submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.Future<any>;
						submit(param0: java.lang.Runnable): java.util.concurrent.Future<any>;
						invokeAll(param0: java.util.Collection<any>): java.util.List<any>;
						invokeAll(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.List<any>;
						invokeAny(param0: java.util.Collection<any>): any;
						invokeAny(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
						execute(param0: java.lang.Runnable): void;
					});
					public constructor();
					public invokeAll(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.List<any>;
					public isTerminated(): boolean;
					public invokeAny(param0: java.util.Collection<any>): any;
					public submit(param0: java.lang.Runnable): java.util.concurrent.Future<any>;
					public isHandlerThread(): boolean;
					public schedule(param0: java.lang.Runnable, param1: number, param2: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
					public invokeAll(param0: java.util.Collection<any>): java.util.List<any>;
					public isShutdown(): boolean;
					public shutdownNow(): java.util.List<java.lang.Runnable>;
					public execute(param0: java.lang.Runnable): void;
					public schedule(param0: java.util.concurrent.Callable<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
					public shutdown(): void;
					public awaitTermination(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
					public scheduleAtFixedRate(param0: java.lang.Runnable, param1: number, param2: number, param3: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
					public invokeAny(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
					public submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.Future<any>;
					public submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.Future<any>;
					public quit(): void;
					public scheduleWithFixedDelay(param0: java.lang.Runnable, param1: number, param2: number, param3: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module executors {
				export class HandlerExecutorServiceImpl extends java.util.concurrent.AbstractExecutorService implements com.facebook.common.executors.HandlerExecutorService {
					public static class: java.lang.Class<com.facebook.common.executors.HandlerExecutorServiceImpl>;
					public invokeAll(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.List<any>;
					public invokeAny(param0: java.util.Collection<any>): any;
					public newTaskFor(param0: java.lang.Runnable, param1: any): com.facebook.common.executors.ScheduledFutureImpl<any>;
					public newTaskFor(param0: java.util.concurrent.Callable<any>): com.facebook.common.executors.ScheduledFutureImpl<any>;
					public schedule(param0: java.lang.Runnable, param1: number, param2: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
					public isShutdown(): boolean;
					public execute(param0: java.lang.Runnable): void;
					public shutdown(): void;
					public schedule(param0: java.util.concurrent.Callable<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
					public constructor();
					public invokeAny(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
					public submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.Future<any>;
					public constructor(param0: globalAndroid.os.Handler);
					public isTerminated(): boolean;
					public submit(param0: java.lang.Runnable): java.util.concurrent.Future<any>;
					public isHandlerThread(): boolean;
					public submit(param0: java.lang.Runnable): java.util.concurrent.ScheduledFuture<any>;
					public invokeAll(param0: java.util.Collection<any>): java.util.List<any>;
					public shutdownNow(): java.util.List<java.lang.Runnable>;
					public awaitTermination(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
					public submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.ScheduledFuture<any>;
					public submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.ScheduledFuture<any>;
					public scheduleAtFixedRate(param0: java.lang.Runnable, param1: number, param2: number, param3: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
					public newTaskFor(param0: java.lang.Runnable, param1: any): java.util.concurrent.RunnableFuture<any>;
					public newTaskFor(param0: java.util.concurrent.Callable<any>): java.util.concurrent.RunnableFuture<any>;
					public submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.Future<any>;
					public scheduleWithFixedDelay(param0: java.lang.Runnable, param1: number, param2: number, param3: java.util.concurrent.TimeUnit): java.util.concurrent.ScheduledFuture<any>;
					public quit(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module executors {
				export class ScheduledFutureImpl<V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.executors.ScheduledFutureImpl<any>>;
					public compareTo(param0: java.util.concurrent.Delayed): number;
					public get(param0: number, param1: java.util.concurrent.TimeUnit): V;
					public isDone(): boolean;
					public run(): void;
					public isCancelled(): boolean;
					public constructor(param0: globalAndroid.os.Handler, param1: java.util.concurrent.Callable<V>);
					public constructor(param0: globalAndroid.os.Handler, param1: java.lang.Runnable, param2: V);
					public cancel(param0: boolean): boolean;
					public getDelay(param0: java.util.concurrent.TimeUnit): number;
					public get(): V;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module executors {
				export class SerialExecutorService extends java.lang.Object implements java.util.concurrent.ExecutorService {
					public static class: java.lang.Class<com.facebook.common.executors.SerialExecutorService>;
					/**
					 * Constructs a new instance of the com.facebook.common.executors.SerialExecutorService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						shutdown(): void;
						shutdownNow(): java.util.List<java.lang.Runnable>;
						isShutdown(): boolean;
						isTerminated(): boolean;
						awaitTermination(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
						submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.Future<any>;
						submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.Future<any>;
						submit(param0: java.lang.Runnable): java.util.concurrent.Future<any>;
						invokeAll(param0: java.util.Collection<any>): java.util.List<any>;
						invokeAll(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.List<any>;
						invokeAny(param0: java.util.Collection<any>): any;
						invokeAny(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
						execute(param0: java.lang.Runnable): void;
					});
					public constructor();
					public invokeAll(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.List<any>;
					public isTerminated(): boolean;
					public invokeAny(param0: java.util.Collection<any>): any;
					public submit(param0: java.lang.Runnable): java.util.concurrent.Future<any>;
					public invokeAll(param0: java.util.Collection<any>): java.util.List<any>;
					public isShutdown(): boolean;
					public shutdownNow(): java.util.List<java.lang.Runnable>;
					public execute(param0: java.lang.Runnable): void;
					public shutdown(): void;
					public awaitTermination(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
					public invokeAny(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
					public submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.Future<any>;
					public submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.Future<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module executors {
				export abstract class StatefulRunnable<T>  extends java.lang.Runnable {
					public static class: java.lang.Class<com.facebook.common.executors.StatefulRunnable<any>>;
					public static STATE_CREATED: number;
					public static STATE_STARTED: number;
					public static STATE_CANCELLED: number;
					public static STATE_FINISHED: number;
					public static STATE_FAILED: number;
					public mState: java.util.concurrent.atomic.AtomicInteger;
					public onFailure(param0: java.lang.Exception): void;
					public onCancellation(): void;
					public constructor();
					public run(): void;
					public cancel(): void;
					public getResult(): any;
					public disposeResult(param0: any): void;
					public onSuccess(param0: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module executors {
				export class UiThreadImmediateExecutorService extends com.facebook.common.executors.HandlerExecutorServiceImpl {
					public static class: java.lang.Class<com.facebook.common.executors.UiThreadImmediateExecutorService>;
					public invokeAll(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.List<any>;
					public static getInstance(): com.facebook.common.executors.UiThreadImmediateExecutorService;
					public isTerminated(): boolean;
					public invokeAny(param0: java.util.Collection<any>): any;
					public submit(param0: java.lang.Runnable): java.util.concurrent.Future<any>;
					public isHandlerThread(): boolean;
					public submit(param0: java.lang.Runnable): java.util.concurrent.ScheduledFuture<any>;
					public invokeAll(param0: java.util.Collection<any>): java.util.List<any>;
					public isShutdown(): boolean;
					public shutdownNow(): java.util.List<java.lang.Runnable>;
					public execute(param0: java.lang.Runnable): void;
					public shutdown(): void;
					public awaitTermination(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
					public submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.ScheduledFuture<any>;
					public submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.ScheduledFuture<any>;
					public invokeAny(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
					public submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.Future<any>;
					public submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.Future<any>;
					public quit(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module file {
				export class FileTree extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.file.FileTree>;
					public static deleteContents(param0: java.io.File): boolean;
					public constructor();
					public static walkFileTree(param0: java.io.File, param1: com.facebook.common.file.FileTreeVisitor): void;
					public static deleteRecursively(param0: java.io.File): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module file {
				export class FileTreeVisitor extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.file.FileTreeVisitor>;
					/**
					 * Constructs a new instance of the com.facebook.common.file.FileTreeVisitor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						preVisitDirectory(param0: java.io.File): void;
						visitFile(param0: java.io.File): void;
						postVisitDirectory(param0: java.io.File): void;
					});
					public constructor();
					public preVisitDirectory(param0: java.io.File): void;
					public postVisitDirectory(param0: java.io.File): void;
					public visitFile(param0: java.io.File): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module file {
				export class FileUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.file.FileUtils>;
					public constructor();
					public static mkdirs(param0: java.io.File): void;
					public static rename(param0: java.io.File, param1: java.io.File): void;
				}
				export module FileUtils {
					export class CreateDirectoryException extends java.io.IOException {
						public static class: java.lang.Class<com.facebook.common.file.FileUtils.CreateDirectoryException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
					export class FileDeleteException extends java.io.IOException {
						public static class: java.lang.Class<com.facebook.common.file.FileUtils.FileDeleteException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
					export class ParentDirNotFoundException extends java.io.FileNotFoundException {
						public static class: java.lang.Class<com.facebook.common.file.FileUtils.ParentDirNotFoundException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
					export class RenameException extends java.io.IOException {
						public static class: java.lang.Class<com.facebook.common.file.FileUtils.RenameException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class AndroidPredicates extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.AndroidPredicates>;
					public static False(): com.facebook.common.internal.Predicate<any>;
					public static True(): com.facebook.common.internal.Predicate<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class ByteStreams extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.ByteStreams>;
					public static toByteArray(param0: java.io.InputStream): native.Array<number>;
					public static read(param0: java.io.InputStream, param1: native.Array<number>, param2: number, param3: number): number;
					public static toByteArray(param0: java.io.InputStream, param1: number): native.Array<number>;
					public static copy(param0: java.io.InputStream, param1: java.io.OutputStream): number;
					public static readFully(param0: java.io.InputStream, param1: native.Array<number>, param2: number, param3: number): void;
				}
				export module ByteStreams {
					export class FastByteArrayOutputStream extends java.io.ByteArrayOutputStream {
						public static class: java.lang.Class<com.facebook.common.internal.ByteStreams.FastByteArrayOutputStream>;
						public close(): void;
						public flush(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class Closeables extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.Closeables>;
					public static closeQuietly(param0: java.io.InputStream): void;
					public static close(param0: java.io.Closeable, param1: boolean): void;
					public static closeQuietly(param0: java.io.Reader): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class CountingOutputStream extends java.io.FilterOutputStream {
					public static class: java.lang.Class<com.facebook.common.internal.CountingOutputStream>;
					public write(param0: native.Array<number>, param1: number, param2: number): void;
					public constructor(param0: java.io.OutputStream);
					public write(param0: native.Array<number>): void;
					public getCount(): number;
					public constructor();
					public close(): void;
					public write(param0: number): void;
					public flush(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class DoNotStrip extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.common.internal.DoNotStrip>;
					/**
					 * Constructs a new instance of the com.facebook.common.internal.DoNotStrip interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class Files extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.Files>;
					public static toByteArray(param0: java.io.File): native.Array<number>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class ImmutableList<E>  extends java.util.ArrayList<any> {
					public static class: java.lang.Class<com.facebook.common.internal.ImmutableList<any>>;
					public addAll(param0: java.util.Collection<any>): boolean;
					public isEmpty(): boolean;
					public add(param0: any): boolean;
					public spliterator(): java.util.Spliterator<any>;
					public containsAll(param0: java.util.Collection<any>): boolean;
					public size(): number;
					public lastIndexOf(param0: any): number;
					public static of(param0: native.Array<any>): com.facebook.common.internal.ImmutableList<any>;
					public sort(param0: java.util.Comparator<any>): void;
					public remove(param0: number): any;
					public iterator(): java.util.Iterator<any>;
					public replaceAll(param0: any /* any*/): void;
					public toArray(param0: native.Array<any>): native.Array<any>;
					public toArray(): native.Array<any>;
					public clear(): void;
					public get(param0: number): any;
					public subList(param0: number, param1: number): java.util.List<any>;
					public listIterator(param0: number): java.util.ListIterator<any>;
					public hashCode(): number;
					public contains(param0: any): boolean;
					public removeIf(param0: any /* any*/): boolean;
					public static copyOf(param0: java.util.List<any>): com.facebook.common.internal.ImmutableList<any>;
					public remove(param0: any): boolean;
					public removeAll(param0: java.util.Collection<any>): boolean;
					public add(param0: number, param1: any): void;
					public parallelStream(): java.util.stream.Stream<any>;
					public addAll(param0: number, param1: java.util.Collection<any>): boolean;
					public retainAll(param0: java.util.Collection<any>): boolean;
					public indexOf(param0: any): number;
					public equals(param0: any): boolean;
					public set(param0: number, param1: any): any;
					public listIterator(): java.util.ListIterator<any>;
					public stream(): java.util.stream.Stream<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class ImmutableMap<K, V>  extends java.util.HashMap<any,any> {
					public static class: java.lang.Class<com.facebook.common.internal.ImmutableMap<any,any>>;
					public static of(param0: any, param1: any): java.util.Map<any, any>;
					public replace(param0: any, param1: any): any;
					public isEmpty(): boolean;
					public computeIfPresent(param0: any, param1: any /* any<any,any,any>*/): any;
					public forEach(param0: any /* any<any,any>*/): void;
					public size(): number;
					public static of(param0: any, param1: any, param2: any, param3: any, param4: any, param5: any): java.util.Map<any, any>;
					public merge(param0: any, param1: any, param2: any /* any<any,any,any>*/): any;
					public put(param0: any, param1: any): any;
					public getOrDefault(param0: any, param1: any): any;
					public putAll(param0: java.util.Map<any,any>): void;
					public replace(param0: any, param1: any, param2: any): boolean;
					public static of(param0: any, param1: any, param2: any, param3: any): java.util.Map<any, any>;
					public containsValue(param0: any): boolean;
					public remove(param0: any): any;
					public static copyOf(param0: java.util.Map<any, any>): com.facebook.common.internal.ImmutableMap<any,any>;
					public keySet(): java.util.Set<any>;
					public clear(): void;
					public static of(): java.util.Map<any, any>;
					public hashCode(): number;
					public putIfAbsent(param0: any, param1: any): any;
					public remove(param0: any, param1: any): boolean;
					public static of(param0: any, param1: any, param2: any, param3: any, param4: any, param5: any, param6: any, param7: any): java.util.Map<any, any>;
					public computeIfAbsent(param0: any, param1: any /* any<any,any>*/): any;
					public values(): java.util.Collection<any>;
					public static of(param0: any, param1: any, param2: any, param3: any, param4: any, param5: any, param6: any, param7: any, param8: any, param9: any, param10: any, param11: any): java.util.Map<any, any>;
					public static of(param0: any, param1: any, param2: any, param3: any, param4: any, param5: any, param6: any, param7: any, param8: any, param9: any): java.util.Map<any, any>;
					public equals(param0: any): boolean;
					public containsKey(param0: any): boolean;
					public entrySet(): java.util.Set<java.util.Map.Entry<any,any>>;
					public compute(param0: any, param1: any /* any<any,any,any>*/): any;
					public replaceAll(param0: any /* any<any,any,any>*/): void;
					public get(param0: any): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class ImmutableSet<E>  extends java.util.HashSet<any> {
					public static class: java.lang.Class<com.facebook.common.internal.ImmutableSet<any>>;
					public addAll(param0: java.util.Collection<any>): boolean;
					public remove(param0: any): boolean;
					public removeAll(param0: java.util.Collection<any>): boolean;
					public static copyOf(param0: java.util.Set<any>): com.facebook.common.internal.ImmutableSet<any>;
					public isEmpty(): boolean;
					public add(param0: any): boolean;
					public parallelStream(): java.util.stream.Stream<any>;
					public spliterator(): java.util.Spliterator<any>;
					public containsAll(param0: java.util.Collection<any>): boolean;
					public size(): number;
					public retainAll(param0: java.util.Collection<any>): boolean;
					public equals(param0: any): boolean;
					public iterator(): java.util.Iterator<any>;
					public static of(param0: native.Array<any>): com.facebook.common.internal.ImmutableSet<any>;
					public toArray(param0: native.Array<any>): native.Array<any>;
					public toArray(): native.Array<any>;
					public clear(): void;
					public stream(): java.util.stream.Stream<any>;
					public hashCode(): number;
					public contains(param0: any): boolean;
					public removeIf(param0: any /* any*/): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class Ints extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.Ints>;
					public static max(param0: native.Array<number>): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class Objects extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.Objects>;
					public static toStringHelper(param0: string): com.facebook.common.internal.Objects.ToStringHelper;
					public static toStringHelper(param0: java.lang.Class<any>): com.facebook.common.internal.Objects.ToStringHelper;
					public static firstNonNull(param0: any, param1: any): any;
					public static hashCode(param0: native.Array<any>): number;
					public static equal(param0: any, param1: any): boolean;
					public hashCode(): number;
					public static toStringHelper(param0: any): com.facebook.common.internal.Objects.ToStringHelper;
				}
				export module Objects {
					export class ToStringHelper extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.common.internal.Objects.ToStringHelper>;
						public omitNullValues(): com.facebook.common.internal.Objects.ToStringHelper;
						public add(param0: string, param1: any): com.facebook.common.internal.Objects.ToStringHelper;
						public addValue(param0: number): com.facebook.common.internal.Objects.ToStringHelper;
						public add(param0: string, param1: boolean): com.facebook.common.internal.Objects.ToStringHelper;
						public add(param0: string, param1: number): com.facebook.common.internal.Objects.ToStringHelper;
						public addValue(param0: any): com.facebook.common.internal.Objects.ToStringHelper;
						public addValue(param0: boolean): com.facebook.common.internal.Objects.ToStringHelper;
						public addValue(param0: string): com.facebook.common.internal.Objects.ToStringHelper;
						public add(param0: string, param1: string): com.facebook.common.internal.Objects.ToStringHelper;
						public toString(): string;
					}
					export module ToStringHelper {
						export class ValueHolder extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.common.internal.Objects.ToStringHelper.ValueHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class Preconditions extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.Preconditions>;
					public static checkElementIndex(param0: number, param1: number, param2: string): number;
					public static checkState(param0: boolean, param1: any): void;
					public static checkArgument(param0: boolean, param1: any): void;
					public static checkElementIndex(param0: number, param1: number): number;
					public static checkNotNull(param0: any): any;
					public static checkNotNull(param0: any, param1: string, param2: native.Array<any>): any;
					public static checkPositionIndexes(param0: number, param1: number, param2: number): void;
					public static checkPositionIndex(param0: number, param1: number): number;
					public static checkState(param0: boolean, param1: string, param2: native.Array<any>): void;
					public static checkPositionIndex(param0: number, param1: number, param2: string): number;
					public static checkArgument(param0: boolean, param1: string, param2: native.Array<any>): void;
					public static checkState(param0: boolean): void;
					public static checkArgument(param0: boolean): void;
					public static checkNotNull(param0: any, param1: any): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class Predicate<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.Predicate<any>>;
					/**
					 * Constructs a new instance of the com.facebook.common.internal.Predicate<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						apply(param0: T): boolean;
					});
					public constructor();
					public apply(param0: T): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class Sets extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.Sets>;
					public static newHashSet(): java.util.HashSet<any>;
					public static newHashSetWithCapacity(param0: number): java.util.HashSet<any>;
					public static newIdentityHashSet(): java.util.Set<any>;
					public static newHashSet(param0: java.lang.Iterable<any>): java.util.HashSet<any>;
					public static newHashSet(param0: native.Array<any>): java.util.HashSet<any>;
					public static newHashSet(param0: java.util.Iterator<any>): java.util.HashSet<any>;
					public static newCopyOnWriteArraySet(): java.util.concurrent.CopyOnWriteArraySet<any>;
					public static newLinkedHashSet(): java.util.LinkedHashSet<any>;
					public static newSetFromMap(param0: java.util.Map<any, any>): java.util.Set<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class Supplier<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.Supplier<any>>;
					/**
					 * Constructs a new instance of the com.facebook.common.internal.Supplier<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						get(): T;
					});
					public constructor();
					public get(): T;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class Suppliers extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.Suppliers>;
					public static BOOLEAN_TRUE: com.facebook.common.internal.Supplier<java.lang.Boolean>;
					public static BOOLEAN_FALSE: com.facebook.common.internal.Supplier<java.lang.Boolean>;
					public static of(param0: any): com.facebook.common.internal.Supplier<any>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class Throwables extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.internal.Throwables>;
					public static getCausalChain(param0: java.lang.Throwable): java.util.List<java.lang.Throwable>;
					public static propagateIfPossible(param0: java.lang.Throwable): void;
					public static getStackTraceAsString(param0: java.lang.Throwable): string;
					public static propagateIfPossible(param0: java.lang.Throwable, param1: java.lang.Class<any>, param2: java.lang.Class<any>): void;
					public static getRootCause(param0: java.lang.Throwable): java.lang.Throwable;
					public static propagateIfPossible(param0: java.lang.Throwable, param1: java.lang.Class<any>): void;
					public static propagate(param0: java.lang.Throwable): java.lang.RuntimeException;
					public static propagateIfInstanceOf(param0: java.lang.Throwable, param1: java.lang.Class<any>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module internal {
				export class VisibleForTesting extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.common.internal.VisibleForTesting>;
					/**
					 * Constructs a new instance of the com.facebook.common.internal.VisibleForTesting interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module lifecycle {
				export class AttachDetachListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.lifecycle.AttachDetachListener>;
					/**
					 * Constructs a new instance of the com.facebook.common.lifecycle.AttachDetachListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onAttachToView(param0: globalAndroid.view.View): void;
						onDetachFromView(param0: globalAndroid.view.View): void;
					});
					public constructor();
					public onAttachToView(param0: globalAndroid.view.View): void;
					public onDetachFromView(param0: globalAndroid.view.View): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module logging {
				export class FLog extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.logging.FLog>;
					public static VERBOSE: number;
					public static DEBUG: number;
					public static INFO: number;
					public static WARN: number;
					public static ERROR: number;
					public static ASSERT: number;
					public static d(param0: string, param1: string, param2: any, param3: any, param4: any, param5: any): void;
					public static d(param0: string, param1: string, param2: java.lang.Throwable): void;
					public static i(param0: java.lang.Class<any>, param1: string, param2: any, param3: any, param4: any, param5: any): void;
					public static w(param0: java.lang.Class<any>, param1: string): void;
					public static wtf(param0: string, param1: string, param2: native.Array<any>): void;
					public static v(param0: string, param1: string, param2: any, param3: any, param4: any, param5: any): void;
					public static v(param0: java.lang.Class<any>, param1: string, param2: any, param3: any, param4: any, param5: any): void;
					public static getMinimumLoggingLevel(): number;
					public static i(param0: java.lang.Class<any>, param1: string, param2: java.lang.Throwable): void;
					public constructor();
					public static d(param0: string, param1: string): void;
					public static d(param0: java.lang.Class<any>, param1: string, param2: java.lang.Throwable): void;
					public static v(param0: java.lang.Class<any>, param1: string, param2: java.lang.Throwable): void;
					public static v(param0: string, param1: string): void;
					public static v(param0: java.lang.Class<any>, param1: string, param2: native.Array<any>): void;
					public static v(param0: string, param1: string, param2: any, param3: any, param4: any): void;
					public static wtf(param0: string, param1: string): void;
					public static wtf(param0: java.lang.Class<any>, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static w(param0: java.lang.Class<any>, param1: string, param2: native.Array<any>): void;
					public static v(param0: java.lang.Class<any>, param1: string): void;
					public static w(param0: string, param1: string, param2: native.Array<any>): void;
					public static e(param0: string, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static e(param0: java.lang.Class<any>, param1: string, param2: java.lang.Throwable): void;
					public static v(param0: string, param1: string, param2: native.Array<any>): void;
					public static v(param0: java.lang.Class<any>, param1: string, param2: any): void;
					public static d(param0: java.lang.Class<any>, param1: string, param2: any, param3: any, param4: any): void;
					public static i(param0: java.lang.Class<any>, param1: string, param2: native.Array<any>): void;
					public static i(param0: string, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static d(param0: java.lang.Class<any>, param1: string, param2: native.Array<any>): void;
					public static w(param0: string, param1: string, param2: java.lang.Throwable): void;
					public static e(param0: java.lang.Class<any>, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static e(param0: java.lang.Class<any>, param1: string, param2: native.Array<any>): void;
					public static i(param0: string, param1: string, param2: any, param3: any, param4: any): void;
					public static i(param0: string, param1: string, param2: java.lang.Throwable): void;
					public static d(param0: java.lang.Class<any>, param1: string): void;
					public static i(param0: string, param1: string): void;
					public static v(param0: java.lang.Class<any>, param1: string, param2: any, param3: any): void;
					public static wtf(param0: java.lang.Class<any>, param1: string, param2: java.lang.Throwable): void;
					public static e(param0: string, param1: string): void;
					public static wtf(param0: string, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static d(param0: string, param1: string, param2: any, param3: any, param4: any): void;
					public static wtf(param0: string, param1: string, param2: java.lang.Throwable): void;
					public static v(param0: string, param1: string, param2: any, param3: any): void;
					public static d(param0: java.lang.Class<any>, param1: string, param2: any, param3: any): void;
					public static d(param0: string, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static v(param0: string, param1: string, param2: any): void;
					public static w(param0: java.lang.Class<any>, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static i(param0: java.lang.Class<any>, param1: string, param2: any, param3: any, param4: any): void;
					public static i(param0: java.lang.Class<any>, param1: string, param2: any): void;
					public static v(param0: string, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static i(param0: java.lang.Class<any>, param1: string, param2: any, param3: any): void;
					public static i(param0: java.lang.Class<any>, param1: string): void;
					public static setLoggingDelegate(param0: com.facebook.common.logging.LoggingDelegate): void;
					public static i(param0: java.lang.Class<any>, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static setMinimumLoggingLevel(param0: number): void;
					public static w(param0: string, param1: string): void;
					public static d(param0: string, param1: string, param2: any): void;
					public static w(param0: java.lang.Class<any>, param1: string, param2: java.lang.Throwable): void;
					public static d(param0: java.lang.Class<any>, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static wtf(param0: java.lang.Class<any>, param1: string, param2: native.Array<any>): void;
					public static v(param0: java.lang.Class<any>, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static v(param0: string, param1: string, param2: java.lang.Throwable): void;
					public static i(param0: string, param1: string, param2: any, param3: any, param4: any, param5: any): void;
					public static i(param0: string, param1: string, param2: native.Array<any>): void;
					public static d(param0: string, param1: string, param2: any, param3: any): void;
					public static isLoggable(param0: number): boolean;
					public static v(param0: java.lang.Class<any>, param1: string, param2: any, param3: any, param4: any): void;
					public static i(param0: string, param1: string, param2: any, param3: any): void;
					public static d(param0: java.lang.Class<any>, param1: string, param2: any): void;
					public static w(param0: string, param1: java.lang.Throwable, param2: string, param3: native.Array<any>): void;
					public static e(param0: string, param1: string, param2: java.lang.Throwable): void;
					public static wtf(param0: java.lang.Class<any>, param1: string): void;
					public static i(param0: string, param1: string, param2: any): void;
					public static e(param0: string, param1: string, param2: native.Array<any>): void;
					public static e(param0: java.lang.Class<any>, param1: string): void;
					public static d(param0: string, param1: string, param2: native.Array<any>): void;
					public static d(param0: java.lang.Class<any>, param1: string, param2: any, param3: any, param4: any, param5: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module logging {
				export class FLogDefaultLoggingDelegate extends java.lang.Object implements com.facebook.common.logging.LoggingDelegate {
					public static class: java.lang.Class<com.facebook.common.logging.FLogDefaultLoggingDelegate>;
					public static sInstance: com.facebook.common.logging.FLogDefaultLoggingDelegate;
					public i(param0: string, param1: string, param2: java.lang.Throwable): void;
					public getMinimumLoggingLevel(): number;
					public v(param0: string, param1: string, param2: java.lang.Throwable): void;
					public e(param0: string, param1: string, param2: java.lang.Throwable): void;
					public wtf(param0: string, param1: string): void;
					public setApplicationTag(param0: string): void;
					public d(param0: string, param1: string): void;
					public e(param0: string, param1: string): void;
					public setMinimumLoggingLevel(param0: number): void;
					public isLoggable(param0: number): boolean;
					public i(param0: string, param1: string): void;
					public wtf(param0: string, param1: string, param2: java.lang.Throwable): void;
					public static getInstance(): com.facebook.common.logging.FLogDefaultLoggingDelegate;
					public w(param0: string, param1: string): void;
					public v(param0: string, param1: string): void;
					public d(param0: string, param1: string, param2: java.lang.Throwable): void;
					public w(param0: string, param1: string, param2: java.lang.Throwable): void;
					public log(param0: number, param1: string, param2: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module logging {
				export class LoggingDelegate extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.logging.LoggingDelegate>;
					/**
					 * Constructs a new instance of the com.facebook.common.logging.LoggingDelegate interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setMinimumLoggingLevel(param0: number): void;
						getMinimumLoggingLevel(): number;
						isLoggable(param0: number): boolean;
						v(param0: string, param1: string): void;
						v(param0: string, param1: string, param2: java.lang.Throwable): void;
						d(param0: string, param1: string): void;
						d(param0: string, param1: string, param2: java.lang.Throwable): void;
						i(param0: string, param1: string): void;
						i(param0: string, param1: string, param2: java.lang.Throwable): void;
						w(param0: string, param1: string): void;
						w(param0: string, param1: string, param2: java.lang.Throwable): void;
						e(param0: string, param1: string): void;
						e(param0: string, param1: string, param2: java.lang.Throwable): void;
						wtf(param0: string, param1: string): void;
						wtf(param0: string, param1: string, param2: java.lang.Throwable): void;
						log(param0: number, param1: string, param2: string): void;
					});
					public constructor();
					public i(param0: string, param1: string, param2: java.lang.Throwable): void;
					public getMinimumLoggingLevel(): number;
					public v(param0: string, param1: string, param2: java.lang.Throwable): void;
					public e(param0: string, param1: string, param2: java.lang.Throwable): void;
					public wtf(param0: string, param1: string): void;
					public d(param0: string, param1: string): void;
					public e(param0: string, param1: string): void;
					public setMinimumLoggingLevel(param0: number): void;
					public isLoggable(param0: number): boolean;
					public i(param0: string, param1: string): void;
					public wtf(param0: string, param1: string, param2: java.lang.Throwable): void;
					public w(param0: string, param1: string): void;
					public v(param0: string, param1: string): void;
					public d(param0: string, param1: string, param2: java.lang.Throwable): void;
					public w(param0: string, param1: string, param2: java.lang.Throwable): void;
					public log(param0: number, param1: string, param2: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module media {
				export class MediaUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.media.MediaUtils>;
					public static ADDITIONAL_ALLOWED_MIME_TYPES: java.util.Map<string,string>;
					public static isVideo(param0: string): boolean;
					public static extractMime(param0: string): string;
					public constructor();
					public static isNonNativeSupportedMimeType(param0: string): boolean;
					public static isPhoto(param0: string): boolean;
					public static isThreeD(param0: string): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module media {
				export class MimeTypeMapWrapper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.media.MimeTypeMapWrapper>;
					public static hasExtension(param0: string): boolean;
					public static hasMimeType(param0: string): boolean;
					public constructor();
					public static getExtensionFromMimeType(param0: string): string;
					public static getMimeTypeFromExtension(param0: string): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export class ByteArrayPool extends com.facebook.common.memory.Pool<native.Array<number>> {
					public static class: java.lang.Class<com.facebook.common.memory.ByteArrayPool>;
					/**
					 * Constructs a new instance of the com.facebook.common.memory.ByteArrayPool interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						get(param0: number): any;
						release(param0: any): void;
						release(param0: any): void;
						trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					});
					public constructor();
					public release(param0: any): void;
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					public get(param0: number): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export class MemoryTrimType {
					public static class: java.lang.Class<com.facebook.common.memory.MemoryTrimType>;
					public static OnCloseToDalvikHeapLimit: com.facebook.common.memory.MemoryTrimType;
					public static OnSystemMemoryCriticallyLowWhileAppInForeground: com.facebook.common.memory.MemoryTrimType;
					public static OnSystemLowMemoryWhileAppInForeground: com.facebook.common.memory.MemoryTrimType;
					public static OnSystemLowMemoryWhileAppInBackground: com.facebook.common.memory.MemoryTrimType;
					public static OnAppBackgrounded: com.facebook.common.memory.MemoryTrimType;
					public getSuggestedTrimRatio(): number;
					public static valueOf(param0: string): com.facebook.common.memory.MemoryTrimType;
					public static values(): native.Array<com.facebook.common.memory.MemoryTrimType>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export class MemoryTrimmable extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.memory.MemoryTrimmable>;
					/**
					 * Constructs a new instance of the com.facebook.common.memory.MemoryTrimmable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					});
					public constructor();
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export class MemoryTrimmableRegistry extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.memory.MemoryTrimmableRegistry>;
					/**
					 * Constructs a new instance of the com.facebook.common.memory.MemoryTrimmableRegistry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						registerMemoryTrimmable(param0: com.facebook.common.memory.MemoryTrimmable): void;
						unregisterMemoryTrimmable(param0: com.facebook.common.memory.MemoryTrimmable): void;
					});
					public constructor();
					public unregisterMemoryTrimmable(param0: com.facebook.common.memory.MemoryTrimmable): void;
					public registerMemoryTrimmable(param0: com.facebook.common.memory.MemoryTrimmable): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export class NoOpMemoryTrimmableRegistry extends java.lang.Object implements com.facebook.common.memory.MemoryTrimmableRegistry {
					public static class: java.lang.Class<com.facebook.common.memory.NoOpMemoryTrimmableRegistry>;
					public constructor();
					public unregisterMemoryTrimmable(param0: com.facebook.common.memory.MemoryTrimmable): void;
					public static getInstance(): com.facebook.common.memory.NoOpMemoryTrimmableRegistry;
					public registerMemoryTrimmable(param0: com.facebook.common.memory.MemoryTrimmable): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export class Pool<V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.memory.Pool<any>>;
					/**
					 * Constructs a new instance of the com.facebook.common.memory.Pool<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						get(param0: number): V;
						release(param0: V): void;
						release(param0: any): void;
						trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					});
					public constructor();
					public release(param0: any): void;
					public get(param0: number): V;
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					public release(param0: V): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export class PooledByteArrayBufferedInputStream extends java.io.InputStream {
					public static class: java.lang.Class<com.facebook.common.memory.PooledByteArrayBufferedInputStream>;
					public available(): number;
					public read(): number;
					public read(param0: native.Array<number>, param1: number, param2: number): number;
					public constructor();
					public read(param0: native.Array<number>): number;
					public finalize(): void;
					public close(): void;
					public skip(param0: number): number;
					public constructor(param0: java.io.InputStream, param1: native.Array<number>, param2: com.facebook.common.references.ResourceReleaser<native.Array<number>>);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export class PooledByteBuffer extends java.lang.Object implements java.io.Closeable {
					public static class: java.lang.Class<com.facebook.common.memory.PooledByteBuffer>;
					/**
					 * Constructs a new instance of the com.facebook.common.memory.PooledByteBuffer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						size(): number;
						read(param0: number): number;
						read(param0: number, param1: native.Array<number>, param2: number, param3: number): number;
						getNativePtr(): number;
						getByteBuffer(): java.nio.ByteBuffer;
						close(): void;
						isClosed(): boolean;
						close(): void;
						close(): void;
					});
					public constructor();
					public read(param0: number): number;
					public getByteBuffer(): java.nio.ByteBuffer;
					public close(): void;
					public size(): number;
					public read(param0: number, param1: native.Array<number>, param2: number, param3: number): number;
					public getNativePtr(): number;
					public isClosed(): boolean;
				}
				export module PooledByteBuffer {
					export class ClosedException extends java.lang.RuntimeException {
						public static class: java.lang.Class<com.facebook.common.memory.PooledByteBuffer.ClosedException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export class PooledByteBufferFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.memory.PooledByteBufferFactory>;
					/**
					 * Constructs a new instance of the com.facebook.common.memory.PooledByteBufferFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						newByteBuffer(param0: number): com.facebook.common.memory.PooledByteBuffer;
						newByteBuffer(param0: java.io.InputStream): com.facebook.common.memory.PooledByteBuffer;
						newByteBuffer(param0: native.Array<number>): com.facebook.common.memory.PooledByteBuffer;
						newByteBuffer(param0: java.io.InputStream, param1: number): com.facebook.common.memory.PooledByteBuffer;
						newOutputStream(): com.facebook.common.memory.PooledByteBufferOutputStream;
						newOutputStream(param0: number): com.facebook.common.memory.PooledByteBufferOutputStream;
					});
					public constructor();
					public newByteBuffer(param0: native.Array<number>): com.facebook.common.memory.PooledByteBuffer;
					public newOutputStream(param0: number): com.facebook.common.memory.PooledByteBufferOutputStream;
					public newByteBuffer(param0: number): com.facebook.common.memory.PooledByteBuffer;
					public newOutputStream(): com.facebook.common.memory.PooledByteBufferOutputStream;
					public newByteBuffer(param0: java.io.InputStream): com.facebook.common.memory.PooledByteBuffer;
					public newByteBuffer(param0: java.io.InputStream, param1: number): com.facebook.common.memory.PooledByteBuffer;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export class PooledByteBufferInputStream extends java.io.InputStream {
					public static class: java.lang.Class<com.facebook.common.memory.PooledByteBufferInputStream>;
					public available(): number;
					public read(): number;
					public read(param0: native.Array<number>, param1: number, param2: number): number;
					public constructor(param0: com.facebook.common.memory.PooledByteBuffer);
					public reset(): void;
					public constructor();
					public markSupported(): boolean;
					public read(param0: native.Array<number>): number;
					public skip(param0: number): number;
					public close(): void;
					public mark(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export abstract class PooledByteBufferOutputStream extends java.io.OutputStream {
					public static class: java.lang.Class<com.facebook.common.memory.PooledByteBufferOutputStream>;
					public constructor();
					public toByteBuffer(): com.facebook.common.memory.PooledByteBuffer;
					public close(): void;
					public size(): number;
					public flush(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export class PooledByteStreams extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.memory.PooledByteStreams>;
					public constructor(param0: com.facebook.common.memory.ByteArrayPool, param1: number);
					public constructor(param0: com.facebook.common.memory.ByteArrayPool);
					public copy(param0: java.io.InputStream, param1: java.io.OutputStream): number;
					public copy(param0: java.io.InputStream, param1: java.io.OutputStream, param2: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export module manager {
					export class DebugMemoryManager extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.common.memory.manager.DebugMemoryManager>;
						/**
						 * Constructs a new instance of the com.facebook.common.memory.manager.DebugMemoryManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							trimMemory(param0: number): void;
						});
						public constructor();
						public static ON_APP_BACKGROUNDED: number;
						public static ON_CLOSE_TO_DALVIK_HEAP_LIMIT: number;
						public static ON_SYSTEM_LOW_MEMORY_WHILE_APP_IN_BACKGROUND: number;
						public static ON_SYSTEM_LOW_MEMORY_WHILE_APP_IN_FOREGROUND: number;
						public trimMemory(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module memory {
				export module manager {
					export class NoOpDebugMemoryManager extends java.lang.Object implements com.facebook.common.memory.manager.DebugMemoryManager {
						public static class: java.lang.Class<com.facebook.common.memory.manager.NoOpDebugMemoryManager>;
						public constructor();
						public trimMemory(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module references {
				export class CloseableReference<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.references.CloseableReference<any>>;
					public static closeSafely(param0: java.lang.Iterable<any>): void;
					public static closeSafely(param0: com.facebook.common.references.CloseableReference<any>): void;
					public getUnderlyingReferenceTestOnly(): com.facebook.common.references.SharedReference<T>;
					public finalize(): void;
					public static of(param0: any, param1: com.facebook.common.references.ResourceReleaser<any>, param2: com.facebook.common.references.CloseableReference.LeakHandler): com.facebook.common.references.CloseableReference<any>;
					public static of(param0: java.io.Closeable): com.facebook.common.references.CloseableReference<any>;
					public get(): T;
					public getValueHash(): number;
					public static of(param0: java.io.Closeable, param1: com.facebook.common.references.CloseableReference.LeakHandler): com.facebook.common.references.CloseableReference<any>;
					public static isValid(param0: com.facebook.common.references.CloseableReference<any>): boolean;
					public clone(): any;
					public static of(param0: any, param1: com.facebook.common.references.ResourceReleaser<any>): com.facebook.common.references.CloseableReference<any>;
					public cloneOrNull(): com.facebook.common.references.CloseableReference<T>;
					public isValid(): boolean;
					public close(): void;
					public clone(): com.facebook.common.references.CloseableReference<T>;
					public static cloneOrNull(param0: com.facebook.common.references.CloseableReference<any>): com.facebook.common.references.CloseableReference<any>;
					public static cloneOrNull(param0: java.util.Collection<any>): java.util.List<any>;
				}
				export module CloseableReference {
					export class LeakHandler extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.common.references.CloseableReference.LeakHandler>;
						/**
						 * Constructs a new instance of the com.facebook.common.references.CloseableReference$LeakHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							reportLeak(param0: com.facebook.common.references.SharedReference<any>, param1: java.lang.Throwable): void;
							requiresStacktrace(): boolean;
						});
						public constructor();
						public reportLeak(param0: com.facebook.common.references.SharedReference<any>, param1: java.lang.Throwable): void;
						public requiresStacktrace(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module references {
				export class OOMSoftReference<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.references.OOMSoftReference<any>>;
					public set(param0: T): void;
					public constructor();
					public clear(): void;
					public get(): T;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module references {
				export class ResourceReleaser<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.references.ResourceReleaser<any>>;
					/**
					 * Constructs a new instance of the com.facebook.common.references.ResourceReleaser<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						release(param0: T): void;
					});
					public constructor();
					public release(param0: T): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module references {
				export class SharedReference<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.references.SharedReference<any>>;
					public addReferenceIfValid(): boolean;
					public static isValid(param0: com.facebook.common.references.SharedReference<any>): boolean;
					public addReference(): void;
					public constructor(param0: T, param1: com.facebook.common.references.ResourceReleaser<T>);
					public isValid(): boolean;
					public getRefCountTestOnly(): number;
					public get(): T;
					public deleteReference(): void;
				}
				export module SharedReference {
					export class NullReferenceException extends java.lang.RuntimeException {
						public static class: java.lang.Class<com.facebook.common.references.SharedReference.NullReferenceException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module statfs {
				export class StatFsHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.statfs.StatFsHelper>;
					public static DEFAULT_DISK_YELLOW_LEVEL_IN_MB: number;
					public static DEFAULT_DISK_YELLOW_LEVEL_IN_BYTES: number;
					public static getInstance(): com.facebook.common.statfs.StatFsHelper;
					public constructor();
					public getFreeStorageSpace(param0: com.facebook.common.statfs.StatFsHelper.StorageType): number;
					public getTotalStorageSpace(param0: com.facebook.common.statfs.StatFsHelper.StorageType): number;
					public getAvailableStorageSpace(param0: com.facebook.common.statfs.StatFsHelper.StorageType): number;
					public resetStats(): void;
					public testLowDiskSpace(param0: com.facebook.common.statfs.StatFsHelper.StorageType, param1: number): boolean;
					public static createStatFs(param0: string): globalAndroid.os.StatFs;
				}
				export module StatFsHelper {
					export class StorageType {
						public static class: java.lang.Class<com.facebook.common.statfs.StatFsHelper.StorageType>;
						public static INTERNAL: com.facebook.common.statfs.StatFsHelper.StorageType;
						public static EXTERNAL: com.facebook.common.statfs.StatFsHelper.StorageType;
						public static values(): native.Array<com.facebook.common.statfs.StatFsHelper.StorageType>;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static valueOf(param0: string): com.facebook.common.statfs.StatFsHelper.StorageType;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module streams {
				export class LimitedInputStream extends java.io.FilterInputStream {
					public static class: java.lang.Class<com.facebook.common.streams.LimitedInputStream>;
					public available(): number;
					public read(): number;
					public read(param0: native.Array<number>, param1: number, param2: number): number;
					public reset(): void;
					public constructor(param0: java.io.InputStream);
					public constructor();
					public read(param0: native.Array<number>): number;
					public skip(param0: number): number;
					public close(): void;
					public constructor(param0: java.io.InputStream, param1: number);
					public mark(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module streams {
				export class TailAppendingInputStream extends java.io.FilterInputStream {
					public static class: java.lang.Class<com.facebook.common.streams.TailAppendingInputStream>;
					public read(): number;
					public read(param0: native.Array<number>, param1: number, param2: number): number;
					public reset(): void;
					public constructor(param0: java.io.InputStream);
					public constructor();
					public read(param0: native.Array<number>): number;
					public close(): void;
					public constructor(param0: java.io.InputStream, param1: native.Array<number>);
					public mark(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module time {
				export class AwakeTimeSinceBootClock extends java.lang.Object implements com.facebook.common.time.MonotonicClock {
					public static class: java.lang.Class<com.facebook.common.time.AwakeTimeSinceBootClock>;
					public static get(): com.facebook.common.time.AwakeTimeSinceBootClock;
					public now(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module time {
				export class Clock extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.time.Clock>;
					/**
					 * Constructs a new instance of the com.facebook.common.time.Clock interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						now(): number;
					});
					public constructor();
					public static MAX_TIME: number;
					public now(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module time {
				export class CurrentThreadTimeClock extends java.lang.Object implements com.facebook.common.time.Clock {
					public static class: java.lang.Class<com.facebook.common.time.CurrentThreadTimeClock>;
					public constructor();
					public now(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module time {
				export class MonotonicClock extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.time.MonotonicClock>;
					/**
					 * Constructs a new instance of the com.facebook.common.time.MonotonicClock interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						now(): number;
					});
					public constructor();
					public now(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module time {
				export class RealtimeSinceBootClock extends java.lang.Object implements com.facebook.common.time.MonotonicClock {
					public static class: java.lang.Class<com.facebook.common.time.RealtimeSinceBootClock>;
					public now(): number;
					public static get(): com.facebook.common.time.RealtimeSinceBootClock;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module time {
				export class SystemClock extends java.lang.Object implements com.facebook.common.time.Clock {
					public static class: java.lang.Class<com.facebook.common.time.SystemClock>;
					public static get(): com.facebook.common.time.SystemClock;
					public now(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module util {
				export class ByteConstants extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.util.ByteConstants>;
					public static KB: number;
					public static MB: number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module util {
				export class ExceptionWithNoStacktrace extends java.lang.Exception {
					public static class: java.lang.Class<com.facebook.common.util.ExceptionWithNoStacktrace>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public fillInStackTrace(): java.lang.Throwable;
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module util {
				export class HashCodeUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.util.HashCodeUtil>;
					public static hashCode(param0: any, param1: any, param2: any, param3: any): number;
					public static hashCode(param0: number, param1: number, param2: number): number;
					public static hashCode(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): number;
					public static hashCode(param0: number, param1: number, param2: number, param3: number): number;
					public static hashCode(param0: number, param1: number, param2: number, param3: number, param4: number): number;
					public static hashCode(param0: any): number;
					public static hashCode(param0: any, param1: any, param2: any, param3: any, param4: any): number;
					public constructor();
					public static hashCode(param0: any, param1: any, param2: any): number;
					public static hashCode(param0: any, param1: any, param2: any, param3: any, param4: any, param5: any): number;
					public static hashCode(param0: number, param1: number): number;
					public static hashCode(param0: number): number;
					public hashCode(): number;
					public static hashCode(param0: any, param1: any): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module util {
				export class Hex extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.util.Hex>;
					public static byte2Hex(param0: number): string;
					public static decodeHex(param0: string): native.Array<number>;
					public constructor();
					public static hexStringToByteArray(param0: string): native.Array<number>;
					public static encodeHex(param0: native.Array<number>, param1: boolean): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module util {
				export class SecureHashUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.util.SecureHashUtil>;
					public static makeSHA1Hash(param0: native.Array<number>): string;
					public static makeMD5Hash(param0: java.io.InputStream): string;
					public static makeSHA256Hash(param0: native.Array<number>): string;
					public constructor();
					public static makeSHA1Hash(param0: string): string;
					public static makeSHA1HashBase64(param0: native.Array<number>): string;
					public static makeMD5Hash(param0: native.Array<number>): string;
					public static convertToHex(param0: native.Array<number>): string;
					public static makeMD5Hash(param0: string): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module util {
				export class StreamUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.util.StreamUtil>;
					public static getBytesFromStream(param0: java.io.InputStream, param1: number): native.Array<number>;
					public constructor();
					public static getBytesFromStream(param0: java.io.InputStream): native.Array<number>;
					public static skip(param0: java.io.InputStream, param1: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module util {
				export class TriState {
					public static class: java.lang.Class<com.facebook.common.util.TriState>;
					public static YES: com.facebook.common.util.TriState;
					public static NO: com.facebook.common.util.TriState;
					public static UNSET: com.facebook.common.util.TriState;
					public isSet(): boolean;
					public static values(): native.Array<com.facebook.common.util.TriState>;
					public asBoolean(): boolean;
					public static valueOf(param0: boolean): com.facebook.common.util.TriState;
					public asBooleanObject(): java.lang.Boolean;
					public static fromDbValue(param0: number): com.facebook.common.util.TriState;
					public getDbValue(): number;
					public static valueOf(param0: string): com.facebook.common.util.TriState;
					public static valueOf(param0: java.lang.Boolean): com.facebook.common.util.TriState;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
					public asBoolean(param0: boolean): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module util {
				export class UriUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.util.UriUtil>;
					public static HTTP_SCHEME: string;
					public static HTTPS_SCHEME: string;
					public static LOCAL_FILE_SCHEME: string;
					public static LOCAL_CONTENT_SCHEME: string;
					public static LOCAL_ASSET_SCHEME: string;
					public static LOCAL_RESOURCE_SCHEME: string;
					public static QUALIFIED_RESOURCE_SCHEME: string;
					public static DATA_SCHEME: string;
					public static getUriForResourceId(param0: number): globalAndroid.net.Uri;
					public static isLocalContactUri(param0: globalAndroid.net.Uri): boolean;
					public static isNetworkUri(param0: globalAndroid.net.Uri): boolean;
					public static isLocalFileUri(param0: globalAndroid.net.Uri): boolean;
					public static isQualifiedResourceUri(param0: globalAndroid.net.Uri): boolean;
					public static isLocalContentUri(param0: globalAndroid.net.Uri): boolean;
					public constructor();
					public static uriToUrl(param0: globalAndroid.net.Uri): java.net.URL;
					public static isDataUri(param0: globalAndroid.net.Uri): boolean;
					public static parseUriOrNull(param0: string): globalAndroid.net.Uri;
					public static getSchemeOrNull(param0: globalAndroid.net.Uri): string;
					public static isLocalResourceUri(param0: globalAndroid.net.Uri): boolean;
					public static getUriForQualifiedResource(param0: string, param1: number): globalAndroid.net.Uri;
					public static isLocalCameraUri(param0: globalAndroid.net.Uri): boolean;
					public static isLocalAssetUri(param0: globalAndroid.net.Uri): boolean;
					public static getRealPathFromUri(param0: globalAndroid.content.ContentResolver, param1: globalAndroid.net.Uri): string;
					public static getUriForFile(param0: java.io.File): globalAndroid.net.Uri;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module webp {
				export class BitmapCreator extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.webp.BitmapCreator>;
					/**
					 * Constructs a new instance of the com.facebook.common.webp.BitmapCreator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						createNakedBitmap(param0: number, param1: number, param2: globalAndroid.graphics.Bitmap.Config): globalAndroid.graphics.Bitmap;
					});
					public constructor();
					public createNakedBitmap(param0: number, param1: number, param2: globalAndroid.graphics.Bitmap.Config): globalAndroid.graphics.Bitmap;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module webp {
				export class WebpBitmapFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.webp.WebpBitmapFactory>;
					/**
					 * Constructs a new instance of the com.facebook.common.webp.WebpBitmapFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setWebpErrorLogger(param0: com.facebook.common.webp.WebpBitmapFactory.WebpErrorLogger): void;
						setBitmapCreator(param0: com.facebook.common.webp.BitmapCreator): void;
						decodeFileDescriptor(param0: java.io.FileDescriptor, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
						decodeStream(param0: java.io.InputStream, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
						decodeFile(param0: string, param1: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
						decodeByteArray(param0: native.Array<number>, param1: number, param2: number, param3: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
					});
					public constructor();
					public decodeByteArray(param0: native.Array<number>, param1: number, param2: number, param3: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
					public setBitmapCreator(param0: com.facebook.common.webp.BitmapCreator): void;
					public decodeFile(param0: string, param1: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
					public decodeFileDescriptor(param0: java.io.FileDescriptor, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
					public decodeStream(param0: java.io.InputStream, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
					public setWebpErrorLogger(param0: com.facebook.common.webp.WebpBitmapFactory.WebpErrorLogger): void;
				}
				export module WebpBitmapFactory {
					export class WebpErrorLogger extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.common.webp.WebpBitmapFactory.WebpErrorLogger>;
						/**
						 * Constructs a new instance of the com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onWebpErrorLog(param0: string, param1: string): void;
						});
						public constructor();
						public onWebpErrorLog(param0: string, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module common {
			export module webp {
				export class WebpSupportStatus extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.common.webp.WebpSupportStatus>;
					public static sIsWebpSupportRequired: boolean;
					public static sIsSimpleWebpSupported: boolean;
					public static sIsExtendedWebpSupported: boolean;
					public static sWebpBitmapFactory: com.facebook.common.webp.WebpBitmapFactory;
					public static isAnimatedWebpHeader(param0: native.Array<number>, param1: number): boolean;
					public static isExtendedWebpHeader(param0: native.Array<number>, param1: number, param2: number): boolean;
					public constructor();
					public static loadWebpBitmapFactoryIfExists(): com.facebook.common.webp.WebpBitmapFactory;
					public static isLosslessWebpHeader(param0: native.Array<number>, param1: number): boolean;
					public static isSimpleWebpHeader(param0: native.Array<number>, param1: number): boolean;
					public static isWebpSupportedByPlatform(param0: native.Array<number>, param1: number, param2: number): boolean;
					public static isExtendedWebpHeaderWithAlpha(param0: native.Array<number>, param1: number): boolean;
					public static isWebpHeader(param0: native.Array<number>, param1: number, param2: number): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module datasource {
			export abstract class AbstractDataSource<T>  extends com.facebook.datasource.DataSource<any> {
				public static class: java.lang.Class<com.facebook.datasource.AbstractDataSource<any>>;
				public getResult(): any;
				public hasFailed(): boolean;
				public close(): boolean;
				public isClosed(): boolean;
				public isFinished(): boolean;
				public setProgress(param0: number): boolean;
				public hasMultipleResults(): boolean;
				public constructor();
				public setResult(param0: any, param1: boolean): boolean;
				public getFailureCause(): java.lang.Throwable;
				public getProgress(): number;
				public notifyProgressUpdate(): void;
				public closeResult(param0: any): void;
				public hasResult(): boolean;
				public subscribe(param0: com.facebook.datasource.DataSubscriber<any>, param1: java.util.concurrent.Executor): void;
				public setFailure(param0: java.lang.Throwable): boolean;
			}
			export module AbstractDataSource {
				export class DataSourceStatus {
					public static class: java.lang.Class<com.facebook.datasource.AbstractDataSource.DataSourceStatus>;
					public static IN_PROGRESS: com.facebook.datasource.AbstractDataSource.DataSourceStatus;
					public static SUCCESS: com.facebook.datasource.AbstractDataSource.DataSourceStatus;
					public static FAILURE: com.facebook.datasource.AbstractDataSource.DataSourceStatus;
					public static valueOf(param0: string): com.facebook.datasource.AbstractDataSource.DataSourceStatus;
					public static values(): native.Array<com.facebook.datasource.AbstractDataSource.DataSourceStatus>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module datasource {
			export abstract class BaseBooleanSubscriber extends com.facebook.datasource.DataSubscriber<java.lang.Boolean> {
				public static class: java.lang.Class<com.facebook.datasource.BaseBooleanSubscriber>;
				public onCancellation(param0: com.facebook.datasource.DataSource<java.lang.Boolean>): void;
				public onFailure(param0: com.facebook.datasource.DataSource<any>): void;
				public onFailure(param0: com.facebook.datasource.DataSource<java.lang.Boolean>): void;
				public onProgressUpdate(param0: com.facebook.datasource.DataSource<java.lang.Boolean>): void;
				public onNewResult(param0: com.facebook.datasource.DataSource<any>): void;
				public onProgressUpdate(param0: com.facebook.datasource.DataSource<any>): void;
				public onFailureImpl(param0: com.facebook.datasource.DataSource<java.lang.Boolean>): void;
				public onNewResult(param0: com.facebook.datasource.DataSource<java.lang.Boolean>): void;
				public onCancellation(param0: com.facebook.datasource.DataSource<any>): void;
				public onNewResultImpl(param0: boolean): void;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module datasource {
			export abstract class BaseDataSubscriber<T>  extends com.facebook.datasource.DataSubscriber<any> {
				public static class: java.lang.Class<com.facebook.datasource.BaseDataSubscriber<any>>;
				public onFailure(param0: com.facebook.datasource.DataSource<any>): void;
				public onNewResult(param0: com.facebook.datasource.DataSource<any>): void;
				public onFailureImpl(param0: com.facebook.datasource.DataSource<any>): void;
				public onProgressUpdate(param0: com.facebook.datasource.DataSource<any>): void;
				public onNewResultImpl(param0: com.facebook.datasource.DataSource<any>): void;
				public onCancellation(param0: com.facebook.datasource.DataSource<any>): void;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module datasource {
			export class DataSource<T>  extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.datasource.DataSource<any>>;
				/**
				 * Constructs a new instance of the com.facebook.datasource.DataSource<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					isClosed(): boolean;
					getResult(): T;
					hasResult(): boolean;
					hasMultipleResults(): boolean;
					isFinished(): boolean;
					hasFailed(): boolean;
					getFailureCause(): java.lang.Throwable;
					getProgress(): number;
					close(): boolean;
					subscribe(param0: com.facebook.datasource.DataSubscriber<T>, param1: java.util.concurrent.Executor): void;
				});
				public constructor();
				public hasFailed(): boolean;
				public getFailureCause(): java.lang.Throwable;
				public getProgress(): number;
				public subscribe(param0: com.facebook.datasource.DataSubscriber<T>, param1: java.util.concurrent.Executor): void;
				public getResult(): T;
				public close(): boolean;
				public isClosed(): boolean;
				public hasResult(): boolean;
				public isFinished(): boolean;
				public hasMultipleResults(): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module datasource {
			export class DataSources extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.datasource.DataSources>;
				public static waitForFinalResult(param0: com.facebook.datasource.DataSource<any>): any;
				public static getFailedDataSourceSupplier(param0: java.lang.Throwable): com.facebook.common.internal.Supplier<any>;
				public static immediateFailedDataSource(param0: java.lang.Throwable): com.facebook.datasource.DataSource<any>;
				public static immediateDataSource(param0: any): com.facebook.datasource.DataSource<any>;
			}
			export module DataSources {
				export class ValueHolder<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.datasource.DataSources.ValueHolder<any>>;
					public value: T;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module datasource {
			export class DataSubscriber<T>  extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.datasource.DataSubscriber<any>>;
				/**
				 * Constructs a new instance of the com.facebook.datasource.DataSubscriber<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					onNewResult(param0: com.facebook.datasource.DataSource<T>): void;
					onFailure(param0: com.facebook.datasource.DataSource<T>): void;
					onCancellation(param0: com.facebook.datasource.DataSource<T>): void;
					onProgressUpdate(param0: com.facebook.datasource.DataSource<T>): void;
				});
				public constructor();
				public onNewResult(param0: com.facebook.datasource.DataSource<T>): void;
				public onCancellation(param0: com.facebook.datasource.DataSource<T>): void;
				public onProgressUpdate(param0: com.facebook.datasource.DataSource<T>): void;
				public onFailure(param0: com.facebook.datasource.DataSource<T>): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module datasource {
			export class FirstAvailableDataSourceSupplier<T>  extends com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<any>> {
				public static class: java.lang.Class<com.facebook.datasource.FirstAvailableDataSourceSupplier<any>>;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public static create(param0: java.util.List<any>): com.facebook.datasource.FirstAvailableDataSourceSupplier<any>;
				public get(): any;
				public toString(): string;
				public get(): com.facebook.datasource.DataSource<any>;
			}
			export module FirstAvailableDataSourceSupplier {
				export class FirstAvailableDataSource extends com.facebook.datasource.AbstractDataSource<any> {
					public static class: java.lang.Class<com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource>;
					public isFinished(): boolean;
					public constructor(param0: com.facebook.datasource.FirstAvailableDataSourceSupplier<any>);
					public getProgress(): number;
					public hasMultipleResults(): boolean;
					public constructor();
					public hasResult(): boolean;
					public close(): boolean;
					public subscribe(param0: com.facebook.datasource.DataSubscriber<any>, param1: java.util.concurrent.Executor): void;
					public getFailureCause(): java.lang.Throwable;
					public getResult(): any;
					public hasFailed(): boolean;
					public isClosed(): boolean;
				}
				export module FirstAvailableDataSource {
					export class InternalDataSubscriber extends com.facebook.datasource.DataSubscriber<any> {
						public static class: java.lang.Class<com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber>;
						public onNewResult(param0: com.facebook.datasource.DataSource<any>): void;
						public onCancellation(param0: com.facebook.datasource.DataSource<any>): void;
						public onFailure(param0: com.facebook.datasource.DataSource<any>): void;
						public onProgressUpdate(param0: com.facebook.datasource.DataSource<any>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module datasource {
			export class IncreasingQualityDataSourceSupplier<T>  extends com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<any>> {
				public static class: java.lang.Class<com.facebook.datasource.IncreasingQualityDataSourceSupplier<any>>;
				public static create(param0: java.util.List<any>): com.facebook.datasource.IncreasingQualityDataSourceSupplier<any>;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public get(): any;
				public static create(param0: java.util.List<any>, param1: boolean): com.facebook.datasource.IncreasingQualityDataSourceSupplier<any>;
				public toString(): string;
				public get(): com.facebook.datasource.DataSource<any>;
			}
			export module IncreasingQualityDataSourceSupplier {
				export class IncreasingQualityDataSource extends com.facebook.datasource.AbstractDataSource<any> {
					public static class: java.lang.Class<com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource>;
					public isFinished(): boolean;
					public getProgress(): number;
					public hasMultipleResults(): boolean;
					public constructor();
					public hasResult(): boolean;
					public close(): boolean;
					public subscribe(param0: com.facebook.datasource.DataSubscriber<any>, param1: java.util.concurrent.Executor): void;
					public getFailureCause(): java.lang.Throwable;
					public getResult(): any;
					public hasFailed(): boolean;
					public constructor(param0: com.facebook.datasource.IncreasingQualityDataSourceSupplier<any>);
					public isClosed(): boolean;
				}
				export module IncreasingQualityDataSource {
					export class InternalDataSubscriber extends com.facebook.datasource.DataSubscriber<any> {
						public static class: java.lang.Class<com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource.InternalDataSubscriber>;
						public onNewResult(param0: com.facebook.datasource.DataSource<any>): void;
						public onCancellation(param0: com.facebook.datasource.DataSource<any>): void;
						public onFailure(param0: com.facebook.datasource.DataSource<any>): void;
						public constructor(param0: com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource, param1: number);
						public onProgressUpdate(param0: com.facebook.datasource.DataSource<any>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module datasource {
			export class RetainingDataSourceSupplier<T>  extends com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<any>> {
				public static class: java.lang.Class<com.facebook.datasource.RetainingDataSourceSupplier<any>>;
				public get(): any;
				public replaceSupplier(param0: com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<any>>): void;
				public get(): com.facebook.datasource.DataSource<any>;
				public constructor();
			}
			export module RetainingDataSourceSupplier {
				export class RetainingDataSource<T>  extends com.facebook.datasource.AbstractDataSource<any> {
					public static class: java.lang.Class<com.facebook.datasource.RetainingDataSourceSupplier.RetainingDataSource<any>>;
					public isFinished(): boolean;
					public getProgress(): number;
					public setSupplier(param0: com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<any>>): void;
					public hasMultipleResults(): boolean;
					public hasResult(): boolean;
					public close(): boolean;
					public subscribe(param0: com.facebook.datasource.DataSubscriber<any>, param1: java.util.concurrent.Executor): void;
					public getFailureCause(): java.lang.Throwable;
					public getResult(): any;
					public hasFailed(): boolean;
					public isClosed(): boolean;
				}
				export module RetainingDataSource {
					export class InternalDataSubscriber extends com.facebook.datasource.DataSubscriber<any> {
						public static class: java.lang.Class<com.facebook.datasource.RetainingDataSourceSupplier.RetainingDataSource.InternalDataSubscriber>;
						public onNewResult(param0: com.facebook.datasource.DataSource<any>): void;
						public onCancellation(param0: com.facebook.datasource.DataSource<any>): void;
						public onFailure(param0: com.facebook.datasource.DataSource<any>): void;
						public onProgressUpdate(param0: com.facebook.datasource.DataSource<any>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module datasource {
			export class SimpleDataSource<T>  extends com.facebook.datasource.AbstractDataSource<any> {
				public static class: java.lang.Class<com.facebook.datasource.SimpleDataSource<any>>;
				public getResult(): any;
				public static create(): com.facebook.datasource.SimpleDataSource<any>;
				public hasFailed(): boolean;
				public close(): boolean;
				public isClosed(): boolean;
				public isFinished(): boolean;
				public setProgress(param0: number): boolean;
				public hasMultipleResults(): boolean;
				public setResult(param0: any, param1: boolean): boolean;
				public getFailureCause(): java.lang.Throwable;
				public getProgress(): number;
				public setResult(param0: any): boolean;
				public hasResult(): boolean;
				public subscribe(param0: com.facebook.datasource.DataSubscriber<any>, param1: java.util.concurrent.Executor): void;
				public setFailure(param0: java.lang.Throwable): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawable {
			export module base {
				export class DrawableWithCaches extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawable.base.DrawableWithCaches>;
					/**
					 * Constructs a new instance of the com.facebook.drawable.base.DrawableWithCaches interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						dropCaches(): void;
					});
					public constructor();
					public dropCaches(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export class BuildConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.drawee.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export class BuildConfig extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.BuildConfig>;
						public static DEBUG: boolean;
						public static APPLICATION_ID: string;
						public static BUILD_TYPE: string;
						public static FLAVOR: string;
						public static VERSION_CODE: number;
						public static VERSION_NAME: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export class DefaultDrawableFactory extends java.lang.Object implements com.facebook.imagepipeline.drawable.DrawableFactory {
						public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.DefaultDrawableFactory>;
						public constructor(param0: globalAndroid.content.res.Resources, param1: com.facebook.imagepipeline.drawable.DrawableFactory);
						public supportsImageType(param0: com.facebook.imagepipeline.image.CloseableImage): boolean;
						public createDrawable(param0: com.facebook.imagepipeline.image.CloseableImage): globalAndroid.graphics.drawable.Drawable;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export class DraweeConfig extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.DraweeConfig>;
						public getDebugOverlayEnabledSupplier(): com.facebook.common.internal.Supplier<java.lang.Boolean>;
						public getCustomDrawableFactories(): com.facebook.common.internal.ImmutableList<com.facebook.imagepipeline.drawable.DrawableFactory>;
						public static newBuilder(): com.facebook.drawee.backends.pipeline.DraweeConfig.Builder;
						public getImagePerfDataListener(): com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener;
						public getPipelineDraweeControllerFactory(): com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory;
					}
					export module DraweeConfig {
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.DraweeConfig.Builder>;
							public constructor();
							public setDrawDebugOverlay(param0: boolean): com.facebook.drawee.backends.pipeline.DraweeConfig.Builder;
							public build(): com.facebook.drawee.backends.pipeline.DraweeConfig;
							public setDebugOverlayEnabledSupplier(param0: com.facebook.common.internal.Supplier<java.lang.Boolean>): com.facebook.drawee.backends.pipeline.DraweeConfig.Builder;
							public addCustomDrawableFactory(param0: com.facebook.imagepipeline.drawable.DrawableFactory): com.facebook.drawee.backends.pipeline.DraweeConfig.Builder;
							public setPipelineDraweeControllerFactory(param0: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory): com.facebook.drawee.backends.pipeline.DraweeConfig.Builder;
							public setImagePerfDataListener(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener): com.facebook.drawee.backends.pipeline.DraweeConfig.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export class Fresco extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.Fresco>;
						public static newDraweeControllerBuilder(): com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder;
						public static getImagePipelineFactory(): com.facebook.imagepipeline.core.ImagePipelineFactory;
						public static initialize(param0: globalAndroid.content.Context, param1: com.facebook.imagepipeline.core.ImagePipelineConfig): void;
						public static initialize(param0: globalAndroid.content.Context, param1: com.facebook.imagepipeline.core.ImagePipelineConfig, param2: com.facebook.drawee.backends.pipeline.DraweeConfig): void;
						public static shutDown(): void;
						public static initialize(param0: globalAndroid.content.Context): void;
						public static hasBeenInitialized(): boolean;
						public static getImagePipeline(): com.facebook.imagepipeline.core.ImagePipeline;
						public static getDraweeControllerBuilderSupplier(): com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export class PipelineDraweeController extends com.facebook.drawee.controller.AbstractDraweeController<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>,com.facebook.imagepipeline.image.ImageInfo> {
						public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.PipelineDraweeController>;
						public getRequestListener(): com.facebook.imagepipeline.listener.RequestListener;
						public getImageInfo(param0: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>): com.facebook.imagepipeline.image.ImageInfo;
						public constructor(param0: com.facebook.drawee.components.DeferredReleaser, param1: java.util.concurrent.Executor, param2: string, param3: any);
						public setCustomDrawableFactories(param0: com.facebook.common.internal.ImmutableList<com.facebook.imagepipeline.drawable.DrawableFactory>): void;
						public createDrawable(param0: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>): globalAndroid.graphics.drawable.Drawable;
						public releaseImage(param0: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>): void;
						public updateDebugOverlay(param0: com.facebook.imagepipeline.image.CloseableImage, param1: com.facebook.drawee.debug.DebugControllerOverlayDrawable): void;
						public onViewportVisibilityHint(param0: boolean): void;
						public releaseImage(param0: any): void;
						public initialize(param0: com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>>, param1: string, param2: com.facebook.cache.common.CacheKey, param3: any, param4: com.facebook.common.internal.ImmutableList<com.facebook.imagepipeline.drawable.DrawableFactory>, param5: com.facebook.drawee.backends.pipeline.info.ImageOriginListener): void;
						public getDataSourceSupplier(): com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>>;
						public releaseDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public getCachedImage(): any;
						public getDataSource(): com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>;
						public onClick(): boolean;
						public setDrawDebugOverlay(param0: boolean): void;
						public addRequestListener(param0: com.facebook.imagepipeline.listener.RequestListener): void;
						public removeRequestListener(param0: com.facebook.imagepipeline.listener.RequestListener): void;
						public getDataSource(): com.facebook.datasource.DataSource<any>;
						public initialize(param0: string, param1: any): void;
						public getHierarchy(): com.facebook.drawee.interfaces.DraweeHierarchy;
						public getContentDescription(): string;
						public getImageInfo(param0: any): any;
						public getImageHash(param0: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>): number;
						public onImageLoadedFromCacheImmediately(param0: string, param1: any): void;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public setHierarchy(param0: com.facebook.drawee.interfaces.DraweeHierarchy): void;
						public removeImageOriginListener(param0: com.facebook.drawee.backends.pipeline.info.ImageOriginListener): void;
						public onImageLoadedFromCacheImmediately(param0: string, param1: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>): void;
						public clearImageOriginListeners(): void;
						public addImageOriginListener(param0: com.facebook.drawee.backends.pipeline.info.ImageOriginListener): void;
						public release(): void;
						public getCacheKey(): com.facebook.cache.common.CacheKey;
						public toString(): string;
						public getAnimatable(): globalAndroid.graphics.drawable.Animatable;
						public getCachedImage(): com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>;
						public getImageHash(param0: any): number;
						public onAttach(): void;
						public initializePerformanceMonitoring(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener): void;
						public constructor(param0: globalAndroid.content.res.Resources, param1: com.facebook.drawee.components.DeferredReleaser, param2: com.facebook.imagepipeline.drawable.DrawableFactory, param3: java.util.concurrent.Executor, param4: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param5: com.facebook.common.internal.ImmutableList<com.facebook.imagepipeline.drawable.DrawableFactory>);
						public getResources(): globalAndroid.content.res.Resources;
						public setContentDescription(param0: string): void;
						public createDrawable(param0: any): globalAndroid.graphics.drawable.Drawable;
						public isSameImageRequest(param0: com.facebook.drawee.interfaces.DraweeController): boolean;
						public onDetach(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export class PipelineDraweeControllerBuilder extends com.facebook.drawee.controller.AbstractDraweeControllerBuilder<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder,com.facebook.imagepipeline.request.ImageRequest,com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>,com.facebook.imagepipeline.image.ImageInfo> {
						public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder>;
						public setPerfDataListener(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener): com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder;
						public setCustomDrawableFactory(param0: com.facebook.imagepipeline.drawable.DrawableFactory): com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder;
						public getRequestListener(param0: com.facebook.drawee.interfaces.DraweeController): com.facebook.imagepipeline.listener.RequestListener;
						public setCallerContext(param0: any): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
						public setCustomDrawableFactories(param0: native.Array<com.facebook.imagepipeline.drawable.DrawableFactory>): com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder;
						public setUri(param0: globalAndroid.net.Uri): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
						public setUri(param0: string): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
						public obtainController(): com.facebook.drawee.backends.pipeline.PipelineDraweeController;
						public getDataSourceForRequest(param0: com.facebook.drawee.interfaces.DraweeController, param1: string, param2: any, param3: any, param4: com.facebook.drawee.controller.AbstractDraweeControllerBuilder.CacheLevel): com.facebook.datasource.DataSource<any>;
						public build(): com.facebook.drawee.interfaces.DraweeController;
						public constructor(param0: globalAndroid.content.Context, param1: java.util.Set<com.facebook.drawee.controller.ControllerListener<any>>);
						public build(): com.facebook.drawee.controller.AbstractDraweeController<any,any>;
						public static convertCacheLevelToRequestLevel(param0: com.facebook.drawee.controller.AbstractDraweeControllerBuilder.CacheLevel): com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
						public setCallerContext(param0: any): any;
						public setImageOriginListener(param0: com.facebook.drawee.backends.pipeline.info.ImageOriginListener): com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder;
						public setCustomDrawableFactories(param0: com.facebook.common.internal.ImmutableList<com.facebook.imagepipeline.drawable.DrawableFactory>): com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder;
						public setUri(param0: globalAndroid.net.Uri): com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder;
						public constructor(param0: globalAndroid.content.Context, param1: com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory, param2: com.facebook.imagepipeline.core.ImagePipeline, param3: java.util.Set<com.facebook.drawee.controller.ControllerListener<any>>);
						public obtainController(): com.facebook.drawee.controller.AbstractDraweeController<any,any>;
						public setOldController(param0: com.facebook.drawee.interfaces.DraweeController): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
						public setOldController(param0: com.facebook.drawee.interfaces.DraweeController): any;
						public setUri(param0: string): com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder;
						public getDataSourceForRequest(param0: com.facebook.drawee.interfaces.DraweeController, param1: string, param2: com.facebook.imagepipeline.request.ImageRequest, param3: any, param4: com.facebook.drawee.controller.AbstractDraweeControllerBuilder.CacheLevel): com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export class PipelineDraweeControllerBuilderSupplier extends com.facebook.common.internal.Supplier<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder> {
						public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier>;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: com.facebook.drawee.backends.pipeline.DraweeConfig);
						public constructor(param0: globalAndroid.content.Context, param1: com.facebook.imagepipeline.core.ImagePipelineFactory, param2: java.util.Set<com.facebook.drawee.controller.ControllerListener<any>>, param3: com.facebook.drawee.backends.pipeline.DraweeConfig);
						public get(): com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder;
						public constructor(param0: globalAndroid.content.Context, param1: com.facebook.imagepipeline.core.ImagePipelineFactory, param2: com.facebook.drawee.backends.pipeline.DraweeConfig);
						public get(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export class PipelineDraweeControllerFactory extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory>;
						public constructor();
						public internalCreateController(param0: globalAndroid.content.res.Resources, param1: com.facebook.drawee.components.DeferredReleaser, param2: com.facebook.imagepipeline.drawable.DrawableFactory, param3: java.util.concurrent.Executor, param4: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param5: com.facebook.common.internal.ImmutableList<com.facebook.imagepipeline.drawable.DrawableFactory>): com.facebook.drawee.backends.pipeline.PipelineDraweeController;
						public newController(): com.facebook.drawee.backends.pipeline.PipelineDraweeController;
						public init(param0: globalAndroid.content.res.Resources, param1: com.facebook.drawee.components.DeferredReleaser, param2: com.facebook.imagepipeline.drawable.DrawableFactory, param3: java.util.concurrent.Executor, param4: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param5: com.facebook.common.internal.ImmutableList<com.facebook.imagepipeline.drawable.DrawableFactory>, param6: com.facebook.common.internal.Supplier<java.lang.Boolean>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module debug {
						export class DebugOverlayImageOriginListener extends java.lang.Object implements com.facebook.drawee.backends.pipeline.info.ImageOriginListener {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener>;
							public constructor();
							public getImageOrigin(): string;
							public onImageLoaded(param0: string, param1: number, param2: boolean, param3: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ForwardingImageOriginListener extends java.lang.Object implements com.facebook.drawee.backends.pipeline.info.ImageOriginListener {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener>;
							public removeImageOriginListener(param0: com.facebook.drawee.backends.pipeline.info.ImageOriginListener): void;
							public onImageLoaded(param0: string, param1: number, param2: boolean, param3: string): void;
							public constructor(param0: native.Array<com.facebook.drawee.backends.pipeline.info.ImageOriginListener>);
							public addImageOriginListener(param0: com.facebook.drawee.backends.pipeline.info.ImageOriginListener): void;
							public constructor(param0: java.util.Set<com.facebook.drawee.backends.pipeline.info.ImageOriginListener>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ForwardingImagePerfDataListener extends java.lang.Object implements com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ForwardingImagePerfDataListener>;
							public constructor(param0: java.util.Collection<com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener>);
							public onImageLoadStatusUpdated(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData, param1: number): void;
							public onImageVisibilityUpdated(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData, param1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ImageLoadStatus extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ImageLoadStatus>;
							/**
							 * Constructs a new instance of the com.facebook.drawee.backends.pipeline.info.ImageLoadStatus interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(param0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public static INTERMEDIATE_AVAILABLE: number;
							public static UNKNOWN: number;
							public static REQUESTED: number;
							public static ERROR: number;
							public static SUCCESS: number;
							public static ORIGIN_AVAILABLE: number;
							public static CANCELED: number;
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ImageOrigin extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ImageOrigin>;
							/**
							 * Constructs a new instance of the com.facebook.drawee.backends.pipeline.info.ImageOrigin interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(param0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public static LOCAL: number;
							public static UNKNOWN: number;
							public static DISK: number;
							public static MEMORY_BITMAP: number;
							public static NETWORK: number;
							public static MEMORY_ENCODED: number;
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ImageOriginListener extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ImageOriginListener>;
							/**
							 * Constructs a new instance of the com.facebook.drawee.backends.pipeline.info.ImageOriginListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onImageLoaded(param0: string, param1: number, param2: boolean, param3: string): void;
							});
							public constructor();
							public onImageLoaded(param0: string, param1: number, param2: boolean, param3: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ImageOriginRequestListener extends com.facebook.imagepipeline.listener.BaseRequestListener {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener>;
							public constructor();
							public onRequestStart(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: string, param3: boolean): void;
							public onUltimateProducerReached(param0: string, param1: string, param2: boolean): void;
							public constructor(param0: string, param1: com.facebook.drawee.backends.pipeline.info.ImageOriginListener);
							public onRequestSuccess(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: boolean): void;
							public onRequestCancellation(param0: string): void;
							public init(param0: string): void;
							public onRequestFailure(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: java.lang.Throwable, param3: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ImageOriginUtils extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ImageOriginUtils>;
							public static toString(param0: number): string;
							public toString(): string;
							public static mapProducerNameToImageOrigin(param0: string): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ImagePerfData extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ImagePerfData>;
							public static UNSET: number;
							public getImageRequest(): com.facebook.imagepipeline.request.ImageRequest;
							public getCallerContext(): any;
							public isPrefetch(): boolean;
							public getOnScreenHeightPx(): number;
							public getImageOrigin(): number;
							public getImageRequestStartTimeMs(): number;
							public getOnScreenWidthPx(): number;
							public constructor(param0: string, param1: string, param2: com.facebook.imagepipeline.request.ImageRequest, param3: any, param4: com.facebook.imagepipeline.image.ImageInfo, param5: number, param6: number, param7: number, param8: number, param9: number, param10: number, param11: number, param12: number, param13: string, param14: boolean, param15: number, param16: number, param17: number, param18: number, param19: number, param20: string);
							public getInvisibilityEventTimeMs(): number;
							public getVisibilityState(): number;
							public getControllerFinalImageSetTimeMs(): number;
							public getControllerFailureTimeMs(): number;
							public getImageRequestEndTimeMs(): number;
							public getRequestId(): string;
							public getFinalImageLoadTimeMs(): number;
							public getImageInfo(): com.facebook.imagepipeline.image.ImageInfo;
							public getControllerIntermediateImageSetTimeMs(): number;
							public getUltimateProducerName(): string;
							public getVisibilityEventTimeMs(): number;
							public createDebugString(): string;
							public getControllerSubmitTimeMs(): number;
							public getComponentTag(): string;
							public getControllerId(): string;
							public getIntermediateImageLoadTimeMs(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ImagePerfDataListener extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener>;
							/**
							 * Constructs a new instance of the com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onImageLoadStatusUpdated(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData, param1: number): void;
								onImageVisibilityUpdated(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData, param1: number): void;
							});
							public constructor();
							public onImageLoadStatusUpdated(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData, param1: number): void;
							public onImageVisibilityUpdated(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData, param1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ImagePerfMonitor extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor>;
							public notifyListenersOfVisibilityStateUpdate(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfState, param1: number): void;
							public notifyStatusUpdated(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfState, param1: number): void;
							public removeImagePerfDataListener(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener): void;
							public setEnabled(param0: boolean): void;
							public addViewportData(): void;
							public constructor(param0: com.facebook.common.time.MonotonicClock, param1: com.facebook.drawee.backends.pipeline.PipelineDraweeController);
							public clearImagePerfDataListeners(): void;
							public addImagePerfDataListener(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener): void;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ImagePerfState extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ImagePerfState>;
							public getImageLoadStatus(): number;
							public setComponentTag(param0: string): void;
							public reset(): void;
							public setControllerFinalImageSetTimeMs(param0: number): void;
							public setInvisibilityEventTimeMs(param0: number): void;
							public setControllerFailureTimeMs(param0: number): void;
							public setCallerContext(param0: any): void;
							public snapshot(): com.facebook.drawee.backends.pipeline.info.ImagePerfData;
							public setPrefetch(param0: boolean): void;
							public setImageInfo(param0: com.facebook.imagepipeline.image.ImageInfo): void;
							public constructor();
							public setImageOrigin(param0: number): void;
							public setOnScreenWidth(param0: number): void;
							public setVisible(param0: boolean): void;
							public setImageRequest(param0: com.facebook.imagepipeline.request.ImageRequest): void;
							public setControllerCancelTimeMs(param0: number): void;
							public setImageRequestStartTimeMs(param0: number): void;
							public setImageRequestEndTimeMs(param0: number): void;
							public setUltimateProducerName(param0: string): void;
							public setImageLoadStatus(param0: number): void;
							public setControllerId(param0: string): void;
							public setControllerSubmitTimeMs(param0: number): void;
							public setControllerIntermediateImageSetTimeMs(param0: number): void;
							public setRequestId(param0: string): void;
							public setOnScreenHeight(param0: number): void;
							public setVisibilityEventTimeMs(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class ImagePerfUtils extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.ImagePerfUtils>;
							public static toString(param0: number): string;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export class VisibilityState extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.VisibilityState>;
							/**
							 * Constructs a new instance of the com.facebook.drawee.backends.pipeline.info.VisibilityState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(param0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public static UNKNOWN: number;
							public static VISIBLE: number;
							public static INVISIBLE: number;
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export module internal {
							export class ImagePerfControllerListener extends com.facebook.drawee.controller.BaseControllerListener<com.facebook.imagepipeline.image.ImageInfo> {
								public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener>;
								public onRelease(param0: string): void;
								public onSubmit(param0: string, param1: any): void;
								public onFinalImageSet(param0: string, param1: any, param2: globalAndroid.graphics.drawable.Animatable): void;
								public onFinalImageSet(param0: string, param1: com.facebook.imagepipeline.image.ImageInfo, param2: globalAndroid.graphics.drawable.Animatable): void;
								public onFailure(param0: string, param1: java.lang.Throwable): void;
								public constructor(param0: com.facebook.common.time.MonotonicClock, param1: com.facebook.drawee.backends.pipeline.info.ImagePerfState, param2: com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor);
								public reportViewVisible(param0: number): void;
								public constructor();
								public onIntermediateImageSet(param0: string, param1: com.facebook.imagepipeline.image.ImageInfo): void;
								public onIntermediateImageSet(param0: string, param1: any): void;
								public onIntermediateImageFailed(param0: string, param1: java.lang.Throwable): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export module internal {
							export class ImagePerfImageOriginListener extends java.lang.Object implements com.facebook.drawee.backends.pipeline.info.ImageOriginListener {
								public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.internal.ImagePerfImageOriginListener>;
								public constructor(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfState, param1: com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor);
								public onImageLoaded(param0: string, param1: number, param2: boolean, param3: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module backends {
				export module pipeline {
					export module info {
						export module internal {
							export class ImagePerfRequestListener extends com.facebook.imagepipeline.listener.BaseRequestListener {
								public static class: java.lang.Class<com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener>;
								public onRequestFailure(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: java.lang.Throwable, param3: boolean): void;
								public onRequestCancellation(param0: string): void;
								public constructor();
								public onRequestStart(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: string, param3: boolean): void;
								public onRequestSuccess(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: boolean): void;
								public constructor(param0: com.facebook.common.time.MonotonicClock, param1: com.facebook.drawee.backends.pipeline.info.ImagePerfState);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module components {
				export class DeferredReleaser extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.components.DeferredReleaser>;
					public constructor();
					public scheduleDeferredRelease(param0: com.facebook.drawee.components.DeferredReleaser.Releasable): void;
					public static getInstance(): com.facebook.drawee.components.DeferredReleaser;
					public cancelDeferredRelease(param0: com.facebook.drawee.components.DeferredReleaser.Releasable): void;
				}
				export module DeferredReleaser {
					export class Releasable extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.drawee.components.DeferredReleaser.Releasable>;
						/**
						 * Constructs a new instance of the com.facebook.drawee.components.DeferredReleaser$Releasable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							release(): void;
						});
						public constructor();
						public release(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module components {
				export class DraweeEventTracker extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.components.DraweeEventTracker>;
					public toString(): string;
					public static newInstance(): com.facebook.drawee.components.DraweeEventTracker;
					public static disable(): void;
					public recordEvent(param0: com.facebook.drawee.components.DraweeEventTracker.Event): void;
				}
				export module DraweeEventTracker {
					export class Event {
						public static class: java.lang.Class<com.facebook.drawee.components.DraweeEventTracker.Event>;
						public static ON_SET_HIERARCHY: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_CLEAR_HIERARCHY: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_SET_CONTROLLER: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_CLEAR_OLD_CONTROLLER: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_CLEAR_CONTROLLER: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_INIT_CONTROLLER: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_ATTACH_CONTROLLER: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_DETACH_CONTROLLER: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_RELEASE_CONTROLLER: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_DATASOURCE_SUBMIT: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_DATASOURCE_RESULT: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_DATASOURCE_RESULT_INT: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_DATASOURCE_FAILURE: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_DATASOURCE_FAILURE_INT: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_HOLDER_ATTACH: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_HOLDER_DETACH: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_DRAWABLE_SHOW: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_DRAWABLE_HIDE: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_ACTIVITY_START: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_ACTIVITY_STOP: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_RUN_CLEAR_CONTROLLER: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_SCHEDULE_CLEAR_CONTROLLER: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_SAME_CONTROLLER_SKIPPED: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static ON_SUBMIT_CACHE_HIT: com.facebook.drawee.components.DraweeEventTracker.Event;
						public static values(): native.Array<com.facebook.drawee.components.DraweeEventTracker.Event>;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static valueOf(param0: string): com.facebook.drawee.components.DraweeEventTracker.Event;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module components {
				export class RetryManager extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.components.RetryManager>;
					public reset(): void;
					public static newInstance(): com.facebook.drawee.components.RetryManager;
					public constructor();
					public setMaxTapToRetryAttemps(param0: number): void;
					public shouldRetryOnTap(): boolean;
					public init(): void;
					public setTapToRetryEnabled(param0: boolean): void;
					public notifyTapToRetry(): void;
					public isTapToRetryEnabled(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module controller {
				export abstract class AbstractDraweeController<T, INFO>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.controller.AbstractDraweeController<any,any>>;
					public mControllerListener: com.facebook.drawee.controller.ControllerListener<INFO>;
					public setHierarchy(param0: com.facebook.drawee.interfaces.DraweeHierarchy): void;
					public setControllerViewportVisibilityListener(param0: com.facebook.drawee.controller.ControllerViewportVisibilityListener): void;
					public getId(): string;
					public setContentDescription(param0: string): void;
					public getControllerListener(): com.facebook.drawee.controller.ControllerListener<INFO>;
					public setControllerOverlay(param0: globalAndroid.graphics.drawable.Drawable): void;
					public onAttach(): void;
					public getContentDescription(): string;
					public getHierarchy(): com.facebook.drawee.interfaces.DraweeHierarchy;
					public onImageLoadedFromCacheImmediately(param0: string, param1: T): void;
					public constructor(param0: com.facebook.drawee.components.DeferredReleaser, param1: java.util.concurrent.Executor, param2: string, param3: any);
					public toString(): string;
					public onClick(): boolean;
					public getDataSource(): com.facebook.datasource.DataSource<T>;
					public getControllerOverlay(): globalAndroid.graphics.drawable.Drawable;
					public onDetach(): void;
					public onViewportVisibilityHint(param0: boolean): void;
					public removeControllerListener(param0: com.facebook.drawee.controller.ControllerListener<any>): void;
					public shouldHandleGesture(): boolean;
					public setRetainImageOnFailure(param0: boolean): void;
					public release(): void;
					public initialize(param0: string, param1: any): void;
					public getImageHash(param0: T): number;
					public addControllerListener(param0: com.facebook.drawee.controller.ControllerListener<any>): void;
					public releaseImage(param0: T): void;
					public getGestureDetector(): com.facebook.drawee.gestures.GestureDetector;
					public submitRequest(): void;
					public releaseDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setGestureDetector(param0: com.facebook.drawee.gestures.GestureDetector): void;
					public getAnimatable(): globalAndroid.graphics.drawable.Animatable;
					public createDrawable(param0: T): globalAndroid.graphics.drawable.Drawable;
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public isSameImageRequest(param0: com.facebook.drawee.interfaces.DraweeController): boolean;
					public getCallerContext(): any;
					public getCachedImage(): T;
					public getImageInfo(param0: T): INFO;
					public getRetryManager(): com.facebook.drawee.components.RetryManager;
					public getImageClass(param0: T): string;
				}
				export module AbstractDraweeController {
					export class InternalForwardingListener<INFO>  extends com.facebook.drawee.controller.ForwardingControllerListener<any> {
						public static class: java.lang.Class<com.facebook.drawee.controller.AbstractDraweeController.InternalForwardingListener<any>>;
						public onFinalImageSet(param0: string, param1: any, param2: globalAndroid.graphics.drawable.Animatable): void;
						public onRelease(param0: string): void;
						public onIntermediateImageSet(param0: string, param1: any): void;
						public onIntermediateImageFailed(param0: string, param1: java.lang.Throwable): void;
						public onFailure(param0: string, param1: java.lang.Throwable): void;
						public static createInternal(param0: com.facebook.drawee.controller.ControllerListener<any>, param1: com.facebook.drawee.controller.ControllerListener<any>): com.facebook.drawee.controller.AbstractDraweeController.InternalForwardingListener<any>;
						public onSubmit(param0: string, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module controller {
				export abstract class AbstractDraweeControllerBuilder<BUILDER, REQUEST, IMAGE, INFO>  extends com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder {
					public static class: java.lang.Class<com.facebook.drawee.controller.AbstractDraweeControllerBuilder<any,any,any,any>>;
					public getDataSourceSupplierForRequest(param0: com.facebook.drawee.interfaces.DraweeController, param1: string, param2: any): com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<any>>;
					public getRetainImageOnFailure(): boolean;
					public setAutoPlayAnimations(param0: boolean): any;
					public getFirstAvailableImageRequests(): native.Array<any>;
					public setDataSourceSupplier(param0: com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<any>>): any;
					public setOldController(param0: com.facebook.drawee.interfaces.DraweeController): any;
					public getAutoPlayAnimations(): boolean;
					public validate(): void;
					public maybeAttachListeners(param0: com.facebook.drawee.controller.AbstractDraweeController<any,any>): void;
					public maybeBuildAndSetRetryManager(param0: com.facebook.drawee.controller.AbstractDraweeController<any,any>): void;
					public getContentDescription(): string;
					public getImageRequest(): any;
					public setControllerViewportVisibilityListener(param0: com.facebook.drawee.controller.ControllerViewportVisibilityListener): any;
					public build(): com.facebook.drawee.controller.AbstractDraweeController<any,any>;
					public getControllerListener(): com.facebook.drawee.controller.ControllerListener<any>;
					public setFirstAvailableImageRequests(param0: native.Array<any>, param1: boolean): any;
					public getContext(): globalAndroid.content.Context;
					public setImageRequest(param0: any): any;
					public reset(): any;
					public maybeBuildAndSetGestureDetector(param0: com.facebook.drawee.controller.AbstractDraweeController<any,any>): void;
					public setOldController(param0: com.facebook.drawee.interfaces.DraweeController): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
					public obtainController(): com.facebook.drawee.controller.AbstractDraweeController<any,any>;
					public setUri(param0: string): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
					public getDataSourceSupplierForRequest(param0: com.facebook.drawee.interfaces.DraweeController, param1: string, param2: any, param3: com.facebook.drawee.controller.AbstractDraweeControllerBuilder.CacheLevel): com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<any>>;
					public setCallerContext(param0: any): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
					public build(): com.facebook.drawee.interfaces.DraweeController;
					public setLowResImageRequest(param0: any): any;
					public setCallerContext(param0: any): any;
					public setTapToRetryEnabled(param0: boolean): any;
					public getOldController(): com.facebook.drawee.interfaces.DraweeController;
					public getLowResImageRequest(): any;
					public setFirstAvailableImageRequests(param0: native.Array<any>): any;
					public setRetainImageOnFailure(param0: boolean): any;
					public getFirstAvailableDataSourceSupplier(param0: com.facebook.drawee.interfaces.DraweeController, param1: string, param2: native.Array<any>, param3: boolean): com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<any>>;
					public getThis(): any;
					public setControllerListener(param0: com.facebook.drawee.controller.ControllerListener<any>): any;
					public setContentDescription(param0: string): any;
					public buildController(): com.facebook.drawee.controller.AbstractDraweeController<any,any>;
					public getControllerViewportVisibilityListener(): com.facebook.drawee.controller.ControllerViewportVisibilityListener;
					public getDataSourceForRequest(param0: com.facebook.drawee.interfaces.DraweeController, param1: string, param2: any, param3: any, param4: com.facebook.drawee.controller.AbstractDraweeControllerBuilder.CacheLevel): com.facebook.datasource.DataSource<any>;
					public static generateUniqueControllerId(): string;
					public getCallerContext(): any;
					public getDataSourceSupplier(): com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<any>>;
					public obtainDataSourceSupplier(param0: com.facebook.drawee.interfaces.DraweeController, param1: string): com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<any>>;
					public constructor(param0: globalAndroid.content.Context, param1: java.util.Set<com.facebook.drawee.controller.ControllerListener<any>>);
					public getTapToRetryEnabled(): boolean;
					public setUri(param0: globalAndroid.net.Uri): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
				}
				export module AbstractDraweeControllerBuilder {
					export class CacheLevel {
						public static class: java.lang.Class<com.facebook.drawee.controller.AbstractDraweeControllerBuilder.CacheLevel>;
						public static FULL_FETCH: com.facebook.drawee.controller.AbstractDraweeControllerBuilder.CacheLevel;
						public static DISK_CACHE: com.facebook.drawee.controller.AbstractDraweeControllerBuilder.CacheLevel;
						public static BITMAP_MEMORY_CACHE: com.facebook.drawee.controller.AbstractDraweeControllerBuilder.CacheLevel;
						public static valueOf(param0: string): com.facebook.drawee.controller.AbstractDraweeControllerBuilder.CacheLevel;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static values(): native.Array<com.facebook.drawee.controller.AbstractDraweeControllerBuilder.CacheLevel>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module controller {
				export class BaseControllerListener<INFO>  extends com.facebook.drawee.controller.ControllerListener<any> {
					public static class: java.lang.Class<com.facebook.drawee.controller.BaseControllerListener<any>>;
					public onFinalImageSet(param0: string, param1: any, param2: globalAndroid.graphics.drawable.Animatable): void;
					public onIntermediateImageSet(param0: string, param1: any): void;
					public onRelease(param0: string): void;
					public constructor();
					public onIntermediateImageFailed(param0: string, param1: java.lang.Throwable): void;
					public onFailure(param0: string, param1: java.lang.Throwable): void;
					public static getNoOpListener(): com.facebook.drawee.controller.ControllerListener<any>;
					public onSubmit(param0: string, param1: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module controller {
				export class ControllerListener<INFO>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.controller.ControllerListener<any>>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.controller.ControllerListener<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onSubmit(param0: string, param1: any): void;
						onFinalImageSet(param0: string, param1: INFO, param2: globalAndroid.graphics.drawable.Animatable): void;
						onIntermediateImageSet(param0: string, param1: INFO): void;
						onIntermediateImageFailed(param0: string, param1: java.lang.Throwable): void;
						onFailure(param0: string, param1: java.lang.Throwable): void;
						onRelease(param0: string): void;
					});
					public constructor();
					public onRelease(param0: string): void;
					public onIntermediateImageFailed(param0: string, param1: java.lang.Throwable): void;
					public onFailure(param0: string, param1: java.lang.Throwable): void;
					public onFinalImageSet(param0: string, param1: INFO, param2: globalAndroid.graphics.drawable.Animatable): void;
					public onIntermediateImageSet(param0: string, param1: INFO): void;
					public onSubmit(param0: string, param1: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module controller {
				export class ControllerViewportVisibilityListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.controller.ControllerViewportVisibilityListener>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.controller.ControllerViewportVisibilityListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onDraweeViewportEntry(param0: string): void;
						onDraweeViewportExit(param0: string): void;
					});
					public constructor();
					public onDraweeViewportEntry(param0: string): void;
					public onDraweeViewportExit(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module controller {
				export class ForwardingControllerListener<INFO>  extends com.facebook.drawee.controller.ControllerListener<any> {
					public static class: java.lang.Class<com.facebook.drawee.controller.ForwardingControllerListener<any>>;
					public clearListeners(): void;
					public onFinalImageSet(param0: string, param1: any, param2: globalAndroid.graphics.drawable.Animatable): void;
					public onIntermediateImageSet(param0: string, param1: any): void;
					public onRelease(param0: string): void;
					public static create(): com.facebook.drawee.controller.ForwardingControllerListener<any>;
					public addListener(param0: com.facebook.drawee.controller.ControllerListener<any>): void;
					public onFailure(param0: string, param1: java.lang.Throwable): void;
					public static of(param0: com.facebook.drawee.controller.ControllerListener<any>, param1: com.facebook.drawee.controller.ControllerListener<any>): com.facebook.drawee.controller.ForwardingControllerListener<any>;
					public onSubmit(param0: string, param1: any): void;
					public constructor();
					public onIntermediateImageFailed(param0: string, param1: java.lang.Throwable): void;
					public removeListener(param0: com.facebook.drawee.controller.ControllerListener<any>): void;
					public static of(param0: com.facebook.drawee.controller.ControllerListener<any>): com.facebook.drawee.controller.ForwardingControllerListener<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module debug {
				export class DebugControllerOverlayDrawable extends globalAndroid.graphics.drawable.Drawable implements com.facebook.drawee.debug.listener.ImageLoadingTimeListener {
					public static class: java.lang.Class<com.facebook.drawee.debug.DebugControllerOverlayDrawable>;
					public addAdditionalData(param0: string, param1: string): void;
					public setImageSize(param0: number): void;
					public reset(): void;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public onFinalImageSet(param0: number): void;
					public setImageId(param0: string): void;
					public setAlpha(param0: number): void;
					public setImageFormat(param0: string): void;
					public setFinalImageTimeMs(param0: number): void;
					public setTextGravity(param0: number): void;
					public setOrigin(param0: string): void;
					public setDimensions(param0: number, param1: number): void;
					public constructor();
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setControllerId(param0: string): void;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public setAnimationInfo(param0: number, param1: number): void;
					public setScaleType(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
					public getOpacity(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module debug {
				export module listener {
					export class ImageLoadingTimeControllerListener extends com.facebook.drawee.controller.BaseControllerListener<any> {
						public static class: java.lang.Class<com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener>;
						public onFinalImageSet(param0: string, param1: any, param2: globalAndroid.graphics.drawable.Animatable): void;
						public onRelease(param0: string): void;
						public constructor();
						public constructor(param0: com.facebook.drawee.debug.listener.ImageLoadingTimeListener);
						public onIntermediateImageSet(param0: string, param1: any): void;
						public onIntermediateImageFailed(param0: string, param1: java.lang.Throwable): void;
						public onFailure(param0: string, param1: java.lang.Throwable): void;
						public onSubmit(param0: string, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module debug {
				export module listener {
					export class ImageLoadingTimeListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.drawee.debug.listener.ImageLoadingTimeListener>;
						/**
						 * Constructs a new instance of the com.facebook.drawee.debug.listener.ImageLoadingTimeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onFinalImageSet(param0: number): void;
						});
						public constructor();
						public onFinalImageSet(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class ArrayDrawable extends globalAndroid.graphics.drawable.Drawable implements globalAndroid.graphics.drawable.Drawable.Callback, com.facebook.drawee.drawable.TransformCallback, com.facebook.drawee.drawable.TransformAwareDrawable {
					public static class: java.lang.Class<com.facebook.drawee.drawable.ArrayDrawable>;
					public getDrawable(param0: number): globalAndroid.graphics.drawable.Drawable;
					public getRootBounds(param0: globalAndroid.graphics.RectF): void;
					public setDither(param0: boolean): void;
					public onStateChange(param0: native.Array<number>): boolean;
					public isStateful(): boolean;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public onLevelChange(param0: number): boolean;
					public getIntrinsicWidth(): number;
					public setDrawable(param0: number, param1: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public constructor(param0: native.Array<globalAndroid.graphics.drawable.Drawable>);
					public setHotspot(param0: number, param1: number): void;
					public setFilterBitmap(param0: boolean): void;
					public constructor();
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					/** @deprecated */
					public setDither(param0: boolean): void;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
					public getOpacity(): number;
					public getDrawableParentForIndex(param0: number): com.facebook.drawee.drawable.DrawableParent;
					public getNumberOfLayers(): number;
					public getIntrinsicHeight(): number;
					public setAlpha(param0: number): void;
					public mutate(): globalAndroid.graphics.drawable.Drawable;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public setVisible(param0: boolean, param1: boolean): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public getTransform(param0: globalAndroid.graphics.Matrix): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class AutoRotateDrawable extends com.facebook.drawee.drawable.ForwardingDrawable implements java.lang.Runnable, com.facebook.drawee.drawable.CloneableDrawable {
					public static class: java.lang.Class<com.facebook.drawee.drawable.AutoRotateDrawable>;
					public reset(): void;
					public getRootBounds(param0: globalAndroid.graphics.RectF): void;
					public cloneDrawable(): globalAndroid.graphics.drawable.Drawable;
					public run(): void;
					public cloneDrawable(): com.facebook.drawee.drawable.AutoRotateDrawable;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable);
					public setClockwise(param0: boolean): void;
					public getDrawable(): globalAndroid.graphics.drawable.Drawable;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public setDrawable(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public constructor();
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable, param1: number);
					public constructor(param0: globalAndroid.graphics.drawable.Drawable, param1: number, param2: boolean);
					public getTransform(param0: globalAndroid.graphics.Matrix): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class CloneableDrawable extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.drawable.CloneableDrawable>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.drawable.CloneableDrawable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						cloneDrawable(): globalAndroid.graphics.drawable.Drawable;
					});
					public constructor();
					public cloneDrawable(): globalAndroid.graphics.drawable.Drawable;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class DrawableParent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.drawable.DrawableParent>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.drawable.DrawableParent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setDrawable(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
						getDrawable(): globalAndroid.graphics.drawable.Drawable;
					});
					public constructor();
					public setDrawable(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public getDrawable(): globalAndroid.graphics.drawable.Drawable;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class DrawableProperties extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.drawable.DrawableProperties>;
					public setDither(param0: boolean): void;
					public setFilterBitmap(param0: boolean): void;
					public constructor();
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public setAlpha(param0: number): void;
					public applyTo(param0: globalAndroid.graphics.drawable.Drawable): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class DrawableUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.drawable.DrawableUtils>;
					public constructor();
					public static cloneDrawable(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public static copyProperties(param0: globalAndroid.graphics.drawable.Drawable, param1: globalAndroid.graphics.drawable.Drawable): void;
					public static multiplyColorAlpha(param0: number, param1: number): number;
					public static setDrawableProperties(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.drawee.drawable.DrawableProperties): void;
					public static setCallbacks(param0: globalAndroid.graphics.drawable.Drawable, param1: globalAndroid.graphics.drawable.Drawable.Callback, param2: com.facebook.drawee.drawable.TransformCallback): void;
					public static getOpacityFromColor(param0: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class FadeDrawable extends com.facebook.drawee.drawable.ArrayDrawable {
					public static class: java.lang.Class<com.facebook.drawee.drawable.FadeDrawable>;
					public static TRANSITION_STARTING: number;
					public static TRANSITION_RUNNING: number;
					public static TRANSITION_NONE: number;
					public invalidateSelf(): void;
					public getRootBounds(param0: globalAndroid.graphics.RectF): void;
					public constructor(param0: native.Array<globalAndroid.graphics.drawable.Drawable>, param1: boolean);
					public beginBatchMode(): void;
					public setTransitionDuration(param0: number): void;
					public hideLayerImmediately(param0: number): void;
					public constructor(param0: native.Array<globalAndroid.graphics.drawable.Drawable>);
					public getCurrentTimeMs(): number;
					public getTransitionState(): number;
					public constructor();
					public getTransitionDuration(): number;
					public fadeInLayer(param0: number): void;
					public fadeOutLayer(param0: number): void;
					public finishTransitionImmediately(): void;
					public fadeUpToLayer(param0: number): void;
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
					public getAlpha(): number;
					public reset(): void;
					public fadeToLayer(param0: number): void;
					public isLayerOn(param0: number): boolean;
					public setAlpha(param0: number): void;
					public endBatchMode(): void;
					public fadeOutAllLayers(): void;
					public isDefaultLayerIsOn(): boolean;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public getTransform(param0: globalAndroid.graphics.Matrix): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public showLayerImmediately(param0: number): void;
					public fadeInAllLayers(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class ForwardingDrawable extends globalAndroid.graphics.drawable.Drawable implements globalAndroid.graphics.drawable.Drawable.Callback, com.facebook.drawee.drawable.TransformCallback, com.facebook.drawee.drawable.TransformAwareDrawable, com.facebook.drawee.drawable.DrawableParent {
					public static class: java.lang.Class<com.facebook.drawee.drawable.ForwardingDrawable>;
					public mTransformCallback: com.facebook.drawee.drawable.TransformCallback;
					public getRootBounds(param0: globalAndroid.graphics.RectF): void;
					public setDither(param0: boolean): void;
					public onStateChange(param0: native.Array<number>): boolean;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public isStateful(): boolean;
					public onLevelChange(param0: number): boolean;
					public getIntrinsicWidth(): number;
					public getDrawable(): globalAndroid.graphics.drawable.Drawable;
					public setHotspot(param0: number, param1: number): void;
					public setCurrent(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public setDrawable(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public setFilterBitmap(param0: boolean): void;
					public constructor();
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					/** @deprecated */
					public setDither(param0: boolean): void;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
					public getOpacity(): number;
					public getConstantState(): globalAndroid.graphics.drawable.Drawable.ConstantState;
					public getIntrinsicHeight(): number;
					public getCurrent(): globalAndroid.graphics.drawable.Drawable;
					public setAlpha(param0: number): void;
					public getParentTransform(param0: globalAndroid.graphics.Matrix): void;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable);
					public mutate(): globalAndroid.graphics.drawable.Drawable;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public setVisible(param0: boolean, param1: boolean): boolean;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setCurrentWithoutInvalidate(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public getTransform(param0: globalAndroid.graphics.Matrix): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public getTransformedBounds(param0: globalAndroid.graphics.RectF): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class MatrixDrawable extends com.facebook.drawee.drawable.ForwardingDrawable {
					public static class: java.lang.Class<com.facebook.drawee.drawable.MatrixDrawable>;
					public getRootBounds(param0: globalAndroid.graphics.RectF): void;
					public getMatrix(): globalAndroid.graphics.Matrix;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable, param1: globalAndroid.graphics.Matrix);
					public constructor(param0: globalAndroid.graphics.drawable.Drawable);
					public getDrawable(): globalAndroid.graphics.drawable.Drawable;
					public setCurrent(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public setDrawable(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public constructor();
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setMatrix(param0: globalAndroid.graphics.Matrix): void;
					public getTransform(param0: globalAndroid.graphics.Matrix): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class OrientedDrawable extends com.facebook.drawee.drawable.ForwardingDrawable {
					public static class: java.lang.Class<com.facebook.drawee.drawable.OrientedDrawable>;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable, param1: number, param2: number);
					public getRootBounds(param0: globalAndroid.graphics.RectF): void;
					public getIntrinsicHeight(): number;
					public getIntrinsicWidth(): number;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable);
					public getDrawable(): globalAndroid.graphics.drawable.Drawable;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public setDrawable(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public constructor();
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable, param1: number);
					public getTransform(param0: globalAndroid.graphics.Matrix): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class ProgressBarDrawable extends globalAndroid.graphics.drawable.Drawable implements com.facebook.drawee.drawable.CloneableDrawable {
					public static class: java.lang.Class<com.facebook.drawee.drawable.ProgressBarDrawable>;
					public getBarWidth(): number;
					public setHideWhenZero(param0: boolean): void;
					public getHideWhenZero(): boolean;
					public setColor(param0: number): void;
					public cloneDrawable(): globalAndroid.graphics.drawable.Drawable;
					public getColor(): number;
					public setIsVertical(param0: boolean): void;
					public getIsVertical(): boolean;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public onLevelChange(param0: number): boolean;
					public setBackgroundColor(param0: number): void;
					public setAlpha(param0: number): void;
					public getRadius(): number;
					public setBarWidth(param0: number): void;
					public constructor();
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					public setPadding(param0: number): void;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setRadius(param0: number): void;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public getBackgroundColor(): number;
					public getOpacity(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class Rounded extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.drawable.Rounded>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.drawable.Rounded interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setCircle(param0: boolean): void;
						isCircle(): boolean;
						setRadius(param0: number): void;
						setRadii(param0: native.Array<number>): void;
						getRadii(): native.Array<number>;
						setBorder(param0: number, param1: number): void;
						getBorderColor(): number;
						getBorderWidth(): number;
						setPadding(param0: number): void;
						getPadding(): number;
						setScaleDownInsideBorders(param0: boolean): void;
						getScaleDownInsideBorders(): boolean;
						setPaintFilterBitmap(param0: boolean): void;
						getPaintFilterBitmap(): boolean;
					});
					public constructor();
					public setScaleDownInsideBorders(param0: boolean): void;
					public setBorder(param0: number, param1: number): void;
					public getBorderColor(): number;
					public getRadii(): native.Array<number>;
					public setRadii(param0: native.Array<number>): void;
					public getBorderWidth(): number;
					public isCircle(): boolean;
					public getPadding(): number;
					public setPaintFilterBitmap(param0: boolean): void;
					public setCircle(param0: boolean): void;
					public setPadding(param0: number): void;
					public setRadius(param0: number): void;
					public getPaintFilterBitmap(): boolean;
					public getScaleDownInsideBorders(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class RoundedBitmapDrawable extends com.facebook.drawee.drawable.RoundedDrawable {
					public static class: java.lang.Class<com.facebook.drawee.drawable.RoundedBitmapDrawable>;
					public setScaleDownInsideBorders(param0: boolean): void;
					public setBorder(param0: number, param1: number): void;
					public getBorderColor(): number;
					public getRadii(): native.Array<number>;
					public constructor(param0: globalAndroid.content.res.Resources, param1: globalAndroid.graphics.Bitmap, param2: globalAndroid.graphics.Paint);
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public setRadii(param0: native.Array<number>): void;
					public setAlpha(param0: number): void;
					public static fromBitmapDrawable(param0: globalAndroid.content.res.Resources, param1: globalAndroid.graphics.drawable.BitmapDrawable): com.facebook.drawee.drawable.RoundedBitmapDrawable;
					public getBorderWidth(): number;
					public isCircle(): boolean;
					public getPadding(): number;
					public setPaintFilterBitmap(param0: boolean): void;
					public constructor();
					public setCircle(param0: boolean): void;
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setPadding(param0: number): void;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public setRadius(param0: number): void;
					public getPaintFilterBitmap(): boolean;
					public constructor(param0: globalAndroid.content.res.Resources, param1: globalAndroid.graphics.Bitmap);
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
					public getScaleDownInsideBorders(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class RoundedColorDrawable extends globalAndroid.graphics.drawable.Drawable implements com.facebook.drawee.drawable.Rounded {
					public static class: java.lang.Class<com.facebook.drawee.drawable.RoundedColorDrawable>;
					public getBorderColor(): number;
					public setRadii(param0: native.Array<number>): void;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public getBorderWidth(): number;
					public constructor();
					public setCircle(param0: boolean): void;
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public static fromColorDrawable(param0: globalAndroid.graphics.drawable.ColorDrawable): com.facebook.drawee.drawable.RoundedColorDrawable;
					public constructor(param0: number);
					public constructor(param0: number, param1: number);
					public getOpacity(): number;
					public setScaleDownInsideBorders(param0: boolean): void;
					public getAlpha(): number;
					public setBorder(param0: number, param1: number): void;
					public setColor(param0: number): void;
					public getColor(): number;
					public getRadii(): native.Array<number>;
					public setAlpha(param0: number): void;
					public constructor(param0: native.Array<number>, param1: number);
					public isCircle(): boolean;
					public getPadding(): number;
					public setPaintFilterBitmap(param0: boolean): void;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setPadding(param0: number): void;
					public setRadius(param0: number): void;
					public getPaintFilterBitmap(): boolean;
					public getScaleDownInsideBorders(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class RoundedCornersDrawable extends com.facebook.drawee.drawable.ForwardingDrawable implements com.facebook.drawee.drawable.Rounded {
					public static class: java.lang.Class<com.facebook.drawee.drawable.RoundedCornersDrawable>;
					public getRootBounds(param0: globalAndroid.graphics.RectF): void;
					public getBorderColor(): number;
					public setRadii(param0: native.Array<number>): void;
					public getDrawable(): globalAndroid.graphics.drawable.Drawable;
					public getBorderWidth(): number;
					public setDrawable(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public constructor();
					public setCircle(param0: boolean): void;
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					public setOverlayColor(param0: number): void;
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
					public setScaleDownInsideBorders(param0: boolean): void;
					public setBorder(param0: number, param1: number): void;
					public getRadii(): native.Array<number>;
					public getOverlayColor(): number;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable);
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public setType(param0: com.facebook.drawee.drawable.RoundedCornersDrawable.Type): void;
					public isCircle(): boolean;
					public getPadding(): number;
					public setPaintFilterBitmap(param0: boolean): void;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public setPadding(param0: number): void;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setRadius(param0: number): void;
					public getPaintFilterBitmap(): boolean;
					public getTransform(param0: globalAndroid.graphics.Matrix): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public getScaleDownInsideBorders(): boolean;
				}
				export module RoundedCornersDrawable {
					export class Type {
						public static class: java.lang.Class<com.facebook.drawee.drawable.RoundedCornersDrawable.Type>;
						public static OVERLAY_COLOR: com.facebook.drawee.drawable.RoundedCornersDrawable.Type;
						public static CLIPPING: com.facebook.drawee.drawable.RoundedCornersDrawable.Type;
						public static valueOf(param0: string): com.facebook.drawee.drawable.RoundedCornersDrawable.Type;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static values(): native.Array<com.facebook.drawee.drawable.RoundedCornersDrawable.Type>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export abstract class RoundedDrawable extends globalAndroid.graphics.drawable.Drawable implements com.facebook.drawee.drawable.Rounded, com.facebook.drawee.drawable.TransformAwareDrawable {
					public static class: java.lang.Class<com.facebook.drawee.drawable.RoundedDrawable>;
					public mIsCircle: boolean;
					public mRadiiNonZero: boolean;
					public mBorderWidth: number;
					public mPath: globalAndroid.graphics.Path;
					public mIsShaderTransformDirty: boolean;
					public mBorderColor: number;
					public mBorderPath: globalAndroid.graphics.Path;
					public getBorderColor(): number;
					public setRadii(param0: native.Array<number>): void;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public getIntrinsicWidth(): number;
					public updateTransform(): void;
					public getBorderWidth(): number;
					public setCircle(param0: boolean): void;
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					public getColorFilter(): globalAndroid.graphics.ColorFilter;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
					public getOpacity(): number;
					public setScaleDownInsideBorders(param0: boolean): void;
					public getAlpha(): number;
					public setBorder(param0: number, param1: number): void;
					public getRadii(): native.Array<number>;
					public getIntrinsicHeight(): number;
					public setAlpha(param0: number): void;
					public clearColorFilter(): void;
					public isCircle(): boolean;
					public getPadding(): number;
					public setPaintFilterBitmap(param0: boolean): void;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public setPadding(param0: number): void;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setRadius(param0: number): void;
					public getPaintFilterBitmap(): boolean;
					public updatePath(): void;
					public getScaleDownInsideBorders(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class RoundedNinePatchDrawable extends com.facebook.drawee.drawable.RoundedDrawable {
					public static class: java.lang.Class<com.facebook.drawee.drawable.RoundedNinePatchDrawable>;
					public setScaleDownInsideBorders(param0: boolean): void;
					public setBorder(param0: number, param1: number): void;
					public getBorderColor(): number;
					public getRadii(): native.Array<number>;
					public setRadii(param0: native.Array<number>): void;
					public getBorderWidth(): number;
					public isCircle(): boolean;
					public getPadding(): number;
					public setPaintFilterBitmap(param0: boolean): void;
					public constructor();
					public setCircle(param0: boolean): void;
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setPadding(param0: number): void;
					public setRadius(param0: number): void;
					public getPaintFilterBitmap(): boolean;
					public constructor(param0: globalAndroid.graphics.drawable.NinePatchDrawable);
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
					public getScaleDownInsideBorders(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class ScaleTypeDrawable extends com.facebook.drawee.drawable.ForwardingDrawable {
					public static class: java.lang.Class<com.facebook.drawee.drawable.ScaleTypeDrawable>;
					public getRootBounds(param0: globalAndroid.graphics.RectF): void;
					public setFocusPoint(param0: globalAndroid.graphics.PointF): void;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType);
					public constructor(param0: globalAndroid.graphics.drawable.Drawable);
					public getDrawable(): globalAndroid.graphics.drawable.Drawable;
					public setCurrent(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public getScaleType(): com.facebook.drawee.drawable.ScalingUtils.ScaleType;
					public getFocusPoint(): globalAndroid.graphics.PointF;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public setDrawable(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public constructor();
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public getTransform(param0: globalAndroid.graphics.Matrix): void;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param2: globalAndroid.graphics.PointF);
					public setScaleType(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class ScalingUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils>;
					public static getActiveScaleTypeDrawable(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.drawee.drawable.ScaleTypeDrawable;
					public constructor();
				}
				export module ScalingUtils {
					export abstract class AbstractScaleType extends java.lang.Object implements com.facebook.drawee.drawable.ScalingUtils.ScaleType {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType>;
						public constructor();
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
						public getTransformImpl(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
					}
					export class InterpolatingScaleType extends java.lang.Object implements com.facebook.drawee.drawable.ScalingUtils.ScaleType, com.facebook.drawee.drawable.ScalingUtils.StatefulScaleType {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType>;
						public constructor(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType);
						public getScaleTypeFrom(): com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
						public getFocusPointFrom(): globalAndroid.graphics.PointF;
						public toString(): string;
						public getBoundsTo(): globalAndroid.graphics.Rect;
						public getBoundsFrom(): globalAndroid.graphics.Rect;
						public getFocusPointTo(): globalAndroid.graphics.PointF;
						public getScaleTypeTo(): com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public constructor(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.Rect, param4: globalAndroid.graphics.PointF, param5: globalAndroid.graphics.PointF);
						public constructor(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.Rect);
						public setValue(param0: number): void;
						public getState(): any;
						public getValue(): number;
					}
					export class ScaleType extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.ScaleType>;
						/**
						 * Constructs a new instance of the com.facebook.drawee.drawable.ScalingUtils$ScaleType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
							<clinit>(): void;
						});
						public constructor();
						public static FIT_CENTER: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public static CENTER_CROP: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public static FIT_XY: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public static CENTER: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public static FOCUS_CROP: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public static FIT_BOTTOM_START: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public static FIT_START: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public static CENTER_INSIDE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public static FIT_END: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
					}
					export class ScaleTypeCenter extends com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter>;
						public static INSTANCE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
						public getTransformImpl(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
						public toString(): string;
					}
					export class ScaleTypeCenterCrop extends com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop>;
						public static INSTANCE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
						public getTransformImpl(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
						public toString(): string;
					}
					export class ScaleTypeCenterInside extends com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterInside>;
						public static INSTANCE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
						public getTransformImpl(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
						public toString(): string;
					}
					export class ScaleTypeFitBottomStart extends com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart>;
						public static INSTANCE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
						public getTransformImpl(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
						public toString(): string;
					}
					export class ScaleTypeFitCenter extends com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitCenter>;
						public static INSTANCE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
						public getTransformImpl(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
						public toString(): string;
					}
					export class ScaleTypeFitEnd extends com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd>;
						public static INSTANCE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
						public getTransformImpl(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
						public toString(): string;
					}
					export class ScaleTypeFitStart extends com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitStart>;
						public static INSTANCE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
						public getTransformImpl(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
						public toString(): string;
					}
					export class ScaleTypeFitXY extends com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitXY>;
						public static INSTANCE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
						public getTransformImpl(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
						public toString(): string;
					}
					export class ScaleTypeFocusCrop extends com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFocusCrop>;
						public static INSTANCE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public getTransform(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number): globalAndroid.graphics.Matrix;
						public getTransformImpl(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
						public toString(): string;
					}
					export class StatefulScaleType extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.drawee.drawable.ScalingUtils.StatefulScaleType>;
						/**
						 * Constructs a new instance of the com.facebook.drawee.drawable.ScalingUtils$StatefulScaleType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getState(): any;
						});
						public constructor();
						public getState(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class TransformAwareDrawable extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.drawable.TransformAwareDrawable>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.drawable.TransformAwareDrawable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
					});
					public constructor();
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class TransformCallback extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.drawable.TransformCallback>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.drawable.TransformCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getTransform(param0: globalAndroid.graphics.Matrix): void;
						getRootBounds(param0: globalAndroid.graphics.RectF): void;
					});
					public constructor();
					public getRootBounds(param0: globalAndroid.graphics.RectF): void;
					public getTransform(param0: globalAndroid.graphics.Matrix): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class VisibilityAwareDrawable extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.drawable.VisibilityAwareDrawable>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.drawable.VisibilityAwareDrawable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setVisibilityCallback(param0: com.facebook.drawee.drawable.VisibilityCallback): void;
					});
					public constructor();
					public setVisibilityCallback(param0: com.facebook.drawee.drawable.VisibilityCallback): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module drawable {
				export class VisibilityCallback extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.drawable.VisibilityCallback>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.drawable.VisibilityCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onVisibilityChange(param0: boolean): void;
						onDraw(): void;
					});
					public constructor();
					public onDraw(): void;
					public onVisibilityChange(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module generic {
				export class GenericDraweeHierarchy extends java.lang.Object implements com.facebook.drawee.interfaces.SettableDraweeHierarchy {
					public static class: java.lang.Class<com.facebook.drawee.generic.GenericDraweeHierarchy>;
					public setPlaceholderImage(param0: number, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
					public setImage(param0: globalAndroid.graphics.drawable.Drawable, param1: number, param2: boolean): void;
					public hasPlaceholderImage(): boolean;
					public setControllerOverlay(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setFailureImage(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setActualImageScaleType(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
					public setRetryImage(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
					public setBackgroundImage(param0: globalAndroid.graphics.drawable.Drawable): void;
					public getTopLevelDrawable(): globalAndroid.graphics.drawable.Drawable;
					public setOverlayImage(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setPlaceholderImageFocusPoint(param0: globalAndroid.graphics.PointF): void;
					public setRetryImage(param0: number, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
					public setFailureImage(param0: number): void;
					public setProgressBarImage(param0: number, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
					public setProgressBarImage(param0: number): void;
					public setRoundingParams(param0: com.facebook.drawee.generic.RoundingParams): void;
					public setProgressBarImage(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
					public setRetry(param0: java.lang.Throwable): void;
					public setPlaceholderImage(param0: number): void;
					public setRetryImage(param0: globalAndroid.graphics.drawable.Drawable): void;
					public hasImage(): boolean;
					public setPlaceholderImage(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setFailureImage(param0: number, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
					public reset(): void;
					public getFadeDuration(): number;
					public setFadeDuration(param0: number): void;
					public setPlaceholderImage(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
					public setProgressBarImage(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setFailure(param0: java.lang.Throwable): void;
					public setFailureImage(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
					public setProgress(param0: number, param1: boolean): void;
					public getActualImageScaleType(): com.facebook.drawee.drawable.ScalingUtils.ScaleType;
					public getActualImageBounds(param0: globalAndroid.graphics.RectF): void;
					public setActualImageFocusPoint(param0: globalAndroid.graphics.PointF): void;
					public getRoundingParams(): com.facebook.drawee.generic.RoundingParams;
					public setActualImageColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public setRetryImage(param0: number): void;
					public setOverlayImage(param0: number, param1: globalAndroid.graphics.drawable.Drawable): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module generic {
				export class GenericDraweeHierarchyBuilder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.generic.GenericDraweeHierarchyBuilder>;
					public static DEFAULT_FADE_DURATION: number;
					public static DEFAULT_SCALE_TYPE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
					public static DEFAULT_ACTUAL_IMAGE_SCALE_TYPE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
					public getResources(): globalAndroid.content.res.Resources;
					public setProgressBarImage(param0: number, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setRetryImage(param0: number, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setOverlays(param0: java.util.List<globalAndroid.graphics.drawable.Drawable>): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setRetryImage(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setProgressBarImage(param0: number): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setPlaceholderImageScaleType(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public getPlaceholderImage(): globalAndroid.graphics.drawable.Drawable;
					public setPressedStateOverlay(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setRetryImage(param0: number): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public getPressedStateOverlay(): globalAndroid.graphics.drawable.Drawable;
					public setPlaceholderImage(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public getActualImageScaleType(): com.facebook.drawee.drawable.ScalingUtils.ScaleType;
					public getActualImageFocusPoint(): globalAndroid.graphics.PointF;
					public setActualImageColorFilter(param0: globalAndroid.graphics.ColorFilter): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public getDesiredAspectRatio(): number;
					public setRetryImageScaleType(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public getProgressBarImageScaleType(): com.facebook.drawee.drawable.ScalingUtils.ScaleType;
					public setFailureImage(param0: number): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public getRoundingParams(): com.facebook.drawee.generic.RoundingParams;
					public getProgressBarImage(): globalAndroid.graphics.drawable.Drawable;
					public setOverlay(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public getBackground(): globalAndroid.graphics.drawable.Drawable;
					public setProgressBarImage(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public constructor(param0: globalAndroid.content.res.Resources);
					public static newInstance(param0: globalAndroid.content.res.Resources): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setRetryImage(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setBackground(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public getFailureImage(): globalAndroid.graphics.drawable.Drawable;
					public setRoundingParams(param0: com.facebook.drawee.generic.RoundingParams): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public getFailureImageScaleType(): com.facebook.drawee.drawable.ScalingUtils.ScaleType;
					public setFailureImageScaleType(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setDesiredAspectRatio(param0: number): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setPlaceholderImage(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setFailureImage(param0: number, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public getActualImageColorFilter(): globalAndroid.graphics.ColorFilter;
					public getOverlays(): java.util.List<globalAndroid.graphics.drawable.Drawable>;
					public getRetryImageScaleType(): com.facebook.drawee.drawable.ScalingUtils.ScaleType;
					public getPlaceholderImageScaleType(): com.facebook.drawee.drawable.ScalingUtils.ScaleType;
					public getRetryImage(): globalAndroid.graphics.drawable.Drawable;
					public getFadeDuration(): number;
					public setFailureImage(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setProgressBarImageScaleType(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setFailureImage(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public reset(): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setPlaceholderImage(param0: number, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setProgressBarImage(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setFadeDuration(param0: number): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setActualImageFocusPoint(param0: globalAndroid.graphics.PointF): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setPlaceholderImage(param0: number): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public setActualImageScaleType(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public build(): com.facebook.drawee.generic.GenericDraweeHierarchy;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module generic {
				export class GenericDraweeHierarchyInflater extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.generic.GenericDraweeHierarchyInflater>;
					public static updateBuilder(param0: com.facebook.drawee.generic.GenericDraweeHierarchyBuilder, param1: globalAndroid.content.Context, param2: globalAndroid.util.AttributeSet): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public static inflateBuilder(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;
					public constructor();
					public static inflateHierarchy(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): com.facebook.drawee.generic.GenericDraweeHierarchy;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module generic {
				export class RootDrawable extends com.facebook.drawee.drawable.ForwardingDrawable implements com.facebook.drawee.drawable.VisibilityAwareDrawable {
					public static class: java.lang.Class<com.facebook.drawee.generic.RootDrawable>;
					public getRootBounds(param0: globalAndroid.graphics.RectF): void;
					public setVisibilityCallback(param0: com.facebook.drawee.drawable.VisibilityCallback): void;
					public setControllerOverlay(param0: globalAndroid.graphics.drawable.Drawable): void;
					public getIntrinsicHeight(): number;
					public getIntrinsicWidth(): number;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable);
					public getDrawable(): globalAndroid.graphics.drawable.Drawable;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public setDrawable(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.drawable.Drawable;
					public constructor();
					public setVisible(param0: boolean, param1: boolean): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public getTransform(param0: globalAndroid.graphics.Matrix): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public setTransformCallback(param0: com.facebook.drawee.drawable.TransformCallback): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module generic {
				export class RoundingParams extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.generic.RoundingParams>;
					public setPaintFilterBitmap(param0: boolean): com.facebook.drawee.generic.RoundingParams;
					public setPadding(param0: number): com.facebook.drawee.generic.RoundingParams;
					public getBorderColor(): number;
					public static fromCornersRadii(param0: number, param1: number, param2: number, param3: number): com.facebook.drawee.generic.RoundingParams;
					public setScaleDownInsideBorders(param0: boolean): com.facebook.drawee.generic.RoundingParams;
					public getCornersRadii(): native.Array<number>;
					public getBorderWidth(): number;
					public constructor();
					public setRoundAsCircle(param0: boolean): com.facebook.drawee.generic.RoundingParams;
					public setCornersRadii(param0: number, param1: number, param2: number, param3: number): com.facebook.drawee.generic.RoundingParams;
					public hashCode(): number;
					public static fromCornersRadius(param0: number): com.facebook.drawee.generic.RoundingParams;
					public setBorderColor(param0: number): com.facebook.drawee.generic.RoundingParams;
					public setRoundingMethod(param0: com.facebook.drawee.generic.RoundingParams.RoundingMethod): com.facebook.drawee.generic.RoundingParams;
					public setOverlayColor(param0: number): com.facebook.drawee.generic.RoundingParams;
					public getOverlayColor(): number;
					public getRoundAsCircle(): boolean;
					public setCornersRadius(param0: number): com.facebook.drawee.generic.RoundingParams;
					public equals(param0: any): boolean;
					public getRoundingMethod(): com.facebook.drawee.generic.RoundingParams.RoundingMethod;
					public static fromCornersRadii(param0: native.Array<number>): com.facebook.drawee.generic.RoundingParams;
					public static asCircle(): com.facebook.drawee.generic.RoundingParams;
					public setBorder(param0: number, param1: number): com.facebook.drawee.generic.RoundingParams;
					public getPadding(): number;
					public setBorderWidth(param0: number): com.facebook.drawee.generic.RoundingParams;
					public getPaintFilterBitmap(): boolean;
					public setCornersRadii(param0: native.Array<number>): com.facebook.drawee.generic.RoundingParams;
					public getScaleDownInsideBorders(): boolean;
				}
				export module RoundingParams {
					export class RoundingMethod {
						public static class: java.lang.Class<com.facebook.drawee.generic.RoundingParams.RoundingMethod>;
						public static OVERLAY_COLOR: com.facebook.drawee.generic.RoundingParams.RoundingMethod;
						public static BITMAP_ONLY: com.facebook.drawee.generic.RoundingParams.RoundingMethod;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static values(): native.Array<com.facebook.drawee.generic.RoundingParams.RoundingMethod>;
						public static valueOf(param0: string): com.facebook.drawee.generic.RoundingParams.RoundingMethod;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module generic {
				export class WrappingUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.generic.WrappingUtils>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module gestures {
				export class GestureDetector extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.gestures.GestureDetector>;
					public constructor(param0: globalAndroid.content.Context);
					public reset(): void;
					public static newInstance(param0: globalAndroid.content.Context): com.facebook.drawee.gestures.GestureDetector;
					public isCapturingGesture(): boolean;
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public init(): void;
					public setClickListener(param0: com.facebook.drawee.gestures.GestureDetector.ClickListener): void;
				}
				export module GestureDetector {
					export class ClickListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.drawee.gestures.GestureDetector.ClickListener>;
						/**
						 * Constructs a new instance of the com.facebook.drawee.gestures.GestureDetector$ClickListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onClick(): boolean;
						});
						public constructor();
						public onClick(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module interfaces {
				export class DraweeController extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.interfaces.DraweeController>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.interfaces.DraweeController interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getHierarchy(): com.facebook.drawee.interfaces.DraweeHierarchy;
						setHierarchy(param0: com.facebook.drawee.interfaces.DraweeHierarchy): void;
						onAttach(): void;
						onDetach(): void;
						onViewportVisibilityHint(param0: boolean): void;
						onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						getAnimatable(): globalAndroid.graphics.drawable.Animatable;
						setContentDescription(param0: string): void;
						getContentDescription(): string;
						isSameImageRequest(param0: com.facebook.drawee.interfaces.DraweeController): boolean;
					});
					public constructor();
					public setHierarchy(param0: com.facebook.drawee.interfaces.DraweeHierarchy): void;
					public setContentDescription(param0: string): void;
					public onDetach(): void;
					public getAnimatable(): globalAndroid.graphics.drawable.Animatable;
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public isSameImageRequest(param0: com.facebook.drawee.interfaces.DraweeController): boolean;
					public onAttach(): void;
					public getHierarchy(): com.facebook.drawee.interfaces.DraweeHierarchy;
					public onViewportVisibilityHint(param0: boolean): void;
					public getContentDescription(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module interfaces {
				export class DraweeHierarchy extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.interfaces.DraweeHierarchy>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.interfaces.DraweeHierarchy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getTopLevelDrawable(): globalAndroid.graphics.drawable.Drawable;
					});
					public constructor();
					public getTopLevelDrawable(): globalAndroid.graphics.drawable.Drawable;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module interfaces {
				export class SettableDraweeHierarchy extends java.lang.Object implements com.facebook.drawee.interfaces.DraweeHierarchy {
					public static class: java.lang.Class<com.facebook.drawee.interfaces.SettableDraweeHierarchy>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.interfaces.SettableDraweeHierarchy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						reset(): void;
						setImage(param0: globalAndroid.graphics.drawable.Drawable, param1: number, param2: boolean): void;
						setProgress(param0: number, param1: boolean): void;
						setFailure(param0: java.lang.Throwable): void;
						setRetry(param0: java.lang.Throwable): void;
						setControllerOverlay(param0: globalAndroid.graphics.drawable.Drawable): void;
						getTopLevelDrawable(): globalAndroid.graphics.drawable.Drawable;
					});
					public constructor();
					public reset(): void;
					public setProgress(param0: number, param1: boolean): void;
					public setImage(param0: globalAndroid.graphics.drawable.Drawable, param1: number, param2: boolean): void;
					public setControllerOverlay(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setRetry(param0: java.lang.Throwable): void;
					public getTopLevelDrawable(): globalAndroid.graphics.drawable.Drawable;
					public setFailure(param0: java.lang.Throwable): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module interfaces {
				export class SimpleDraweeControllerBuilder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder>;
					/**
					 * Constructs a new instance of the com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setCallerContext(param0: any): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
						setUri(param0: globalAndroid.net.Uri): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
						setUri(param0: string): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
						setOldController(param0: com.facebook.drawee.interfaces.DraweeController): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
						build(): com.facebook.drawee.interfaces.DraweeController;
					});
					public constructor();
					public setOldController(param0: com.facebook.drawee.interfaces.DraweeController): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
					public setUri(param0: string): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
					public setCallerContext(param0: any): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
					public build(): com.facebook.drawee.interfaces.DraweeController;
					public setUri(param0: globalAndroid.net.Uri): com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module view {
				export class AspectRatioMeasure extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.view.AspectRatioMeasure>;
					public constructor();
					public static updateMeasureSpec(param0: com.facebook.drawee.view.AspectRatioMeasure.Spec, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams, param3: number, param4: number): void;
				}
				export module AspectRatioMeasure {
					export class Spec extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.drawee.view.AspectRatioMeasure.Spec>;
						public width: number;
						public height: number;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module view {
				export class DraweeHolder<DH>  extends com.facebook.drawee.drawable.VisibilityCallback {
					public static class: java.lang.Class<com.facebook.drawee.view.DraweeHolder<any>>;
					public static create(param0: com.facebook.drawee.interfaces.DraweeHierarchy, param1: globalAndroid.content.Context): com.facebook.drawee.view.DraweeHolder<any>;
					public hasHierarchy(): boolean;
					public isControllerValid(): boolean;
					public getDraweeEventTracker(): com.facebook.drawee.components.DraweeEventTracker;
					public constructor(param0: any);
					public onAttach(): void;
					public getTopLevelDrawable(): globalAndroid.graphics.drawable.Drawable;
					public registerWithContext(param0: globalAndroid.content.Context): void;
					public setController(param0: com.facebook.drawee.interfaces.DraweeController): void;
					public getHierarchy(): any;
					public toString(): string;
					public onDraw(): void;
					public setHierarchy(param0: any): void;
					public onVisibilityChange(param0: boolean): void;
					public onDetach(): void;
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public getController(): com.facebook.drawee.interfaces.DraweeController;
					public isAttached(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module view {
				export class DraweeTransition extends globalAndroid.transition.Transition {
					public static class: java.lang.Class<com.facebook.drawee.view.DraweeTransition>;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public captureStartValues(param0: globalAndroid.transition.TransitionValues): void;
					public constructor(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType);
					public constructor();
					public createAnimator(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.transition.TransitionValues, param2: globalAndroid.transition.TransitionValues): globalAndroid.animation.Animator;
					public constructor(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param2: globalAndroid.graphics.PointF, param3: globalAndroid.graphics.PointF);
					public captureEndValues(param0: globalAndroid.transition.TransitionValues): void;
					public static createTransitionSet(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType): globalAndroid.transition.TransitionSet;
					public static createTransitionSet(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param1: com.facebook.drawee.drawable.ScalingUtils.ScaleType, param2: globalAndroid.graphics.PointF, param3: globalAndroid.graphics.PointF): globalAndroid.transition.TransitionSet;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module view {
				export class DraweeView<DH>  extends globalAndroid.widget.ImageView {
					public static class: java.lang.Class<com.facebook.drawee.view.DraweeView<any>>;
					public static setGlobalLegacyVisibilityHandlingEnabled(param0: boolean): void;
					public setAspectRatio(param0: number): void;
					public setImageDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public getAspectRatio(): number;
					public doDetach(): void;
					public onAttach(): void;
					public onAttachedToWindow(): void;
					public getTopLevelDrawable(): globalAndroid.graphics.drawable.Drawable;
					public onVisibilityChanged(param0: globalAndroid.view.View, param1: number): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public setImageURI(param0: globalAndroid.net.Uri): void;
					public getHierarchy(): any;
					public toString(): string;
					public onFinishTemporaryDetach(): void;
					public setLegacyVisibilityHandlingEnabled(param0: boolean): void;
					/** @deprecated */
					public setImageResource(param0: number): void;
					public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public onDetach(): void;
					public setImageResource(param0: number): void;
					public sendAccessibilityEvent(param0: number): void;
					public onDetachedFromWindow(): void;
					public onMeasure(param0: number, param1: number): void;
					public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public hasHierarchy(): boolean;
					public hasController(): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public doAttach(): void;
					public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onStartTemporaryDetach(): void;
					public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					/** @deprecated */
					public setImageDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public constructor(param0: globalAndroid.content.Context);
					public setController(param0: com.facebook.drawee.interfaces.DraweeController): void;
					public setImageBitmap(param0: globalAndroid.graphics.Bitmap): void;
					/** @deprecated */
					public setImageBitmap(param0: globalAndroid.graphics.Bitmap): void;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public setHierarchy(param0: any): void;
					/** @deprecated */
					public setImageURI(param0: globalAndroid.net.Uri): void;
					public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public getController(): com.facebook.drawee.interfaces.DraweeController;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module view {
				export class GenericDraweeView extends com.facebook.drawee.view.DraweeView<com.facebook.drawee.generic.GenericDraweeHierarchy> {
					public static class: java.lang.Class<com.facebook.drawee.view.GenericDraweeView>;
					public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.drawee.generic.GenericDraweeHierarchy);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public inflateHierarchy(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): void;
					public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public sendAccessibilityEvent(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module view {
				export class MultiDraweeHolder<DH>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.drawee.view.MultiDraweeHolder<any>>;
					public add(param0: number, param1: com.facebook.drawee.view.DraweeHolder<DH>): void;
					public constructor();
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public clear(): void;
					public onDetach(): void;
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public verifyDrawable(param0: globalAndroid.graphics.drawable.Drawable): boolean;
					public onAttach(): void;
					public get(param0: number): com.facebook.drawee.view.DraweeHolder<DH>;
					public size(): number;
					public remove(param0: number): void;
					public add(param0: com.facebook.drawee.view.DraweeHolder<DH>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module drawee {
			export module view {
				export class SimpleDraweeView extends com.facebook.drawee.view.GenericDraweeView {
					public static class: java.lang.Class<com.facebook.drawee.view.SimpleDraweeView>;
					public getControllerBuilder(): com.facebook.drawee.controller.AbstractDraweeControllerBuilder<any,any,any,any>;
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.drawee.generic.GenericDraweeHierarchy);
					public static initialize(param0: com.facebook.common.internal.Supplier<any>): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public setImageURI(param0: globalAndroid.net.Uri): void;
					public setImageURI(param0: string): void;
					public setImageURI(param0: string, param1: any): void;
					/** @deprecated */
					public setImageResource(param0: number): void;
					public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setImageResource(param0: number): void;
					public sendAccessibilityEvent(param0: number): void;
					public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public static shutDown(): void;
					public setImageRequest(param0: com.facebook.imagepipeline.request.ImageRequest): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					public setActualImageResource(param0: number): void;
					public constructor(param0: globalAndroid.content.Context);
					public setImageURI(param0: globalAndroid.net.Uri, param1: any): void;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					/** @deprecated */
					public setImageURI(param0: globalAndroid.net.Uri): void;
					public setActualImageResource(param0: number, param1: any): void;
					public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbcore {
			export class BuildConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.fbcore.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbui {
			export module textlayoutbuilder {
				export class BuildConfig extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.fbui.textlayoutbuilder.BuildConfig>;
					public static DEBUG: boolean;
					public static APPLICATION_ID: string;
					public static BUILD_TYPE: string;
					public static FLAVOR: string;
					public static VERSION_CODE: number;
					public static VERSION_NAME: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbui {
			export module textlayoutbuilder {
				export class GlyphWarmer extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.fbui.textlayoutbuilder.GlyphWarmer>;
					/**
					 * Constructs a new instance of the com.facebook.fbui.textlayoutbuilder.GlyphWarmer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						warmLayout(param0: globalAndroid.text.Layout): void;
					});
					public constructor();
					public warmLayout(param0: globalAndroid.text.Layout): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbui {
			export module textlayoutbuilder {
				export class ResourceTextLayoutHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.fbui.textlayoutbuilder.ResourceTextLayoutHelper>;
					public constructor();
					public static setTextAppearance(param0: com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder, param1: globalAndroid.content.Context, param2: number): void;
					public static updateFromStyleResource(param0: com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder, param1: globalAndroid.content.Context, param2: number): void;
					public static updateFromStyleResource(param0: com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder, param1: globalAndroid.content.Context, param2: globalAndroid.util.AttributeSet, param3: number, param4: number): void;
					public static updateFromStyleResource(param0: com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder, param1: globalAndroid.content.Context, param2: number, param3: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbui {
			export module textlayoutbuilder {
				export class StaticLayoutHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.fbui.textlayoutbuilder.StaticLayoutHelper>;
					public static fixLayout(param0: globalAndroid.text.StaticLayout): boolean;
					public static make(param0: string, param1: number, param2: number, param3: globalAndroid.text.TextPaint, param4: number, param5: globalAndroid.text.Layout.Alignment, param6: number, param7: number, param8: boolean, param9: globalAndroid.text.TextUtils.TruncateAt, param10: number, param11: number, param12: androidx.core.text.TextDirectionHeuristicCompat, param13: number, param14: number, param15: number, param16: native.Array<number>, param17: native.Array<number>): globalAndroid.text.StaticLayout;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbui {
			export module textlayoutbuilder {
				export class TextLayoutBuilder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder>;
					public static MEASURE_MODE_UNSPECIFIED: number;
					public static MEASURE_MODE_EXACTLY: number;
					public static MEASURE_MODE_AT_MOST: number;
					public static DEFAULT_MAX_LINES: number;
					public getTextDirection(): androidx.core.text.TextDirectionHeuristicCompat;
					public setMaxWidth(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getShouldCacheLayout(): boolean;
					public setText(param0: string): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getHyphenationFrequency(): number;
					public getLeftIndents(): native.Array<number>;
					public build(): globalAndroid.text.Layout;
					public setHyphenationFrequency(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public constructor();
					public setLetterSpacing(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getGlyphWarmer(): com.facebook.fbui.textlayoutbuilder.GlyphWarmer;
					public setMinEms(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getTextSpacingExtra(): number;
					public getText(): string;
					public setMaxLines(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setTextColor(param0: globalAndroid.content.res.ColorStateList): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setMinWidth(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getSingleLine(): boolean;
					public setShouldCacheLayout(param0: boolean): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setGlyphWarmer(param0: com.facebook.fbui.textlayoutbuilder.GlyphWarmer): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getMaxLines(): number;
					public setTextSize(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getTextSpacingMultiplier(): number;
					public setShouldWarmText(param0: boolean): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setLineHeight(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setAlignment(param0: globalAndroid.text.Layout.Alignment): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setDensity(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setIndents(param0: native.Array<number>, param1: native.Array<number>): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getLinkColor(): number;
					public getMaxWidth(): number;
					public getMinWidth(): number;
					public setIncludeFontPadding(param0: boolean): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getIncludeFontPadding(): boolean;
					public getLineHeight(): number;
					public setJustificationMode(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getLetterSpacing(): number;
					public setBreakStrategy(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getJustificationMode(): number;
					public setLinkColor(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setWidth(param0: number, param1: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getBreakStrategy(): number;
					public setWidth(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setDrawableState(param0: native.Array<number>): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getTextSize(): number;
					public setTextColor(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getDrawableState(): native.Array<number>;
					public getAlignment(): globalAndroid.text.Layout.Alignment;
					public getTypeface(): globalAndroid.graphics.Typeface;
					public getRightIndents(): native.Array<number>;
					public setTextStyle(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getShouldWarmText(): boolean;
					public setTextDirection(param0: androidx.core.text.TextDirectionHeuristicCompat): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setMaxEms(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getMinEms(): number;
					public getEllipsize(): globalAndroid.text.TextUtils.TruncateAt;
					public getDensity(): number;
					public setTextSpacingExtra(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setTextSpacingMultiplier(param0: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setShadowLayer(param0: number, param1: number, param2: number, param3: number): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setEllipsize(param0: globalAndroid.text.TextUtils.TruncateAt): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setTypeface(param0: globalAndroid.graphics.Typeface): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public setSingleLine(param0: boolean): com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder;
					public getTextColor(): number;
					public getMaxEms(): number;
				}
				export module TextLayoutBuilder {
					export class MeasureMode extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder.MeasureMode>;
						/**
						 * Constructs a new instance of the com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder$MeasureMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class Params extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.fbui.textlayoutbuilder.TextLayoutBuilder.Params>;
						public hashCode(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbui {
			export module textlayoutbuilder {
				export module glyphwarmer {
					export class GlyphWarmerImpl extends java.lang.Object implements com.facebook.fbui.textlayoutbuilder.GlyphWarmer {
						public static class: java.lang.Class<com.facebook.fbui.textlayoutbuilder.glyphwarmer.GlyphWarmerImpl>;
						public constructor();
						public warmLayout(param0: globalAndroid.text.Layout): void;
					}
					export module GlyphWarmerImpl {
						export class WarmHandler extends globalAndroid.os.Handler {
							public static class: java.lang.Class<com.facebook.fbui.textlayoutbuilder.glyphwarmer.GlyphWarmerImpl.WarmHandler>;
							public handleMessage(param0: globalAndroid.os.Message): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbui {
			export module textlayoutbuilder {
				export module proxy {
					export class StaticLayoutProxy extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.fbui.textlayoutbuilder.proxy.StaticLayoutProxy>;
						public static fromTextDirectionHeuristicCompat(param0: androidx.core.text.TextDirectionHeuristicCompat): any;
						public constructor();
						public static create(param0: string, param1: number, param2: number, param3: globalAndroid.text.TextPaint, param4: number, param5: globalAndroid.text.Layout.Alignment, param6: number, param7: number, param8: boolean, param9: globalAndroid.text.TextUtils.TruncateAt, param10: number, param11: number, param12: androidx.core.text.TextDirectionHeuristicCompat): globalAndroid.text.StaticLayout;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbui {
			export module textlayoutbuilder {
				export module util {
					export class LayoutMeasureUtil extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.fbui.textlayoutbuilder.util.LayoutMeasureUtil>;
						public constructor();
						public static getWidth(param0: globalAndroid.text.Layout): number;
						public static getHeight(param0: globalAndroid.text.Layout): number;
						public static getContentLeft(param0: globalAndroid.text.Layout): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export class BuildConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.flipper.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public static IS_INTERNAL_BUILD: boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export class AndroidFlipperClient extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.android.AndroidFlipperClient>;
					public static getInstance(param0: globalAndroid.content.Context): com.facebook.flipper.core.FlipperClient;
					public constructor();
					public static getInstanceIfInitialized(): com.facebook.flipper.core.FlipperClient;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export class EventBase extends com.facebook.jni.HybridClassBase {
					public static class: java.lang.Class<com.facebook.flipper.android.EventBase>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export class FlipperClientImpl extends java.lang.Object implements com.facebook.flipper.core.FlipperClient {
					public static class: java.lang.Class<com.facebook.flipper.android.FlipperClientImpl>;
					public static getInstance(): com.facebook.flipper.android.FlipperClientImpl;
					public static init(param0: com.facebook.flipper.android.EventBase, param1: com.facebook.flipper.android.EventBase, param2: number, param3: number, param4: string, param5: string, param6: string, param7: string, param8: string, param9: string, param10: string): void;
					public getPlugin(param0: string): com.facebook.flipper.core.FlipperPlugin;
					public subscribeForUpdates(param0: com.facebook.flipper.core.FlipperStateUpdateListener): void;
					/** @deprecated */
					public getPlugin(param0: string): com.facebook.flipper.core.FlipperPlugin;
					public start(): void;
					public getState(): string;
					public addPluginNative(param0: com.facebook.flipper.core.FlipperPlugin): void;
					public removePluginNative(param0: com.facebook.flipper.core.FlipperPlugin): void;
					public unsubscribe(): void;
					public stop(): void;
					public getStateSummary(): com.facebook.flipper.core.StateSummary;
					public addPlugin(param0: com.facebook.flipper.core.FlipperPlugin): void;
					public removePlugin(param0: com.facebook.flipper.core.FlipperPlugin): void;
					public getPluginByClass(param0: java.lang.Class<any>): com.facebook.flipper.core.FlipperPlugin;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export class FlipperConnectionImpl extends java.lang.Object implements com.facebook.flipper.core.FlipperConnection {
					public static class: java.lang.Class<com.facebook.flipper.android.FlipperConnectionImpl>;
					public reportError(param0: java.lang.Throwable): void;
					public sendObject(param0: string, param1: com.facebook.flipper.core.FlipperObject): void;
					public sendArray(param0: string, param1: com.facebook.flipper.core.FlipperArray): void;
					public reportErrorWithMetadata(param0: string, param1: string): void;
					public send(param0: string, param1: com.facebook.flipper.core.FlipperObject): void;
					public receive(param0: string, param1: com.facebook.flipper.core.FlipperReceiver): void;
					public send(param0: string, param1: com.facebook.flipper.core.FlipperArray): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export class FlipperProps extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.android.FlipperProps>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export class FlipperResponderImpl extends java.lang.Object implements com.facebook.flipper.core.FlipperResponder {
					public static class: java.lang.Class<com.facebook.flipper.android.FlipperResponderImpl>;
					public error(param0: com.facebook.flipper.core.FlipperObject): void;
					public success(param0: com.facebook.flipper.core.FlipperObject): void;
					public successArray(param0: com.facebook.flipper.core.FlipperArray): void;
					public success(): void;
					public success(param0: com.facebook.flipper.core.FlipperArray): void;
					public successObject(param0: com.facebook.flipper.core.FlipperObject): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export class FlipperThread extends java.lang.Thread {
					public static class: java.lang.Class<com.facebook.flipper.android.FlipperThread>;
					public run(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export module diagnostics {
					export class FlipperDiagnosticActivity extends androidx.fragment.app.FragmentActivity {
						public static class: java.lang.Class<com.facebook.flipper.android.diagnostics.FlipperDiagnosticActivity>;
						public constructor(param0: globalAndroid.content.Context);
						public onWindowStartingActionMode(param0: globalAndroid.view.ActionMode.Callback, param1: number): globalAndroid.view.ActionMode;
						public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): void;
						public onAttachedToWindow(): void;
						public onTrimMemory(param0: number): void;
						public onSearchRequested(param0: any): boolean;
						public onSearchRequested(): boolean;
						public onCreate(param0: globalAndroid.os.Bundle, param1: any): void;
						public onWindowAttributesChanged(param0: globalAndroid.view.WindowManager.LayoutParams): void;
						public onProvideKeyboardShortcuts(param0: java.util.List<any>, param1: globalAndroid.view.Menu, param2: number): void;
						public dispatchGenericMotionEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public onPointerCaptureChanged(param0: boolean): void;
						public validateRequestPermissionsRequestCode(param0: number): void;
						public onPanelClosed(param0: number, param1: globalAndroid.view.Menu): void;
						public onCreate(param0: globalAndroid.os.Bundle): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources.Theme);
						public dispatchKeyShortcutEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public dispatchTrackballEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public onCreatePanelMenu(param0: number, param1: globalAndroid.view.Menu): boolean;
						public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public onMenuItemSelected(param0: number, param1: globalAndroid.view.MenuItem): boolean;
						public dispatchTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public onWindowStartingActionMode(param0: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public constructor();
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onCreateView(param0: string, param1: globalAndroid.content.Context, param2: globalAndroid.util.AttributeSet): globalAndroid.view.View;
						public onMenuOpened(param0: number, param1: globalAndroid.view.Menu): boolean;
						public onContentChanged(): void;
						public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public onPreparePanel(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.Menu): boolean;
						public onDetachedFromWindow(): void;
						public onActionModeFinished(param0: globalAndroid.view.ActionMode): void;
						public onCreateContextMenu(param0: globalAndroid.view.ContextMenu, param1: globalAndroid.view.View, param2: globalAndroid.view.ContextMenu.ContextMenuInfo): void;
						public onCreatePanelView(param0: number): globalAndroid.view.View;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public superDispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public getLifecycle(): androidx.lifecycle.Lifecycle;
						public onWindowFocusChanged(param0: boolean): void;
						public constructor(param0: globalAndroid.content.Context, param1: number);
						public getViewModelStore(): androidx.lifecycle.ViewModelStore;
						public onCreateView(param0: globalAndroid.view.View, param1: string, param2: globalAndroid.content.Context, param3: globalAndroid.util.AttributeSet): globalAndroid.view.View;
						public onActionModeStarted(param0: globalAndroid.view.ActionMode): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export module diagnostics {
					export class FlipperDiagnosticFragment extends androidx.fragment.app.Fragment implements com.facebook.flipper.core.FlipperStateUpdateListener {
						public static class: java.lang.Class<com.facebook.flipper.android.diagnostics.FlipperDiagnosticFragment>;
						public constructor();
						public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
						/** @deprecated */
						public onAttach(param0: globalAndroid.app.Activity): void;
						public onResume(): void;
						public onUpdate(): void;
						public onCreateContextMenu(param0: globalAndroid.view.ContextMenu, param1: globalAndroid.view.View, param2: globalAndroid.view.ContextMenu.ContextMenuInfo): void;
						public onStop(): void;
						public onLowMemory(): void;
						public static newInstance(): com.facebook.flipper.android.diagnostics.FlipperDiagnosticFragment;
						public onAttach(param0: globalAndroid.content.Context): void;
						public getLifecycle(): androidx.lifecycle.Lifecycle;
						public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
						public getViewModelStore(): androidx.lifecycle.ViewModelStore;
						public onStart(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export module diagnostics {
					export class FlipperDiagnosticReportListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.android.diagnostics.FlipperDiagnosticReportListener>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.android.diagnostics.FlipperDiagnosticReportListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							report(param0: string, param1: string): void;
						});
						public constructor();
						public report(param0: string, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export module diagnostics {
					export class FlipperDiagnosticSummaryTextFilter extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.android.diagnostics.FlipperDiagnosticSummaryTextFilter>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.android.diagnostics.FlipperDiagnosticSummaryTextFilter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							applyDiagnosticSummaryTextFilter(param0: string): string;
						});
						public constructor();
						public applyDiagnosticSummaryTextFilter(param0: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module android {
				export module utils {
					export class FlipperUtils extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.android.utils.FlipperUtils>;
						public static shouldEnableFlipper(param0: globalAndroid.content.Context): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export abstract class ErrorReportingRunnable extends java.lang.Object implements java.lang.Runnable {
					public static class: java.lang.Class<com.facebook.flipper.core.ErrorReportingRunnable>;
					public constructor(param0: com.facebook.flipper.core.FlipperConnection);
					public run(): void;
					public runOrThrow(): void;
					public doFinally(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class FlipperArray extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.FlipperArray>;
					public getDynamic(param0: number): com.facebook.flipper.core.FlipperDynamic;
					public constructor(param0: string);
					public constructor(param0: org.json.JSONArray);
					public getDouble(param0: number): number;
					public toJsonString(): string;
					public getString(param0: number): string;
					public toStringList(): java.util.List<string>;
					public getFloat(param0: number): number;
					public length(): number;
					public getLong(param0: number): number;
					public equals(param0: any): boolean;
					public getArray(param0: number): com.facebook.flipper.core.FlipperArray;
					public getInt(param0: number): number;
					public toString(): string;
					public getObject(param0: number): com.facebook.flipper.core.FlipperObject;
					public getBoolean(param0: number): boolean;
					public hashCode(): number;
				}
				export module FlipperArray {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.core.FlipperArray.Builder>;
						public constructor();
						public put(param0: com.facebook.flipper.core.FlipperValue): com.facebook.flipper.core.FlipperArray.Builder;
						public put(param0: java.lang.Float): com.facebook.flipper.core.FlipperArray.Builder;
						public build(): com.facebook.flipper.core.FlipperArray;
						public put(param0: string): com.facebook.flipper.core.FlipperArray.Builder;
						public put(param0: com.facebook.flipper.core.FlipperObject.Builder): com.facebook.flipper.core.FlipperArray.Builder;
						public put(param0: java.lang.Boolean): com.facebook.flipper.core.FlipperArray.Builder;
						public put(param0: com.facebook.flipper.core.FlipperArray): com.facebook.flipper.core.FlipperArray.Builder;
						public put(param0: com.facebook.flipper.core.FlipperObject): com.facebook.flipper.core.FlipperArray.Builder;
						public put(param0: com.facebook.flipper.core.FlipperArray.Builder): com.facebook.flipper.core.FlipperArray.Builder;
						public put(param0: java.lang.Integer): com.facebook.flipper.core.FlipperArray.Builder;
						public put(param0: java.lang.Long): com.facebook.flipper.core.FlipperArray.Builder;
						public put(param0: java.lang.Double): com.facebook.flipper.core.FlipperArray.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class FlipperClient extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.FlipperClient>;
					/**
					 * Constructs a new instance of the com.facebook.flipper.core.FlipperClient interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						addPlugin(param0: com.facebook.flipper.core.FlipperPlugin): void;
						getPlugin(param0: string): com.facebook.flipper.core.FlipperPlugin;
						getPluginByClass(param0: java.lang.Class<any>): com.facebook.flipper.core.FlipperPlugin;
						removePlugin(param0: com.facebook.flipper.core.FlipperPlugin): void;
						start(): void;
						stop(): void;
						subscribeForUpdates(param0: com.facebook.flipper.core.FlipperStateUpdateListener): void;
						unsubscribe(): void;
						getState(): string;
						getStateSummary(): com.facebook.flipper.core.StateSummary;
					});
					public constructor();
					public getPlugin(param0: string): com.facebook.flipper.core.FlipperPlugin;
					public stop(): void;
					public subscribeForUpdates(param0: com.facebook.flipper.core.FlipperStateUpdateListener): void;
					public getStateSummary(): com.facebook.flipper.core.StateSummary;
					public addPlugin(param0: com.facebook.flipper.core.FlipperPlugin): void;
					public start(): void;
					public getState(): string;
					public removePlugin(param0: com.facebook.flipper.core.FlipperPlugin): void;
					public getPluginByClass(param0: java.lang.Class<any>): com.facebook.flipper.core.FlipperPlugin;
					public unsubscribe(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class FlipperConnection extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.FlipperConnection>;
					/**
					 * Constructs a new instance of the com.facebook.flipper.core.FlipperConnection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						send(param0: string, param1: com.facebook.flipper.core.FlipperObject): void;
						send(param0: string, param1: com.facebook.flipper.core.FlipperArray): void;
						reportErrorWithMetadata(param0: string, param1: string): void;
						reportError(param0: java.lang.Throwable): void;
						receive(param0: string, param1: com.facebook.flipper.core.FlipperReceiver): void;
					});
					public constructor();
					public reportError(param0: java.lang.Throwable): void;
					public reportErrorWithMetadata(param0: string, param1: string): void;
					public send(param0: string, param1: com.facebook.flipper.core.FlipperObject): void;
					public receive(param0: string, param1: com.facebook.flipper.core.FlipperReceiver): void;
					public send(param0: string, param1: com.facebook.flipper.core.FlipperArray): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class FlipperDynamic extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.FlipperDynamic>;
					public asInt(): number;
					public asLong(): number;
					public asObject(): com.facebook.flipper.core.FlipperObject;
					public asBoolean(): boolean;
					public asFloat(): number;
					public constructor(param0: any);
					public asString(): string;
					public asArray(): com.facebook.flipper.core.FlipperArray;
					public asDouble(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class FlipperObject extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.FlipperObject>;
					public getArray(param0: string): com.facebook.flipper.core.FlipperArray;
					public constructor(param0: string);
					public constructor(param0: org.json.JSONObject);
					public getObject(param0: string): com.facebook.flipper.core.FlipperObject;
					public getInt(param0: string): number;
					public toJsonString(): string;
					public getFloat(param0: string): number;
					public getString(param0: string): string;
					public equals(param0: any): boolean;
					public getBoolean(param0: string): boolean;
					public toString(): string;
					public getDouble(param0: string): number;
					public getDynamic(param0: string): com.facebook.flipper.core.FlipperDynamic;
					public contains(param0: string): boolean;
					public getLong(param0: string): number;
					public hashCode(): number;
				}
				export module FlipperObject {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.core.FlipperObject.Builder>;
						public constructor();
						public put(param0: string, param1: string): com.facebook.flipper.core.FlipperObject.Builder;
						public put(param0: string, param1: java.lang.Long): com.facebook.flipper.core.FlipperObject.Builder;
						public put(param0: string, param1: java.lang.Double): com.facebook.flipper.core.FlipperObject.Builder;
						public put(param0: string, param1: com.facebook.flipper.core.FlipperValue): com.facebook.flipper.core.FlipperObject.Builder;
						public put(param0: string, param1: java.lang.Float): com.facebook.flipper.core.FlipperObject.Builder;
						public build(): com.facebook.flipper.core.FlipperObject;
						public put(param0: string, param1: any): com.facebook.flipper.core.FlipperObject.Builder;
						public put(param0: string, param1: com.facebook.flipper.core.FlipperArray.Builder): com.facebook.flipper.core.FlipperObject.Builder;
						public put(param0: string, param1: java.lang.Boolean): com.facebook.flipper.core.FlipperObject.Builder;
						public put(param0: string, param1: java.lang.Integer): com.facebook.flipper.core.FlipperObject.Builder;
						public put(param0: string, param1: com.facebook.flipper.core.FlipperObject.Builder): com.facebook.flipper.core.FlipperObject.Builder;
						public put(param0: string, param1: com.facebook.flipper.core.FlipperObject): com.facebook.flipper.core.FlipperObject.Builder;
						public put(param0: string, param1: com.facebook.flipper.core.FlipperArray): com.facebook.flipper.core.FlipperObject.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class FlipperPlugin extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.FlipperPlugin>;
					/**
					 * Constructs a new instance of the com.facebook.flipper.core.FlipperPlugin interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getId(): string;
						onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						onDisconnect(): void;
						runInBackground(): boolean;
					});
					public constructor();
					public getId(): string;
					public onDisconnect(): void;
					public runInBackground(): boolean;
					public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class FlipperReceiver extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.FlipperReceiver>;
					/**
					 * Constructs a new instance of the com.facebook.flipper.core.FlipperReceiver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onReceive(param0: com.facebook.flipper.core.FlipperObject, param1: com.facebook.flipper.core.FlipperResponder): void;
					});
					public constructor();
					public onReceive(param0: com.facebook.flipper.core.FlipperObject, param1: com.facebook.flipper.core.FlipperResponder): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class FlipperResponder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.FlipperResponder>;
					/**
					 * Constructs a new instance of the com.facebook.flipper.core.FlipperResponder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						success(param0: com.facebook.flipper.core.FlipperObject): void;
						success(param0: com.facebook.flipper.core.FlipperArray): void;
						success(): void;
						error(param0: com.facebook.flipper.core.FlipperObject): void;
					});
					public constructor();
					public error(param0: com.facebook.flipper.core.FlipperObject): void;
					public success(param0: com.facebook.flipper.core.FlipperObject): void;
					public success(): void;
					public success(param0: com.facebook.flipper.core.FlipperArray): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class FlipperStateUpdateListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.FlipperStateUpdateListener>;
					/**
					 * Constructs a new instance of the com.facebook.flipper.core.FlipperStateUpdateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onUpdate(): void;
					});
					public constructor();
					public onUpdate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class FlipperValue extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.FlipperValue>;
					/**
					 * Constructs a new instance of the com.facebook.flipper.core.FlipperValue interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						toFlipperObject(): com.facebook.flipper.core.FlipperObject;
					});
					public constructor();
					public toFlipperObject(): com.facebook.flipper.core.FlipperObject;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class StateElement extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.StateElement>;
					public constructor(param0: string, param1: string);
					public getName(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module core {
				export class StateSummary extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.core.StateSummary>;
					public mList: java.util.List<com.facebook.flipper.core.StateSummary.StateElement>;
					public constructor();
					public addEntry(param0: string, param1: string): void;
				}
				export module StateSummary {
					export class State {
						public static class: java.lang.Class<com.facebook.flipper.core.StateSummary.State>;
						public static IN_PROGRESS: com.facebook.flipper.core.StateSummary.State;
						public static SUCCESS: com.facebook.flipper.core.StateSummary.State;
						public static FAILED: com.facebook.flipper.core.StateSummary.State;
						public static UNKNOWN: com.facebook.flipper.core.StateSummary.State;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static valueOf(param0: string): com.facebook.flipper.core.StateSummary.State;
						public static values(): native.Array<com.facebook.flipper.core.StateSummary.State>;
					}
					export class StateElement extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.core.StateSummary.StateElement>;
						public getState(): com.facebook.flipper.core.StateSummary.State;
						public constructor(param0: string, param1: com.facebook.flipper.core.StateSummary.State);
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export class NativePlugin extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.nativeplugins.NativePlugin>;
					/**
					 * Constructs a new instance of the com.facebook.flipper.nativeplugins.NativePlugin interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getTitle(): string;
						asFlipperPlugin(): com.facebook.flipper.nativeplugins.RawNativePlugin;
					});
					public constructor();
					public getTitle(): string;
					public asFlipperPlugin(): com.facebook.flipper.nativeplugins.RawNativePlugin;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export class NativePluginRegistry extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.nativeplugins.NativePluginRegistry>;
					public constructor(param0: com.facebook.flipper.core.FlipperClient);
					public register(param0: com.facebook.flipper.nativeplugins.NativePlugin): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export abstract class RawNativePlugin extends java.lang.Object implements com.facebook.flipper.core.FlipperPlugin {
					public static class: java.lang.Class<com.facebook.flipper.nativeplugins.RawNativePlugin>;
					public constructor(param0: string, param1: string);
					public getId(): string;
					public onDisconnect(): void;
					public runInBackground(): boolean;
					public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export module components {
					export class JsonSection extends java.lang.Object implements com.facebook.flipper.nativeplugins.components.UISection {
						public static class: java.lang.Class<com.facebook.flipper.nativeplugins.components.JsonSection>;
						public serialize(): com.facebook.flipper.core.FlipperObject;
						public constructor(param0: string, param1: com.facebook.flipper.core.FlipperObject);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export module components {
					export class Sidebar extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.nativeplugins.components.Sidebar>;
						public constructor();
						public serialize(): com.facebook.flipper.core.FlipperArray;
						public addSection(param0: com.facebook.flipper.nativeplugins.components.UISection): com.facebook.flipper.nativeplugins.components.Sidebar;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export module components {
					export class ToolbarSection extends java.lang.Object implements com.facebook.flipper.nativeplugins.components.UISection {
						public static class: java.lang.Class<com.facebook.flipper.nativeplugins.components.ToolbarSection>;
						public constructor();
						public addLink(param0: string, param1: string): com.facebook.flipper.nativeplugins.components.ToolbarSection;
						public serialize(): com.facebook.flipper.core.FlipperObject;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export module components {
					export class UISection extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.nativeplugins.components.UISection>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.nativeplugins.components.UISection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							serialize(): com.facebook.flipper.core.FlipperObject;
						});
						public constructor();
						public serialize(): com.facebook.flipper.core.FlipperObject;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export module table {
					export class Column extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.Column>;
						public id: string;
					}
					export module Column {
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.Column.Builder>;
							public showByDefault(param0: boolean): com.facebook.flipper.nativeplugins.table.Column.Builder;
							public isFilterable(param0: boolean): com.facebook.flipper.nativeplugins.table.Column.Builder;
							public displayWidthPx(param0: number): com.facebook.flipper.nativeplugins.table.Column.Builder;
							public constructor(param0: string);
							public displayName(param0: string): com.facebook.flipper.nativeplugins.table.Column.Builder;
							public displayWidthPercent(param0: number): com.facebook.flipper.nativeplugins.table.Column.Builder;
							public build(): com.facebook.flipper.nativeplugins.table.Column;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export module table {
					export class QueryableTableRowProvider extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.QueryableTableRowProvider>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.nativeplugins.table.QueryableTableRowProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getQueryResults(param0: string): com.facebook.flipper.nativeplugins.table.QueryableTableRowProvider.TableQueryResult;
						});
						public constructor();
						public getQueryResults(param0: string): com.facebook.flipper.nativeplugins.table.QueryableTableRowProvider.TableQueryResult;
					}
					export module QueryableTableRowProvider {
						export class TableQueryResult extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.QueryableTableRowProvider.TableQueryResult>;
							public constructor(param0: com.facebook.flipper.nativeplugins.table.TableMetadata, param1: java.util.List<any>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export module table {
					export class TableMetadata extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TableMetadata>;
					}
					export module TableMetadata {
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TableMetadata.Builder>;
							public constructor();
							public queryResponder(param0: com.facebook.flipper.nativeplugins.table.QueryableTableRowProvider): com.facebook.flipper.nativeplugins.table.TableMetadata.Builder;
							public build(): com.facebook.flipper.nativeplugins.table.TableMetadata;
							public columns(param0: native.Array<com.facebook.flipper.nativeplugins.table.Column>): com.facebook.flipper.nativeplugins.table.TableMetadata.Builder;
							public bottomToolbar(param0: com.facebook.flipper.nativeplugins.components.ToolbarSection): com.facebook.flipper.nativeplugins.table.TableMetadata.Builder;
							public topToolbar(param0: com.facebook.flipper.nativeplugins.components.ToolbarSection): com.facebook.flipper.nativeplugins.table.TableMetadata.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export module table {
					export abstract class TablePlugin extends java.lang.Object implements com.facebook.flipper.nativeplugins.NativePlugin {
						public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TablePlugin>;
						public constructor();
						public asFlipperPlugin(): com.facebook.flipper.nativeplugins.RawNativePlugin;
						public onConnect(param0: com.facebook.flipper.nativeplugins.table.TableRowDisplay): void;
						public getMetadata(): com.facebook.flipper.nativeplugins.table.TableMetadata;
						public onDisconnect(): void;
						public getTitle(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export module table {
					export abstract class TableRow extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TableRow>;
						public constructor(param0: string, param1: java.util.Map<com.facebook.flipper.nativeplugins.table.Column,any>, param2: com.facebook.flipper.nativeplugins.components.Sidebar);
						public equals(param0: any): boolean;
					}
					export module TableRow {
						export class BooleanValue extends java.lang.Object implements com.facebook.flipper.nativeplugins.table.TableRow.Value {
							public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TableRow.BooleanValue>;
							public constructor(param0: boolean);
							public serialize(): com.facebook.flipper.core.FlipperObject;
						}
						export class DurationValue extends java.lang.Object implements com.facebook.flipper.nativeplugins.table.TableRow.Value {
							public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TableRow.DurationValue>;
							public constructor(param0: number);
							public serialize(): com.facebook.flipper.core.FlipperObject;
						}
						export class IntValue extends java.lang.Object implements com.facebook.flipper.nativeplugins.table.TableRow.Value {
							public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TableRow.IntValue>;
							public constructor(param0: number);
							public serialize(): com.facebook.flipper.core.FlipperObject;
						}
						export class StringValue extends java.lang.Object implements com.facebook.flipper.nativeplugins.table.TableRow.Value {
							public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TableRow.StringValue>;
							public constructor(param0: string);
							public serialize(): com.facebook.flipper.core.FlipperObject;
						}
						export class TimeValue extends java.lang.Object implements com.facebook.flipper.nativeplugins.table.TableRow.Value {
							public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TableRow.TimeValue>;
							public constructor(param0: number);
							public serialize(): com.facebook.flipper.core.FlipperObject;
						}
						export class Value extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TableRow.Value>;
							/**
							 * Constructs a new instance of the com.facebook.flipper.nativeplugins.table.TableRow$Value interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								serialize(): com.facebook.flipper.core.FlipperObject;
							});
							public constructor();
							public serialize(): com.facebook.flipper.core.FlipperObject;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export module table {
					export class TableRowDisplay extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TableRowDisplay>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.nativeplugins.table.TableRowDisplay interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							updateRow(param0: com.facebook.flipper.nativeplugins.table.TableRow, param1: com.facebook.flipper.nativeplugins.table.TableMetadata): void;
							updateRows(param0: java.util.List<any>, param1: com.facebook.flipper.nativeplugins.table.TableMetadata): void;
						});
						public constructor();
						public updateRow(param0: com.facebook.flipper.nativeplugins.table.TableRow, param1: com.facebook.flipper.nativeplugins.table.TableMetadata): void;
						public updateRows(param0: java.util.List<any>, param1: com.facebook.flipper.nativeplugins.table.TableMetadata): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module nativeplugins {
				export module table {
					export class TableRowDisplayImpl extends java.lang.Object implements com.facebook.flipper.nativeplugins.table.TableRowDisplay {
						public static class: java.lang.Class<com.facebook.flipper.nativeplugins.table.TableRowDisplayImpl>;
						public updateRow(param0: com.facebook.flipper.nativeplugins.table.TableRow, param1: com.facebook.flipper.nativeplugins.table.TableMetadata): void;
						public updateRows(param0: java.util.List<any>, param1: com.facebook.flipper.nativeplugins.table.TableMetadata): void;
					}
				}
			}
		}
	}
}


declare module com {
	export module facebook {
		export module flipper {
			export module perflogger {
				export class FlipperPerfLogger extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.flipper.perflogger.FlipperPerfLogger>;
					/**
					 * Constructs a new instance of the com.facebook.flipper.perflogger.FlipperPerfLogger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						startMarker(param0: string): void;
						endMarker(param0: string): void;
						cancelMarker(param0: string): void;
					});
					public constructor();
					public endMarker(param0: string): void;
					public cancelMarker(param0: string): void;
					public startMarker(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module perflogger {
				export class NoOpFlipperPerfLogger extends java.lang.Object implements com.facebook.flipper.perflogger.FlipperPerfLogger {
					public static class: java.lang.Class<com.facebook.flipper.perflogger.NoOpFlipperPerfLogger>;
					public constructor();
					public endMarker(param0: string): void;
					public cancelMarker(param0: string): void;
					public startMarker(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module common {
					export abstract class BufferingFlipperPlugin extends java.lang.Object implements com.facebook.flipper.core.FlipperPlugin {
						public static class: java.lang.Class<com.facebook.flipper.plugins.common.BufferingFlipperPlugin>;
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public constructor();
						public send(param0: string, param1: com.facebook.flipper.core.FlipperObject): void;
						public isConnected(): boolean;
						public getId(): string;
						public runInBackground(): boolean;
						public getConnection(): com.facebook.flipper.core.FlipperConnection;
						public onDisconnect(): void;
					}
					export module BufferingFlipperPlugin {
						export class CachedFlipperEvent extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.common.BufferingFlipperPlugin.CachedFlipperEvent>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module common {
					export abstract class MainThreadFlipperReceiver extends java.lang.Object implements com.facebook.flipper.core.FlipperReceiver {
						public static class: java.lang.Class<com.facebook.flipper.plugins.common.MainThreadFlipperReceiver>;
						public constructor();
						public onReceiveOnMainThread(param0: com.facebook.flipper.core.FlipperObject, param1: com.facebook.flipper.core.FlipperResponder): void;
						public onReceive(param0: com.facebook.flipper.core.FlipperObject, param1: com.facebook.flipper.core.FlipperResponder): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module common {
					export class RingBuffer<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.common.RingBuffer<any>>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module crashreporter {
					export class CrashReporterPlugin extends java.lang.Object implements com.facebook.flipper.core.FlipperPlugin {
						public static class: java.lang.Class<com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin>;
						public static ID: string;
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public static getInstance(): com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;
						public setActivity(param0: globalAndroid.app.Activity): void;
						public getId(): string;
						public runInBackground(): boolean;
						public sendExceptionMessage(param0: java.lang.Thread, param1: java.lang.Throwable): void;
						public onDisconnect(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module databases {
					export class DatabaseDescriptor extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabaseDescriptor>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.plugins.databases.DatabaseDescriptor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							name(): string;
						});
						public constructor();
						public name(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module databases {
					export abstract class DatabaseDriver<DESCRIPTOR>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabaseDriver<any>>;
						public getDatabases(): java.util.List<DESCRIPTOR>;
						public executeSQL(param0: DESCRIPTOR, param1: string): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseExecuteSqlResponse;
						public getTableData(param0: DESCRIPTOR, param1: string, param2: string, param3: boolean, param4: number, param5: number): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableDataResponse;
						public constructor(param0: globalAndroid.content.Context);
						public getContext(): globalAndroid.content.Context;
						public getTableNames(param0: DESCRIPTOR): java.util.List<string>;
						public getTableStructure(param0: DESCRIPTOR, param1: string): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableStructureResponse;
						public getTableInfo(param0: DESCRIPTOR, param1: string): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableInfoResponse;
					}
					export module DatabaseDriver {
						export class DatabaseExecuteSqlResponse extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseExecuteSqlResponse>;
							public static TYPE_SELECT: string;
							public static TYPE_INSERT: string;
							public static TYPE_UPDATE_DELETE: string;
							public static TYPE_RAW: string;
							public type: string;
							public columns: java.util.List<string>;
							public values: java.util.List<java.util.List<any>>;
							public insertedId: java.lang.Long;
							public affectedCount: java.lang.Integer;
							public static successfulUpdateDelete(param0: number): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseExecuteSqlResponse;
							public static successfulRawQuery(): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseExecuteSqlResponse;
							public static successfulInsert(param0: number): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseExecuteSqlResponse;
							public static successfulSelect(param0: java.util.List<string>, param1: java.util.List<java.util.List<any>>): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseExecuteSqlResponse;
						}
						export module DatabaseExecuteSqlResponse {
							export class Type extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseExecuteSqlResponse.Type>;
								/**
								 * Constructs a new instance of the com.facebook.flipper.plugins.databases.DatabaseDriver$DatabaseExecuteSqlResponse$Type interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(param0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(param0: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
						export class DatabaseGetTableDataResponse extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableDataResponse>;
							public columns: java.util.List<string>;
							public values: java.util.List<java.util.List<any>>;
							public start: java.lang.Integer;
							public count: java.lang.Integer;
							public total: java.lang.Long;
							public constructor(param0: java.util.List<string>, param1: java.util.List<java.util.List<any>>, param2: number, param3: number, param4: number);
						}
						export class DatabaseGetTableInfoResponse extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableInfoResponse>;
							public definition: string;
							public constructor(param0: string);
						}
						export class DatabaseGetTableStructureResponse extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableStructureResponse>;
							public structureColumns: java.util.List<string>;
							public structureValues: java.util.List<java.util.List<any>>;
							public indexesColumns: java.util.List<string>;
							public indexesValues: java.util.List<java.util.List<any>>;
							public constructor(param0: java.util.List<string>, param1: java.util.List<java.util.List<any>>, param2: java.util.List<string>, param3: java.util.List<java.util.List<any>>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module databases {
					export class DatabasesErrorCodes extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabasesErrorCodes>;
						public static ERROR_INVALID_REQUEST: number;
						public static ERROR_INVALID_REQUEST_MESSAGE: string;
						public static ERROR_DATABASE_INVALID: number;
						public static ERROR_DATABASE_INVALID_MESSAGE: string;
						public static ERROR_SQL_EXECUTION_EXCEPTION: number;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module databases {
					export class DatabasesFlipperPlugin extends java.lang.Object implements com.facebook.flipper.core.FlipperPlugin {
						public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin>;
						public constructor(param0: java.util.List<com.facebook.flipper.plugins.databases.DatabaseDriver<any>>);
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: com.facebook.flipper.plugins.databases.DatabaseDriver<any>);
						public getId(): string;
						public runInBackground(): boolean;
						public onDisconnect(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module databases {
					export class DatabasesManager extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabasesManager>;
						public constructor(param0: java.util.List<com.facebook.flipper.plugins.databases.DatabaseDriver<any>>);
						public isConnected(): boolean;
						public setConnection(param0: com.facebook.flipper.core.FlipperConnection): void;
					}
					export module DatabasesManager {
						export class DatabaseDescriptorHolder extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabasesManager.DatabaseDescriptorHolder>;
							public id: number;
							public databaseDriver: com.facebook.flipper.plugins.databases.DatabaseDriver<any>;
							public databaseDescriptor: com.facebook.flipper.plugins.databases.DatabaseDescriptor;
							public constructor(param0: number, param1: com.facebook.flipper.plugins.databases.DatabaseDriver<any>, param2: com.facebook.flipper.plugins.databases.DatabaseDescriptor);
						}
						export class ExecuteSqlRequest extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabasesManager.ExecuteSqlRequest>;
							public databaseId: number;
							public value: string;
						}
						export class GetTableDataRequest extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabasesManager.GetTableDataRequest>;
							public databaseId: number;
							public table: string;
							public order: string;
							public reverse: boolean;
							public start: number;
							public count: number;
						}
						export class GetTableInfoRequest extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabasesManager.GetTableInfoRequest>;
							public databaseId: number;
							public table: string;
						}
						export class GetTableStructureRequest extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.DatabasesManager.GetTableStructureRequest>;
							public databaseId: number;
							public table: string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module databases {
					export class ObjectMapper extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.databases.ObjectMapper>;
						public static flipperObjectToGetTableInfoRequest(param0: com.facebook.flipper.core.FlipperObject): com.facebook.flipper.plugins.databases.DatabasesManager.GetTableInfoRequest;
						public constructor();
						public static databaseListToFlipperArray(param0: java.util.Collection<com.facebook.flipper.plugins.databases.DatabasesManager.DatabaseDescriptorHolder>): com.facebook.flipper.core.FlipperArray;
						public static flipperObjectToGetTableDataRequest(param0: com.facebook.flipper.core.FlipperObject): com.facebook.flipper.plugins.databases.DatabasesManager.GetTableDataRequest;
						public static databaseGetTableDataReponseToFlipperObject(param0: com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableDataResponse): com.facebook.flipper.core.FlipperObject;
						public static toErrorFlipperObject(param0: number, param1: string): com.facebook.flipper.core.FlipperObject;
						public static flipperObjectToExecuteSqlRequest(param0: com.facebook.flipper.core.FlipperObject): com.facebook.flipper.plugins.databases.DatabasesManager.ExecuteSqlRequest;
						public static databaseExecuteSqlResponseToFlipperObject(param0: com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseExecuteSqlResponse): com.facebook.flipper.core.FlipperObject;
						public static flipperObjectToGetTableStructureRequest(param0: com.facebook.flipper.core.FlipperObject): com.facebook.flipper.plugins.databases.DatabasesManager.GetTableStructureRequest;
						public static databaseGetTableStructureResponseToFlipperObject(param0: com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableStructureResponse): com.facebook.flipper.core.FlipperObject;
						public static databaseGetTableInfoResponseToFlipperObject(param0: com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableInfoResponse): com.facebook.flipper.core.FlipperObject;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module databases {
					export module impl {
						export class SqliteDatabaseConnectionProvider extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.impl.SqliteDatabaseConnectionProvider>;
							/**
							 * Constructs a new instance of the com.facebook.flipper.plugins.databases.impl.SqliteDatabaseConnectionProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								openDatabase(param0: java.io.File): globalAndroid.database.sqlite.SQLiteDatabase;
							});
							public constructor();
							public openDatabase(param0: java.io.File): globalAndroid.database.sqlite.SQLiteDatabase;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module databases {
					export module impl {
						export class SqliteDatabaseDriver extends com.facebook.flipper.plugins.databases.DatabaseDriver<com.facebook.flipper.plugins.databases.impl.SqliteDatabaseDriver.SqliteDatabaseDescriptor> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.impl.SqliteDatabaseDriver>;
							public getTableNames(param0: any): java.util.List<string>;
							public constructor(param0: globalAndroid.content.Context, param1: com.facebook.flipper.plugins.databases.impl.SqliteDatabaseProvider, param2: com.facebook.flipper.plugins.databases.impl.SqliteDatabaseConnectionProvider);
							public constructor(param0: globalAndroid.content.Context, param1: com.facebook.flipper.plugins.databases.impl.SqliteDatabaseProvider);
							public executeSQL(param0: com.facebook.flipper.plugins.databases.impl.SqliteDatabaseDriver.SqliteDatabaseDescriptor, param1: string): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseExecuteSqlResponse;
							public getTableData(param0: com.facebook.flipper.plugins.databases.impl.SqliteDatabaseDriver.SqliteDatabaseDescriptor, param1: string, param2: string, param3: boolean, param4: number, param5: number): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableDataResponse;
							public getDatabases(): java.util.List<com.facebook.flipper.plugins.databases.impl.SqliteDatabaseDriver.SqliteDatabaseDescriptor>;
							public getTableData(param0: any, param1: string, param2: string, param3: boolean, param4: number, param5: number): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableDataResponse;
							public getTableInfo(param0: com.facebook.flipper.plugins.databases.impl.SqliteDatabaseDriver.SqliteDatabaseDescriptor, param1: string): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableInfoResponse;
							public getTableNames(param0: com.facebook.flipper.plugins.databases.impl.SqliteDatabaseDriver.SqliteDatabaseDescriptor): java.util.List<string>;
							public getTableStructure(param0: com.facebook.flipper.plugins.databases.impl.SqliteDatabaseDriver.SqliteDatabaseDescriptor, param1: string): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableStructureResponse;
							public getDatabases(): java.util.List<any>;
							public executeSQL(param0: any, param1: string): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseExecuteSqlResponse;
							public getTableStructure(param0: any, param1: string): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableStructureResponse;
							public getTableInfo(param0: any, param1: string): com.facebook.flipper.plugins.databases.DatabaseDriver.DatabaseGetTableInfoResponse;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module SqliteDatabaseDriver {
							export class SqliteDatabaseDescriptor extends java.lang.Object implements com.facebook.flipper.plugins.databases.DatabaseDescriptor {
								public static class: java.lang.Class<com.facebook.flipper.plugins.databases.impl.SqliteDatabaseDriver.SqliteDatabaseDescriptor>;
								public file: java.io.File;
								public name(): string;
								public constructor(param0: java.io.File);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module databases {
					export module impl {
						export class SqliteDatabaseProvider extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.databases.impl.SqliteDatabaseProvider>;
							/**
							 * Constructs a new instance of the com.facebook.flipper.plugins.databases.impl.SqliteDatabaseProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getDatabaseFiles(): java.util.List<java.io.File>;
							});
							public constructor();
							public getDatabaseFiles(): java.util.List<java.io.File>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module fresco {
					export class FrescoFlipperDebugPrefHelper extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.fresco.FrescoFlipperDebugPrefHelper>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.plugins.fresco.FrescoFlipperDebugPrefHelper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setDebugOverlayEnabled(param0: boolean): void;
							isDebugOverlayEnabled(): boolean;
							setDebugOverlayEnabledListener(param0: com.facebook.flipper.plugins.fresco.FrescoFlipperDebugPrefHelper.Listener): void;
						});
						public constructor();
						public isDebugOverlayEnabled(): boolean;
						public setDebugOverlayEnabled(param0: boolean): void;
						public setDebugOverlayEnabledListener(param0: com.facebook.flipper.plugins.fresco.FrescoFlipperDebugPrefHelper.Listener): void;
					}
					export module FrescoFlipperDebugPrefHelper {
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.fresco.FrescoFlipperDebugPrefHelper.Listener>;
							/**
							 * Constructs a new instance of the com.facebook.flipper.plugins.fresco.FrescoFlipperDebugPrefHelper$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onEnabledStatusChanged(param0: boolean): void;
							});
							public constructor();
							public onEnabledStatusChanged(param0: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module fresco {
					export class FrescoFlipperPlugin extends com.facebook.flipper.plugins.common.BufferingFlipperPlugin implements com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener, com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker.Listener {
						public static class: java.lang.Class<com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin>;
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public constructor();
						public constructor(param0: com.facebook.imagepipeline.debug.DebugImageTracker, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory, param2: com.facebook.flipper.plugins.fresco.objecthelper.FlipperObjectHelper, param3: com.facebook.common.memory.manager.DebugMemoryManager, param4: com.facebook.flipper.perflogger.FlipperPerfLogger, param5: com.facebook.flipper.plugins.fresco.FrescoFlipperDebugPrefHelper, param6: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker);
						public onCloseableReferenceLeak(param0: com.facebook.common.references.SharedReference<any>, param1: java.lang.Throwable): void;
						public sendDebugOverlayEnabledEvent(param0: boolean): void;
						public getFlipperImageTracker(): com.facebook.imagepipeline.debug.FlipperImageTracker;
						public getId(): string;
						public static getStackTraceString(param0: java.lang.Throwable): string;
						public runInBackground(): boolean;
						public onImageVisibilityUpdated(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData, param1: number): void;
						public onImageLoadStatusUpdated(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData, param1: number): void;
						public onDisconnect(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module fresco {
					export class FrescoFlipperRequestListener extends com.facebook.imagepipeline.listener.BaseRequestListener {
						public static class: java.lang.Class<com.facebook.flipper.plugins.fresco.FrescoFlipperRequestListener>;
						public constructor();
						public onRequestCancellation(param0: string): void;
						public onRequestSuccess(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: boolean): void;
						public onRequestFailure(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: java.lang.Throwable, param3: boolean): void;
						public constructor(param0: com.facebook.imagepipeline.debug.DebugImageTracker);
						public onRequestStart(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: string, param3: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module fresco {
					export module objecthelper {
						export abstract class FlipperObjectHelper extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.fresco.objecthelper.FlipperObjectHelper>;
							public constructor();
							public toFlipperObject(param0: com.facebook.imagepipeline.common.ImageDecodeOptions): com.facebook.flipper.core.FlipperObject;
							public toFlipperObject(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.flipper.core.FlipperObject;
							public toFlipperObject(param0: com.facebook.drawee.generic.RoundingParams): com.facebook.flipper.core.FlipperObject;
							public toFlipperObject(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData): com.facebook.flipper.core.FlipperObject;
							public toFlipperObject(param0: com.facebook.imagepipeline.common.RotationOptions): com.facebook.flipper.core.FlipperObject;
							public toFlipperObject(param0: com.facebook.imagepipeline.image.ImageInfo): com.facebook.flipper.core.FlipperObject;
							public fromCallerContext(param0: any): com.facebook.flipper.core.FlipperArray;
							public toFlipperObject(param0: com.facebook.imagepipeline.image.QualityInfo): com.facebook.flipper.core.FlipperObject;
							public toFlipperObject(param0: com.facebook.imagepipeline.common.ResizeOptions): com.facebook.flipper.core.FlipperObject;
							public keyValuePair(param0: string, param1: string): com.facebook.flipper.core.FlipperObject;
							public toFlipperObject(param0: java.util.Map<string,string>): com.facebook.flipper.core.FlipperObject;
							public addImageRequestProperties(param0: com.facebook.flipper.core.FlipperObject.Builder, param1: com.facebook.imagepipeline.request.ImageRequest): com.facebook.flipper.core.FlipperObject.Builder;
							public toFlipperObject(param0: com.facebook.imagepipeline.debug.FlipperImageTracker.ImageDebugData): com.facebook.flipper.core.FlipperObject;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class ApplicationWrapper extends java.lang.Object implements globalAndroid.app.Application.ActivityLifecycleCallbacks {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.ApplicationWrapper>;
						public onActivitySaveInstanceState(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle): void;
						public onActivityDestroyed(param0: globalAndroid.app.Activity): void;
						public postDelayed(param0: java.lang.Runnable, param1: number): void;
						public onActivityStarted(param0: globalAndroid.app.Activity): void;
						public onActivityResumed(param0: globalAndroid.app.Activity): void;
						public getActivityStack(): java.util.List<globalAndroid.app.Activity>;
						public onActivityCreated(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle): void;
						public onActivityStopped(param0: globalAndroid.app.Activity): void;
						public onActivityPaused(param0: globalAndroid.app.Activity): void;
						public setListener(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper.ActivityStackChangedListener): void;
						public getViewRoots(): java.util.List<globalAndroid.view.View>;
						public constructor(param0: globalAndroid.app.Application);
						public getApplication(): globalAndroid.app.Application;
					}
					export module ApplicationWrapper {
						export class ActivityStackChangedListener extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.ApplicationWrapper.ActivityStackChangedListener>;
							/**
							 * Constructs a new instance of the com.facebook.flipper.plugins.inspector.ApplicationWrapper$ActivityStackChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onActivityStackChanged(param0: java.util.List<globalAndroid.app.Activity>): void;
							});
							public constructor();
							public onActivityStackChanged(param0: java.util.List<globalAndroid.app.Activity>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class BoundsDrawable extends globalAndroid.graphics.drawable.Drawable {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.BoundsDrawable>;
						public static COLOR_HIGHLIGHT_CONTENT: number;
						public static COLOR_HIGHLIGHT_PADDING: number;
						public static COLOR_HIGHLIGHT_MARGIN: number;
						public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
						public static getInstance(param0: globalAndroid.view.View, param1: number): com.facebook.flipper.plugins.inspector.BoundsDrawable;
						public draw(param0: globalAndroid.graphics.Canvas): void;
						public setBounds(param0: globalAndroid.graphics.Rect, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Rect): void;
						public setBounds(param0: globalAndroid.graphics.Rect): void;
						public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
						public setBounds(param0: number, param1: number, param2: number, param3: number): void;
						public getOpacity(): number;
						public static getInstance(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.Rect, param4: globalAndroid.graphics.Rect): com.facebook.flipper.plugins.inspector.BoundsDrawable;
						public setAlpha(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class DescriptorMapping extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.DescriptorMapping>;
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public constructor();
						public register(param0: java.lang.Class<any>, param1: com.facebook.flipper.plugins.inspector.NodeDescriptor<any>): void;
						public static withDefaults(): com.facebook.flipper.plugins.inspector.DescriptorMapping;
						public descriptorForClass(param0: java.lang.Class<any>): com.facebook.flipper.plugins.inspector.NodeDescriptor<any>;
						public onDisconnect(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class HiddenNode extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.HiddenNode>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.plugins.inspector.HiddenNode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class HighlightedOverlay extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.HighlightedOverlay>;
						public static setHighlighted(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.Rect, param4: boolean): void;
						public constructor();
						public static removeHighlight(param0: globalAndroid.view.View): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class InspectorFlipperPlugin extends java.lang.Object implements com.facebook.flipper.core.FlipperPlugin {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin>;
						public constructor(param0: globalAndroid.content.Context, param1: com.facebook.flipper.plugins.inspector.DescriptorMapping);
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public constructor(param0: globalAndroid.content.Context, param1: com.facebook.flipper.plugins.inspector.DescriptorMapping, param2: java.util.List<com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin.ExtensionCommand>);
						public searchTree(param0: string, param1: any, param2: boolean): com.facebook.flipper.plugins.inspector.SearchResultNode;
						public getId(): string;
						public runInBackground(): boolean;
						public onDisconnect(): void;
					}
					export module InspectorFlipperPlugin {
						export class ExtensionCommand extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin.ExtensionCommand>;
							/**
							 * Constructs a new instance of the com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin$ExtensionCommand interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								command(): string;
								receiver(param0: com.facebook.flipper.plugins.inspector.ObjectTracker, param1: com.facebook.flipper.core.FlipperConnection): com.facebook.flipper.core.FlipperReceiver;
							});
							public constructor();
							public command(): string;
							public receiver(param0: com.facebook.flipper.plugins.inspector.ObjectTracker, param1: com.facebook.flipper.core.FlipperConnection): com.facebook.flipper.core.FlipperReceiver;
						}
						export class TouchOverlayView extends globalAndroid.view.View implements com.facebook.flipper.plugins.inspector.HiddenNode {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin.TouchOverlayView>;
							public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
							public onHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
							public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
							public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
							public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
							public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
							public sendAccessibilityEvent(param0: number): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public constructor(param0: com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin, param1: globalAndroid.content.Context);
							public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
							public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class InspectorValue<T>  extends com.facebook.flipper.core.FlipperValue {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.InspectorValue<any>>;
						public toFlipperObject(): com.facebook.flipper.core.FlipperObject;
						public static immutable(param0: com.facebook.flipper.plugins.inspector.InspectorValue.Type<any>, param1: any): com.facebook.flipper.plugins.inspector.InspectorValue<any>;
						public static immutable(param0: any): com.facebook.flipper.plugins.inspector.InspectorValue<any>;
						public static mutable(param0: com.facebook.flipper.plugins.inspector.InspectorValue.Type<any>, param1: any): com.facebook.flipper.plugins.inspector.InspectorValue<any>;
						public static mutable(param0: any): com.facebook.flipper.plugins.inspector.InspectorValue<any>;
					}
					export module InspectorValue {
						export class Type<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.InspectorValue.Type<any>>;
							public static Auto: com.facebook.flipper.plugins.inspector.InspectorValue.Type<any>;
							public static Text: com.facebook.flipper.plugins.inspector.InspectorValue.Type<string>;
							public static Number: com.facebook.flipper.plugins.inspector.InspectorValue.Type<java.lang.Number>;
							public static Boolean: com.facebook.flipper.plugins.inspector.InspectorValue.Type<java.lang.Boolean>;
							public static Enum: com.facebook.flipper.plugins.inspector.InspectorValue.Type<string>;
							public static Color: com.facebook.flipper.plugins.inspector.InspectorValue.Type<java.lang.Integer>;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class LinesDrawable extends globalAndroid.graphics.drawable.Drawable {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.LinesDrawable>;
						public static getInstance(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.Rect, param4: globalAndroid.graphics.Rect): com.facebook.flipper.plugins.inspector.LinesDrawable;
						public static getInstance(param0: globalAndroid.view.View, param1: number): com.facebook.flipper.plugins.inspector.LinesDrawable;
						public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
						public draw(param0: globalAndroid.graphics.Canvas): void;
						public setBounds(param0: globalAndroid.graphics.Rect, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Rect): void;
						public setBounds(param0: globalAndroid.graphics.Rect): void;
						public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
						public setBounds(param0: number, param1: number, param2: number, param3: number): void;
						public getOpacity(): number;
						public setAlpha(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class Named<ValueType>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.Named<any>>;
						public getValue(): ValueType;
						public constructor(param0: string, param1: ValueType);
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export abstract class NodeDescriptor<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.NodeDescriptor<any>>;
						public mConnection: com.facebook.flipper.core.FlipperConnection;
						public getExtraInfo(param0: T): com.facebook.flipper.core.FlipperObject;
						public setValue(param0: T, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
						public axHitTest(param0: T, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public invalidate(param0: T): void;
						public init(param0: T): void;
						public invalidateAX(param0: T): void;
						public setHighlighted(param0: T, param1: boolean, param2: boolean): void;
						public getData(param0: T): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						public getDecoration(param0: T): string;
						public connected(): boolean;
						public getAXName(param0: T): string;
						public getAXDecoration(param0: T): string;
						public getChildAt(param0: T, param1: number): any;
						public constructor();
						public getAXChildCount(param0: T): number;
						public getAXChildAt(param0: T, param1: number): any;
						public getName(param0: T): string;
						public getAXAttributes(param0: T): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public matches(param0: string, param1: T): boolean;
						public descriptorForClass(param0: java.lang.Class<any>): com.facebook.flipper.plugins.inspector.NodeDescriptor<any>;
						public getAttributes(param0: T): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public getAXData(param0: T): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						public hitTest(param0: T, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public getId(param0: T): string;
						public getChildCount(param0: T): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class ObjectTracker extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.ObjectTracker>;
						public constructor();
						public put(param0: string, param1: any): void;
						public get(param0: string): any;
						public contains(param0: string): boolean;
						public clear(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class SearchResultNode extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.SearchResultNode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export abstract class SelfRegisteringNodeDescriptor<T>  extends com.facebook.flipper.plugins.inspector.NodeDescriptor<any> {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.SelfRegisteringNodeDescriptor<any>>;
						public constructor();
						public register(param0: com.facebook.flipper.plugins.inspector.DescriptorMapping): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export class Touch extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.Touch>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.plugins.inspector.Touch interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							finish(): void;
							continueWithOffset(param0: number, param1: number, param2: number): void;
							containedIn(param0: number, param1: number, param2: number, param3: number): boolean;
						});
						public constructor();
						public containedIn(param0: number, param1: number, param2: number, param3: number): boolean;
						public finish(): void;
						public continueWithOffset(param0: number, param1: number, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class ActivityDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<globalAndroid.app.Activity> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.ActivityDescriptor>;
							public setHighlighted(param0: globalAndroid.app.Activity, param1: boolean, param2: boolean): void;
							public getChildCount(param0: globalAndroid.app.Activity): number;
							public setValue(param0: globalAndroid.app.Activity, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public matches(param0: string, param1: globalAndroid.app.Activity): boolean;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public init(param0: any): void;
							public getId(param0: globalAndroid.app.Activity): string;
							public matches(param0: string, param1: any): boolean;
							public getData(param0: globalAndroid.app.Activity): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public constructor();
							public getChildAt(param0: any, param1: number): any;
							public getDecoration(param0: globalAndroid.app.Activity): string;
							public getChildCount(param0: any): number;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getName(param0: globalAndroid.app.Activity): string;
							public getAttributes(param0: globalAndroid.app.Activity): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public getDecoration(param0: any): string;
							public getId(param0: any): string;
							public getName(param0: any): string;
							public hitTest(param0: globalAndroid.app.Activity, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public init(param0: globalAndroid.app.Activity): void;
							public getChildAt(param0: globalAndroid.app.Activity, param1: number): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class ApplicationDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<com.facebook.flipper.plugins.inspector.ApplicationWrapper> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.ApplicationDescriptor>;
							public static setSearchActive(param0: boolean): void;
							public hitTest(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getName(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper): string;
							public getExtraInfo(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper): com.facebook.flipper.core.FlipperObject;
							public getData(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public init(param0: any): void;
							public matches(param0: string, param1: any): boolean;
							public setHighlighted(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper, param1: boolean, param2: boolean): void;
							public constructor();
							public static getSearchActive(): boolean;
							public getId(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper): string;
							public getChildAt(param0: any, param1: number): any;
							public axHitTest(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public matches(param0: string, param1: com.facebook.flipper.plugins.inspector.ApplicationWrapper): boolean;
							public getDecoration(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper): string;
							public getAXName(param0: any): string;
							public static clearEditedDelegates(): void;
							public getChildCount(param0: any): number;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getAXChildAt(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper, param1: number): any;
							public init(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper): void;
							public getExtraInfo(param0: any): com.facebook.flipper.core.FlipperObject;
							public getDecoration(param0: any): string;
							public setValue(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getId(param0: any): string;
							public getName(param0: any): string;
							public getAXName(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper): string;
							public getChildAt(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper, param1: number): any;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public getAXChildAt(param0: any, param1: number): any;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getAttributes(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public axHitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getChildCount(param0: com.facebook.flipper.plugins.inspector.ApplicationWrapper): number;
						}
						export module ApplicationDescriptor {
							export class NodeKey extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.ApplicationDescriptor.NodeKey>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class DialogDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<globalAndroid.app.Dialog> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.DialogDescriptor>;
							public matches(param0: string, param1: globalAndroid.app.Dialog): boolean;
							public setValue(param0: globalAndroid.app.Dialog, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getId(param0: globalAndroid.app.Dialog): string;
							public init(param0: any): void;
							public hitTest(param0: globalAndroid.app.Dialog, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public matches(param0: string, param1: any): boolean;
							public getChildCount(param0: globalAndroid.app.Dialog): number;
							public constructor();
							public getChildAt(param0: any, param1: number): any;
							public getName(param0: globalAndroid.app.Dialog): string;
							public getDecoration(param0: globalAndroid.app.Dialog): string;
							public getChildCount(param0: any): number;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public setHighlighted(param0: globalAndroid.app.Dialog, param1: boolean, param2: boolean): void;
							public getAttributes(param0: globalAndroid.app.Dialog): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public getDecoration(param0: any): string;
							public getId(param0: any): string;
							public getName(param0: any): string;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public init(param0: globalAndroid.app.Dialog): void;
							public getData(param0: globalAndroid.app.Dialog): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getChildAt(param0: globalAndroid.app.Dialog, param1: number): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class DialogFragmentDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<globalAndroid.app.DialogFragment> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.DialogFragmentDescriptor>;
							public setHighlighted(param0: globalAndroid.app.DialogFragment, param1: boolean, param2: boolean): void;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public init(param0: any): void;
							public getChildCount(param0: globalAndroid.app.DialogFragment): number;
							public matches(param0: string, param1: any): boolean;
							public getName(param0: globalAndroid.app.DialogFragment): string;
							public setValue(param0: globalAndroid.app.DialogFragment, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public init(param0: globalAndroid.app.DialogFragment): void;
							public getId(param0: globalAndroid.app.DialogFragment): string;
							public constructor();
							public getChildAt(param0: any, param1: number): any;
							public getChildAt(param0: globalAndroid.app.DialogFragment, param1: number): any;
							public getChildCount(param0: any): number;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getAttributes(param0: globalAndroid.app.DialogFragment): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public getDecoration(param0: globalAndroid.app.DialogFragment): string;
							public getExtraInfo(param0: any): com.facebook.flipper.core.FlipperObject;
							public getDecoration(param0: any): string;
							public getId(param0: any): string;
							public getName(param0: any): string;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public hitTest(param0: globalAndroid.app.DialogFragment, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public matches(param0: string, param1: globalAndroid.app.DialogFragment): boolean;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getExtraInfo(param0: globalAndroid.app.DialogFragment): com.facebook.flipper.core.FlipperObject;
							public getData(param0: globalAndroid.app.DialogFragment): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class DrawableDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<globalAndroid.graphics.drawable.Drawable> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.DrawableDescriptor>;
							public getChildCount(param0: globalAndroid.graphics.drawable.Drawable): number;
							public setValue(param0: globalAndroid.graphics.drawable.Drawable, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getAttributes(param0: globalAndroid.graphics.drawable.Drawable): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public matches(param0: string, param1: globalAndroid.graphics.drawable.Drawable): boolean;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getData(param0: globalAndroid.graphics.drawable.Drawable): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public init(param0: any): void;
							public getId(param0: globalAndroid.graphics.drawable.Drawable): string;
							public matches(param0: string, param1: any): boolean;
							public constructor();
							public getName(param0: globalAndroid.graphics.drawable.Drawable): string;
							public getChildAt(param0: any, param1: number): any;
							public init(param0: globalAndroid.graphics.drawable.Drawable): void;
							public getChildCount(param0: any): number;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public hitTest(param0: globalAndroid.graphics.drawable.Drawable, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getDecoration(param0: any): string;
							public getId(param0: any): string;
							public setHighlighted(param0: globalAndroid.graphics.drawable.Drawable, param1: boolean, param2: boolean): void;
							public getName(param0: any): string;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getChildAt(param0: globalAndroid.graphics.drawable.Drawable, param1: number): any;
							public getDecoration(param0: globalAndroid.graphics.drawable.Drawable): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class FragmentDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<globalAndroid.app.Fragment> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.FragmentDescriptor>;
							public init(param0: globalAndroid.app.Fragment): void;
							public matches(param0: string, param1: globalAndroid.app.Fragment): boolean;
							public getChildAt(param0: globalAndroid.app.Fragment, param1: number): any;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getDecoration(param0: globalAndroid.app.Fragment): string;
							public getId(param0: globalAndroid.app.Fragment): string;
							public init(param0: any): void;
							public getData(param0: globalAndroid.app.Fragment): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public matches(param0: string, param1: any): boolean;
							public getExtraInfo(param0: globalAndroid.app.Fragment): com.facebook.flipper.core.FlipperObject;
							public getName(param0: globalAndroid.app.Fragment): string;
							public constructor();
							public getChildAt(param0: any, param1: number): any;
							public getAttributes(param0: globalAndroid.app.Fragment): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public getChildCount(param0: any): number;
							public hitTest(param0: globalAndroid.app.Fragment, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public setValue(param0: globalAndroid.app.Fragment, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public setHighlighted(param0: globalAndroid.app.Fragment, param1: boolean, param2: boolean): void;
							public getExtraInfo(param0: any): com.facebook.flipper.core.FlipperObject;
							public getDecoration(param0: any): string;
							public getId(param0: any): string;
							public getName(param0: any): string;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getChildCount(param0: globalAndroid.app.Fragment): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class ObjectDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<any> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.ObjectDescriptor>;
							public constructor();
							public getChildAt(param0: any, param1: number): any;
							public getChildCount(param0: any): number;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getDecoration(param0: any): string;
							public getId(param0: any): string;
							public init(param0: any): void;
							public getName(param0: any): string;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public matches(param0: string, param1: any): boolean;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class SupportDialogFragmentDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<androidx.fragment.app.DialogFragment> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.SupportDialogFragmentDescriptor>;
							public getDecoration(param0: androidx.fragment.app.DialogFragment): string;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getData(param0: androidx.fragment.app.DialogFragment): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public init(param0: any): void;
							public matches(param0: string, param1: any): boolean;
							public constructor();
							public getChildAt(param0: any, param1: number): any;
							public setValue(param0: androidx.fragment.app.DialogFragment, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getChildCount(param0: any): number;
							public getAttributes(param0: androidx.fragment.app.DialogFragment): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getName(param0: androidx.fragment.app.DialogFragment): string;
							public init(param0: androidx.fragment.app.DialogFragment): void;
							public getExtraInfo(param0: any): com.facebook.flipper.core.FlipperObject;
							public getDecoration(param0: any): string;
							public getId(param0: androidx.fragment.app.DialogFragment): string;
							public hitTest(param0: androidx.fragment.app.DialogFragment, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getId(param0: any): string;
							public getChildCount(param0: androidx.fragment.app.DialogFragment): number;
							public getName(param0: any): string;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getExtraInfo(param0: androidx.fragment.app.DialogFragment): com.facebook.flipper.core.FlipperObject;
							public getChildAt(param0: androidx.fragment.app.DialogFragment, param1: number): any;
							public setHighlighted(param0: androidx.fragment.app.DialogFragment, param1: boolean, param2: boolean): void;
							public matches(param0: string, param1: androidx.fragment.app.DialogFragment): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class SupportFragmentDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<androidx.fragment.app.Fragment> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.SupportFragmentDescriptor>;
							public getChildAt(param0: androidx.fragment.app.Fragment, param1: number): any;
							public getDecoration(param0: androidx.fragment.app.Fragment): string;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public getId(param0: androidx.fragment.app.Fragment): string;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public init(param0: any): void;
							public getExtraInfo(param0: androidx.fragment.app.Fragment): com.facebook.flipper.core.FlipperObject;
							public setHighlighted(param0: androidx.fragment.app.Fragment, param1: boolean, param2: boolean): void;
							public matches(param0: string, param1: any): boolean;
							public constructor();
							public init(param0: androidx.fragment.app.Fragment): void;
							public getChildAt(param0: any, param1: number): any;
							public setValue(param0: androidx.fragment.app.Fragment, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getChildCount(param0: any): number;
							public getAttributes(param0: androidx.fragment.app.Fragment): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getExtraInfo(param0: any): com.facebook.flipper.core.FlipperObject;
							public getDecoration(param0: any): string;
							public getId(param0: any): string;
							public getName(param0: androidx.fragment.app.Fragment): string;
							public getName(param0: any): string;
							public hitTest(param0: androidx.fragment.app.Fragment, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public matches(param0: string, param1: androidx.fragment.app.Fragment): boolean;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public getData(param0: androidx.fragment.app.Fragment): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getChildCount(param0: androidx.fragment.app.Fragment): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class TextViewDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<globalAndroid.widget.TextView> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.TextViewDescriptor>;
							public getAXAttributes(param0: globalAndroid.widget.TextView): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public getId(param0: globalAndroid.widget.TextView): string;
							public getName(param0: globalAndroid.widget.TextView): string;
							public setHighlighted(param0: globalAndroid.widget.TextView, param1: boolean, param2: boolean): void;
							public getChildCount(param0: globalAndroid.widget.TextView): number;
							public getAXChildAt(param0: globalAndroid.widget.TextView, param1: number): any;
							public hitTest(param0: globalAndroid.widget.TextView, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getDecoration(param0: globalAndroid.widget.TextView): string;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getData(param0: globalAndroid.widget.TextView): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public init(param0: any): void;
							public getChildAt(param0: globalAndroid.widget.TextView, param1: number): any;
							public getAXDecoration(param0: globalAndroid.widget.TextView): string;
							public matches(param0: string, param1: any): boolean;
							public getAXAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public constructor();
							public getChildAt(param0: any, param1: number): any;
							public getAXName(param0: any): string;
							public getChildCount(param0: any): number;
							public init(param0: globalAndroid.widget.TextView): void;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public axHitTest(param0: globalAndroid.widget.TextView, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getAXName(param0: globalAndroid.widget.TextView): string;
							public setValue(param0: globalAndroid.widget.TextView, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getExtraInfo(param0: any): com.facebook.flipper.core.FlipperObject;
							public getDecoration(param0: any): string;
							public getId(param0: any): string;
							public getAXData(param0: globalAndroid.widget.TextView): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getName(param0: any): string;
							public getExtraInfo(param0: globalAndroid.widget.TextView): com.facebook.flipper.core.FlipperObject;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public matches(param0: string, param1: globalAndroid.widget.TextView): boolean;
							public getAXChildAt(param0: any, param1: number): any;
							public getAXData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getAttributes(param0: globalAndroid.widget.TextView): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getAXDecoration(param0: any): string;
							public axHitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class ViewDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<globalAndroid.view.View> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.ViewDescriptor>;
							public getChildAt(param0: globalAndroid.view.View, param1: number): any;
							public setHighlighted(param0: globalAndroid.view.View, param1: boolean, param2: boolean): void;
							public matches(param0: string, param1: globalAndroid.view.View): boolean;
							public axHitTest(param0: globalAndroid.view.View, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getAttributes(param0: globalAndroid.view.View): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public init(param0: globalAndroid.view.View): void;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getAXData(param0: globalAndroid.view.View): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public init(param0: any): void;
							public getChildCount(param0: globalAndroid.view.View): number;
							public setValue(param0: globalAndroid.view.View, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public matches(param0: string, param1: any): boolean;
							public getAXAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public constructor();
							public getChildAt(param0: any, param1: number): any;
							public getAXName(param0: any): string;
							public getChildCount(param0: any): number;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getData(param0: globalAndroid.view.View): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public hitTest(param0: globalAndroid.view.View, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getExtraInfo(param0: any): com.facebook.flipper.core.FlipperObject;
							public getDecoration(param0: any): string;
							public getId(param0: any): string;
							public getAXName(param0: globalAndroid.view.View): string;
							public getName(param0: any): string;
							public getAXAttributes(param0: globalAndroid.view.View): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public getAXDecoration(param0: globalAndroid.view.View): string;
							public getAXData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getName(param0: globalAndroid.view.View): string;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getAXDecoration(param0: any): string;
							public getId(param0: globalAndroid.view.View): string;
							public getExtraInfo(param0: globalAndroid.view.View): com.facebook.flipper.core.FlipperObject;
							public axHitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getDecoration(param0: globalAndroid.view.View): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class ViewGroupDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<globalAndroid.view.ViewGroup> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.ViewGroupDescriptor>;
							public getId(param0: globalAndroid.view.ViewGroup): string;
							public setValue(param0: globalAndroid.view.ViewGroup, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getAttributes(param0: globalAndroid.view.ViewGroup): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public hitTest(param0: globalAndroid.view.ViewGroup, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public getExtraInfo(param0: globalAndroid.view.ViewGroup): com.facebook.flipper.core.FlipperObject;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public init(param0: globalAndroid.view.ViewGroup): void;
							public init(param0: any): void;
							public getAXAttributes(param0: globalAndroid.view.ViewGroup): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public getAXChildAt(param0: globalAndroid.view.ViewGroup, param1: number): any;
							public setHighlighted(param0: globalAndroid.view.ViewGroup, param1: boolean, param2: boolean): void;
							public matches(param0: string, param1: any): boolean;
							public getAXName(param0: globalAndroid.view.ViewGroup): string;
							public getChildCount(param0: globalAndroid.view.ViewGroup): number;
							public getAXAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public getDecoration(param0: globalAndroid.view.ViewGroup): string;
							public constructor();
							public getData(param0: globalAndroid.view.ViewGroup): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getChildAt(param0: any, param1: number): any;
							public matches(param0: string, param1: globalAndroid.view.ViewGroup): boolean;
							public getChildAt(param0: globalAndroid.view.ViewGroup, param1: number): any;
							public getAXName(param0: any): string;
							public getChildCount(param0: any): number;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public axHitTest(param0: globalAndroid.view.ViewGroup, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getAXData(param0: globalAndroid.view.ViewGroup): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getExtraInfo(param0: any): com.facebook.flipper.core.FlipperObject;
							public getDecoration(param0: any): string;
							public getId(param0: any): string;
							public getName(param0: any): string;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public getAXChildAt(param0: any, param1: number): any;
							public getAXDecoration(param0: globalAndroid.view.ViewGroup): string;
							public getName(param0: globalAndroid.view.ViewGroup): string;
							public getAXData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getAXDecoration(param0: any): string;
							public axHitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						}
						export module ViewGroupDescriptor {
							export class NodeKey extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.ViewGroupDescriptor.NodeKey>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export class WindowDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<globalAndroid.view.Window> {
							public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.WindowDescriptor>;
							public init(param0: globalAndroid.view.Window): void;
							public getData(param0: globalAndroid.view.Window): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public getName(param0: globalAndroid.view.Window): string;
							public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public matches(param0: string, param1: globalAndroid.view.Window): boolean;
							public init(param0: any): void;
							public getId(param0: globalAndroid.view.Window): string;
							public matches(param0: string, param1: any): boolean;
							public constructor();
							public getChildAt(param0: any, param1: number): any;
							public getAttributes(param0: globalAndroid.view.Window): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
							public setValue(param0: globalAndroid.view.Window, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public getChildCount(param0: any): number;
							public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
							public hitTest(param0: globalAndroid.view.Window, param1: com.facebook.flipper.plugins.inspector.Touch): void;
							public getDecoration(param0: any): string;
							public getId(param0: any): string;
							public getName(param0: any): string;
							public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
							public getChildCount(param0: globalAndroid.view.Window): number;
							public getChildAt(param0: globalAndroid.view.Window, param1: number): any;
							public getDecoration(param0: globalAndroid.view.Window): string;
							public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
							public setHighlighted(param0: globalAndroid.view.Window, param1: boolean, param2: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export module utils {
							export class AccessibilityEvaluationUtil extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityEvaluationUtil>;
								public static isAccessibilityFocusable(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: globalAndroid.view.View): boolean;
								public static hasText(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): boolean;
								public static hasFocusableAncestor(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: globalAndroid.view.View): boolean;
								public static isActionableForAccessibility(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): boolean;
								public static hasNonActionableSpeakingDescendants(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: globalAndroid.view.View): boolean;
								public static isTopLevelScrollItem(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: globalAndroid.view.View): boolean;
								public static hasEqualBoundsToViewRoot(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: globalAndroid.view.View): boolean;
								public static isTalkbackFocusable(param0: globalAndroid.view.View): boolean;
								public static isSpeakingNode(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: globalAndroid.view.View): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export module utils {
							export class AccessibilityRoleUtil extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil>;
								public static getRole(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
								public static getRole(param0: globalAndroid.view.View): com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
								public static getTalkbackRoleString(param0: globalAndroid.view.View): string;
								public static getRole(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
							}
							export module AccessibilityRoleUtil {
								export class AccessibilityRole {
									public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole>;
									public static NONE: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static BUTTON: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static CHECK_BOX: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static DROP_DOWN_LIST: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static EDIT_TEXT: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static GRID: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static IMAGE: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static IMAGE_BUTTON: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static LIST: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static PAGER: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static RADIO_BUTTON: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static SEEK_CONTROL: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static SWITCH: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static TAB_BAR: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static TOGGLE_BUTTON: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static VIEW_GROUP: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static WEB_VIEW: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static CHECKED_TEXT_VIEW: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static PROGRESS_BAR: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static ACTION_BAR_TAB: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static DRAWER_LAYOUT: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static SLIDING_DRAWER: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static ICON_MENU: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static TOAST: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static DATE_PICKER_DIALOG: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static TIME_PICKER_DIALOG: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static DATE_PICKER: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static TIME_PICKER: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static NUMBER_PICKER: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static SCROLL_VIEW: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static HORIZONTAL_SCROLL_VIEW: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static KEYBOARD_KEY: com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public static fromValue(param0: string): com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
									public getValue(): string;
									public getRoleString(): string;
									public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
									public static values(): native.Array<com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole>;
									public static valueOf(param0: string): com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityRoleUtil.AccessibilityRole;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export module utils {
							export class AccessibilityUtil extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.utils.AccessibilityUtil>;
								public static sAccessibilityActionMapping: com.facebook.flipper.plugins.inspector.descriptors.utils.EnumMapping;
								public static sImportantForAccessibilityMapping: com.facebook.flipper.plugins.inspector.descriptors.utils.EnumMapping;
								public static isAXFocused(param0: globalAndroid.view.View): boolean;
								public static getRoleDescription(param0: globalAndroid.view.View): string;
								public static addTalkbackProperties(param0: com.facebook.flipper.core.FlipperObject.Builder, param1: globalAndroid.view.View): void;
								public static getViewData(param0: globalAndroid.view.View): com.facebook.flipper.core.FlipperObject;
								public static getTalkbackData(param0: globalAndroid.view.View): com.facebook.flipper.core.FlipperObject;
								public static getRoleDescription(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): string;
								public static isTalkbackEnabled(param0: globalAndroid.content.Context): boolean;
								public static getTalkbackDescription(param0: globalAndroid.view.View): string;
								public static getTalkbackHint(param0: globalAndroid.view.View): string;
								public static isAccessibilityEnabled(param0: globalAndroid.content.Context): boolean;
								public static getTalkbackFocusableReasons(param0: globalAndroid.view.View): string;
								public static getTalkbackIgnoredReasons(param0: globalAndroid.view.View): string;
								public static getAccessibilityNodeInfoData(param0: globalAndroid.view.View): com.facebook.flipper.core.FlipperObject;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export module utils {
							export class AndroidRootResolver extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.utils.AndroidRootResolver>;
								public listActiveRoots(): java.util.List<com.facebook.flipper.plugins.inspector.descriptors.utils.AndroidRootResolver.Root>;
								public constructor();
							}
							export module AndroidRootResolver {
								export class Root extends java.lang.Object {
									public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.utils.AndroidRootResolver.Root>;
									public view: globalAndroid.view.View;
									public param: globalAndroid.view.WindowManager.LayoutParams;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export module utils {
							export class EnumMapping extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.utils.EnumMapping>;
								public get(param0: string): number;
								public get(param0: number, param1: boolean): com.facebook.flipper.plugins.inspector.InspectorValue<any>;
								public get(param0: number): com.facebook.flipper.plugins.inspector.InspectorValue<any>;
								public constructor(param0: string);
								public put(param0: string, param1: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module inspector {
					export module descriptors {
						export module utils {
							export class ViewAccessibilityHelper extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.flipper.plugins.inspector.descriptors.utils.ViewAccessibilityHelper>;
								public static createNodeInfoFromView(param0: globalAndroid.view.View): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module leakcanary {
					export class LeakCanaryFlipperPlugin extends java.lang.Object implements com.facebook.flipper.core.FlipperPlugin {
						public static class: java.lang.Class<com.facebook.flipper.plugins.leakcanary.LeakCanaryFlipperPlugin>;
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public constructor();
						public getId(): string;
						public reportLeak(param0: string): void;
						public runInBackground(): boolean;
						public onDisconnect(): void;
					}
				}
			}
		}
	}
}

// declare module com {
// 	export module facebook {
// 		export module flipper {
// 			export module plugins {
// 				export module leakcanary {
// 					export class RecordLeakService {
// 						public static class: java.lang.Class<com.facebook.flipper.plugins.leakcanary.RecordLeakService>;
// 						public constructor();
// 						public onHeapAnalyzed(param0: com.squareup.leakcanary.HeapDump, param1: com.squareup.leakcanary.AnalysisResult): void;
// 					}
// 				}
// 			}
// 		}
// 	}
// }

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module litho {
					export class DataUtils extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.litho.DataUtils>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module litho {
					export class DebugComponentDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<com.facebook.litho.DebugComponent> {
						public static class: java.lang.Class<com.facebook.flipper.plugins.litho.DebugComponentDescriptor>;
						public getChildAt(param0: com.facebook.litho.DebugComponent, param1: number): any;
						public getChildCount(param0: any): number;
						public getData(param0: com.facebook.litho.DebugComponent): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						public getChildCount(param0: com.facebook.litho.DebugComponent): number;
						public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
						public matches(param0: string, param1: com.facebook.litho.DebugComponent): boolean;
						public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
						public init(param0: com.facebook.litho.DebugComponent): void;
						public getAttributes(param0: com.facebook.litho.DebugComponent): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public getName(param0: com.facebook.litho.DebugComponent): string;
						public getDecoration(param0: com.facebook.litho.DebugComponent): string;
						public getId(param0: any): string;
						public getExtraInfo(param0: any): com.facebook.flipper.core.FlipperObject;
						public matches(param0: string, param1: any): boolean;
						public getChildAt(param0: any, param1: number): any;
						public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public constructor();
						public init(param0: any): void;
						public getExtraInfo(param0: com.facebook.litho.DebugComponent): com.facebook.flipper.core.FlipperObject;
						public setHighlighted(param0: com.facebook.litho.DebugComponent, param1: boolean, param2: boolean): void;
						public getId(param0: com.facebook.litho.DebugComponent): string;
						public hitTest(param0: com.facebook.litho.DebugComponent, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public getDecoration(param0: any): string;
						public getName(param0: any): string;
						public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public setValue(param0: com.facebook.litho.DebugComponent, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module litho {
					export class DebugSectionDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<com.facebook.litho.sections.debug.DebugSection> {
						public static class: java.lang.Class<com.facebook.flipper.plugins.litho.DebugSectionDescriptor>;
						public getChildCount(param0: any): number;
						public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
						public hitTest(param0: com.facebook.litho.sections.debug.DebugSection, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public getAXChildCount(param0: any): number;
						public getChildAt(param0: com.facebook.litho.sections.debug.DebugSection, param1: number): any;
						public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
						public getChildCount(param0: com.facebook.litho.sections.debug.DebugSection): number;
						public matches(param0: string, param1: com.facebook.litho.sections.debug.DebugSection): boolean;
						public getId(param0: any): string;
						public getData(param0: com.facebook.litho.sections.debug.DebugSection): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						public getAttributes(param0: com.facebook.litho.sections.debug.DebugSection): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public setHighlighted(param0: com.facebook.litho.sections.debug.DebugSection, param1: boolean, param2: boolean): void;
						public invalidate(param0: any): void;
						public getDecoration(param0: com.facebook.litho.sections.debug.DebugSection): string;
						public matches(param0: string, param1: any): boolean;
						public getChildAt(param0: any, param1: number): any;
						public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public constructor();
						public getAXChildCount(param0: com.facebook.litho.sections.debug.DebugSection): number;
						public setValue(param0: com.facebook.litho.sections.debug.DebugSection, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
						public invalidate(param0: com.facebook.litho.sections.debug.DebugSection): void;
						public init(param0: any): void;
						public getName(param0: com.facebook.litho.sections.debug.DebugSection): string;
						public getDecoration(param0: any): string;
						public getId(param0: com.facebook.litho.sections.debug.DebugSection): string;
						public getName(param0: any): string;
						public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public init(param0: com.facebook.litho.sections.debug.DebugSection): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module litho {
					export class GenerateLithoAccessibilityRenderExtensionCommand extends java.lang.Object implements com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin.ExtensionCommand {
						public static class: java.lang.Class<com.facebook.flipper.plugins.litho.GenerateLithoAccessibilityRenderExtensionCommand>;
						public receiver(param0: com.facebook.flipper.plugins.inspector.ObjectTracker, param1: com.facebook.flipper.core.FlipperConnection): com.facebook.flipper.core.FlipperReceiver;
						public constructor();
						public command(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module litho {
					export class LithoFlipperDescriptors extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.litho.LithoFlipperDescriptors>;
						public constructor();
						public static add(param0: com.facebook.flipper.plugins.inspector.DescriptorMapping): void;
						public static addWithSections(param0: com.facebook.flipper.plugins.inspector.DescriptorMapping): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module litho {
					export class LithoRecyclerViewDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<com.facebook.litho.widget.LithoRecylerView> {
						public static class: java.lang.Class<com.facebook.flipper.plugins.litho.LithoRecyclerViewDescriptor>;
						public getDecoration(param0: com.facebook.litho.widget.LithoRecylerView): string;
						public getChildCount(param0: any): number;
						public getData(param0: com.facebook.litho.widget.LithoRecylerView): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						public getName(param0: com.facebook.litho.widget.LithoRecylerView): string;
						public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
						public getExtraInfo(param0: com.facebook.litho.widget.LithoRecylerView): com.facebook.flipper.core.FlipperObject;
						public axHitTest(param0: com.facebook.litho.widget.LithoRecylerView, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public invalidate(param0: com.facebook.litho.widget.LithoRecylerView): void;
						public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
						public getAXAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public getAXDecoration(param0: com.facebook.litho.widget.LithoRecylerView): string;
						public getId(param0: any): string;
						public getExtraInfo(param0: any): com.facebook.flipper.core.FlipperObject;
						public invalidate(param0: any): void;
						public hitTest(param0: com.facebook.litho.widget.LithoRecylerView, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public getAttributes(param0: com.facebook.litho.widget.LithoRecylerView): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public matches(param0: string, param1: any): boolean;
						public getChildAt(param0: any, param1: number): any;
						public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public getAXAttributes(param0: com.facebook.litho.widget.LithoRecylerView): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public constructor();
						public setValue(param0: com.facebook.litho.widget.LithoRecylerView, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
						public getChildAt(param0: com.facebook.litho.widget.LithoRecylerView, param1: number): any;
						public getAXDecoration(param0: any): string;
						public init(param0: any): void;
						public getDecoration(param0: any): string;
						public init(param0: com.facebook.litho.widget.LithoRecylerView): void;
						public getAXName(param0: com.facebook.litho.widget.LithoRecylerView): string;
						public setHighlighted(param0: com.facebook.litho.widget.LithoRecylerView, param1: boolean, param2: boolean): void;
						public getName(param0: any): string;
						public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public getAXName(param0: any): string;
						public axHitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public getId(param0: com.facebook.litho.widget.LithoRecylerView): string;
						public getChildCount(param0: com.facebook.litho.widget.LithoRecylerView): number;
						public matches(param0: string, param1: com.facebook.litho.widget.LithoRecylerView): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module litho {
					export class LithoViewDescriptor extends com.facebook.flipper.plugins.inspector.NodeDescriptor<com.facebook.litho.LithoView> {
						public static class: java.lang.Class<com.facebook.flipper.plugins.litho.LithoViewDescriptor>;
						public setHighlighted(param0: com.facebook.litho.LithoView, param1: boolean, param2: boolean): void;
						public getChildCount(param0: com.facebook.litho.LithoView): number;
						public matches(param0: string, param1: com.facebook.litho.LithoView): boolean;
						public getChildCount(param0: any): number;
						public getAXDecoration(param0: com.facebook.litho.LithoView): string;
						public setValue(param0: any, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
						public getName(param0: com.facebook.litho.LithoView): string;
						public getAXChildCount(param0: any): number;
						public getAXAttributes(param0: com.facebook.litho.LithoView): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public init(param0: com.facebook.litho.LithoView): void;
						public getAXName(param0: com.facebook.litho.LithoView): string;
						public getAttributes(param0: com.facebook.litho.LithoView): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public getData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						public setHighlighted(param0: any, param1: boolean, param2: boolean): void;
						public getAXAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public getData(param0: com.facebook.litho.LithoView): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						public getId(param0: any): string;
						public getAXChildAt(param0: any, param1: number): any;
						public getExtraInfo(param0: any): com.facebook.flipper.core.FlipperObject;
						public matches(param0: string, param1: any): boolean;
						public getId(param0: com.facebook.litho.LithoView): string;
						public getChildAt(param0: any, param1: number): any;
						public hitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public constructor();
						public getChildAt(param0: com.facebook.litho.LithoView, param1: number): any;
						public getAXDecoration(param0: any): string;
						public init(param0: any): void;
						public hitTest(param0: com.facebook.litho.LithoView, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public getDecoration(param0: any): string;
						public getAXChildAt(param0: com.facebook.litho.LithoView, param1: number): any;
						public getName(param0: any): string;
						public getAXData(param0: com.facebook.litho.LithoView): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
						public getAttributes(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<string>>;
						public getAXName(param0: any): string;
						public setValue(param0: com.facebook.litho.LithoView, param1: native.Array<string>, param2: com.facebook.flipper.core.FlipperDynamic): void;
						public axHitTest(param0: any, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public getAXChildCount(param0: com.facebook.litho.LithoView): number;
						public getDecoration(param0: com.facebook.litho.LithoView): string;
						public axHitTest(param0: com.facebook.litho.LithoView, param1: com.facebook.flipper.plugins.inspector.Touch): void;
						public getExtraInfo(param0: com.facebook.litho.LithoView): com.facebook.flipper.core.FlipperObject;
						public getAXData(param0: any): java.util.List<com.facebook.flipper.plugins.inspector.Named<com.facebook.flipper.core.FlipperObject>>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module litho {
					export class PropWithDescription extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.litho.PropWithDescription>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.plugins.litho.PropWithDescription interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getFlipperLayoutInspectorPropDescription(): any;
						});
						public constructor();
						public getFlipperLayoutInspectorPropDescription(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module litho {
					export class PropWithInspectorSection extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.litho.PropWithInspectorSection>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.plugins.litho.PropWithInspectorSection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getFlipperLayoutInspectorSection(): java.util.AbstractMap.SimpleEntry<string,string>;
						});
						public constructor();
						public getFlipperLayoutInspectorSection(): java.util.AbstractMap.SimpleEntry<string,string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module network {
					export class FlipperOkhttpInterceptor extends java.lang.Object implements okhttp3.Interceptor {
						public static class: java.lang.Class<com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor>;
						public plugin: com.facebook.flipper.plugins.network.NetworkFlipperPlugin;
						public constructor(param0: com.facebook.flipper.plugins.network.NetworkFlipperPlugin);
						public constructor();
						public intercept(param0: okhttp3.Interceptor.Chain): okhttp3.Response;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module network {
					export class NetworkFlipperPlugin extends com.facebook.flipper.plugins.common.BufferingFlipperPlugin implements com.facebook.flipper.plugins.network.NetworkReporter {
						public static class: java.lang.Class<com.facebook.flipper.plugins.network.NetworkFlipperPlugin>;
						public static ID: string;
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public reportResponse(param0: com.facebook.flipper.plugins.network.NetworkReporter.ResponseInfo): void;
						public constructor();
						public constructor(param0: java.util.List<com.facebook.flipper.plugins.network.NetworkResponseFormatter>);
						public reportRequest(param0: com.facebook.flipper.plugins.network.NetworkReporter.RequestInfo): void;
						public getId(): string;
						public runInBackground(): boolean;
						public onDisconnect(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module network {
					export class NetworkReporter extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.network.NetworkReporter>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.plugins.network.NetworkReporter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							reportRequest(param0: com.facebook.flipper.plugins.network.NetworkReporter.RequestInfo): void;
							reportResponse(param0: com.facebook.flipper.plugins.network.NetworkReporter.ResponseInfo): void;
						});
						public constructor();
						public reportResponse(param0: com.facebook.flipper.plugins.network.NetworkReporter.ResponseInfo): void;
						public reportRequest(param0: com.facebook.flipper.plugins.network.NetworkReporter.RequestInfo): void;
					}
					export module NetworkReporter {
						export class Header extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.network.NetworkReporter.Header>;
							public name: string;
							public value: string;
							public constructor(param0: string, param1: string);
							public toString(): string;
						}
						export class RequestInfo extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.network.NetworkReporter.RequestInfo>;
							public requestId: string;
							public timeStamp: number;
							public headers: java.util.List<com.facebook.flipper.plugins.network.NetworkReporter.Header>;
							public method: string;
							public uri: string;
							public body: native.Array<number>;
							public constructor();
							public getFirstHeader(param0: string): com.facebook.flipper.plugins.network.NetworkReporter.Header;
						}
						export class ResponseInfo extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.network.NetworkReporter.ResponseInfo>;
							public requestId: string;
							public timeStamp: number;
							public statusCode: number;
							public statusReason: string;
							public headers: java.util.List<com.facebook.flipper.plugins.network.NetworkReporter.Header>;
							public body: native.Array<number>;
							public constructor();
							public getFirstHeader(param0: string): com.facebook.flipper.plugins.network.NetworkReporter.Header;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module network {
					export class NetworkResponseFormatter extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.network.NetworkResponseFormatter>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.plugins.network.NetworkResponseFormatter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							shouldFormat(param0: com.facebook.flipper.plugins.network.NetworkReporter.ResponseInfo): boolean;
							format(param0: com.facebook.flipper.plugins.network.NetworkReporter.ResponseInfo, param1: com.facebook.flipper.plugins.network.NetworkResponseFormatter.OnCompletionListener): void;
						});
						public constructor();
						public format(param0: com.facebook.flipper.plugins.network.NetworkReporter.ResponseInfo, param1: com.facebook.flipper.plugins.network.NetworkResponseFormatter.OnCompletionListener): void;
						public shouldFormat(param0: com.facebook.flipper.plugins.network.NetworkReporter.ResponseInfo): boolean;
					}
					export module NetworkResponseFormatter {
						export class OnCompletionListener extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.network.NetworkResponseFormatter.OnCompletionListener>;
							/**
							 * Constructs a new instance of the com.facebook.flipper.plugins.network.NetworkResponseFormatter$OnCompletionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onCompletion(param0: string): void;
							});
							public constructor();
							public onCompletion(param0: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module react {
					export class ReactFlipperPlugin extends java.lang.Object implements com.facebook.flipper.core.FlipperPlugin {
						public static class: java.lang.Class<com.facebook.flipper.plugins.react.ReactFlipperPlugin>;
						public static ID: string;
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public constructor();
						public getId(): string;
						public runInBackground(): boolean;
						public onDisconnect(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module sandbox {
					export class SandboxFlipperPlugin extends java.lang.Object implements com.facebook.flipper.core.FlipperPlugin {
						public static class: java.lang.Class<com.facebook.flipper.plugins.sandbox.SandboxFlipperPlugin>;
						public static ID: string;
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public getId(): string;
						public runInBackground(): boolean;
						public constructor(param0: com.facebook.flipper.plugins.sandbox.SandboxFlipperPluginStrategy);
						public onDisconnect(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module sandbox {
					export class SandboxFlipperPluginStrategy extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.flipper.plugins.sandbox.SandboxFlipperPluginStrategy>;
						/**
						 * Constructs a new instance of the com.facebook.flipper.plugins.sandbox.SandboxFlipperPluginStrategy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getKnownSandboxes(): java.util.Map<string,string>;
							setSandbox(param0: string): void;
						});
						public constructor();
						public setSandbox(param0: string): void;
						public getKnownSandboxes(): java.util.Map<string,string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module sections {
					export class ChangesetDebug extends java.lang.Object implements com.facebook.litho.sections.ChangesetDebugConfiguration.ChangesetDebugListener {
						public static class: java.lang.Class<com.facebook.flipper.plugins.sections.ChangesetDebug>;
						public static setListener(param0: com.facebook.flipper.plugins.sections.ChangesetDebug.ChangesetListener): void;
						public onChangesetApplied(param0: com.facebook.litho.sections.Section, param1: com.facebook.litho.sections.Section, param2: com.facebook.litho.sections.ChangesInfo, param3: string, param4: number, param5: string): void;
					}
					export module ChangesetDebug {
						export class ChangesetListener extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.sections.ChangesetDebug.ChangesetListener>;
							/**
							 * Constructs a new instance of the com.facebook.flipper.plugins.sections.ChangesetDebug$ChangesetListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onChangesetApplied(param0: string, param1: boolean, param2: string, param3: string, param4: com.facebook.flipper.core.FlipperArray, param5: com.facebook.flipper.core.FlipperObject): void;
							});
							public constructor();
							public onChangesetApplied(param0: string, param1: boolean, param2: string, param3: string, param4: com.facebook.flipper.core.FlipperArray, param5: com.facebook.flipper.core.FlipperObject): void;
						}
						export class DataModelChangeInfo extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.sections.ChangesetDebug.DataModelChangeInfo>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module sections {
					export class SectionsFlipperPlugin extends java.lang.Object implements com.facebook.flipper.core.FlipperPlugin, com.facebook.flipper.plugins.sections.ChangesetDebug.ChangesetListener {
						public static class: java.lang.Class<com.facebook.flipper.plugins.sections.SectionsFlipperPlugin>;
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public onChangesetApplied(param0: string, param1: boolean, param2: string, param3: string, param4: com.facebook.flipper.core.FlipperArray, param5: com.facebook.flipper.core.FlipperObject): void;
						public constructor(param0: boolean);
						public getId(): string;
						public runInBackground(): boolean;
						public onDisconnect(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module plugins {
				export module sharedpreferences {
					export class SharedPreferencesFlipperPlugin extends java.lang.Object implements com.facebook.flipper.core.FlipperPlugin {
						public static class: java.lang.Class<com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin>;
						public onConnect(param0: com.facebook.flipper.core.FlipperConnection): void;
						public constructor(param0: globalAndroid.content.Context);
						public getId(): string;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: number);
						public runInBackground(): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: string);
						public constructor(param0: globalAndroid.content.Context, param1: java.util.List<com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin.SharedPreferencesDescriptor>);
						public onDisconnect(): void;
					}
					export module SharedPreferencesFlipperPlugin {
						export class SharedPreferencesDescriptor extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin.SharedPreferencesDescriptor>;
							public name: string;
							public mode: number;
							public constructor(param0: string, param1: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module testing {
				export class FlipperConnectionMock extends java.lang.Object implements com.facebook.flipper.core.FlipperConnection {
					public static class: java.lang.Class<com.facebook.flipper.testing.FlipperConnectionMock>;
					public receivers: java.util.Map<string,com.facebook.flipper.core.FlipperReceiver>;
					public sent: java.util.Map<string,java.util.List<any>>;
					public errors: java.util.List<java.lang.Throwable>;
					public reportError(param0: java.lang.Throwable): void;
					public constructor();
					public reportErrorWithMetadata(param0: string, param1: string): void;
					public send(param0: string, param1: com.facebook.flipper.core.FlipperObject): void;
					public receive(param0: string, param1: com.facebook.flipper.core.FlipperReceiver): void;
					public send(param0: string, param1: com.facebook.flipper.core.FlipperArray): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module flipper {
			export module testing {
				export class FlipperResponderMock extends java.lang.Object implements com.facebook.flipper.core.FlipperResponder {
					public static class: java.lang.Class<com.facebook.flipper.testing.FlipperResponderMock>;
					public successes: java.util.List<any>;
					public errors: java.util.List<com.facebook.flipper.core.FlipperObject>;
					public error(param0: com.facebook.flipper.core.FlipperObject): void;
					public success(param0: com.facebook.flipper.core.FlipperObject): void;
					public constructor();
					public success(): void;
					public success(param0: com.facebook.flipper.core.FlipperArray): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fresco {
			export module flipper {
				export class BuildConfig extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.fresco.flipper.BuildConfig>;
					public static DEBUG: boolean;
					public static APPLICATION_ID: string;
					public static BUILD_TYPE: string;
					public static FLAVOR: string;
					public static VERSION_CODE: number;
					public static VERSION_NAME: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fresco {
			export module stetho {
				export class BuildConfig extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.fresco.stetho.BuildConfig>;
					public static DEBUG: boolean;
					public static APPLICATION_ID: string;
					public static BUILD_TYPE: string;
					public static FLAVOR: string;
					public static VERSION_CODE: number;
					public static VERSION_NAME: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageformat {
			export class DefaultImageFormatChecker extends java.lang.Object implements com.facebook.imageformat.ImageFormat.FormatChecker {
				public static class: java.lang.Class<com.facebook.imageformat.DefaultImageFormatChecker>;
				public getHeaderSize(): number;
				public determineFormat(param0: native.Array<number>, param1: number): com.facebook.imageformat.ImageFormat;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageformat {
			export class DefaultImageFormats extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imageformat.DefaultImageFormats>;
				public static JPEG: com.facebook.imageformat.ImageFormat;
				public static PNG: com.facebook.imageformat.ImageFormat;
				public static GIF: com.facebook.imageformat.ImageFormat;
				public static BMP: com.facebook.imageformat.ImageFormat;
				public static ICO: com.facebook.imageformat.ImageFormat;
				public static WEBP_SIMPLE: com.facebook.imageformat.ImageFormat;
				public static WEBP_LOSSLESS: com.facebook.imageformat.ImageFormat;
				public static WEBP_EXTENDED: com.facebook.imageformat.ImageFormat;
				public static WEBP_EXTENDED_WITH_ALPHA: com.facebook.imageformat.ImageFormat;
				public static WEBP_ANIMATED: com.facebook.imageformat.ImageFormat;
				public static HEIF: com.facebook.imageformat.ImageFormat;
				public static isStaticWebpFormat(param0: com.facebook.imageformat.ImageFormat): boolean;
				public static getDefaultFormats(): java.util.List<com.facebook.imageformat.ImageFormat>;
				public static isWebpFormat(param0: com.facebook.imageformat.ImageFormat): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageformat {
			export class ImageFormat extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imageformat.ImageFormat>;
				public static UNKNOWN: com.facebook.imageformat.ImageFormat;
				public getName(): string;
				public getFileExtension(): string;
				public toString(): string;
				public constructor(param0: string, param1: string);
			}
			export module ImageFormat {
				export class FormatChecker extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imageformat.ImageFormat.FormatChecker>;
					/**
					 * Constructs a new instance of the com.facebook.imageformat.ImageFormat$FormatChecker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getHeaderSize(): number;
						determineFormat(param0: native.Array<number>, param1: number): com.facebook.imageformat.ImageFormat;
					});
					public constructor();
					public getHeaderSize(): number;
					public determineFormat(param0: native.Array<number>, param1: number): com.facebook.imageformat.ImageFormat;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageformat {
			export class ImageFormatChecker extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imageformat.ImageFormatChecker>;
				public static getImageFormat_WrapIOException(param0: java.io.InputStream): com.facebook.imageformat.ImageFormat;
				public static getImageFormat(param0: java.io.InputStream): com.facebook.imageformat.ImageFormat;
				public static getInstance(): com.facebook.imageformat.ImageFormatChecker;
				public setCustomImageFormatCheckers(param0: java.util.List<com.facebook.imageformat.ImageFormat.FormatChecker>): void;
				public static getImageFormat(param0: string): com.facebook.imageformat.ImageFormat;
				public determineImageFormat(param0: java.io.InputStream): com.facebook.imageformat.ImageFormat;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageformat {
			export class ImageFormatCheckerUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imageformat.ImageFormatCheckerUtils>;
				public static asciiBytes(param0: string): native.Array<number>;
				public static startsWithPattern(param0: native.Array<number>, param1: native.Array<number>): boolean;
				public static indexOfPattern(param0: native.Array<number>, param1: number, param2: native.Array<number>, param3: number): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export class BuildConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imagepipeline.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module animated {
				export module factory {
					export class AnimatedFactory extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.animated.factory.AnimatedFactory>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.animated.factory.AnimatedFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getAnimatedDrawableFactory(param0: globalAndroid.content.Context): com.facebook.imagepipeline.drawable.DrawableFactory;
							getGifDecoder(param0: globalAndroid.graphics.Bitmap.Config): com.facebook.imagepipeline.decoder.ImageDecoder;
							getWebPDecoder(param0: globalAndroid.graphics.Bitmap.Config): com.facebook.imagepipeline.decoder.ImageDecoder;
						});
						public constructor();
						public getAnimatedDrawableFactory(param0: globalAndroid.content.Context): com.facebook.imagepipeline.drawable.DrawableFactory;
						public getGifDecoder(param0: globalAndroid.graphics.Bitmap.Config): com.facebook.imagepipeline.decoder.ImageDecoder;
						public getWebPDecoder(param0: globalAndroid.graphics.Bitmap.Config): com.facebook.imagepipeline.decoder.ImageDecoder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module animated {
				export module factory {
					export class AnimatedFactoryProvider extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider>;
						public constructor();
						public static getAnimatedFactory(param0: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory, param1: com.facebook.imagepipeline.core.ExecutorSupplier, param2: com.facebook.imagepipeline.cache.CountingMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param3: boolean): com.facebook.imagepipeline.animated.factory.AnimatedFactory;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module bitmaps {
				export class ArtBitmapFactory extends com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.bitmaps.ArtBitmapFactory>;
					public constructor(param0: com.facebook.imagepipeline.memory.BitmapPool, param1: com.facebook.imagepipeline.core.CloseableReferenceFactory);
					public constructor();
					public createBitmapInternal(param0: number, param1: number, param2: globalAndroid.graphics.Bitmap.Config): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module bitmaps {
				export class EmptyJpegGenerator extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator>;
					public constructor(param0: com.facebook.common.memory.PooledByteBufferFactory);
					public generate(param0: number, param1: number): com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module bitmaps {
				export class GingerbreadBitmapFactory extends com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory>;
					public constructor();
					public createBitmapInternal(param0: number, param1: number, param2: globalAndroid.graphics.Bitmap.Config): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module bitmaps {
				export class HoneycombBitmapCreator extends java.lang.Object implements com.facebook.common.webp.BitmapCreator {
					public static class: java.lang.Class<com.facebook.imagepipeline.bitmaps.HoneycombBitmapCreator>;
					public createNakedBitmap(param0: number, param1: number, param2: globalAndroid.graphics.Bitmap.Config): globalAndroid.graphics.Bitmap;
					public constructor(param0: com.facebook.imagepipeline.memory.PoolFactory);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module bitmaps {
				export class HoneycombBitmapFactory extends com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory>;
					public constructor();
					public createBitmapInternal(param0: number, param1: number, param2: globalAndroid.graphics.Bitmap.Config): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor(param0: com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator, param1: com.facebook.imagepipeline.platform.PlatformDecoder, param2: com.facebook.imagepipeline.core.CloseableReferenceFactory);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module bitmaps {
				export abstract class PlatformBitmapFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory>;
					public createBitmap(param0: globalAndroid.util.DisplayMetrics, param1: native.Array<number>, param2: number, param3: number, param4: number, param5: number, param6: globalAndroid.graphics.Bitmap.Config, param7: any): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmapInternal(param0: number, param1: number, param2: globalAndroid.graphics.Bitmap.Config): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: number, param1: number, param2: any): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: native.Array<number>, param1: number, param2: number, param3: globalAndroid.graphics.Bitmap.Config, param4: any): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: number, param1: number): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: globalAndroid.util.DisplayMetrics, param1: number, param2: number, param3: globalAndroid.graphics.Bitmap.Config, param4: any): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: globalAndroid.graphics.Bitmap, param1: number, param2: number, param3: number, param4: number, param5: globalAndroid.graphics.Matrix, param6: boolean): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: globalAndroid.util.DisplayMetrics, param1: native.Array<number>, param2: number, param3: number, param4: number, param5: number, param6: globalAndroid.graphics.Bitmap.Config): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createScaledBitmap(param0: globalAndroid.graphics.Bitmap, param1: number, param2: number, param3: boolean, param4: any): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: globalAndroid.graphics.Bitmap): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor();
					public createBitmap(param0: number, param1: number, param2: globalAndroid.graphics.Bitmap.Config, param3: any): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: globalAndroid.graphics.Bitmap, param1: number, param2: number, param3: number, param4: number, param5: any): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: globalAndroid.graphics.Bitmap, param1: number, param2: number, param3: number, param4: number): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: globalAndroid.graphics.Bitmap, param1: number, param2: number, param3: number, param4: number, param5: globalAndroid.graphics.Matrix, param6: boolean, param7: any): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: globalAndroid.util.DisplayMetrics, param1: native.Array<number>, param2: number, param3: number, param4: globalAndroid.graphics.Bitmap.Config): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: globalAndroid.util.DisplayMetrics, param1: native.Array<number>, param2: number, param3: number, param4: globalAndroid.graphics.Bitmap.Config, param5: any): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: number, param1: number, param2: globalAndroid.graphics.Bitmap.Config): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: globalAndroid.util.DisplayMetrics, param1: number, param2: number, param3: globalAndroid.graphics.Bitmap.Config): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: native.Array<number>, param1: number, param2: number, param3: globalAndroid.graphics.Bitmap.Config): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createBitmap(param0: globalAndroid.graphics.Bitmap, param1: any): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public createScaledBitmap(param0: globalAndroid.graphics.Bitmap, param1: number, param2: number, param3: boolean): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module bitmaps {
				export class PlatformBitmapFactoryProvider extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.bitmaps.PlatformBitmapFactoryProvider>;
					public constructor();
					public static buildPlatformBitmapFactory(param0: com.facebook.imagepipeline.memory.PoolFactory, param1: com.facebook.imagepipeline.platform.PlatformDecoder, param2: com.facebook.imagepipeline.core.CloseableReferenceFactory): com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module bitmaps {
				export class SimpleBitmapReleaser extends com.facebook.common.references.ResourceReleaser<globalAndroid.graphics.Bitmap> {
					public static class: java.lang.Class<com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser>;
					public release(param0: globalAndroid.graphics.Bitmap): void;
					public release(param0: any): void;
					public static getInstance(): com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class BitmapCountingMemoryCacheFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory>;
					public static get(param0: com.facebook.common.internal.Supplier<com.facebook.imagepipeline.cache.MemoryCacheParams>, param1: com.facebook.common.memory.MemoryTrimmableRegistry, param2: com.facebook.imagepipeline.cache.CountingMemoryCache.CacheTrimStrategy): com.facebook.imagepipeline.cache.CountingMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>;
					public constructor();
					public static get(param0: com.facebook.common.internal.Supplier<com.facebook.imagepipeline.cache.MemoryCacheParams>, param1: com.facebook.common.memory.MemoryTrimmableRegistry): com.facebook.imagepipeline.cache.CountingMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class BitmapMemoryCacheFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory>;
					public static get(param0: com.facebook.imagepipeline.cache.CountingMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param1: com.facebook.imagepipeline.cache.ImageCacheStatsTracker): com.facebook.imagepipeline.cache.InstrumentedMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class BitmapMemoryCacheKey extends java.lang.Object implements com.facebook.cache.common.CacheKey {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.BitmapMemoryCacheKey>;
					public equals(param0: any): boolean;
					public getUriString(): string;
					public toString(): string;
					public containsUri(param0: globalAndroid.net.Uri): boolean;
					public constructor(param0: string, param1: com.facebook.imagepipeline.common.ResizeOptions, param2: com.facebook.imagepipeline.common.RotationOptions, param3: com.facebook.imagepipeline.common.ImageDecodeOptions, param4: com.facebook.cache.common.CacheKey, param5: string, param6: any);
					public getPostprocessorName(): string;
					public getCallerContext(): any;
					public hashCode(): number;
					public getInBitmapCacheSince(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class BitmapMemoryCacheTrimStrategy extends java.lang.Object implements com.facebook.imagepipeline.cache.CountingMemoryCache.CacheTrimStrategy {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy>;
					public constructor();
					public getTrimRatio(param0: com.facebook.common.memory.MemoryTrimType): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class BufferedDiskCache extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.BufferedDiskCache>;
					public get(param0: com.facebook.cache.common.CacheKey, param1: java.util.concurrent.atomic.AtomicBoolean): bolts.Task<com.facebook.imagepipeline.image.EncodedImage>;
					public contains(param0: com.facebook.cache.common.CacheKey): bolts.Task<java.lang.Boolean>;
					public remove(param0: com.facebook.cache.common.CacheKey): bolts.Task<java.lang.Void>;
					public containsSync(param0: com.facebook.cache.common.CacheKey): boolean;
					public put(param0: com.facebook.cache.common.CacheKey, param1: com.facebook.imagepipeline.image.EncodedImage): void;
					public diskCheckSync(param0: com.facebook.cache.common.CacheKey): boolean;
					public clearAll(): bolts.Task<java.lang.Void>;
					public getSize(): number;
					public constructor(param0: com.facebook.cache.disk.FileCache, param1: com.facebook.common.memory.PooledByteBufferFactory, param2: com.facebook.common.memory.PooledByteStreams, param3: java.util.concurrent.Executor, param4: java.util.concurrent.Executor, param5: com.facebook.imagepipeline.cache.ImageCacheStatsTracker);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class CacheKeyFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.CacheKeyFactory>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.cache.CacheKeyFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getBitmapCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
						getPostprocessedBitmapCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
						getEncodedCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
						getEncodedCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: globalAndroid.net.Uri, param2: any): com.facebook.cache.common.CacheKey;
					});
					public constructor();
					public getPostprocessedBitmapCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
					public getEncodedCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
					public getEncodedCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: globalAndroid.net.Uri, param2: any): com.facebook.cache.common.CacheKey;
					public getBitmapCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class CountingLruMap<K, V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.CountingLruMap<any,any>>;
					public getCount(): number;
					public contains(param0: K): boolean;
					public constructor(param0: com.facebook.imagepipeline.cache.ValueDescriptor<V>);
					public put(param0: K, param1: V): V;
					public clear(): java.util.ArrayList<V>;
					public getMatchingEntries(param0: com.facebook.common.internal.Predicate<K>): java.util.ArrayList<java.util.Map.Entry<K,V>>;
					public getFirstKey(): K;
					public getSizeInBytes(): number;
					public get(param0: K): V;
					public removeAll(param0: com.facebook.common.internal.Predicate<K>): java.util.ArrayList<V>;
					public remove(param0: K): V;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class CountingMemoryCache<K, V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.CountingMemoryCache<any,any>>;
					public mMemoryCacheParams: com.facebook.imagepipeline.cache.MemoryCacheParams;
					public cache(param0: K, param1: com.facebook.common.references.CloseableReference<V>, param2: com.facebook.imagepipeline.cache.CountingMemoryCache.EntryStateObserver<K>): com.facebook.common.references.CloseableReference<V>;
					public contains(param0: K): boolean;
					public getCount(): number;
					public removeAll(param0: com.facebook.common.internal.Predicate<K>): number;
					public constructor(param0: com.facebook.imagepipeline.cache.ValueDescriptor<V>, param1: com.facebook.imagepipeline.cache.CountingMemoryCache.CacheTrimStrategy, param2: com.facebook.common.internal.Supplier<com.facebook.imagepipeline.cache.MemoryCacheParams>);
					public get(param0: K): com.facebook.common.references.CloseableReference<V>;
					public getSizeInBytes(): number;
					public getEvictionQueueCount(): number;
					public contains(param0: com.facebook.common.internal.Predicate<K>): boolean;
					public reuse(param0: K): com.facebook.common.references.CloseableReference<V>;
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					public clear(): void;
					public cache(param0: K, param1: com.facebook.common.references.CloseableReference<V>): com.facebook.common.references.CloseableReference<V>;
					public getInUseCount(): number;
					public getInUseSizeInBytes(): number;
					public getEvictionQueueSizeInBytes(): number;
				}
				export module CountingMemoryCache {
					export class CacheTrimStrategy extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.cache.CountingMemoryCache.CacheTrimStrategy>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getTrimRatio(param0: com.facebook.common.memory.MemoryTrimType): number;
						});
						public constructor();
						public getTrimRatio(param0: com.facebook.common.memory.MemoryTrimType): number;
					}
					export class Entry<K, V>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.cache.CountingMemoryCache.Entry<any,any>>;
						public key: K;
						public valueRef: com.facebook.common.references.CloseableReference<V>;
						public clientCount: number;
						public isOrphan: boolean;
						public observer: com.facebook.imagepipeline.cache.CountingMemoryCache.EntryStateObserver<K>;
					}
					export class EntryStateObserver<K>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.cache.CountingMemoryCache.EntryStateObserver<any>>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onExclusivityChanged(param0: K, param1: boolean): void;
						});
						public constructor();
						public onExclusivityChanged(param0: K, param1: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class CountingMemoryCacheInspector<K, V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.CountingMemoryCacheInspector<any,any>>;
					public dumpCacheContent(): com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo<any,any>;
					public constructor(param0: com.facebook.imagepipeline.cache.CountingMemoryCache<K,V>);
				}
				export module CountingMemoryCacheInspector {
					export class DumpInfo<K, V>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo<any,any>>;
						public maxSize: number;
						public maxEntriesCount: number;
						public maxEntrySize: number;
						public size: number;
						public lruSize: number;
						public lruEntries: java.util.List<com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry<K,V>>;
						public sharedEntries: java.util.List<com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry<K,V>>;
						public otherEntries: java.util.Map<globalAndroid.graphics.Bitmap,any>;
						public constructor(param0: number, param1: number, param2: com.facebook.imagepipeline.cache.MemoryCacheParams);
						public release(): void;
					}
					export class DumpInfoEntry<K, V>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry<any,any>>;
						public key: K;
						public value: com.facebook.common.references.CloseableReference<V>;
						public constructor(param0: K, param1: com.facebook.common.references.CloseableReference<V>);
						public release(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class DefaultBitmapMemoryCacheParamsSupplier extends com.facebook.common.internal.Supplier<com.facebook.imagepipeline.cache.MemoryCacheParams> {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier>;
					public get(): any;
					public get(): com.facebook.imagepipeline.cache.MemoryCacheParams;
					public constructor(param0: globalAndroid.app.ActivityManager);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class DefaultCacheKeyFactory extends java.lang.Object implements com.facebook.imagepipeline.cache.CacheKeyFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.DefaultCacheKeyFactory>;
					public constructor();
					public getPostprocessedBitmapCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
					public getCacheKeySourceUri(param0: globalAndroid.net.Uri): globalAndroid.net.Uri;
					public getEncodedCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
					public getEncodedCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: globalAndroid.net.Uri, param2: any): com.facebook.cache.common.CacheKey;
					public getBitmapCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
					public static getInstance(): com.facebook.imagepipeline.cache.DefaultCacheKeyFactory;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class DefaultEncodedMemoryCacheParamsSupplier extends com.facebook.common.internal.Supplier<com.facebook.imagepipeline.cache.MemoryCacheParams> {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier>;
					public get(): any;
					public constructor();
					public get(): com.facebook.imagepipeline.cache.MemoryCacheParams;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class EncodedCountingMemoryCacheFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory>;
					public constructor();
					public static get(param0: com.facebook.common.internal.Supplier<com.facebook.imagepipeline.cache.MemoryCacheParams>, param1: com.facebook.common.memory.MemoryTrimmableRegistry): com.facebook.imagepipeline.cache.CountingMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class EncodedMemoryCacheFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory>;
					public static get(param0: com.facebook.imagepipeline.cache.CountingMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>, param1: com.facebook.imagepipeline.cache.ImageCacheStatsTracker): com.facebook.imagepipeline.cache.InstrumentedMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class ImageCacheStatsTracker extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.ImageCacheStatsTracker>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.cache.ImageCacheStatsTracker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onBitmapCachePut(): void;
						onBitmapCacheHit(param0: com.facebook.cache.common.CacheKey): void;
						onBitmapCacheMiss(): void;
						onMemoryCachePut(): void;
						onMemoryCacheHit(param0: com.facebook.cache.common.CacheKey): void;
						onMemoryCacheMiss(): void;
						onStagingAreaHit(param0: com.facebook.cache.common.CacheKey): void;
						onStagingAreaMiss(): void;
						onDiskCacheHit(param0: com.facebook.cache.common.CacheKey): void;
						onDiskCacheMiss(): void;
						onDiskCacheGetFail(): void;
						registerBitmapMemoryCache(param0: com.facebook.imagepipeline.cache.CountingMemoryCache<any,any>): void;
						registerEncodedMemoryCache(param0: com.facebook.imagepipeline.cache.CountingMemoryCache<any,any>): void;
					});
					public constructor();
					public onStagingAreaHit(param0: com.facebook.cache.common.CacheKey): void;
					public onMemoryCacheMiss(): void;
					public onDiskCacheHit(param0: com.facebook.cache.common.CacheKey): void;
					public onStagingAreaMiss(): void;
					public registerBitmapMemoryCache(param0: com.facebook.imagepipeline.cache.CountingMemoryCache<any,any>): void;
					public onBitmapCacheHit(param0: com.facebook.cache.common.CacheKey): void;
					public onMemoryCacheHit(param0: com.facebook.cache.common.CacheKey): void;
					public onDiskCacheGetFail(): void;
					public onBitmapCachePut(): void;
					public onMemoryCachePut(): void;
					public onBitmapCacheMiss(): void;
					public registerEncodedMemoryCache(param0: com.facebook.imagepipeline.cache.CountingMemoryCache<any,any>): void;
					public onDiskCacheMiss(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class InstrumentedMemoryCache<K, V>  extends com.facebook.imagepipeline.cache.MemoryCache<any,any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.InstrumentedMemoryCache<any,any>>;
					public constructor(param0: com.facebook.imagepipeline.cache.MemoryCache<any,any>, param1: com.facebook.imagepipeline.cache.MemoryCacheTracker<any>);
					public removeAll(param0: com.facebook.common.internal.Predicate<any>): number;
					public contains(param0: com.facebook.common.internal.Predicate<any>): boolean;
					public get(param0: any): com.facebook.common.references.CloseableReference<any>;
					public contains(param0: any): boolean;
					public cache(param0: any, param1: com.facebook.common.references.CloseableReference<any>): com.facebook.common.references.CloseableReference<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class MemoryCache<K, V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.MemoryCache<any,any>>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.cache.MemoryCache<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						cache(param0: K, param1: com.facebook.common.references.CloseableReference<V>): com.facebook.common.references.CloseableReference<V>;
						get(param0: K): com.facebook.common.references.CloseableReference<V>;
						removeAll(param0: com.facebook.common.internal.Predicate<K>): number;
						contains(param0: com.facebook.common.internal.Predicate<K>): boolean;
						contains(param0: K): boolean;
					});
					public constructor();
					public contains(param0: com.facebook.common.internal.Predicate<K>): boolean;
					public contains(param0: K): boolean;
					public removeAll(param0: com.facebook.common.internal.Predicate<K>): number;
					public cache(param0: K, param1: com.facebook.common.references.CloseableReference<V>): com.facebook.common.references.CloseableReference<V>;
					public get(param0: K): com.facebook.common.references.CloseableReference<V>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class MemoryCacheParams extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.MemoryCacheParams>;
					public maxCacheSize: number;
					public maxCacheEntries: number;
					public maxEvictionQueueSize: number;
					public maxEvictionQueueEntries: number;
					public maxCacheEntrySize: number;
					public paramsCheckIntervalMs: number;
					public constructor(param0: number, param1: number, param2: number, param3: number, param4: number);
					public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class MemoryCacheTracker<K>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.MemoryCacheTracker<any>>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.cache.MemoryCacheTracker<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onCacheHit(param0: K): void;
						onCacheMiss(): void;
						onCachePut(): void;
					});
					public constructor();
					public onCacheHit(param0: K): void;
					public onCacheMiss(): void;
					public onCachePut(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class NativeMemoryCacheTrimStrategy extends java.lang.Object implements com.facebook.imagepipeline.cache.CountingMemoryCache.CacheTrimStrategy {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy>;
					public constructor();
					public getTrimRatio(param0: com.facebook.common.memory.MemoryTrimType): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class NoOpImageCacheStatsTracker extends java.lang.Object implements com.facebook.imagepipeline.cache.ImageCacheStatsTracker {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker>;
					public onStagingAreaHit(param0: com.facebook.cache.common.CacheKey): void;
					public onMemoryCacheMiss(): void;
					public static getInstance(): com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker;
					public onDiskCacheHit(param0: com.facebook.cache.common.CacheKey): void;
					public onStagingAreaMiss(): void;
					public registerBitmapMemoryCache(param0: com.facebook.imagepipeline.cache.CountingMemoryCache<any,any>): void;
					public onBitmapCacheHit(param0: com.facebook.cache.common.CacheKey): void;
					public onMemoryCacheHit(param0: com.facebook.cache.common.CacheKey): void;
					public onDiskCacheGetFail(): void;
					public onBitmapCachePut(): void;
					public onMemoryCachePut(): void;
					public onBitmapCacheMiss(): void;
					public registerEncodedMemoryCache(param0: com.facebook.imagepipeline.cache.CountingMemoryCache<any,any>): void;
					public onDiskCacheMiss(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class StagingArea extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.StagingArea>;
					public static getInstance(): com.facebook.imagepipeline.cache.StagingArea;
					public remove(param0: com.facebook.cache.common.CacheKey, param1: com.facebook.imagepipeline.image.EncodedImage): boolean;
					public remove(param0: com.facebook.cache.common.CacheKey): boolean;
					public put(param0: com.facebook.cache.common.CacheKey, param1: com.facebook.imagepipeline.image.EncodedImage): void;
					public get(param0: com.facebook.cache.common.CacheKey): com.facebook.imagepipeline.image.EncodedImage;
					public clearAll(): void;
					public containsKey(param0: com.facebook.cache.common.CacheKey): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module cache {
				export class ValueDescriptor<V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.cache.ValueDescriptor<any>>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.cache.ValueDescriptor<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getSizeInBytes(param0: V): number;
					});
					public constructor();
					public getSizeInBytes(param0: V): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module common {
				export class BytesRange extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.common.BytesRange>;
					public static TO_END_OF_CONTENT: number;
					public to: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public static toMax(param0: number): com.facebook.imagepipeline.common.BytesRange;
					public toHttpRangeHeaderValue(): string;
					public contains(param0: com.facebook.imagepipeline.common.BytesRange): boolean;
					public hashCode(): number;
					public static fromContentRangeHeader(param0: string): com.facebook.imagepipeline.common.BytesRange;
					public constructor(param0: number, param1: number);
					public static from(param0: number): com.facebook.imagepipeline.common.BytesRange;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module common {
				export class ImageDecodeOptions extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.common.ImageDecodeOptions>;
					public minDecodeIntervalMs: number;
					public decodePreviewFrame: boolean;
					public useLastFrameForPreview: boolean;
					public decodeAllFrames: boolean;
					public forceStaticImage: boolean;
					public bitmapConfig: globalAndroid.graphics.Bitmap.Config;
					public customImageDecoder: com.facebook.imagepipeline.decoder.ImageDecoder;
					public bitmapTransformation: com.facebook.imagepipeline.transformation.BitmapTransformation;
					public colorSpace: globalAndroid.graphics.ColorSpace;
					public equals(param0: any): boolean;
					public static defaults(): com.facebook.imagepipeline.common.ImageDecodeOptions;
					public toString(): string;
					public static newBuilder(): com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder;
					public hashCode(): number;
					public constructor(param0: com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module common {
				export class ImageDecodeOptionsBuilder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder>;
					public setCustomImageDecoder(param0: com.facebook.imagepipeline.decoder.ImageDecoder): com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder;
					public getDecodePreviewFrame(): boolean;
					public build(): com.facebook.imagepipeline.common.ImageDecodeOptions;
					public setBitmapConfig(param0: globalAndroid.graphics.Bitmap.Config): com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder;
					public getCustomImageDecoder(): com.facebook.imagepipeline.decoder.ImageDecoder;
					public setBitmapTransformation(param0: com.facebook.imagepipeline.transformation.BitmapTransformation): com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder;
					public setColorSpace(param0: globalAndroid.graphics.ColorSpace): com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder;
					public setFrom(param0: com.facebook.imagepipeline.common.ImageDecodeOptions): com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder;
					public setMinDecodeIntervalMs(param0: number): com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder;
					public setForceStaticImage(param0: boolean): com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder;
					public getBitmapConfig(): globalAndroid.graphics.Bitmap.Config;
					public getUseLastFrameForPreview(): boolean;
					public getMinDecodeIntervalMs(): number;
					public getForceStaticImage(): boolean;
					public constructor();
					public getColorSpace(): globalAndroid.graphics.ColorSpace;
					public getBitmapTransformation(): com.facebook.imagepipeline.transformation.BitmapTransformation;
					public setUseLastFrameForPreview(param0: boolean): com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder;
					public getDecodeAllFrames(): boolean;
					public setDecodePreviewFrame(param0: boolean): com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder;
					public setDecodeAllFrames(param0: boolean): com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module common {
				export class Priority {
					public static class: java.lang.Class<com.facebook.imagepipeline.common.Priority>;
					public static LOW: com.facebook.imagepipeline.common.Priority;
					public static MEDIUM: com.facebook.imagepipeline.common.Priority;
					public static HIGH: com.facebook.imagepipeline.common.Priority;
					public static values(): native.Array<com.facebook.imagepipeline.common.Priority>;
					public static getHigherPriority(param0: com.facebook.imagepipeline.common.Priority, param1: com.facebook.imagepipeline.common.Priority): com.facebook.imagepipeline.common.Priority;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
					public static valueOf(param0: string): com.facebook.imagepipeline.common.Priority;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module common {
				export class ResizeOptions extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.common.ResizeOptions>;
					public static DEFAULT_ROUNDUP_FRACTION: number;
					public width: number;
					public height: number;
					public maxBitmapSize: number;
					public roundUpFraction: number;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public equals(param0: any): boolean;
					public static forSquareSize(param0: number): com.facebook.imagepipeline.common.ResizeOptions;
					public toString(): string;
					public constructor(param0: number, param1: number, param2: number);
					public static forDimensions(param0: number, param1: number): com.facebook.imagepipeline.common.ResizeOptions;
					public hashCode(): number;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module common {
				export class RotationOptions extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.common.RotationOptions>;
					public static NO_ROTATION: number;
					public static ROTATE_90: number;
					public static ROTATE_180: number;
					public static ROTATE_270: number;
					public getForcedAngle(): number;
					public equals(param0: any): boolean;
					public static disableRotation(): com.facebook.imagepipeline.common.RotationOptions;
					public toString(): string;
					public canDeferUntilRendered(): boolean;
					public useImageMetadata(): boolean;
					public static forceRotation(param0: number): com.facebook.imagepipeline.common.RotationOptions;
					public rotationEnabled(): boolean;
					public hashCode(): number;
					public static autoRotate(): com.facebook.imagepipeline.common.RotationOptions;
					public static autoRotateAtRenderTime(): com.facebook.imagepipeline.common.RotationOptions;
				}
				export module RotationOptions {
					export class RotationAngle extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.imagepipeline.common.RotationOptions.RotationAngle>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.common.RotationOptions$RotationAngle interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module common {
				export class SourceUriType extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.imagepipeline.common.SourceUriType>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.common.SourceUriType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public static SOURCE_TYPE_NETWORK: number;
					public static SOURCE_TYPE_LOCAL_ASSET: number;
					public static SOURCE_TYPE_LOCAL_RESOURCE: number;
					public static SOURCE_TYPE_QUALIFIED_RESOURCE: number;
					public static SOURCE_TYPE_LOCAL_FILE: number;
					public static SOURCE_TYPE_UNKNOWN: number;
					public static SOURCE_TYPE_LOCAL_IMAGE_FILE: number;
					public static SOURCE_TYPE_DATA: number;
					public static SOURCE_TYPE_LOCAL_VIDEO_FILE: number;
					public static SOURCE_TYPE_LOCAL_CONTENT: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module common {
				export class TooManyBitmapsException extends java.lang.RuntimeException {
					public static class: java.lang.Class<com.facebook.imagepipeline.common.TooManyBitmapsException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class CloseableReferenceFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.CloseableReferenceFactory>;
					public constructor(param0: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker);
					public create(param0: any, param1: com.facebook.common.references.ResourceReleaser<any>): com.facebook.common.references.CloseableReference<any>;
					public create(param0: java.io.Closeable): com.facebook.common.references.CloseableReference<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class DefaultExecutorSupplier extends java.lang.Object implements com.facebook.imagepipeline.core.ExecutorSupplier {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.DefaultExecutorSupplier>;
					public forLocalStorageRead(): java.util.concurrent.Executor;
					public forLightweightBackgroundTasks(): java.util.concurrent.Executor;
					public forDecode(): java.util.concurrent.Executor;
					public forLocalStorageWrite(): java.util.concurrent.Executor;
					public constructor(param0: number);
					public forBackgroundTasks(): java.util.concurrent.Executor;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class DiskStorageCacheFactory extends java.lang.Object implements com.facebook.imagepipeline.core.FileCacheFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.DiskStorageCacheFactory>;
					public static buildDiskStorageCache(param0: com.facebook.cache.disk.DiskCacheConfig, param1: com.facebook.cache.disk.DiskStorage): com.facebook.cache.disk.DiskStorageCache;
					public static buildDiskStorageCache(param0: com.facebook.cache.disk.DiskCacheConfig, param1: com.facebook.cache.disk.DiskStorage, param2: java.util.concurrent.Executor): com.facebook.cache.disk.DiskStorageCache;
					public get(param0: com.facebook.cache.disk.DiskCacheConfig): com.facebook.cache.disk.FileCache;
					public constructor(param0: com.facebook.imagepipeline.core.DiskStorageFactory);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class DiskStorageFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.DiskStorageFactory>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.core.DiskStorageFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						get(param0: com.facebook.cache.disk.DiskCacheConfig): com.facebook.cache.disk.DiskStorage;
					});
					public constructor();
					public get(param0: com.facebook.cache.disk.DiskCacheConfig): com.facebook.cache.disk.DiskStorage;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class DynamicDefaultDiskStorageFactory extends java.lang.Object implements com.facebook.imagepipeline.core.DiskStorageFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory>;
					public constructor();
					public get(param0: com.facebook.cache.disk.DiskCacheConfig): com.facebook.cache.disk.DiskStorage;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class ExecutorSupplier extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.ExecutorSupplier>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.core.ExecutorSupplier interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						forLocalStorageRead(): java.util.concurrent.Executor;
						forLocalStorageWrite(): java.util.concurrent.Executor;
						forDecode(): java.util.concurrent.Executor;
						forBackgroundTasks(): java.util.concurrent.Executor;
						forLightweightBackgroundTasks(): java.util.concurrent.Executor;
					});
					public constructor();
					public forLocalStorageRead(): java.util.concurrent.Executor;
					public forLightweightBackgroundTasks(): java.util.concurrent.Executor;
					public forDecode(): java.util.concurrent.Executor;
					public forLocalStorageWrite(): java.util.concurrent.Executor;
					public forBackgroundTasks(): java.util.concurrent.Executor;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class FileCacheFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.FileCacheFactory>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.core.FileCacheFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						get(param0: com.facebook.cache.disk.DiskCacheConfig): com.facebook.cache.disk.FileCache;
					});
					public constructor();
					public get(param0: com.facebook.cache.disk.DiskCacheConfig): com.facebook.cache.disk.FileCache;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class ImagePipeline extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.ImagePipeline>;
					public getDataSourceSupplier(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: com.facebook.imagepipeline.request.ImageRequest.RequestLevel, param3: com.facebook.imagepipeline.listener.RequestListener): com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>>;
					public fetchDecodedImage(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: com.facebook.imagepipeline.listener.RequestListener): com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>;
					public generateUniqueFutureId(): string;
					public fetchDecodedImage(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: com.facebook.imagepipeline.request.ImageRequest.RequestLevel, param3: com.facebook.imagepipeline.listener.RequestListener): com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>;
					public getUsedDiskCacheSize(): number;
					public isInDiskCache(param0: globalAndroid.net.Uri): com.facebook.datasource.DataSource<java.lang.Boolean>;
					public fetchDecodedImage(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>;
					public evictFromDiskCache(param0: com.facebook.imagepipeline.request.ImageRequest): void;
					public isInBitmapMemoryCache(param0: com.facebook.imagepipeline.request.ImageRequest): boolean;
					public evictFromMemoryCache(param0: globalAndroid.net.Uri): void;
					public isPaused(): boolean;
					public getCacheKeyFactory(): com.facebook.imagepipeline.cache.CacheKeyFactory;
					public fetchImageFromBitmapCache(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>;
					public getCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
					public prefetchToDiskCache(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.datasource.DataSource<java.lang.Void>;
					public pause(): void;
					public fetchEncodedImage(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: com.facebook.imagepipeline.listener.RequestListener): com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>>;
					public clearDiskCaches(): void;
					public getRequestListenerForRequest(param0: com.facebook.imagepipeline.request.ImageRequest, param1: com.facebook.imagepipeline.listener.RequestListener): com.facebook.imagepipeline.listener.RequestListener;
					public prefetchToDiskCache(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: com.facebook.imagepipeline.common.Priority): com.facebook.datasource.DataSource<java.lang.Void>;
					public isInDiskCacheSync(param0: com.facebook.imagepipeline.request.ImageRequest): boolean;
					public hasCachedImage(param0: com.facebook.cache.common.CacheKey): boolean;
					public submitFetchRequest(param0: com.facebook.imagepipeline.producers.Producer<any>, param1: com.facebook.imagepipeline.producers.SettableProducerContext, param2: com.facebook.imagepipeline.listener.RequestListener): com.facebook.datasource.DataSource<any>;
					public isLazyDataSource(): com.facebook.common.internal.Supplier<java.lang.Boolean>;
					public fetchDecodedImage(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: com.facebook.imagepipeline.request.ImageRequest.RequestLevel): com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>;
					public isInDiskCacheSync(param0: globalAndroid.net.Uri, param1: com.facebook.imagepipeline.request.ImageRequest.CacheChoice): boolean;
					public isInDiskCache(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.datasource.DataSource<java.lang.Boolean>;
					public evictFromDiskCache(param0: globalAndroid.net.Uri): void;
					public getEncodedImageDataSourceSupplier(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>>>;
					public isInDiskCacheSync(param0: globalAndroid.net.Uri): boolean;
					public constructor(param0: com.facebook.imagepipeline.core.ProducerSequenceFactory, param1: java.util.Set<com.facebook.imagepipeline.listener.RequestListener>, param2: com.facebook.common.internal.Supplier<java.lang.Boolean>, param3: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param4: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>, param5: com.facebook.imagepipeline.cache.BufferedDiskCache, param6: com.facebook.imagepipeline.cache.BufferedDiskCache, param7: com.facebook.imagepipeline.cache.CacheKeyFactory, param8: com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue, param9: com.facebook.common.internal.Supplier<java.lang.Boolean>, param10: com.facebook.common.internal.Supplier<java.lang.Boolean>, param11: com.facebook.callercontext.CallerContextVerifier);
					public clearMemoryCaches(): void;
					public prefetchToBitmapCache(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.datasource.DataSource<java.lang.Void>;
					public fetchEncodedImage(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>>;
					public getProducerSequenceFactory(): com.facebook.imagepipeline.core.ProducerSequenceFactory;
					public getBitmapMemoryCache(): com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>;
					public resume(): void;
					public isInBitmapMemoryCache(param0: globalAndroid.net.Uri): boolean;
					public getDataSourceSupplier(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: com.facebook.imagepipeline.request.ImageRequest.RequestLevel): com.facebook.common.internal.Supplier<com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>>;
					public evictFromCache(param0: globalAndroid.net.Uri): void;
					public clearCaches(): void;
					public getCachedImage(param0: com.facebook.cache.common.CacheKey): com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class ImagePipelineConfig extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.ImagePipelineConfig>;
					public getImageDecoder(): com.facebook.imagepipeline.decoder.ImageDecoder;
					public getPoolFactory(): com.facebook.imagepipeline.memory.PoolFactory;
					public isDiskCacheEnabled(): boolean;
					public getExecutorSupplier(): com.facebook.imagepipeline.core.ExecutorSupplier;
					public isResizeAndRotateEnabledForNetwork(): boolean;
					public getCacheKeyFactory(): com.facebook.imagepipeline.cache.CacheKeyFactory;
					public getEncodedMemoryCacheParamsSupplier(): com.facebook.common.internal.Supplier<com.facebook.imagepipeline.cache.MemoryCacheParams>;
					public getImageTranscoderFactory(): com.facebook.imagepipeline.transcoder.ImageTranscoderFactory;
					public getRequestListeners(): java.util.Set<com.facebook.imagepipeline.listener.RequestListener>;
					public getFileCacheFactory(): com.facebook.imagepipeline.core.FileCacheFactory;
					public isDownsampleEnabled(): boolean;
					public getImageDecoderConfig(): com.facebook.imagepipeline.decoder.ImageDecoderConfig;
					public getProgressiveJpegConfig(): com.facebook.imagepipeline.decoder.ProgressiveJpegConfig;
					public getContext(): globalAndroid.content.Context;
					public static getDefaultImageRequestConfig(): com.facebook.imagepipeline.core.ImagePipelineConfig.DefaultImageRequestConfig;
					public getImageCacheStatsTracker(): com.facebook.imagepipeline.cache.ImageCacheStatsTracker;
					public getMainDiskCacheConfig(): com.facebook.cache.disk.DiskCacheConfig;
					public getBitmapMemoryCacheTrimStrategy(): com.facebook.imagepipeline.cache.CountingMemoryCache.CacheTrimStrategy;
					public getCallerContextVerifier(): com.facebook.callercontext.CallerContextVerifier;
					public getExperiments(): com.facebook.imagepipeline.core.ImagePipelineExperiments;
					public getImageTranscoderType(): java.lang.Integer;
					public getBitmapMemoryCacheParamsSupplier(): com.facebook.common.internal.Supplier<com.facebook.imagepipeline.cache.MemoryCacheParams>;
					public getNetworkFetcher(): com.facebook.imagepipeline.producers.NetworkFetcher<any>;
					public getBitmapConfig(): globalAndroid.graphics.Bitmap.Config;
					public static newBuilder(param0: globalAndroid.content.Context): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
					public getIsPrefetchEnabledSupplier(): com.facebook.common.internal.Supplier<java.lang.Boolean>;
					public getCloseableReferenceLeakTracker(): com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker;
					public getMemoryTrimmableRegistry(): com.facebook.common.memory.MemoryTrimmableRegistry;
					public getMemoryChunkType(): number;
					public getSmallImageDiskCacheConfig(): com.facebook.cache.disk.DiskCacheConfig;
					public getPlatformBitmapFactory(): com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory;
				}
				export module ImagePipelineConfig {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.core.ImagePipelineConfig.Builder>;
						public setBitmapMemoryCacheTrimStrategy(param0: com.facebook.imagepipeline.cache.CountingMemoryCache.CacheTrimStrategy): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setHttpConnectionTimeout(param0: number): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public isDiskCacheEnabled(): boolean;
						public setNetworkFetcher(param0: com.facebook.imagepipeline.producers.NetworkFetcher<any>): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setPoolFactory(param0: com.facebook.imagepipeline.memory.PoolFactory): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setDiskCacheEnabled(param0: boolean): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setImageDecoderConfig(param0: com.facebook.imagepipeline.decoder.ImageDecoderConfig): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setDownsampleEnabled(param0: boolean): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setMemoryTrimmableRegistry(param0: com.facebook.common.memory.MemoryTrimmableRegistry): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setExecutorSupplier(param0: com.facebook.imagepipeline.core.ExecutorSupplier): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setImageTranscoderType(param0: number): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setEncodedMemoryCacheParamsSupplier(param0: com.facebook.common.internal.Supplier<com.facebook.imagepipeline.cache.MemoryCacheParams>): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setRequestListeners(param0: java.util.Set<com.facebook.imagepipeline.listener.RequestListener>): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setImageDecoder(param0: com.facebook.imagepipeline.decoder.ImageDecoder): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public getImageTranscoderType(): java.lang.Integer;
						public setCloseableReferenceLeakTracker(param0: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setMainDiskCacheConfig(param0: com.facebook.cache.disk.DiskCacheConfig): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setBitmapMemoryCacheParamsSupplier(param0: com.facebook.common.internal.Supplier<com.facebook.imagepipeline.cache.MemoryCacheParams>): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setBitmapsConfig(param0: globalAndroid.graphics.Bitmap.Config): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setCacheKeyFactory(param0: com.facebook.imagepipeline.cache.CacheKeyFactory): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setCallerContextVerifier(param0: com.facebook.callercontext.CallerContextVerifier): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setImageCacheStatsTracker(param0: com.facebook.imagepipeline.cache.ImageCacheStatsTracker): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setSmallImageDiskCacheConfig(param0: com.facebook.cache.disk.DiskCacheConfig): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public getMemoryChunkType(): java.lang.Integer;
						public setImageTranscoderFactory(param0: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public experiment(): com.facebook.imagepipeline.core.ImagePipelineExperiments.Builder;
						public setProgressiveJpegConfig(param0: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setResizeAndRotateEnabledForNetwork(param0: boolean): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setIsPrefetchEnabledSupplier(param0: com.facebook.common.internal.Supplier<java.lang.Boolean>): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setPlatformBitmapFactory(param0: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setFileCacheFactory(param0: com.facebook.imagepipeline.core.FileCacheFactory): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setMemoryChunkType(param0: number): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public isDownsampleEnabled(): boolean;
						public build(): com.facebook.imagepipeline.core.ImagePipelineConfig;
					}
					export class DefaultImageRequestConfig extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.core.ImagePipelineConfig.DefaultImageRequestConfig>;
						public setProgressiveRenderingEnabled(param0: boolean): void;
						public isProgressiveRenderingEnabled(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class ImagePipelineExperiments extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.ImagePipelineExperiments>;
					public getWebpErrorLogger(): com.facebook.common.webp.WebpBitmapFactory.WebpErrorLogger;
					public isLazyDataSource(): com.facebook.common.internal.Supplier<java.lang.Boolean>;
					public getMaxBitmapSize(): number;
					public getUseDownsamplingRatioForResizing(): boolean;
					public getBitmapPrepareToDrawMinSizeBytes(): number;
					public shouldDownscaleFrameToDrawableDimensions(): boolean;
					public isPartialImageCachingEnabled(): boolean;
					public isWebpSupportEnabled(): boolean;
					public getProducerFactoryMethod(): com.facebook.imagepipeline.core.ImagePipelineExperiments.ProducerFactoryMethod;
					public getBitmapPrepareToDrawForPrefetch(): boolean;
					public static newBuilder(param0: com.facebook.imagepipeline.core.ImagePipelineConfig.Builder): com.facebook.imagepipeline.core.ImagePipelineExperiments.Builder;
					public isNativeCodeDisabled(): boolean;
					public isDecodeCancellationEnabled(): boolean;
					public getBitmapPrepareToDrawMaxSizeBytes(): number;
					public isGingerbreadDecoderEnabled(): boolean;
					public getWebpBitmapFactory(): com.facebook.common.webp.WebpBitmapFactory;
					public getUseBitmapPrepareToDraw(): boolean;
				}
				export module ImagePipelineExperiments {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.core.ImagePipelineExperiments.Builder>;
						public mBitmapPrepareToDrawForPrefetch: boolean;
						public mLazyDataSource: com.facebook.common.internal.Supplier<java.lang.Boolean>;
						public mGingerbreadDecoderEnabled: boolean;
						public mDownscaleFrameToDrawableDimensions: boolean;
						public constructor(param0: com.facebook.imagepipeline.core.ImagePipelineConfig.Builder);
						public setProducerFactoryMethod(param0: com.facebook.imagepipeline.core.ImagePipelineExperiments.ProducerFactoryMethod): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setBitmapPrepareToDraw(param0: boolean, param1: number, param2: number, param3: boolean): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setGingerbreadDecoderEnabled(param0: boolean): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setShouldDownscaleFrameToDrawableDimensions(param0: boolean): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setDecodeCancellationEnabled(param0: boolean): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setWebpSupportEnabled(param0: boolean): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setWebpBitmapFactory(param0: com.facebook.common.webp.WebpBitmapFactory): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public build(): com.facebook.imagepipeline.core.ImagePipelineExperiments;
						public setPartialImageCachingEnabled(param0: boolean): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setWebpErrorLogger(param0: com.facebook.common.webp.WebpBitmapFactory.WebpErrorLogger): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setNativeCodeDisabled(param0: boolean): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setLazyDataSource(param0: com.facebook.common.internal.Supplier<java.lang.Boolean>): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setMaxBitmapSize(param0: number): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public setUseDownsampligRatioForResizing(param0: boolean): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public isPartialImageCachingEnabled(): boolean;
					}
					export class DefaultProducerFactoryMethod extends java.lang.Object implements com.facebook.imagepipeline.core.ImagePipelineExperiments.ProducerFactoryMethod {
						public static class: java.lang.Class<com.facebook.imagepipeline.core.ImagePipelineExperiments.DefaultProducerFactoryMethod>;
						public constructor();
						public createProducerFactory(param0: globalAndroid.content.Context, param1: com.facebook.common.memory.ByteArrayPool, param2: com.facebook.imagepipeline.decoder.ImageDecoder, param3: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig, param4: boolean, param5: boolean, param6: boolean, param7: com.facebook.imagepipeline.core.ExecutorSupplier, param8: com.facebook.common.memory.PooledByteBufferFactory, param9: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param10: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>, param11: com.facebook.imagepipeline.cache.BufferedDiskCache, param12: com.facebook.imagepipeline.cache.BufferedDiskCache, param13: com.facebook.imagepipeline.cache.CacheKeyFactory, param14: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory, param15: number, param16: number, param17: boolean, param18: number, param19: com.facebook.imagepipeline.core.CloseableReferenceFactory): com.facebook.imagepipeline.core.ProducerFactory;
					}
					export class ProducerFactoryMethod extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.core.ImagePipelineExperiments.ProducerFactoryMethod>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createProducerFactory(param0: globalAndroid.content.Context, param1: com.facebook.common.memory.ByteArrayPool, param2: com.facebook.imagepipeline.decoder.ImageDecoder, param3: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig, param4: boolean, param5: boolean, param6: boolean, param7: com.facebook.imagepipeline.core.ExecutorSupplier, param8: com.facebook.common.memory.PooledByteBufferFactory, param9: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param10: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>, param11: com.facebook.imagepipeline.cache.BufferedDiskCache, param12: com.facebook.imagepipeline.cache.BufferedDiskCache, param13: com.facebook.imagepipeline.cache.CacheKeyFactory, param14: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory, param15: number, param16: number, param17: boolean, param18: number, param19: com.facebook.imagepipeline.core.CloseableReferenceFactory): com.facebook.imagepipeline.core.ProducerFactory;
						});
						public constructor();
						public createProducerFactory(param0: globalAndroid.content.Context, param1: com.facebook.common.memory.ByteArrayPool, param2: com.facebook.imagepipeline.decoder.ImageDecoder, param3: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig, param4: boolean, param5: boolean, param6: boolean, param7: com.facebook.imagepipeline.core.ExecutorSupplier, param8: com.facebook.common.memory.PooledByteBufferFactory, param9: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param10: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>, param11: com.facebook.imagepipeline.cache.BufferedDiskCache, param12: com.facebook.imagepipeline.cache.BufferedDiskCache, param13: com.facebook.imagepipeline.cache.CacheKeyFactory, param14: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory, param15: number, param16: number, param17: boolean, param18: number, param19: com.facebook.imagepipeline.core.CloseableReferenceFactory): com.facebook.imagepipeline.core.ProducerFactory;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class ImagePipelineFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.ImagePipelineFactory>;
					public static shutDown(): void;
					public static initialize(param0: globalAndroid.content.Context): void;
					public static initialize(param0: com.facebook.imagepipeline.core.ImagePipelineConfig): void;
					public getEncodedCountingMemoryCache(): com.facebook.imagepipeline.cache.CountingMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>;
					public static getInstance(): com.facebook.imagepipeline.core.ImagePipelineFactory;
					public getAnimatedDrawableFactory(param0: globalAndroid.content.Context): com.facebook.imagepipeline.drawable.DrawableFactory;
					public getMainFileCache(): com.facebook.cache.disk.FileCache;
					public getSmallImageFileCache(): com.facebook.cache.disk.FileCache;
					public getImagePipeline(): com.facebook.imagepipeline.core.ImagePipeline;
					public getBitmapMemoryCache(): com.facebook.imagepipeline.cache.InstrumentedMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>;
					public getMainBufferedDiskCache(): com.facebook.imagepipeline.cache.BufferedDiskCache;
					public constructor(param0: com.facebook.imagepipeline.core.ImagePipelineConfig);
					public getEncodedMemoryCache(): com.facebook.imagepipeline.cache.InstrumentedMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>;
					public getPlatformDecoder(): com.facebook.imagepipeline.platform.PlatformDecoder;
					public static setInstance(param0: com.facebook.imagepipeline.core.ImagePipelineFactory): void;
					public getCloseableReferenceFactory(): com.facebook.imagepipeline.core.CloseableReferenceFactory;
					public getBitmapCountingMemoryCache(): com.facebook.imagepipeline.cache.CountingMemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>;
					public static hasBeenInitialized(): boolean;
					public getPlatformBitmapFactory(): com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class ImageTranscoderType extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.ImageTranscoderType>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.core.ImageTranscoderType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public static NATIVE_TRANSCODER: number;
					public static JAVA_TRANSCODER: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class MemoryChunkType extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.MemoryChunkType>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.core.MemoryChunkType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public static BUFFER_MEMORY: number;
					public static NATIVE_MEMORY: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class PriorityThreadFactory extends java.lang.Object implements java.util.concurrent.ThreadFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.PriorityThreadFactory>;
					public newThread(param0: java.lang.Runnable): java.lang.Thread;
					public constructor(param0: number);
					public constructor(param0: number, param1: string, param2: boolean);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class ProducerFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.ProducerFactory>;
					public newBitmapPrepareProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>): com.facebook.imagepipeline.producers.BitmapPrepareProducer;
					public newDiskCacheWriteProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>): com.facebook.imagepipeline.producers.DiskCacheWriteProducer;
					public newNetworkFetchProducer(param0: com.facebook.imagepipeline.producers.NetworkFetcher<any>): com.facebook.imagepipeline.producers.NetworkFetchProducer;
					public static newSwallowResultProducer(param0: com.facebook.imagepipeline.producers.Producer<any>): com.facebook.imagepipeline.producers.SwallowResultProducer<any>;
					public newEncodedCacheKeyMultiplexProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>): com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer;
					public newLocalVideoThumbnailProducer(): com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer;
					public newBitmapMemoryCacheKeyMultiplexProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>): com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer;
					public newThumbnailBranchProducer(param0: native.Array<com.facebook.imagepipeline.producers.ThumbnailProducer<com.facebook.imagepipeline.image.EncodedImage>>): com.facebook.imagepipeline.producers.ThumbnailBranchProducer;
					public newDecodeProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>): com.facebook.imagepipeline.producers.DecodeProducer;
					public newResizeAndRotateProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>, param1: boolean, param2: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory): com.facebook.imagepipeline.producers.ResizeAndRotateProducer;
					public newWebpTranscodeProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>): com.facebook.imagepipeline.producers.WebpTranscodeProducer;
					public newLocalResourceFetchProducer(): com.facebook.imagepipeline.producers.LocalResourceFetchProducer;
					public newThrottlingProducer(param0: com.facebook.imagepipeline.producers.Producer<any>): com.facebook.imagepipeline.producers.ThrottlingProducer<any>;
					public newPostprocessorProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>): com.facebook.imagepipeline.producers.PostprocessorProducer;
					public static newBranchOnSeparateImagesProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>): com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer;
					public static newAddImageTransformMetaDataProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>): com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer;
					public newLocalContentUriFetchProducer(): com.facebook.imagepipeline.producers.LocalContentUriFetchProducer;
					public newLocalFileFetchProducer(): com.facebook.imagepipeline.producers.LocalFileFetchProducer;
					public newQualifiedResourceFetchProducer(): com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer;
					public newBackgroundThreadHandoffProducer(param0: com.facebook.imagepipeline.producers.Producer<any>, param1: com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue): com.facebook.imagepipeline.producers.ThreadHandoffProducer<any>;
					public newBitmapMemoryCacheGetProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>): com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer;
					public newDiskCacheReadProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>): com.facebook.imagepipeline.producers.DiskCacheReadProducer;
					public newPostprocessorBitmapMemoryCacheProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>): com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer;
					public newPartialDiskCacheProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>): com.facebook.imagepipeline.producers.PartialDiskCacheProducer;
					public newLocalContentUriThumbnailFetchProducer(): com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer;
					public newBitmapMemoryCacheProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>): com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer;
					public newDataFetchProducer(): com.facebook.imagepipeline.producers.DataFetchProducer;
					public newLocalExifThumbnailProducer(): com.facebook.imagepipeline.producers.LocalExifThumbnailProducer;
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.common.memory.ByteArrayPool, param2: com.facebook.imagepipeline.decoder.ImageDecoder, param3: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig, param4: boolean, param5: boolean, param6: boolean, param7: com.facebook.imagepipeline.core.ExecutorSupplier, param8: com.facebook.common.memory.PooledByteBufferFactory, param9: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param10: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>, param11: com.facebook.imagepipeline.cache.BufferedDiskCache, param12: com.facebook.imagepipeline.cache.BufferedDiskCache, param13: com.facebook.imagepipeline.cache.CacheKeyFactory, param14: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory, param15: number, param16: number, param17: boolean, param18: number, param19: com.facebook.imagepipeline.core.CloseableReferenceFactory);
					public newEncodedMemoryCacheProducer(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>): com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer;
					public static newNullProducer(): com.facebook.imagepipeline.producers.NullProducer<any>;
					public newLocalAssetFetchProducer(): com.facebook.imagepipeline.producers.LocalAssetFetchProducer;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module core {
				export class ProducerSequenceFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.core.ProducerSequenceFactory>;
					public getDecodedImagePrefetchProducerSequence(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.producers.Producer<java.lang.Void>;
					public getLocalFileFetchEncodedImageProducerSequence(): com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>>;
					public getDecodedImageProducerSequence(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>;
					public getNetworkFetchEncodedImageProducerSequence(): com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>>;
					public getEncodedImageProducerSequence(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>>;
					public constructor(param0: globalAndroid.content.ContentResolver, param1: com.facebook.imagepipeline.core.ProducerFactory, param2: com.facebook.imagepipeline.producers.NetworkFetcher<any>, param3: boolean, param4: boolean, param5: com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue, param6: boolean, param7: boolean, param8: boolean, param9: boolean, param10: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory);
					public getLocalContentUriFetchEncodedImageProducerSequence(): com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>>;
					public getEncodedImagePrefetchProducerSequence(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.producers.Producer<java.lang.Void>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module datasource {
				export abstract class AbstractProducerToDataSourceAdapter<T>  extends com.facebook.datasource.AbstractDataSource<any> implements com.facebook.imagepipeline.request.HasImageRequest  {
					public static class: java.lang.Class<com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter<any>>;
					public constructor(param0: com.facebook.imagepipeline.producers.Producer<any>, param1: com.facebook.imagepipeline.producers.SettableProducerContext, param2: com.facebook.imagepipeline.listener.RequestListener);
					public isFinished(): boolean;
					public close(): boolean;
					public hasFailed(): boolean;
					public getProgress(): number;
					public hasMultipleResults(): boolean;
					public constructor();
					public hasResult(): boolean;
					public getImageRequest(): com.facebook.imagepipeline.request.ImageRequest;
					public subscribe(param0: com.facebook.datasource.DataSubscriber<any>, param1: java.util.concurrent.Executor): void;
					public getFailureCause(): java.lang.Throwable;
					public getResult(): any;
					public onNewResultImpl(param0: any, param1: number): void;
					public isClosed(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module datasource {
				export abstract class BaseBitmapDataSubscriber extends com.facebook.datasource.BaseDataSubscriber<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.datasource.BaseBitmapDataSubscriber>;
					public constructor();
					public onCancellation(param0: com.facebook.datasource.DataSource<any>): void;
					public onProgressUpdate(param0: com.facebook.datasource.DataSource<any>): void;
					public onNewResultImpl(param0: globalAndroid.graphics.Bitmap): void;
					public onFailure(param0: com.facebook.datasource.DataSource<any>): void;
					public onNewResultImpl(param0: com.facebook.datasource.DataSource<any>): void;
					public onNewResultImpl(param0: com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>): void;
					public onNewResult(param0: com.facebook.datasource.DataSource<any>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module datasource {
				export abstract class BaseBitmapReferenceDataSubscriber extends com.facebook.datasource.BaseDataSubscriber<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber>;
					public constructor();
					public onCancellation(param0: com.facebook.datasource.DataSource<any>): void;
					public onProgressUpdate(param0: com.facebook.datasource.DataSource<any>): void;
					public onNewResultImpl(param0: com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>): void;
					public onFailure(param0: com.facebook.datasource.DataSource<any>): void;
					public onNewResultImpl(param0: com.facebook.datasource.DataSource<any>): void;
					public onNewResultImpl(param0: com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>): void;
					public onNewResult(param0: com.facebook.datasource.DataSource<any>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module datasource {
				export abstract class BaseListBitmapDataSubscriber extends com.facebook.datasource.BaseDataSubscriber<java.util.List<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.datasource.BaseListBitmapDataSubscriber>;
					public constructor();
					public onCancellation(param0: com.facebook.datasource.DataSource<any>): void;
					public onProgressUpdate(param0: com.facebook.datasource.DataSource<any>): void;
					public onNewResultListImpl(param0: java.util.List<globalAndroid.graphics.Bitmap>): void;
					public onFailure(param0: com.facebook.datasource.DataSource<any>): void;
					public onNewResultImpl(param0: com.facebook.datasource.DataSource<java.util.List<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>>): void;
					public onNewResultImpl(param0: com.facebook.datasource.DataSource<any>): void;
					public onNewResult(param0: com.facebook.datasource.DataSource<any>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module datasource {
				export class CloseableProducerToDataSourceAdapter<T>  extends com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter<com.facebook.common.references.CloseableReference<any>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter<any>>;
					public isFinished(): boolean;
					public close(): boolean;
					public hasFailed(): boolean;
					public getResult(): com.facebook.common.references.CloseableReference<any>;
					public closeResult(param0: any): void;
					public getProgress(): number;
					public closeResult(param0: com.facebook.common.references.CloseableReference<any>): void;
					public static create(param0: com.facebook.imagepipeline.producers.Producer<any>, param1: com.facebook.imagepipeline.producers.SettableProducerContext, param2: com.facebook.imagepipeline.listener.RequestListener): com.facebook.datasource.DataSource<any>;
					public hasMultipleResults(): boolean;
					public hasResult(): boolean;
					public subscribe(param0: com.facebook.datasource.DataSubscriber<any>, param1: java.util.concurrent.Executor): void;
					public getImageRequest(): com.facebook.imagepipeline.request.ImageRequest;
					public getFailureCause(): java.lang.Throwable;
					public getResult(): any;
					public onNewResultImpl(param0: any, param1: number): void;
					public onNewResultImpl(param0: com.facebook.common.references.CloseableReference<any>, param1: number): void;
					public isClosed(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module datasource {
				export class ListDataSource<T>  extends com.facebook.datasource.AbstractDataSource<java.util.List<com.facebook.common.references.CloseableReference<any>>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.datasource.ListDataSource<any>>;
					public isFinished(): boolean;
					public static create(param0: native.Array<com.facebook.datasource.DataSource<any>>): com.facebook.imagepipeline.datasource.ListDataSource<any>;
					public getResult(): java.util.List<com.facebook.common.references.CloseableReference<any>>;
					public close(): boolean;
					public hasFailed(): boolean;
					public getProgress(): number;
					public hasMultipleResults(): boolean;
					public constructor();
					public hasResult(): boolean;
					public subscribe(param0: com.facebook.datasource.DataSubscriber<any>, param1: java.util.concurrent.Executor): void;
					public getFailureCause(): java.lang.Throwable;
					public getResult(): any;
					public constructor(param0: native.Array<com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<any>>>);
					public isClosed(): boolean;
				}
				export module ListDataSource {
					export class InternalDataSubscriber extends com.facebook.datasource.DataSubscriber<com.facebook.common.references.CloseableReference<any>> {
						public static class: java.lang.Class<com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber>;
						public onFailure(param0: com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<any>>): void;
						public onCancellation(param0: com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<any>>): void;
						public onNewResult(param0: com.facebook.datasource.DataSource<any>): void;
						public onCancellation(param0: com.facebook.datasource.DataSource<any>): void;
						public onFailure(param0: com.facebook.datasource.DataSource<any>): void;
						public onNewResult(param0: com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<any>>): void;
						public onProgressUpdate(param0: com.facebook.datasource.DataSource<com.facebook.common.references.CloseableReference<any>>): void;
						public onProgressUpdate(param0: com.facebook.datasource.DataSource<any>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module datasource {
				export class ProducerToDataSourceAdapter<T>  extends com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter<any>>;
					public isFinished(): boolean;
					public getProgress(): number;
					public static create(param0: com.facebook.imagepipeline.producers.Producer<any>, param1: com.facebook.imagepipeline.producers.SettableProducerContext, param2: com.facebook.imagepipeline.listener.RequestListener): com.facebook.datasource.DataSource<any>;
					public hasMultipleResults(): boolean;
					public hasResult(): boolean;
					public close(): boolean;
					public subscribe(param0: com.facebook.datasource.DataSubscriber<any>, param1: java.util.concurrent.Executor): void;
					public getImageRequest(): com.facebook.imagepipeline.request.ImageRequest;
					public getFailureCause(): java.lang.Throwable;
					public getResult(): any;
					public hasFailed(): boolean;
					public isClosed(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module datasource {
				export class SettableDataSource<T>  extends com.facebook.datasource.AbstractDataSource<com.facebook.common.references.CloseableReference<any>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.datasource.SettableDataSource<any>>;
					public isFinished(): boolean;
					public close(): boolean;
					public setProgress(param0: number): boolean;
					public hasFailed(): boolean;
					public getResult(): com.facebook.common.references.CloseableReference<any>;
					public closeResult(param0: any): void;
					public getProgress(): number;
					public closeResult(param0: com.facebook.common.references.CloseableReference<any>): void;
					public hasMultipleResults(): boolean;
					public hasResult(): boolean;
					public subscribe(param0: com.facebook.datasource.DataSubscriber<any>, param1: java.util.concurrent.Executor): void;
					public setException(param0: java.lang.Throwable): boolean;
					public getFailureCause(): java.lang.Throwable;
					public set(param0: com.facebook.common.references.CloseableReference<any>): boolean;
					public getResult(): any;
					public static create(): com.facebook.imagepipeline.datasource.SettableDataSource<any>;
					public isClosed(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module debug {
				export class CloseableReferenceLeakTracker extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						trackCloseableReferenceLeak(param0: com.facebook.common.references.SharedReference<any>, param1: java.lang.Throwable): void;
						setListener(param0: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker.Listener): void;
						isSet(): boolean;
					});
					public constructor();
					public isSet(): boolean;
					public trackCloseableReferenceLeak(param0: com.facebook.common.references.SharedReference<any>, param1: java.lang.Throwable): void;
					public setListener(param0: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker.Listener): void;
				}
				export module CloseableReferenceLeakTracker {
					export class Listener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker.Listener>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onCloseableReferenceLeak(param0: com.facebook.common.references.SharedReference<any>, param1: java.lang.Throwable): void;
						});
						public constructor();
						public onCloseableReferenceLeak(param0: com.facebook.common.references.SharedReference<any>, param1: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module debug {
				export class DebugImageTracker extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.debug.DebugImageTracker>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.debug.DebugImageTracker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						trackImage(param0: com.facebook.imagepipeline.request.ImageRequest, param1: com.facebook.cache.common.CacheKey): void;
						trackImageRequest(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string): void;
					});
					public constructor();
					public trackImage(param0: com.facebook.imagepipeline.request.ImageRequest, param1: com.facebook.cache.common.CacheKey): void;
					public trackImageRequest(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module debug {
				export class FlipperCacheKeyFactory extends com.facebook.imagepipeline.cache.DefaultCacheKeyFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.debug.FlipperCacheKeyFactory>;
					public constructor();
					public constructor(param0: com.facebook.imagepipeline.debug.DebugImageTracker);
					public getPostprocessedBitmapCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
					public getEncodedCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
					public getEncodedCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: globalAndroid.net.Uri, param2: any): com.facebook.cache.common.CacheKey;
					public getBitmapCacheKey(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any): com.facebook.cache.common.CacheKey;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module debug {
				export class FlipperCloseableReferenceLeakTracker extends java.lang.Object implements com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker {
					public static class: java.lang.Class<com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker>;
					public isSet(): boolean;
					public constructor();
					public trackCloseableReferenceLeak(param0: com.facebook.common.references.SharedReference<any>, param1: java.lang.Throwable): void;
					public setListener(param0: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker.Listener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module debug {
				export class FlipperImageTracker extends java.lang.Object implements com.facebook.imagepipeline.debug.DebugImageTracker, com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener {
					public static class: java.lang.Class<com.facebook.imagepipeline.debug.FlipperImageTracker>;
					public getCacheKey(param0: string): com.facebook.cache.common.CacheKey;
					public getDebugDataForRequestId(param0: string): com.facebook.imagepipeline.debug.FlipperImageTracker.ImageDebugData;
					public trackImage(param0: com.facebook.cache.common.CacheKey): com.facebook.imagepipeline.debug.FlipperImageTracker.ImageDebugData;
					public onImageLoadStatusUpdated(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData, param1: number): void;
					public constructor();
					public getUriString(param0: com.facebook.cache.common.CacheKey): string;
					public getImageDebugData(param0: com.facebook.cache.common.CacheKey): com.facebook.imagepipeline.debug.FlipperImageTracker.ImageDebugData;
					public trackImage(param0: com.facebook.imagepipeline.request.ImageRequest, param1: com.facebook.cache.common.CacheKey): void;
					public onImageVisibilityUpdated(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData, param1: number): void;
					public getDebugDataForResourceId(param0: string): com.facebook.imagepipeline.debug.FlipperImageTracker.ImageDebugData;
					public trackImageRequest(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string): void;
				}
				export module FlipperImageTracker {
					export class ImageDebugData extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.debug.FlipperImageTracker.ImageDebugData>;
						public setImagePerfData(param0: com.facebook.drawee.backends.pipeline.info.ImagePerfData): void;
						public getResourceIds(): java.util.Set<string>;
						public getImageRequest(): com.facebook.imagepipeline.request.ImageRequest;
						public getUniqueId(): string;
						public getRequestIds(): java.util.Set<string>;
						public addRequestId(param0: string): void;
						public constructor(param0: com.facebook.imagepipeline.request.ImageRequest);
						public addCacheKey(param0: com.facebook.cache.common.CacheKey): void;
						public addResourceId(param0: string): void;
						public getImagePerfData(): com.facebook.drawee.backends.pipeline.info.ImagePerfData;
						public getCacheKeys(): java.util.Set<com.facebook.cache.common.CacheKey>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module debug {
				export class LruMap<A, B>  extends java.util.LinkedHashMap<any,any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.debug.LruMap<any,any>>;
					public replace(param0: any, param1: any): any;
					public isEmpty(): boolean;
					public computeIfPresent(param0: any, param1: any /* any<any,any,any>*/): any;
					public forEach(param0: any /* any<any,any>*/): void;
					public size(): number;
					public merge(param0: any, param1: any, param2: any /* any<any,any,any>*/): any;
					public put(param0: any, param1: any): any;
					public getOrDefault(param0: any, param1: any): any;
					public putAll(param0: java.util.Map<any,any>): void;
					public replace(param0: any, param1: any, param2: any): boolean;
					public containsValue(param0: any): boolean;
					public remove(param0: any): any;
					public constructor();
					public keySet(): java.util.Set<any>;
					public clear(): void;
					public hashCode(): number;
					public putIfAbsent(param0: any, param1: any): any;
					public remove(param0: any, param1: any): boolean;
					public constructor(param0: number);
					public constructor(param0: number, param1: number);
					public computeIfAbsent(param0: any, param1: any /* any<any,any>*/): any;
					public constructor(param0: java.util.Map<any,any>);
					public values(): java.util.Collection<any>;
					public equals(param0: any): boolean;
					public constructor(param0: number, param1: number, param2: boolean);
					public containsKey(param0: any): boolean;
					public entrySet(): java.util.Set<java.util.Map.Entry<any,any>>;
					public removeEldestEntry(param0: java.util.Map.Entry<any,any>): boolean;
					public compute(param0: any, param1: any /* any<any,any,any>*/): any;
					public replaceAll(param0: any /* any<any,any,any>*/): void;
					public get(param0: any): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module debug {
				export class NoOpCloseableReferenceLeakTracker extends java.lang.Object implements com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker {
					public static class: java.lang.Class<com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker>;
					public isSet(): boolean;
					public constructor();
					public trackCloseableReferenceLeak(param0: com.facebook.common.references.SharedReference<any>, param1: java.lang.Throwable): void;
					public setListener(param0: com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker.Listener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module debug {
				export class NoOpDebugImageTracker extends java.lang.Object implements com.facebook.imagepipeline.debug.DebugImageTracker {
					public static class: java.lang.Class<com.facebook.imagepipeline.debug.NoOpDebugImageTracker>;
					public constructor();
					public trackImage(param0: com.facebook.imagepipeline.request.ImageRequest, param1: com.facebook.cache.common.CacheKey): void;
					public trackImageRequest(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module decoder {
				export class DecodeException extends java.lang.RuntimeException {
					public static class: java.lang.Class<com.facebook.imagepipeline.decoder.DecodeException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
					public constructor(param0: string, param1: com.facebook.imagepipeline.image.EncodedImage);
					public getEncodedImage(): com.facebook.imagepipeline.image.EncodedImage;
					public constructor(param0: string, param1: java.lang.Throwable, param2: com.facebook.imagepipeline.image.EncodedImage);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module decoder {
				export class DefaultImageDecoder extends java.lang.Object implements com.facebook.imagepipeline.decoder.ImageDecoder {
					public static class: java.lang.Class<com.facebook.imagepipeline.decoder.DefaultImageDecoder>;
					public constructor(param0: com.facebook.imagepipeline.decoder.ImageDecoder, param1: com.facebook.imagepipeline.decoder.ImageDecoder, param2: com.facebook.imagepipeline.platform.PlatformDecoder, param3: java.util.Map<com.facebook.imageformat.ImageFormat,com.facebook.imagepipeline.decoder.ImageDecoder>);
					public decodeGif(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number, param2: com.facebook.imagepipeline.image.QualityInfo, param3: com.facebook.imagepipeline.common.ImageDecodeOptions): com.facebook.imagepipeline.image.CloseableImage;
					public decodeStaticImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: com.facebook.imagepipeline.common.ImageDecodeOptions): com.facebook.imagepipeline.image.CloseableStaticBitmap;
					public decodeJpeg(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number, param2: com.facebook.imagepipeline.image.QualityInfo, param3: com.facebook.imagepipeline.common.ImageDecodeOptions): com.facebook.imagepipeline.image.CloseableStaticBitmap;
					public constructor(param0: com.facebook.imagepipeline.decoder.ImageDecoder, param1: com.facebook.imagepipeline.decoder.ImageDecoder, param2: com.facebook.imagepipeline.platform.PlatformDecoder);
					public decode(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number, param2: com.facebook.imagepipeline.image.QualityInfo, param3: com.facebook.imagepipeline.common.ImageDecodeOptions): com.facebook.imagepipeline.image.CloseableImage;
					public decodeAnimatedWebp(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number, param2: com.facebook.imagepipeline.image.QualityInfo, param3: com.facebook.imagepipeline.common.ImageDecodeOptions): com.facebook.imagepipeline.image.CloseableImage;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module decoder {
				export class ImageDecoder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.decoder.ImageDecoder>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.decoder.ImageDecoder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						decode(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number, param2: com.facebook.imagepipeline.image.QualityInfo, param3: com.facebook.imagepipeline.common.ImageDecodeOptions): com.facebook.imagepipeline.image.CloseableImage;
					});
					public constructor();
					public decode(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number, param2: com.facebook.imagepipeline.image.QualityInfo, param3: com.facebook.imagepipeline.common.ImageDecodeOptions): com.facebook.imagepipeline.image.CloseableImage;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module decoder {
				export class ImageDecoderConfig extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.decoder.ImageDecoderConfig>;
					public static newBuilder(): com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder;
					public getCustomImageDecoders(): java.util.Map<com.facebook.imageformat.ImageFormat,com.facebook.imagepipeline.decoder.ImageDecoder>;
					public getCustomImageFormats(): java.util.List<com.facebook.imageformat.ImageFormat.FormatChecker>;
				}
				export module ImageDecoderConfig {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder>;
						public constructor();
						public build(): com.facebook.imagepipeline.decoder.ImageDecoderConfig;
						public addDecodingCapability(param0: com.facebook.imageformat.ImageFormat, param1: com.facebook.imageformat.ImageFormat.FormatChecker, param2: com.facebook.imagepipeline.decoder.ImageDecoder): com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder;
						public overrideDecoder(param0: com.facebook.imageformat.ImageFormat, param1: com.facebook.imagepipeline.decoder.ImageDecoder): com.facebook.imagepipeline.decoder.ImageDecoderConfig.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module decoder {
				export class ProgressiveJpegConfig extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.decoder.ProgressiveJpegConfig>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.decoder.ProgressiveJpegConfig interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getNextScanNumberToDecode(param0: number): number;
						getQualityInfo(param0: number): com.facebook.imagepipeline.image.QualityInfo;
					});
					public constructor();
					public getNextScanNumberToDecode(param0: number): number;
					public getQualityInfo(param0: number): com.facebook.imagepipeline.image.QualityInfo;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module decoder {
				export class ProgressiveJpegParser extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.decoder.ProgressiveJpegParser>;
					public getBestScanEndOffset(): number;
					public parseMoreData(param0: com.facebook.imagepipeline.image.EncodedImage): boolean;
					public isEndMarkerRead(): boolean;
					public isJpeg(): boolean;
					public getBestScanNumber(): number;
					public constructor(param0: com.facebook.common.memory.ByteArrayPool);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module decoder {
				export class SimpleProgressiveJpegConfig extends java.lang.Object implements com.facebook.imagepipeline.decoder.ProgressiveJpegConfig {
					public static class: java.lang.Class<com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig>;
					public getNextScanNumberToDecode(param0: number): number;
					public getQualityInfo(param0: number): com.facebook.imagepipeline.image.QualityInfo;
					public constructor();
					public constructor(param0: com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig.DynamicValueConfig);
				}
				export module SimpleProgressiveJpegConfig {
					export class DefaultDynamicValueConfig extends java.lang.Object implements com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig.DynamicValueConfig {
						public static class: java.lang.Class<com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig.DefaultDynamicValueConfig>;
						public getScansToDecode(): java.util.List<java.lang.Integer>;
						public getGoodEnoughScanNumber(): number;
					}
					export class DynamicValueConfig extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig.DynamicValueConfig>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DynamicValueConfig interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getScansToDecode(): java.util.List<java.lang.Integer>;
							getGoodEnoughScanNumber(): number;
						});
						public constructor();
						public getScansToDecode(): java.util.List<java.lang.Integer>;
						public getGoodEnoughScanNumber(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module drawable {
				export class DrawableFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.drawable.DrawableFactory>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.drawable.DrawableFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						supportsImageType(param0: com.facebook.imagepipeline.image.CloseableImage): boolean;
						createDrawable(param0: com.facebook.imagepipeline.image.CloseableImage): globalAndroid.graphics.drawable.Drawable;
					});
					public constructor();
					public createDrawable(param0: com.facebook.imagepipeline.image.CloseableImage): globalAndroid.graphics.drawable.Drawable;
					public supportsImageType(param0: com.facebook.imagepipeline.image.CloseableImage): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module filter {
				export class InPlaceRoundFilter extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.filter.InPlaceRoundFilter>;
					public static roundBitmapInPlace(param0: globalAndroid.graphics.Bitmap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module filter {
				export abstract class IterativeBoxBlurFilter extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.filter.IterativeBoxBlurFilter>;
					public constructor();
					public static boxBlurBitmapInPlace(param0: globalAndroid.graphics.Bitmap, param1: number, param2: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module filter {
				export abstract class RenderScriptBlurFilter extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.filter.RenderScriptBlurFilter>;
					public static BLUR_MAX_RADIUS: number;
					public constructor();
					public static blurBitmap(param0: globalAndroid.graphics.Bitmap, param1: globalAndroid.graphics.Bitmap, param2: globalAndroid.content.Context, param3: number): void;
					public static canUseRenderScript(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module filter {
				export class XferRoundFilter extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.filter.XferRoundFilter>;
					public static xferRoundBitmap(param0: globalAndroid.graphics.Bitmap, param1: globalAndroid.graphics.Bitmap, param2: boolean): void;
					public static canUseXferRoundFilter(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module image {
				export abstract class CloseableBitmap extends com.facebook.imagepipeline.image.CloseableImage {
					public static class: java.lang.Class<com.facebook.imagepipeline.image.CloseableBitmap>;
					public getUnderlyingBitmap(): globalAndroid.graphics.Bitmap;
					public constructor();
					public getHeight(): number;
					public close(): void;
					public getWidth(): number;
					public getQualityInfo(): com.facebook.imagepipeline.image.QualityInfo;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module image {
				export abstract class CloseableImage extends java.lang.Object implements java.io.Closeable, com.facebook.imagepipeline.image.ImageInfo {
					public static class: java.lang.Class<com.facebook.imagepipeline.image.CloseableImage>;
					public constructor();
					public getHeight(): number;
					public finalize(): void;
					public close(): void;
					public getQualityInfo(): com.facebook.imagepipeline.image.QualityInfo;
					public isStateful(): boolean;
					public getWidth(): number;
					public getSizeInBytes(): number;
					public isClosed(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module image {
				export class CloseableStaticBitmap extends com.facebook.imagepipeline.image.CloseableBitmap {
					public static class: java.lang.Class<com.facebook.imagepipeline.image.CloseableStaticBitmap>;
					public convertToBitmapReference(): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public cloneUnderlyingBitmapReference(): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public getUnderlyingBitmap(): globalAndroid.graphics.Bitmap;
					public getHeight(): number;
					public getWidth(): number;
					public getExifOrientation(): number;
					public getSizeInBytes(): number;
					public constructor(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.common.references.ResourceReleaser<globalAndroid.graphics.Bitmap>, param2: com.facebook.imagepipeline.image.QualityInfo, param3: number, param4: number);
					public constructor();
					public constructor(param0: com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>, param1: com.facebook.imagepipeline.image.QualityInfo, param2: number);
					public getRotationAngle(): number;
					public close(): void;
					public getQualityInfo(): com.facebook.imagepipeline.image.QualityInfo;
					public constructor(param0: com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>, param1: com.facebook.imagepipeline.image.QualityInfo, param2: number, param3: number);
					public constructor(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.common.references.ResourceReleaser<globalAndroid.graphics.Bitmap>, param2: com.facebook.imagepipeline.image.QualityInfo, param3: number);
					public isClosed(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module image {
				export class EncodedImage extends java.lang.Object implements java.io.Closeable {
					public static class: java.lang.Class<com.facebook.imagepipeline.image.EncodedImage>;
					public static UNKNOWN_ROTATION_ANGLE: number;
					public static UNKNOWN_WIDTH: number;
					public static UNKNOWN_HEIGHT: number;
					public static UNKNOWN_STREAM_SIZE: number;
					public static DEFAULT_SAMPLE_SIZE: number;
					public copyMetaDataFrom(param0: com.facebook.imagepipeline.image.EncodedImage): void;
					public setHeight(param0: number): void;
					public static isValid(param0: com.facebook.imagepipeline.image.EncodedImage): boolean;
					public setImageFormat(param0: com.facebook.imageformat.ImageFormat): void;
					public static cloneOrNull(param0: com.facebook.imagepipeline.image.EncodedImage): com.facebook.imagepipeline.image.EncodedImage;
					public getSize(): number;
					public constructor(param0: com.facebook.common.internal.Supplier<java.io.FileInputStream>);
					public static closeSafely(param0: com.facebook.imagepipeline.image.EncodedImage): void;
					public cloneOrNull(): com.facebook.imagepipeline.image.EncodedImage;
					public parseMetaData(): void;
					public getUnderlyingReferenceTestOnly(): com.facebook.common.references.SharedReference<com.facebook.common.memory.PooledByteBuffer>;
					public getByteBufferRef(): com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>;
					public setSampleSize(param0: number): void;
					public constructor(param0: com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>);
					public close(): void;
					public getInputStream(): java.io.InputStream;
					public isCompleteAt(param0: number): boolean;
					public getImageFormat(): com.facebook.imageformat.ImageFormat;
					public getFirstBytesAsHexString(param0: number): string;
					public setWidth(param0: number): void;
					public getHeight(): number;
					public getWidth(): number;
					public getBytesRange(): com.facebook.imagepipeline.common.BytesRange;
					public setStreamSize(param0: number): void;
					public setBytesRange(param0: com.facebook.imagepipeline.common.BytesRange): void;
					public getExifOrientation(): number;
					public setRotationAngle(param0: number): void;
					public constructor(param0: com.facebook.common.internal.Supplier<java.io.FileInputStream>, param1: number);
					public getSampleSize(): number;
					public isValid(): boolean;
					public getRotationAngle(): number;
					public static isMetaDataAvailable(param0: com.facebook.imagepipeline.image.EncodedImage): boolean;
					public setExifOrientation(param0: number): void;
					public getColorSpace(): globalAndroid.graphics.ColorSpace;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module image {
				export class ImageInfo extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.image.ImageInfo>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.image.ImageInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getWidth(): number;
						getHeight(): number;
						getQualityInfo(): com.facebook.imagepipeline.image.QualityInfo;
					});
					public constructor();
					public getHeight(): number;
					public getWidth(): number;
					public getQualityInfo(): com.facebook.imagepipeline.image.QualityInfo;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module image {
				export class ImmutableQualityInfo extends java.lang.Object implements com.facebook.imagepipeline.image.QualityInfo {
					public static class: java.lang.Class<com.facebook.imagepipeline.image.ImmutableQualityInfo>;
					public static FULL_QUALITY: com.facebook.imagepipeline.image.QualityInfo;
					public equals(param0: any): boolean;
					public isOfGoodEnoughQuality(): boolean;
					public getQuality(): number;
					public isOfFullQuality(): boolean;
					public static of(param0: number, param1: boolean, param2: boolean): com.facebook.imagepipeline.image.QualityInfo;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module image {
				export class QualityInfo extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.image.QualityInfo>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.image.QualityInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getQuality(): number;
						isOfGoodEnoughQuality(): boolean;
						isOfFullQuality(): boolean;
					});
					public constructor();
					public isOfGoodEnoughQuality(): boolean;
					public getQuality(): number;
					public isOfFullQuality(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module listener {
				export class BaseRequestListener extends java.lang.Object implements com.facebook.imagepipeline.listener.RequestListener {
					public static class: java.lang.Class<com.facebook.imagepipeline.listener.BaseRequestListener>;
					public requiresExtraMap(param0: string): boolean;
					public onProducerStart(param0: string, param1: string): void;
					public onProducerFinishWithSuccess(param0: string, param1: string, param2: java.util.Map<string,string>): void;
					public onProducerFinishWithCancellation(param0: string, param1: string, param2: java.util.Map<string,string>): void;
					public constructor();
					public onProducerFinishWithFailure(param0: string, param1: string, param2: java.lang.Throwable, param3: java.util.Map<string,string>): void;
					public onRequestStart(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: string, param3: boolean): void;
					public onRequestSuccess(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: boolean): void;
					public onRequestFailure(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: java.lang.Throwable, param3: boolean): void;
					public onUltimateProducerReached(param0: string, param1: string, param2: boolean): void;
					public onProducerEvent(param0: string, param1: string, param2: string): void;
					public onRequestCancellation(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module listener {
				export class ForwardingRequestListener extends java.lang.Object implements com.facebook.imagepipeline.listener.RequestListener {
					public static class: java.lang.Class<com.facebook.imagepipeline.listener.ForwardingRequestListener>;
					public constructor(param0: native.Array<com.facebook.imagepipeline.listener.RequestListener>);
					public onProducerStart(param0: string, param1: string): void;
					public onProducerFinishWithFailure(param0: string, param1: string, param2: java.lang.Throwable, param3: java.util.Map<string,string>): void;
					public onUltimateProducerReached(param0: string, param1: string, param2: boolean): void;
					public onRequestFailure(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: java.lang.Throwable, param3: boolean): void;
					public onProducerEvent(param0: string, param1: string, param2: string): void;
					public requiresExtraMap(param0: string): boolean;
					public constructor(param0: java.util.Set<com.facebook.imagepipeline.listener.RequestListener>);
					public onProducerFinishWithSuccess(param0: string, param1: string, param2: java.util.Map<string,string>): void;
					public onProducerFinishWithCancellation(param0: string, param1: string, param2: java.util.Map<string,string>): void;
					public onRequestStart(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: string, param3: boolean): void;
					public onRequestSuccess(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: boolean): void;
					public addRequestListener(param0: com.facebook.imagepipeline.listener.RequestListener): void;
					public onRequestCancellation(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module listener {
				export class RequestListener extends java.lang.Object implements com.facebook.imagepipeline.producers.ProducerListener {
					public static class: java.lang.Class<com.facebook.imagepipeline.listener.RequestListener>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.listener.RequestListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onRequestStart(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: string, param3: boolean): void;
						onRequestSuccess(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: boolean): void;
						onRequestFailure(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: java.lang.Throwable, param3: boolean): void;
						onRequestCancellation(param0: string): void;
						onProducerStart(param0: string, param1: string): void;
						onProducerEvent(param0: string, param1: string, param2: string): void;
						onProducerFinishWithSuccess(param0: string, param1: string, param2: java.util.Map<string,string>): void;
						onProducerFinishWithFailure(param0: string, param1: string, param2: java.lang.Throwable, param3: java.util.Map<string,string>): void;
						onProducerFinishWithCancellation(param0: string, param1: string, param2: java.util.Map<string,string>): void;
						onUltimateProducerReached(param0: string, param1: string, param2: boolean): void;
						requiresExtraMap(param0: string): boolean;
					});
					public constructor();
					public requiresExtraMap(param0: string): boolean;
					public onProducerStart(param0: string, param1: string): void;
					public onProducerFinishWithSuccess(param0: string, param1: string, param2: java.util.Map<string,string>): void;
					public onProducerFinishWithCancellation(param0: string, param1: string, param2: java.util.Map<string,string>): void;
					public onProducerFinishWithFailure(param0: string, param1: string, param2: java.lang.Throwable, param3: java.util.Map<string,string>): void;
					public onRequestStart(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: string, param3: boolean): void;
					public onRequestSuccess(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: boolean): void;
					public onRequestFailure(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: java.lang.Throwable, param3: boolean): void;
					public onUltimateProducerReached(param0: string, param1: string, param2: boolean): void;
					public onProducerEvent(param0: string, param1: string, param2: string): void;
					public onRequestCancellation(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module listener {
				export class RequestLoggingListener extends java.lang.Object implements com.facebook.imagepipeline.listener.RequestListener {
					public static class: java.lang.Class<com.facebook.imagepipeline.listener.RequestLoggingListener>;
					public requiresExtraMap(param0: string): boolean;
					public onProducerStart(param0: string, param1: string): void;
					public onProducerFinishWithSuccess(param0: string, param1: string, param2: java.util.Map<string,string>): void;
					public onProducerFinishWithCancellation(param0: string, param1: string, param2: java.util.Map<string,string>): void;
					public constructor();
					public onProducerFinishWithFailure(param0: string, param1: string, param2: java.lang.Throwable, param3: java.util.Map<string,string>): void;
					public onRequestStart(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: string, param3: boolean): void;
					public onRequestSuccess(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: boolean): void;
					public onUltimateProducerReached(param0: string, param1: string, param2: boolean): void;
					public onRequestFailure(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: java.lang.Throwable, param3: boolean): void;
					public onProducerEvent(param0: string, param1: string, param2: string): void;
					public onRequestCancellation(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export abstract class BasePool<V>  extends com.facebook.common.memory.Pool<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.BasePool<any>>;
					public isReusable(param0: any): boolean;
					public getStats(): java.util.Map<string,java.lang.Integer>;
					public getValue(param0: com.facebook.imagepipeline.memory.Bucket<any>): any;
					public free(param0: any): void;
					public getBucketedSize(param0: number): number;
					public alloc(param0: number): any;
					public getSizeInBytes(param0: number): number;
					public release(param0: any): void;
					public getBucketedSizeForValue(param0: any): number;
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					public get(param0: number): any;
					public onParamsChanged(): void;
					public constructor(param0: com.facebook.common.memory.MemoryTrimmableRegistry, param1: com.facebook.imagepipeline.memory.PoolParams, param2: com.facebook.imagepipeline.memory.PoolStatsTracker);
					public initialize(): void;
				}
				export module BasePool {
					export class Counter extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.memory.BasePool.Counter>;
						public increment(param0: number): void;
						public decrement(param0: number): void;
						public reset(): void;
					}
					export class InvalidSizeException extends java.lang.RuntimeException {
						public static class: java.lang.Class<com.facebook.imagepipeline.memory.BasePool.InvalidSizeException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: any);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
					export class InvalidValueException extends java.lang.RuntimeException {
						public static class: java.lang.Class<com.facebook.imagepipeline.memory.BasePool.InvalidValueException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: any);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
					export class PoolSizeViolationException extends java.lang.RuntimeException {
						public static class: java.lang.Class<com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
						public constructor(param0: number, param1: number, param2: number, param3: number);
					}
					export class SizeTooLargeException extends com.facebook.imagepipeline.memory.BasePool.InvalidSizeException {
						public static class: java.lang.Class<com.facebook.imagepipeline.memory.BasePool.SizeTooLargeException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: any);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class BitmapCounter extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.BitmapCounter>;
					public increase(param0: globalAndroid.graphics.Bitmap): boolean;
					public getMaxCount(): number;
					public getCount(): number;
					public decrease(param0: globalAndroid.graphics.Bitmap): void;
					public getMaxSize(): number;
					public getSize(): number;
					public getReleaser(): com.facebook.common.references.ResourceReleaser<globalAndroid.graphics.Bitmap>;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class BitmapCounterConfig extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.BitmapCounterConfig>;
					public static DEFAULT_MAX_BITMAP_COUNT: number;
					public setMaxBitmapCount(param0: number): void;
					public getMaxBitmapCount(): number;
					public constructor(param0: com.facebook.imagepipeline.memory.BitmapCounterConfig.Builder);
					public static newBuilder(): com.facebook.imagepipeline.memory.BitmapCounterConfig.Builder;
				}
				export module BitmapCounterConfig {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.memory.BitmapCounterConfig.Builder>;
						public build(): com.facebook.imagepipeline.memory.BitmapCounterConfig;
						public getMaxBitmapCount(): number;
						public setMaxBitmapCount(param0: number): com.facebook.imagepipeline.memory.BitmapCounterConfig.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class BitmapCounterProvider extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.BitmapCounterProvider>;
					public static MAX_BITMAP_TOTAL_SIZE: number;
					public constructor();
					public static get(): com.facebook.imagepipeline.memory.BitmapCounter;
					public static initialize(param0: com.facebook.imagepipeline.memory.BitmapCounterConfig): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class BitmapPool extends com.facebook.common.memory.Pool<globalAndroid.graphics.Bitmap> {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.BitmapPool>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.memory.BitmapPool interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						get(param0: number): any;
						release(param0: any): void;
						release(param0: any): void;
						trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					});
					public constructor();
					public release(param0: any): void;
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					public get(param0: number): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class BitmapPoolBackend extends com.facebook.imagepipeline.memory.LruBucketsPoolBackend<globalAndroid.graphics.Bitmap> {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.BitmapPoolBackend>;
					public get(param0: number): globalAndroid.graphics.Bitmap;
					public constructor();
					public put(param0: globalAndroid.graphics.Bitmap): void;
					public getSize(param0: any): number;
					public get(param0: number): any;
					public put(param0: any): void;
					public getSize(param0: globalAndroid.graphics.Bitmap): number;
					public pop(): any;
					public isReusable(param0: globalAndroid.graphics.Bitmap): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class BitmapPoolType extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.BitmapPoolType>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.memory.BitmapPoolType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public static LEGACY: string;
					public static LEGACY_DEFAULT_PARAMS: string;
					public static EXPERIMENTAL: string;
					public static DUMMY_WITH_TRACKING: string;
					public static DUMMY: string;
					public static DEFAULT: string;
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class Bucket<V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.Bucket<any>>;
					public mItemSize: number;
					public mMaxLength: number;
					public incrementInUseCount(): void;
					public isMaxLengthExceeded(): boolean;
					public pop(): V;
					public constructor(param0: number, param1: number, param2: number, param3: boolean);
					public decrementInUseCount(): void;
					public getInUseCount(): number;
					public release(param0: V): void;
					/** @deprecated */
					public get(): V;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class BucketMap<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.BucketMap<any>>;
					public mMap: globalAndroid.util.SparseArray<com.facebook.imagepipeline.memory.BucketMap.LinkedEntry<T>>;
					public removeFromEnd(): T;
					public constructor();
					public acquire(param0: number): T;
					public release(param0: number, param1: T): void;
				}
				export module BucketMap {
					export class LinkedEntry<I>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.memory.BucketMap.LinkedEntry<any>>;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class BucketsBitmapPool extends com.facebook.imagepipeline.memory.BasePool<globalAndroid.graphics.Bitmap> implements com.facebook.imagepipeline.memory.BitmapPool  {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.BucketsBitmapPool>;
					public isReusable(param0: any): boolean;
					public getValue(param0: com.facebook.imagepipeline.memory.Bucket<any>): any;
					public free(param0: any): void;
					public free(param0: globalAndroid.graphics.Bitmap): void;
					public getBucketedSize(param0: number): number;
					public alloc(param0: number): any;
					public alloc(param0: number): globalAndroid.graphics.Bitmap;
					public getSizeInBytes(param0: number): number;
					public release(param0: any): void;
					public getValue(param0: com.facebook.imagepipeline.memory.Bucket<globalAndroid.graphics.Bitmap>): globalAndroid.graphics.Bitmap;
					public getBucketedSizeForValue(param0: any): number;
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					public get(param0: number): any;
					public getBucketedSizeForValue(param0: globalAndroid.graphics.Bitmap): number;
					public constructor(param0: com.facebook.common.memory.MemoryTrimmableRegistry, param1: com.facebook.imagepipeline.memory.PoolParams, param2: com.facebook.imagepipeline.memory.PoolStatsTracker);
					public isReusable(param0: globalAndroid.graphics.Bitmap): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class BufferMemoryChunk extends java.lang.Object implements com.facebook.imagepipeline.memory.MemoryChunk, java.io.Closeable {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.BufferMemoryChunk>;
					public read(param0: number): number;
					public getUniqueId(): number;
					public close(): void;
					public getByteBuffer(): java.nio.ByteBuffer;
					public write(param0: number, param1: native.Array<number>, param2: number, param3: number): number;
					public read(param0: number, param1: native.Array<number>, param2: number, param3: number): number;
					public getNativePtr(): number;
					public copy(param0: number, param1: com.facebook.imagepipeline.memory.MemoryChunk, param2: number, param3: number): void;
					public getSize(): number;
					public constructor(param0: number);
					public isClosed(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class BufferMemoryChunkPool extends com.facebook.imagepipeline.memory.MemoryChunkPool {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.BufferMemoryChunkPool>;
					public alloc(param0: number): com.facebook.imagepipeline.memory.BufferMemoryChunk;
					public release(param0: any): void;
					public get(param0: number): any;
					public constructor(param0: com.facebook.common.memory.MemoryTrimmableRegistry, param1: com.facebook.imagepipeline.memory.PoolParams, param2: com.facebook.imagepipeline.memory.PoolStatsTracker);
					public alloc(param0: number): com.facebook.imagepipeline.memory.MemoryChunk;
					public alloc(param0: number): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class DefaultBitmapPoolParams extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.DefaultBitmapPoolParams>;
					public static get(): com.facebook.imagepipeline.memory.PoolParams;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class DefaultByteArrayPoolParams extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams>;
					public static get(): com.facebook.imagepipeline.memory.PoolParams;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class DefaultFlexByteArrayPoolParams extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.DefaultFlexByteArrayPoolParams>;
					public static DEFAULT_MAX_BYTE_ARRAY_SIZE: number;
					public static DEFAULT_MAX_NUM_THREADS: number;
					public static generateBuckets(param0: number, param1: number, param2: number): globalAndroid.util.SparseIntArray;
					public static get(): com.facebook.imagepipeline.memory.PoolParams;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class DefaultNativeMemoryChunkPoolParams extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams>;
					public static get(): com.facebook.imagepipeline.memory.PoolParams;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class DummyBitmapPool extends java.lang.Object implements com.facebook.imagepipeline.memory.BitmapPool {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.DummyBitmapPool>;
					public get(param0: number): globalAndroid.graphics.Bitmap;
					public release(param0: globalAndroid.graphics.Bitmap): void;
					public release(param0: any): void;
					public constructor();
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					public get(param0: number): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class DummyTrackingInUseBitmapPool extends java.lang.Object implements com.facebook.imagepipeline.memory.BitmapPool {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool>;
					public get(param0: number): globalAndroid.graphics.Bitmap;
					public release(param0: globalAndroid.graphics.Bitmap): void;
					public release(param0: any): void;
					public constructor();
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					public get(param0: number): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class FlexByteArrayPool extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.FlexByteArrayPool>;
					public getStats(): java.util.Map<string,java.lang.Integer>;
					public getMinBufferSize(): number;
					public get(param0: number): com.facebook.common.references.CloseableReference<native.Array<number>>;
					public release(param0: native.Array<number>): void;
					public constructor(param0: com.facebook.common.memory.MemoryTrimmableRegistry, param1: com.facebook.imagepipeline.memory.PoolParams);
				}
				export module FlexByteArrayPool {
					export class SoftRefByteArrayPool extends com.facebook.imagepipeline.memory.GenericByteArrayPool {
						public static class: java.lang.Class<com.facebook.imagepipeline.memory.FlexByteArrayPool.SoftRefByteArrayPool>;
						public constructor(param0: com.facebook.common.memory.MemoryTrimmableRegistry, param1: com.facebook.imagepipeline.memory.PoolParams, param2: com.facebook.imagepipeline.memory.PoolStatsTracker);
						public get(param0: number): any;
						public release(param0: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class GenericByteArrayPool extends com.facebook.imagepipeline.memory.BasePool<native.Array<number>> implements com.facebook.common.memory.ByteArrayPool  {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.GenericByteArrayPool>;
					public getMinBufferSize(): number;
					public free(param0: any): void;
					public getBucketedSize(param0: number): number;
					public alloc(param0: number): any;
					public getBucketedSizeForValue(param0: native.Array<number>): number;
					public getSizeInBytes(param0: number): number;
					public release(param0: any): void;
					public getBucketedSizeForValue(param0: any): number;
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					public get(param0: number): any;
					public alloc(param0: number): native.Array<number>;
					public free(param0: native.Array<number>): void;
					public constructor(param0: com.facebook.common.memory.MemoryTrimmableRegistry, param1: com.facebook.imagepipeline.memory.PoolParams, param2: com.facebook.imagepipeline.memory.PoolStatsTracker);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class LruBitmapPool extends java.lang.Object implements com.facebook.imagepipeline.memory.BitmapPool {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.LruBitmapPool>;
					public mStrategy: com.facebook.imagepipeline.memory.PoolBackend<globalAndroid.graphics.Bitmap>;
					public get(param0: number): globalAndroid.graphics.Bitmap;
					public release(param0: globalAndroid.graphics.Bitmap): void;
					public release(param0: any): void;
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					public get(param0: number): any;
					public constructor(param0: number, param1: number, param2: com.facebook.imagepipeline.memory.PoolStatsTracker, param3: com.facebook.common.memory.MemoryTrimmableRegistry);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export abstract class LruBucketsPoolBackend<T>  extends com.facebook.imagepipeline.memory.PoolBackend<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.LruBucketsPoolBackend<any>>;
					public constructor();
					public getSize(param0: any): number;
					public get(param0: number): any;
					public put(param0: any): void;
					public pop(): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class MemoryChunk extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.MemoryChunk>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.memory.MemoryChunk interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						close(): void;
						isClosed(): boolean;
						getSize(): number;
						write(param0: number, param1: native.Array<number>, param2: number, param3: number): number;
						read(param0: number, param1: native.Array<number>, param2: number, param3: number): number;
						read(param0: number): number;
						copy(param0: number, param1: com.facebook.imagepipeline.memory.MemoryChunk, param2: number, param3: number): void;
						getNativePtr(): number;
						getByteBuffer(): java.nio.ByteBuffer;
						getUniqueId(): number;
					});
					public constructor();
					public read(param0: number): number;
					public getUniqueId(): number;
					public close(): void;
					public getByteBuffer(): java.nio.ByteBuffer;
					public write(param0: number, param1: native.Array<number>, param2: number, param3: number): number;
					public read(param0: number, param1: native.Array<number>, param2: number, param3: number): number;
					public getNativePtr(): number;
					public copy(param0: number, param1: com.facebook.imagepipeline.memory.MemoryChunk, param2: number, param3: number): void;
					public getSize(): number;
					public isClosed(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export abstract class MemoryChunkPool extends com.facebook.imagepipeline.memory.BasePool<com.facebook.imagepipeline.memory.MemoryChunk> {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.MemoryChunkPool>;
					public free(param0: com.facebook.imagepipeline.memory.MemoryChunk): void;
					public getSizeInBytes(param0: number): number;
					public isReusable(param0: any): boolean;
					public isReusable(param0: com.facebook.imagepipeline.memory.MemoryChunk): boolean;
					public release(param0: any): void;
					public getBucketedSizeForValue(param0: any): number;
					public free(param0: any): void;
					public get(param0: number): any;
					public getBucketedSize(param0: number): number;
					public getBucketedSizeForValue(param0: com.facebook.imagepipeline.memory.MemoryChunk): number;
					public alloc(param0: number): any;
					public alloc(param0: number): com.facebook.imagepipeline.memory.MemoryChunk;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class MemoryChunkUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.MemoryChunkUtil>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class MemoryPooledByteBuffer extends java.lang.Object implements com.facebook.common.memory.PooledByteBuffer {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.MemoryPooledByteBuffer>;
					public read(param0: number): number;
					public constructor(param0: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.memory.MemoryChunk>, param1: number);
					public getByteBuffer(): java.nio.ByteBuffer;
					public close(): void;
					public size(): number;
					public read(param0: number, param1: native.Array<number>, param2: number, param3: number): number;
					public getNativePtr(): number;
					public isClosed(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class MemoryPooledByteBufferFactory extends java.lang.Object implements com.facebook.common.memory.PooledByteBufferFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory>;
					public newByteBuffer(param0: native.Array<number>): com.facebook.imagepipeline.memory.MemoryPooledByteBuffer;
					public newByteBuffer(param0: number): com.facebook.imagepipeline.memory.MemoryPooledByteBuffer;
					public newOutputStream(param0: number): com.facebook.common.memory.PooledByteBufferOutputStream;
					public newByteBuffer(param0: java.io.InputStream, param1: number): com.facebook.imagepipeline.memory.MemoryPooledByteBuffer;
					public newByteBuffer(param0: number): com.facebook.common.memory.PooledByteBuffer;
					public newOutputStream(): com.facebook.common.memory.PooledByteBufferOutputStream;
					public newByteBuffer(param0: java.io.InputStream): com.facebook.imagepipeline.memory.MemoryPooledByteBuffer;
					public newOutputStream(param0: number): com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream;
					public newByteBuffer(param0: native.Array<number>): com.facebook.common.memory.PooledByteBuffer;
					public newOutputStream(): com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream;
					public newByteBuffer(param0: java.io.InputStream): com.facebook.common.memory.PooledByteBuffer;
					public newByteBuffer(param0: java.io.InputStream, param1: number): com.facebook.common.memory.PooledByteBuffer;
					public constructor(param0: com.facebook.imagepipeline.memory.MemoryChunkPool, param1: com.facebook.common.memory.PooledByteStreams);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class MemoryPooledByteBufferOutputStream extends com.facebook.common.memory.PooledByteBufferOutputStream {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream>;
					public write(param0: native.Array<number>, param1: number, param2: number): void;
					public constructor(param0: com.facebook.imagepipeline.memory.MemoryChunkPool);
					public constructor(param0: com.facebook.imagepipeline.memory.MemoryChunkPool, param1: number);
					public write(param0: native.Array<number>): void;
					public constructor();
					public toByteBuffer(): com.facebook.common.memory.PooledByteBuffer;
					public close(): void;
					public size(): number;
					public write(param0: number): void;
					public flush(): void;
					public toByteBuffer(): com.facebook.imagepipeline.memory.MemoryPooledByteBuffer;
				}
				export module MemoryPooledByteBufferOutputStream {
					export class InvalidStreamException extends java.lang.RuntimeException {
						public static class: java.lang.Class<com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class NativeMemoryChunk extends java.lang.Object implements com.facebook.imagepipeline.memory.MemoryChunk, java.io.Closeable {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.NativeMemoryChunk>;
					public getUniqueId(): number;
					public finalize(): void;
					public write(param0: number, param1: native.Array<number>, param2: number, param3: number): number;
					public read(param0: number, param1: native.Array<number>, param2: number, param3: number): number;
					public copy(param0: number, param1: com.facebook.imagepipeline.memory.MemoryChunk, param2: number, param3: number): void;
					public getSize(): number;
					public read(param0: number): number;
					public constructor();
					public close(): void;
					public getByteBuffer(): java.nio.ByteBuffer;
					public getNativePtr(): number;
					public constructor(param0: number);
					public isClosed(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class NativeMemoryChunkPool extends com.facebook.imagepipeline.memory.MemoryChunkPool {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.NativeMemoryChunkPool>;
					public release(param0: any): void;
					public get(param0: number): any;
					public alloc(param0: number): com.facebook.imagepipeline.memory.NativeMemoryChunk;
					public constructor(param0: com.facebook.common.memory.MemoryTrimmableRegistry, param1: com.facebook.imagepipeline.memory.PoolParams, param2: com.facebook.imagepipeline.memory.PoolStatsTracker);
					public alloc(param0: number): com.facebook.imagepipeline.memory.MemoryChunk;
					public alloc(param0: number): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class NoOpPoolStatsTracker extends java.lang.Object implements com.facebook.imagepipeline.memory.PoolStatsTracker {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.NoOpPoolStatsTracker>;
					public setBasePool(param0: com.facebook.imagepipeline.memory.BasePool<any>): void;
					public onValueReuse(param0: number): void;
					public onHardCapReached(): void;
					public static getInstance(): com.facebook.imagepipeline.memory.NoOpPoolStatsTracker;
					public onSoftCapReached(): void;
					public onValueRelease(param0: number): void;
					public onAlloc(param0: number): void;
					public onFree(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class OOMSoftReferenceBucket<V>  extends com.facebook.imagepipeline.memory.Bucket<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.OOMSoftReferenceBucket<any>>;
					public constructor(param0: number, param1: number, param2: number);
					public constructor(param0: number, param1: number, param2: number, param3: boolean);
					public pop(): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class PoolBackend<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.PoolBackend<any>>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.memory.PoolBackend<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						get(param0: number): T;
						put(param0: T): void;
						getSize(param0: T): number;
						pop(): T;
					});
					public constructor();
					public get(param0: number): T;
					public put(param0: T): void;
					public pop(): T;
					public getSize(param0: T): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class PoolConfig extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.PoolConfig>;
					public static BITMAP_POOL_MAX_BITMAP_SIZE_DEFAULT: number;
					public getMemoryChunkPoolParams(): com.facebook.imagepipeline.memory.PoolParams;
					public getBitmapPoolMaxPoolSize(): number;
					public isRegisterLruBitmapPoolAsMemoryTrimmable(): boolean;
					public getSmallByteArrayPoolStatsTracker(): com.facebook.imagepipeline.memory.PoolStatsTracker;
					public getBitmapPoolStatsTracker(): com.facebook.imagepipeline.memory.PoolStatsTracker;
					public getBitmapPoolParams(): com.facebook.imagepipeline.memory.PoolParams;
					public getBitmapPoolType(): string;
					public getSmallByteArrayPoolParams(): com.facebook.imagepipeline.memory.PoolParams;
					public getMemoryTrimmableRegistry(): com.facebook.common.memory.MemoryTrimmableRegistry;
					public static newBuilder(): com.facebook.imagepipeline.memory.PoolConfig.Builder;
					public getMemoryChunkPoolStatsTracker(): com.facebook.imagepipeline.memory.PoolStatsTracker;
					public getFlexByteArrayPoolParams(): com.facebook.imagepipeline.memory.PoolParams;
					public getBitmapPoolMaxBitmapSize(): number;
				}
				export module PoolConfig {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.memory.PoolConfig.Builder>;
						public setBitmapPoolStatsTracker(param0: com.facebook.imagepipeline.memory.PoolStatsTracker): com.facebook.imagepipeline.memory.PoolConfig.Builder;
						public setBitmapPoolType(param0: string): com.facebook.imagepipeline.memory.PoolConfig.Builder;
						public setSmallByteArrayPoolStatsTracker(param0: com.facebook.imagepipeline.memory.PoolStatsTracker): com.facebook.imagepipeline.memory.PoolConfig.Builder;
						public build(): com.facebook.imagepipeline.memory.PoolConfig;
						public setNativeMemoryChunkPoolParams(param0: com.facebook.imagepipeline.memory.PoolParams): com.facebook.imagepipeline.memory.PoolConfig.Builder;
						public setRegisterLruBitmapPoolAsMemoryTrimmable(param0: boolean): void;
						public setBitmapPoolMaxBitmapSize(param0: number): com.facebook.imagepipeline.memory.PoolConfig.Builder;
						public setBitmapPoolMaxPoolSize(param0: number): com.facebook.imagepipeline.memory.PoolConfig.Builder;
						public setBitmapPoolParams(param0: com.facebook.imagepipeline.memory.PoolParams): com.facebook.imagepipeline.memory.PoolConfig.Builder;
						public setSmallByteArrayPoolParams(param0: com.facebook.imagepipeline.memory.PoolParams): com.facebook.imagepipeline.memory.PoolConfig.Builder;
						public setFlexByteArrayPoolParams(param0: com.facebook.imagepipeline.memory.PoolParams): com.facebook.imagepipeline.memory.PoolConfig.Builder;
						public setMemoryTrimmableRegistry(param0: com.facebook.common.memory.MemoryTrimmableRegistry): com.facebook.imagepipeline.memory.PoolConfig.Builder;
						public setNativeMemoryChunkPoolStatsTracker(param0: com.facebook.imagepipeline.memory.PoolStatsTracker): com.facebook.imagepipeline.memory.PoolConfig.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class PoolFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.PoolFactory>;
					public constructor(param0: com.facebook.imagepipeline.memory.PoolConfig);
					public getFlexByteArrayPool(): com.facebook.imagepipeline.memory.FlexByteArrayPool;
					public getPooledByteBufferFactory(param0: number): com.facebook.common.memory.PooledByteBufferFactory;
					public getSmallByteArrayPool(): com.facebook.common.memory.ByteArrayPool;
					public getSharedByteArray(): com.facebook.imagepipeline.memory.SharedByteArray;
					public getPooledByteBufferFactory(): com.facebook.common.memory.PooledByteBufferFactory;
					public getBitmapPool(): com.facebook.imagepipeline.memory.BitmapPool;
					public getPooledByteStreams(): com.facebook.common.memory.PooledByteStreams;
					public getBufferMemoryChunkPool(): com.facebook.imagepipeline.memory.BufferMemoryChunkPool;
					public getNativeMemoryChunkPool(): com.facebook.imagepipeline.memory.NativeMemoryChunkPool;
					public getFlexByteArrayPoolMaxNumThreads(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class PoolParams extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.PoolParams>;
					public static IGNORE_THREADS: number;
					public maxSizeHardCap: number;
					public maxSizeSoftCap: number;
					public bucketSizes: globalAndroid.util.SparseIntArray;
					public minBucketSize: number;
					public maxBucketSize: number;
					public bitmapPoolType: string;
					public fixBucketsReinitialization: boolean;
					public maxNumThreads: number;
					public constructor(param0: number, param1: number, param2: globalAndroid.util.SparseIntArray);
					public constructor(param0: number, param1: globalAndroid.util.SparseIntArray);
					public constructor(param0: number, param1: number, param2: globalAndroid.util.SparseIntArray, param3: number, param4: number, param5: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class PoolStatsTracker extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.PoolStatsTracker>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.memory.PoolStatsTracker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setBasePool(param0: com.facebook.imagepipeline.memory.BasePool<any>): void;
						onValueReuse(param0: number): void;
						onSoftCapReached(): void;
						onHardCapReached(): void;
						onAlloc(param0: number): void;
						onFree(param0: number): void;
						onValueRelease(param0: number): void;
					});
					public constructor();
					public static SOFT_CAP: string;
					public static USED_COUNT: string;
					public static BUCKETS_USED_PREFIX: string;
					public static USED_BYTES: string;
					public static FREE_COUNT: string;
					public static FREE_BYTES: string;
					public static HARD_CAP: string;
					public setBasePool(param0: com.facebook.imagepipeline.memory.BasePool<any>): void;
					public onValueReuse(param0: number): void;
					public onHardCapReached(): void;
					public onSoftCapReached(): void;
					public onValueRelease(param0: number): void;
					public onAlloc(param0: number): void;
					public onFree(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module memory {
				export class SharedByteArray extends java.lang.Object implements com.facebook.common.memory.MemoryTrimmable {
					public static class: java.lang.Class<com.facebook.imagepipeline.memory.SharedByteArray>;
					public get(param0: number): com.facebook.common.references.CloseableReference<native.Array<number>>;
					public trim(param0: com.facebook.common.memory.MemoryTrimType): void;
					public constructor(param0: com.facebook.common.memory.MemoryTrimmableRegistry, param1: com.facebook.imagepipeline.memory.PoolParams);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export class Bitmaps extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.Bitmaps>;
					public constructor();
					public static copyBitmap(param0: globalAndroid.graphics.Bitmap, param1: globalAndroid.graphics.Bitmap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export abstract class DalvikPurgeableDecoder extends java.lang.Object implements com.facebook.imagepipeline.platform.PlatformDecoder {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder>;
					public static EOI: native.Array<number>;
					public decodeJPEGFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor();
					public static getBitmapFactoryOptions(param0: number, param1: globalAndroid.graphics.Bitmap.Config): globalAndroid.graphics.BitmapFactory.Options;
					public pinBitmap(param0: globalAndroid.graphics.Bitmap): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public static endsWithEOI(param0: com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>, param1: number): boolean;
					public decodeJPEGFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number, param4: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeJPEGByteArrayAsPurgeable(param0: com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>, param1: number, param2: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
					public decodeByteArrayAsPurgeable(param0: com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>, param1: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
				}
				export module DalvikPurgeableDecoder {
					export class OreoUtils extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder.OreoUtils>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export class ImagePipelineNativeLoader extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader>;
					public static DSO_NAME: string;
					public static DEPENDENCIES: java.util.List<string>;
					public static load(): void;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export class NativeBlurFilter extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.NativeBlurFilter>;
					public constructor();
					public static iterativeBoxBlur(param0: globalAndroid.graphics.Bitmap, param1: number, param2: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export class NativeFiltersLoader extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.NativeFiltersLoader>;
					public static load(): void;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export class NativeImageTranscoderFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory>;
					public static getNativeImageTranscoderFactory(param0: number, param1: boolean): com.facebook.imagepipeline.transcoder.ImageTranscoderFactory;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export class NativeJpegTranscoder extends java.lang.Object implements com.facebook.imagepipeline.transcoder.ImageTranscoder {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.NativeJpegTranscoder>;
					public static TAG: string;
					public static transcodeJpegWithExifOrientation(param0: java.io.InputStream, param1: java.io.OutputStream, param2: number, param3: number, param4: number): void;
					public canResize(param0: com.facebook.imagepipeline.image.EncodedImage, param1: com.facebook.imagepipeline.common.RotationOptions, param2: com.facebook.imagepipeline.common.ResizeOptions): boolean;
					public transcode(param0: com.facebook.imagepipeline.image.EncodedImage, param1: java.io.OutputStream, param2: com.facebook.imagepipeline.common.RotationOptions, param3: com.facebook.imagepipeline.common.ResizeOptions, param4: com.facebook.imageformat.ImageFormat, param5: java.lang.Integer): com.facebook.imagepipeline.transcoder.ImageTranscodeResult;
					public getIdentifier(): string;
					public static transcodeJpeg(param0: java.io.InputStream, param1: java.io.OutputStream, param2: number, param3: number, param4: number): void;
					public constructor(param0: boolean, param1: number, param2: boolean);
					public canTranscode(param0: com.facebook.imageformat.ImageFormat): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export class NativeJpegTranscoderFactory extends java.lang.Object implements com.facebook.imagepipeline.transcoder.ImageTranscoderFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory>;
					public createImageTranscoder(param0: com.facebook.imageformat.ImageFormat, param1: boolean): com.facebook.imagepipeline.transcoder.ImageTranscoder;
					public constructor(param0: number, param1: boolean);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export class NativeJpegTranscoderSoLoader extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader>;
					public constructor();
					public static ensure(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export class NativeRoundingFilter extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.NativeRoundingFilter>;
					public static toCircle(param0: globalAndroid.graphics.Bitmap, param1: boolean): void;
					public constructor();
					public static toCircle(param0: globalAndroid.graphics.Bitmap): void;
					public static toCircleWithBorder(param0: globalAndroid.graphics.Bitmap, param1: number, param2: number, param3: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export class WebpTranscoder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.WebpTranscoder>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.nativecode.WebpTranscoder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isWebpNativelySupported(param0: com.facebook.imageformat.ImageFormat): boolean;
						transcodeWebpToJpeg(param0: java.io.InputStream, param1: java.io.OutputStream, param2: number): void;
						transcodeWebpToPng(param0: java.io.InputStream, param1: java.io.OutputStream): void;
					});
					public constructor();
					public transcodeWebpToPng(param0: java.io.InputStream, param1: java.io.OutputStream): void;
					public isWebpNativelySupported(param0: com.facebook.imageformat.ImageFormat): boolean;
					public transcodeWebpToJpeg(param0: java.io.InputStream, param1: java.io.OutputStream, param2: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module nativecode {
				export class WebpTranscoderFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.nativecode.WebpTranscoderFactory>;
					public static sWebpTranscoderPresent: boolean;
					public constructor();
					public static getWebpTranscoder(): com.facebook.imagepipeline.nativecode.WebpTranscoder;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module platform {
				export class ArtDecoder extends com.facebook.imagepipeline.platform.DefaultDecoder {
					public static class: java.lang.Class<com.facebook.imagepipeline.platform.ArtDecoder>;
					public decodeJPEGFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor(param0: com.facebook.imagepipeline.memory.BitmapPool, param1: number, param2: androidx.core.util.Pools.SynchronizedPool<any>);
					public decodeFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeJPEGFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number, param4: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public getBitmapSize(param0: number, param1: number, param2: globalAndroid.graphics.BitmapFactory.Options): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module platform {
				export abstract class DefaultDecoder extends java.lang.Object implements com.facebook.imagepipeline.platform.PlatformDecoder {
					public static class: java.lang.Class<com.facebook.imagepipeline.platform.DefaultDecoder>;
					public decodeJPEGFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeStaticImageFromStream(param0: java.io.InputStream, param1: globalAndroid.graphics.BitmapFactory.Options, param2: globalAndroid.graphics.Rect): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor(param0: com.facebook.imagepipeline.memory.BitmapPool, param1: number, param2: androidx.core.util.Pools.SynchronizedPool<any>);
					public decodeFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeJPEGFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number, param4: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public getBitmapSize(param0: number, param1: number, param2: globalAndroid.graphics.BitmapFactory.Options): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module platform {
				export class GingerbreadPurgeableDecoder extends com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder {
					public static class: java.lang.Class<com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder>;
					public decodeJPEGFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor();
					public decodeFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeJPEGByteArrayAsPurgeable(param0: com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>, param1: number, param2: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
					public decodeJPEGFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number, param4: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeByteArrayAsPurgeable(param0: com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>, param1: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module platform {
				export class KitKatPurgeableDecoder extends com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder {
					public static class: java.lang.Class<com.facebook.imagepipeline.platform.KitKatPurgeableDecoder>;
					public decodeJPEGFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor();
					public decodeFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor(param0: com.facebook.imagepipeline.memory.FlexByteArrayPool);
					public decodeJPEGByteArrayAsPurgeable(param0: com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>, param1: number, param2: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
					public decodeJPEGFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number, param4: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeByteArrayAsPurgeable(param0: com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>, param1: globalAndroid.graphics.BitmapFactory.Options): globalAndroid.graphics.Bitmap;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module platform {
				export class OreoDecoder extends com.facebook.imagepipeline.platform.DefaultDecoder {
					public static class: java.lang.Class<com.facebook.imagepipeline.platform.OreoDecoder>;
					public decodeJPEGFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor(param0: com.facebook.imagepipeline.memory.BitmapPool, param1: number, param2: androidx.core.util.Pools.SynchronizedPool<any>);
					public decodeFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeJPEGFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number, param4: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public getBitmapSize(param0: number, param1: number, param2: globalAndroid.graphics.BitmapFactory.Options): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module platform {
				export class PlatformDecoder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.platform.PlatformDecoder>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.platform.PlatformDecoder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						decodeFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
						decodeJPEGFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
						decodeFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
						decodeJPEGFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number, param4: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					});
					public constructor();
					public decodeJPEGFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeFromEncodedImage(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public decodeJPEGFromEncodedImageWithColorSpace(param0: com.facebook.imagepipeline.image.EncodedImage, param1: globalAndroid.graphics.Bitmap.Config, param2: globalAndroid.graphics.Rect, param3: number, param4: globalAndroid.graphics.ColorSpace): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module platform {
				export class PlatformDecoderFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.platform.PlatformDecoderFactory>;
					public constructor();
					public static buildPlatformDecoder(param0: com.facebook.imagepipeline.memory.PoolFactory, param1: boolean): com.facebook.imagepipeline.platform.PlatformDecoder;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module platform {
				export class PreverificationHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.platform.PreverificationHelper>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module postprocessors {
				export class BlurPostProcessor extends com.facebook.imagepipeline.request.BasePostprocessor {
					public static class: java.lang.Class<com.facebook.imagepipeline.postprocessors.BlurPostProcessor>;
					public constructor(param0: number, param1: globalAndroid.content.Context, param2: number);
					public process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor();
					public constructor(param0: number, param1: globalAndroid.content.Context);
					public getName(): string;
					public process(param0: globalAndroid.graphics.Bitmap): void;
					public getPostprocessorCacheKey(): com.facebook.cache.common.CacheKey;
					public process(param0: globalAndroid.graphics.Bitmap, param1: globalAndroid.graphics.Bitmap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module postprocessors {
				export class IterativeBoxBlurPostProcessor extends com.facebook.imagepipeline.request.BasePostprocessor {
					public static class: java.lang.Class<com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor>;
					public process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor();
					public getName(): string;
					public process(param0: globalAndroid.graphics.Bitmap): void;
					public getPostprocessorCacheKey(): com.facebook.cache.common.CacheKey;
					public process(param0: globalAndroid.graphics.Bitmap, param1: globalAndroid.graphics.Bitmap): void;
					public constructor(param0: number);
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module postprocessors {
				export class RoundAsCirclePostprocessor extends com.facebook.imagepipeline.request.BasePostprocessor {
					public static class: java.lang.Class<com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor>;
					public constructor(param0: boolean);
					public process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor();
					public getName(): string;
					public process(param0: globalAndroid.graphics.Bitmap): void;
					public getPostprocessorCacheKey(): com.facebook.cache.common.CacheKey;
					public process(param0: globalAndroid.graphics.Bitmap, param1: globalAndroid.graphics.Bitmap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module postprocessors {
				export class RoundPostprocessor extends com.facebook.imagepipeline.request.BasePostprocessor {
					public static class: java.lang.Class<com.facebook.imagepipeline.postprocessors.RoundPostprocessor>;
					public constructor(param0: boolean);
					public process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor();
					public getName(): string;
					public process(param0: globalAndroid.graphics.Bitmap): void;
					public getPostprocessorCacheKey(): com.facebook.cache.common.CacheKey;
					public process(param0: globalAndroid.graphics.Bitmap, param1: globalAndroid.graphics.Bitmap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class AddImageTransformMetaDataProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer>;
					public constructor(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
				export module AddImageTransformMetaDataProducer {
					export class AddImageTransformMetaDataConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer>;
						public onNewResultImpl(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export abstract class BaseConsumer<T>  extends com.facebook.imagepipeline.producers.Consumer<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.BaseConsumer<any>>;
					public onNewResult(param0: any, param1: number): void;
					public onUnhandledException(param0: java.lang.Exception): void;
					public static statusHasFlag(param0: number, param1: number): boolean;
					public onFailure(param0: java.lang.Throwable): void;
					public static turnOffStatusFlag(param0: number, param1: number): number;
					public onProgressUpdateImpl(param0: number): void;
					public static isLast(param0: number): boolean;
					public onFailureImpl(param0: java.lang.Throwable): void;
					public static isNotLast(param0: number): boolean;
					public onCancellationImpl(): void;
					public onCancellation(): void;
					public constructor();
					public static turnOnStatusFlag(param0: number, param1: number): number;
					public static simpleStatusForIsLast(param0: boolean): number;
					public static statusHasAnyFlag(param0: number, param1: number): boolean;
					public onNewResultImpl(param0: any, param1: number): void;
					public onProgressUpdate(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export abstract class BaseNetworkFetcher<FETCH_STATE>  extends com.facebook.imagepipeline.producers.NetworkFetcher<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.BaseNetworkFetcher<any>>;
					public onFetchCompletion(param0: any, param1: number): void;
					public getExtraMap(param0: any, param1: number): java.util.Map<string,string>;
					public constructor();
					public createFetchState(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): any;
					public shouldPropagate(param0: any): boolean;
					public fetch(param0: any, param1: com.facebook.imagepipeline.producers.NetworkFetcher.Callback): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class BaseProducerContext extends java.lang.Object implements com.facebook.imagepipeline.producers.ProducerContext {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.BaseProducerContext>;
					public getPriority(): com.facebook.imagepipeline.common.Priority;
					public constructor(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: com.facebook.imagepipeline.producers.ProducerListener, param3: any, param4: com.facebook.imagepipeline.request.ImageRequest.RequestLevel, param5: boolean, param6: boolean, param7: com.facebook.imagepipeline.common.Priority);
					public getId(): string;
					public setIsPrefetchNoCallbacks(param0: boolean): java.util.List<com.facebook.imagepipeline.producers.ProducerContextCallbacks>;
					public isCancelled(): boolean;
					public addCallbacks(param0: com.facebook.imagepipeline.producers.ProducerContextCallbacks): void;
					public cancel(): void;
					public setPriorityNoCallbacks(param0: com.facebook.imagepipeline.common.Priority): java.util.List<com.facebook.imagepipeline.producers.ProducerContextCallbacks>;
					public setIsIntermediateResultExpectedNoCallbacks(param0: boolean): java.util.List<com.facebook.imagepipeline.producers.ProducerContextCallbacks>;
					public cancelNoCallbacks(): java.util.List<com.facebook.imagepipeline.producers.ProducerContextCallbacks>;
					public static callOnIsPrefetchChanged(param0: java.util.List<com.facebook.imagepipeline.producers.ProducerContextCallbacks>): void;
					public static callOnCancellationRequested(param0: java.util.List<com.facebook.imagepipeline.producers.ProducerContextCallbacks>): void;
					public static callOnIsIntermediateResultExpectedChanged(param0: java.util.List<com.facebook.imagepipeline.producers.ProducerContextCallbacks>): void;
					public static callOnPriorityChanged(param0: java.util.List<com.facebook.imagepipeline.producers.ProducerContextCallbacks>): void;
					public getListener(): com.facebook.imagepipeline.producers.ProducerListener;
					public getImageRequest(): com.facebook.imagepipeline.request.ImageRequest;
					public isIntermediateResultExpected(): boolean;
					public getCallerContext(): any;
					public getLowestPermittedRequestLevel(): com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
					public isPrefetch(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class BaseProducerContextCallbacks extends java.lang.Object implements com.facebook.imagepipeline.producers.ProducerContextCallbacks {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.BaseProducerContextCallbacks>;
					public onIsPrefetchChanged(): void;
					public constructor();
					public onIsIntermediateResultExpectedChanged(): void;
					public onPriorityChanged(): void;
					public onCancellationRequested(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class BitmapMemoryCacheGetProducer extends com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer>;
					public static PRODUCER_NAME: string;
					public constructor(param0: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param1: com.facebook.imagepipeline.cache.CacheKeyFactory, param2: com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public wrapConsumer(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.cache.common.CacheKey, param2: boolean): com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>;
					public getProducerName(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class BitmapMemoryCacheKeyMultiplexProducer extends com.facebook.imagepipeline.producers.MultiplexProducer<globalAndroid.util.Pair<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.request.ImageRequest.RequestLevel>,com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer>;
					public constructor(param0: com.facebook.imagepipeline.producers.Producer<any>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getKey(param0: com.facebook.imagepipeline.producers.ProducerContext): any;
					public cloneOrNull(param0: any): any;
					public getKey(param0: com.facebook.imagepipeline.producers.ProducerContext): globalAndroid.util.Pair<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.request.ImageRequest.RequestLevel>;
					public cloneOrNull(param0: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>): com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>;
					public constructor(param0: com.facebook.imagepipeline.cache.CacheKeyFactory, param1: com.facebook.imagepipeline.producers.Producer<any>);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class BitmapMemoryCacheProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer>;
					public static PRODUCER_NAME: string;
					public static EXTRA_CACHED_VALUE_FOUND: string;
					public constructor(param0: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param1: com.facebook.imagepipeline.cache.CacheKeyFactory, param2: com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public wrapConsumer(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.cache.common.CacheKey, param2: boolean): com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>;
					public getProducerName(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class BitmapPrepareProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.BitmapPrepareProducer>;
					public static PRODUCER_NAME: string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: number, param2: number, param3: boolean);
				}
				export module BitmapPrepareProducer {
					export class BitmapPrepareConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>,com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.BitmapPrepareProducer.BitmapPrepareConsumer>;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
						public onNewResultImpl(param0: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class BranchOnSeparateImagesProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer>;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
				export module BranchOnSeparateImagesProducer {
					export class OnFirstImageConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer.OnFirstImageConsumer>;
						public onNewResultImpl(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
						public onFailureImpl(param0: java.lang.Throwable): void;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class Consumer<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.Consumer<any>>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.producers.Consumer<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onNewResult(param0: T, param1: number): void;
						onFailure(param0: java.lang.Throwable): void;
						onCancellation(): void;
						onProgressUpdate(param0: number): void;
					});
					public constructor();
					public static IS_PARTIAL_RESULT: number;
					public static NO_FLAGS: number;
					public static DO_NOT_CACHE_ENCODED: number;
					public static IS_LAST: number;
					public static IS_PLACEHOLDER: number;
					public static IS_RESIZING_DONE: number;
					public onCancellation(): void;
					public onNewResult(param0: T, param1: number): void;
					public onFailure(param0: java.lang.Throwable): void;
					public onProgressUpdate(param0: number): void;
				}
				export module Consumer {
					export class Status extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.Consumer.Status>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.producers.Consumer$Status interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class DataFetchProducer extends com.facebook.imagepipeline.producers.LocalFetchProducer {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.DataFetchProducer>;
					public static PRODUCER_NAME: string;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory);
					public constructor(param0: com.facebook.common.memory.PooledByteBufferFactory);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getEncodedImage(param0: java.io.InputStream, param1: number): com.facebook.imagepipeline.image.EncodedImage;
					public getEncodedImage(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.image.EncodedImage;
					public getProducerName(): string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class DecodeProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.DecodeProducer>;
					public static PRODUCER_NAME: string;
					public static EXTRA_BITMAP_SIZE: string;
					public static EXTRA_HAS_GOOD_QUALITY: string;
					public static EXTRA_IS_FINAL: string;
					public static EXTRA_IMAGE_FORMAT_NAME: string;
					public static ENCODED_IMAGE_SIZE: string;
					public static REQUESTED_IMAGE_SIZE: string;
					public static SAMPLE_SIZE: string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: com.facebook.common.memory.ByteArrayPool, param1: java.util.concurrent.Executor, param2: com.facebook.imagepipeline.decoder.ImageDecoder, param3: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig, param4: boolean, param5: boolean, param6: boolean, param7: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>, param8: number, param9: com.facebook.imagepipeline.core.CloseableReferenceFactory);
				}
				export module DecodeProducer {
					export class LocalImagesProgressiveDecoder extends com.facebook.imagepipeline.producers.DecodeProducer.ProgressiveDecoder {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.DecodeProducer.LocalImagesProgressiveDecoder>;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<any>);
						public getQualityInfo(): com.facebook.imagepipeline.image.QualityInfo;
						public constructor();
						public updateDecodeJob(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): boolean;
						public onFailure(param0: java.lang.Throwable): void;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerContext, param2: boolean, param3: number);
						public getIntermediateImageEndOffset(param0: com.facebook.imagepipeline.image.EncodedImage): number;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
					export class NetworkImagesProgressiveDecoder extends com.facebook.imagepipeline.producers.DecodeProducer.ProgressiveDecoder {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.DecodeProducer.NetworkImagesProgressiveDecoder>;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<any>);
						public getQualityInfo(): com.facebook.imagepipeline.image.QualityInfo;
						public constructor();
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerContext, param2: com.facebook.imagepipeline.decoder.ProgressiveJpegParser, param3: com.facebook.imagepipeline.decoder.ProgressiveJpegConfig, param4: boolean, param5: number);
						public updateDecodeJob(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): boolean;
						public onFailure(param0: java.lang.Throwable): void;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerContext, param2: boolean, param3: number);
						public getIntermediateImageEndOffset(param0: com.facebook.imagepipeline.image.EncodedImage): number;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
					export abstract class ProgressiveDecoder extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.imagepipeline.image.EncodedImage,com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.DecodeProducer.ProgressiveDecoder>;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<any>);
						public constructor();
						public updateDecodeJob(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): boolean;
						public onProgressUpdate(param0: number): void;
						public onProgressUpdateImpl(param0: number): void;
						public onNewResult(param0: any, param1: number): void;
						public getQualityInfo(): com.facebook.imagepipeline.image.QualityInfo;
						public onNewResultImpl(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
						public onFailureImpl(param0: java.lang.Throwable): void;
						public onCancellationImpl(): void;
						public onFailure(param0: java.lang.Throwable): void;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerContext, param2: boolean, param3: number);
						public onNewResultImpl(param0: any, param1: number): void;
						public getIntermediateImageEndOffset(param0: com.facebook.imagepipeline.image.EncodedImage): number;
						public onCancellation(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export abstract class DelegatingConsumer<I, O>  extends com.facebook.imagepipeline.producers.BaseConsumer<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.DelegatingConsumer<any,any>>;
					public onNewResult(param0: any, param1: number): void;
					public onCancellationImpl(): void;
					public onCancellation(): void;
					public constructor();
					public constructor(param0: com.facebook.imagepipeline.producers.Consumer<any>);
					public onFailure(param0: java.lang.Throwable): void;
					public onProgressUpdateImpl(param0: number): void;
					public onProgressUpdate(param0: number): void;
					public getConsumer(): com.facebook.imagepipeline.producers.Consumer<any>;
					public onFailureImpl(param0: java.lang.Throwable): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class DiskCacheReadProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.DiskCacheReadProducer>;
					public static PRODUCER_NAME: string;
					public static EXTRA_CACHED_VALUE_FOUND: string;
					public static ENCODED_IMAGE_SIZE: string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: com.facebook.imagepipeline.cache.BufferedDiskCache, param1: com.facebook.imagepipeline.cache.BufferedDiskCache, param2: com.facebook.imagepipeline.cache.CacheKeyFactory, param3: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class DiskCacheWriteProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.DiskCacheWriteProducer>;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: com.facebook.imagepipeline.cache.BufferedDiskCache, param1: com.facebook.imagepipeline.cache.BufferedDiskCache, param2: com.facebook.imagepipeline.cache.CacheKeyFactory, param3: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
				export module DiskCacheWriteProducer {
					export class DiskCacheWriteConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.DiskCacheWriteProducer.DiskCacheWriteConsumer>;
						public onNewResultImpl(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class EncodedCacheKeyMultiplexProducer extends com.facebook.imagepipeline.producers.MultiplexProducer<globalAndroid.util.Pair<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.request.ImageRequest.RequestLevel>,com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer>;
					public constructor(param0: com.facebook.imagepipeline.producers.Producer<any>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getKey(param0: com.facebook.imagepipeline.producers.ProducerContext): any;
					public cloneOrNull(param0: any): any;
					public cloneOrNull(param0: com.facebook.imagepipeline.image.EncodedImage): com.facebook.imagepipeline.image.EncodedImage;
					public getKey(param0: com.facebook.imagepipeline.producers.ProducerContext): globalAndroid.util.Pair<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.request.ImageRequest.RequestLevel>;
					public constructor(param0: com.facebook.imagepipeline.cache.CacheKeyFactory, param1: com.facebook.imagepipeline.producers.Producer<any>);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class EncodedMemoryCacheProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer>;
					public static PRODUCER_NAME: string;
					public static EXTRA_CACHED_VALUE_FOUND: string;
					public constructor(param0: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>, param1: com.facebook.imagepipeline.cache.CacheKeyFactory, param2: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
				export module EncodedMemoryCacheProducer {
					export class EncodedMemoryCacheConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer.EncodedMemoryCacheConsumer>;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<any>);
						public constructor();
						public onNewResultImpl(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBuffer>, param2: com.facebook.cache.common.CacheKey, param3: boolean);
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class FetchState extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.FetchState>;
					public getLastIntermediateResultTimeMs(): number;
					public setLastIntermediateResultTimeMs(param0: number): void;
					public getOnNewResultStatusFlags(): number;
					public getId(): string;
					public getListener(): com.facebook.imagepipeline.producers.ProducerListener;
					public getResponseBytesRange(): com.facebook.imagepipeline.common.BytesRange;
					public getConsumer(): com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>;
					public getContext(): com.facebook.imagepipeline.producers.ProducerContext;
					public getUri(): globalAndroid.net.Uri;
					public setOnNewResultStatusFlags(param0: number): void;
					public constructor(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext);
					public setResponseBytesRange(param0: com.facebook.imagepipeline.common.BytesRange): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class HttpUrlConnectionNetworkFetcher extends com.facebook.imagepipeline.producers.BaseNetworkFetcher<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher>;
					public static HTTP_TEMPORARY_REDIRECT: number;
					public static HTTP_PERMANENT_REDIRECT: number;
					public static HTTP_DEFAULT_TIMEOUT: number;
					public onFetchCompletion(param0: any, param1: number): void;
					public getExtraMap(param0: any, param1: number): java.util.Map<string,string>;
					public constructor();
					public getExtraMap(param0: com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState, param1: number): java.util.Map<string,string>;
					public fetch(param0: com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState, param1: com.facebook.imagepipeline.producers.NetworkFetcher.Callback): void;
					public createFetchState(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): any;
					public createFetchState(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState;
					public onFetchCompletion(param0: com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState, param1: number): void;
					public shouldPropagate(param0: any): boolean;
					public fetch(param0: any, param1: com.facebook.imagepipeline.producers.NetworkFetcher.Callback): void;
					public constructor(param0: number);
				}
				export module HttpUrlConnectionNetworkFetcher {
					export class HttpUrlConnectionNetworkFetchState extends com.facebook.imagepipeline.producers.FetchState {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState>;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class JobScheduler extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.JobScheduler>;
					public getQueuedTime(): number;
					public clearJob(): void;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.imagepipeline.producers.JobScheduler.JobRunnable, param2: number);
					public updateJob(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): boolean;
					public scheduleJob(): boolean;
				}
				export module JobScheduler {
					export class JobRunnable extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.JobScheduler.JobRunnable>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.producers.JobScheduler$JobRunnable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							run(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
						});
						public constructor();
						public run(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
					}
					export class JobStartExecutorSupplier extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.JobScheduler.JobStartExecutorSupplier>;
					}
					export class JobState {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.JobScheduler.JobState>;
						public static IDLE: com.facebook.imagepipeline.producers.JobScheduler.JobState;
						public static QUEUED: com.facebook.imagepipeline.producers.JobScheduler.JobState;
						public static RUNNING: com.facebook.imagepipeline.producers.JobScheduler.JobState;
						public static RUNNING_AND_PENDING: com.facebook.imagepipeline.producers.JobScheduler.JobState;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static valueOf(param0: string): com.facebook.imagepipeline.producers.JobScheduler.JobState;
						public static values(): native.Array<com.facebook.imagepipeline.producers.JobScheduler.JobState>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class LocalAssetFetchProducer extends com.facebook.imagepipeline.producers.LocalFetchProducer {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.LocalAssetFetchProducer>;
					public static PRODUCER_NAME: string;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getEncodedImage(param0: java.io.InputStream, param1: number): com.facebook.imagepipeline.image.EncodedImage;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory, param2: globalAndroid.content.res.AssetManager);
					public getEncodedImage(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.image.EncodedImage;
					public getProducerName(): string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class LocalContentUriFetchProducer extends com.facebook.imagepipeline.producers.LocalFetchProducer {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.LocalContentUriFetchProducer>;
					public static PRODUCER_NAME: string;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory);
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory, param2: globalAndroid.content.ContentResolver);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getEncodedImage(param0: java.io.InputStream, param1: number): com.facebook.imagepipeline.image.EncodedImage;
					public getEncodedImage(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.image.EncodedImage;
					public getProducerName(): string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class LocalContentUriThumbnailFetchProducer extends com.facebook.imagepipeline.producers.LocalFetchProducer implements com.facebook.imagepipeline.producers.ThumbnailProducer<com.facebook.imagepipeline.image.EncodedImage>  {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer>;
					public static PRODUCER_NAME: string;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory);
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory, param2: globalAndroid.content.ContentResolver);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getEncodedImage(param0: java.io.InputStream, param1: number): com.facebook.imagepipeline.image.EncodedImage;
					public getEncodedImage(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.image.EncodedImage;
					public getProducerName(): string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public canProvideImageForSize(param0: com.facebook.imagepipeline.common.ResizeOptions): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class LocalExifThumbnailProducer extends com.facebook.imagepipeline.producers.ThumbnailProducer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.LocalExifThumbnailProducer>;
					public static PRODUCER_NAME: string;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory, param2: globalAndroid.content.ContentResolver);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public canProvideImageForSize(param0: com.facebook.imagepipeline.common.ResizeOptions): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export abstract class LocalFetchProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.LocalFetchProducer>;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory);
					public getByteBufferBackedEncodedImage(param0: java.io.InputStream, param1: number): com.facebook.imagepipeline.image.EncodedImage;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getEncodedImage(param0: java.io.InputStream, param1: number): com.facebook.imagepipeline.image.EncodedImage;
					public getEncodedImage(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.image.EncodedImage;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getProducerName(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class LocalFileFetchProducer extends com.facebook.imagepipeline.producers.LocalFetchProducer {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.LocalFileFetchProducer>;
					public static PRODUCER_NAME: string;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getEncodedImage(param0: java.io.InputStream, param1: number): com.facebook.imagepipeline.image.EncodedImage;
					public getEncodedImage(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.image.EncodedImage;
					public getProducerName(): string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class LocalResourceFetchProducer extends com.facebook.imagepipeline.producers.LocalFetchProducer {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.LocalResourceFetchProducer>;
					public static PRODUCER_NAME: string;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getEncodedImage(param0: java.io.InputStream, param1: number): com.facebook.imagepipeline.image.EncodedImage;
					public getEncodedImage(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.image.EncodedImage;
					public getProducerName(): string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory, param2: globalAndroid.content.res.Resources);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class LocalVideoThumbnailProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer>;
					public static PRODUCER_NAME: string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: java.util.concurrent.Executor, param1: globalAndroid.content.ContentResolver);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export abstract class MultiplexProducer<K, T>  extends com.facebook.imagepipeline.producers.Producer<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.MultiplexProducer<any,any>>;
					public constructor(param0: com.facebook.imagepipeline.producers.Producer<any>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getKey(param0: com.facebook.imagepipeline.producers.ProducerContext): any;
					public cloneOrNull(param0: any): any;
				}
				export module MultiplexProducer {
					export class Multiplexer extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer>;
						public onCancelled(param0: com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer): void;
						public onNextResult(param0: com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer, param1: any, param2: number): void;
						public addNewConsumer(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): boolean;
						public constructor(param0: any);
						public onFailure(param0: com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer, param1: java.lang.Throwable): void;
						public onProgressUpdate(param0: com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer, param1: number): void;
					}
					export module Multiplexer {
						export class ForwardingConsumer extends com.facebook.imagepipeline.producers.BaseConsumer<any> {
							public static class: java.lang.Class<com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer>;
							public onCancellationImpl(): void;
							public onCancellation(): void;
							public onFailure(param0: java.lang.Throwable): void;
							public onNewResult(param0: any, param1: number): void;
							public onFailureImpl(param0: java.lang.Throwable): void;
							public onProgressUpdateImpl(param0: number): void;
							public onNewResultImpl(param0: any, param1: number): void;
							public onProgressUpdate(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class NetworkFetchProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.NetworkFetchProducer>;
					public static PRODUCER_NAME: string;
					public static INTERMEDIATE_RESULT_PRODUCER_EVENT: string;
					public constructor(param0: com.facebook.common.memory.PooledByteBufferFactory, param1: com.facebook.common.memory.ByteArrayPool, param2: com.facebook.imagepipeline.producers.NetworkFetcher<any>);
					public onResponse(param0: com.facebook.imagepipeline.producers.FetchState, param1: java.io.InputStream, param2: number): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public handleFinalResult(param0: com.facebook.common.memory.PooledByteBufferOutputStream, param1: com.facebook.imagepipeline.producers.FetchState): void;
					public static notifyConsumer(param0: com.facebook.common.memory.PooledByteBufferOutputStream, param1: number, param2: com.facebook.imagepipeline.common.BytesRange, param3: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public static calculateProgress(param0: number, param1: number): number;
					public maybeHandleIntermediateResult(param0: com.facebook.common.memory.PooledByteBufferOutputStream, param1: com.facebook.imagepipeline.producers.FetchState): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class NetworkFetcher<FETCH_STATE>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.NetworkFetcher<any>>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.producers.NetworkFetcher<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						createFetchState(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): FETCH_STATE;
						fetch(param0: FETCH_STATE, param1: com.facebook.imagepipeline.producers.NetworkFetcher.Callback): void;
						shouldPropagate(param0: FETCH_STATE): boolean;
						onFetchCompletion(param0: FETCH_STATE, param1: number): void;
						getExtraMap(param0: FETCH_STATE, param1: number): java.util.Map<string,string>;
					});
					public constructor();
					public createFetchState(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): FETCH_STATE;
					public getExtraMap(param0: FETCH_STATE, param1: number): java.util.Map<string,string>;
					public fetch(param0: FETCH_STATE, param1: com.facebook.imagepipeline.producers.NetworkFetcher.Callback): void;
					public shouldPropagate(param0: FETCH_STATE): boolean;
					public onFetchCompletion(param0: FETCH_STATE, param1: number): void;
				}
				export module NetworkFetcher {
					export class Callback extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.NetworkFetcher.Callback>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.producers.NetworkFetcher$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onResponse(param0: java.io.InputStream, param1: number): void;
							onFailure(param0: java.lang.Throwable): void;
							onCancellation(): void;
						});
						public constructor();
						public onFailure(param0: java.lang.Throwable): void;
						public onCancellation(): void;
						public onResponse(param0: java.io.InputStream, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class NullProducer<T>  extends com.facebook.imagepipeline.producers.Producer<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.NullProducer<any>>;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class PartialDiskCacheProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.PartialDiskCacheProducer>;
					public static PRODUCER_NAME: string;
					public static EXTRA_CACHED_VALUE_FOUND: string;
					public static ENCODED_IMAGE_SIZE: string;
					public constructor(param0: com.facebook.imagepipeline.cache.BufferedDiskCache, param1: com.facebook.imagepipeline.cache.CacheKeyFactory, param2: com.facebook.common.memory.PooledByteBufferFactory, param3: com.facebook.common.memory.ByteArrayPool, param4: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
				export module PartialDiskCacheProducer {
					export class PartialDiskCacheConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.PartialDiskCacheProducer.PartialDiskCacheConsumer>;
						public onNewResultImpl(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class PostprocessedBitmapMemoryCacheProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer>;
					public static PRODUCER_NAME: string;
					public constructor(param0: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param1: com.facebook.imagepipeline.cache.CacheKeyFactory, param2: com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getProducerName(): string;
				}
				export module PostprocessedBitmapMemoryCacheProducer {
					export class CachedPostprocessorConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>,com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer.CachedPostprocessorConsumer>;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<any>);
						public constructor();
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.cache.common.CacheKey, param2: boolean, param3: com.facebook.imagepipeline.cache.MemoryCache<com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.CloseableImage>, param4: boolean);
						public onNewResultImpl(param0: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class PostprocessorProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.PostprocessorProducer>;
					public static NAME: string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory, param2: java.util.concurrent.Executor);
				}
				export module PostprocessorProducer {
					export class PostprocessorConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>,com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.PostprocessorProducer.PostprocessorConsumer>;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<any>);
						public constructor();
						public onFailureImpl(param0: java.lang.Throwable): void;
						public onCancellationImpl(): void;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>>, param1: com.facebook.imagepipeline.producers.ProducerListener, param2: string, param3: com.facebook.imagepipeline.request.Postprocessor, param4: com.facebook.imagepipeline.producers.ProducerContext);
						public onNewResultImpl(param0: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>, param1: number): void;
					}
					export class RepeatedPostprocessorConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>,com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> implements com.facebook.imagepipeline.request.RepeatedPostprocessorRunner  {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer>;
						public onFailureImpl(param0: java.lang.Throwable): void;
						public onCancellationImpl(): void;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public update(): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
						public onNewResultImpl(param0: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>, param1: number): void;
					}
					export class SingleUsePostprocessorConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>,com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.PostprocessorProducer.SingleUsePostprocessorConsumer>;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
						public onNewResultImpl(param0: com.facebook.common.references.CloseableReference<com.facebook.imagepipeline.image.CloseableImage>, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class Producer<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.Producer<any>>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.producers.Producer<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						produceResults(param0: com.facebook.imagepipeline.producers.Consumer<T>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					});
					public constructor();
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<T>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class ProducerConstants extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.ProducerConstants>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class ProducerContext extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.ProducerContext>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.producers.ProducerContext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getImageRequest(): com.facebook.imagepipeline.request.ImageRequest;
						getId(): string;
						getListener(): com.facebook.imagepipeline.producers.ProducerListener;
						getCallerContext(): any;
						getLowestPermittedRequestLevel(): com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
						isPrefetch(): boolean;
						getPriority(): com.facebook.imagepipeline.common.Priority;
						isIntermediateResultExpected(): boolean;
						addCallbacks(param0: com.facebook.imagepipeline.producers.ProducerContextCallbacks): void;
					});
					public constructor();
					public getPriority(): com.facebook.imagepipeline.common.Priority;
					public getId(): string;
					public getListener(): com.facebook.imagepipeline.producers.ProducerListener;
					public addCallbacks(param0: com.facebook.imagepipeline.producers.ProducerContextCallbacks): void;
					public getImageRequest(): com.facebook.imagepipeline.request.ImageRequest;
					public isIntermediateResultExpected(): boolean;
					public getCallerContext(): any;
					public getLowestPermittedRequestLevel(): com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
					public isPrefetch(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class ProducerContextCallbacks extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.ProducerContextCallbacks>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.producers.ProducerContextCallbacks interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onCancellationRequested(): void;
						onIsPrefetchChanged(): void;
						onIsIntermediateResultExpectedChanged(): void;
						onPriorityChanged(): void;
					});
					public constructor();
					public onIsPrefetchChanged(): void;
					public onIsIntermediateResultExpectedChanged(): void;
					public onPriorityChanged(): void;
					public onCancellationRequested(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class ProducerListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.ProducerListener>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.producers.ProducerListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onProducerStart(param0: string, param1: string): void;
						onProducerEvent(param0: string, param1: string, param2: string): void;
						onProducerFinishWithSuccess(param0: string, param1: string, param2: java.util.Map<string,string>): void;
						onProducerFinishWithFailure(param0: string, param1: string, param2: java.lang.Throwable, param3: java.util.Map<string,string>): void;
						onProducerFinishWithCancellation(param0: string, param1: string, param2: java.util.Map<string,string>): void;
						onUltimateProducerReached(param0: string, param1: string, param2: boolean): void;
						requiresExtraMap(param0: string): boolean;
					});
					public constructor();
					public requiresExtraMap(param0: string): boolean;
					public onProducerStart(param0: string, param1: string): void;
					public onProducerFinishWithSuccess(param0: string, param1: string, param2: java.util.Map<string,string>): void;
					public onProducerFinishWithCancellation(param0: string, param1: string, param2: java.util.Map<string,string>): void;
					public onProducerFinishWithFailure(param0: string, param1: string, param2: java.lang.Throwable, param3: java.util.Map<string,string>): void;
					public onUltimateProducerReached(param0: string, param1: string, param2: boolean): void;
					public onProducerEvent(param0: string, param1: string, param2: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class QualifiedResourceFetchProducer extends com.facebook.imagepipeline.producers.LocalFetchProducer {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer>;
					public static PRODUCER_NAME: string;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory);
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory, param2: globalAndroid.content.ContentResolver);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public getEncodedImage(param0: java.io.InputStream, param1: number): com.facebook.imagepipeline.image.EncodedImage;
					public getEncodedImage(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.image.EncodedImage;
					public getProducerName(): string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class RemoveImageTransformMetaDataProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer>;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
				export module RemoveImageTransformMetaDataProducer {
					export class RemoveImageTransformMetaDataConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.imagepipeline.image.EncodedImage,com.facebook.common.references.CloseableReference<com.facebook.common.memory.PooledByteBuffer>> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer.RemoveImageTransformMetaDataConsumer>;
						public onNewResultImpl(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class ResizeAndRotateProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.ResizeAndRotateProducer>;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory, param2: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>, param3: boolean, param4: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
				export module ResizeAndRotateProducer {
					export class TransformingConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.ResizeAndRotateProducer.TransformingConsumer>;
						public onNewResultImpl(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class SettableProducerContext extends com.facebook.imagepipeline.producers.BaseProducerContext {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.SettableProducerContext>;
					public setIsPrefetch(param0: boolean): void;
					public getPriority(): com.facebook.imagepipeline.common.Priority;
					public constructor(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: com.facebook.imagepipeline.producers.ProducerListener, param3: any, param4: com.facebook.imagepipeline.request.ImageRequest.RequestLevel, param5: boolean, param6: boolean, param7: com.facebook.imagepipeline.common.Priority);
					public getId(): string;
					public addCallbacks(param0: com.facebook.imagepipeline.producers.ProducerContextCallbacks): void;
					public constructor(param0: com.facebook.imagepipeline.producers.ProducerContext);
					public setIsIntermediateResultExpected(param0: boolean): void;
					public getListener(): com.facebook.imagepipeline.producers.ProducerListener;
					public getImageRequest(): com.facebook.imagepipeline.request.ImageRequest;
					public isIntermediateResultExpected(): boolean;
					public getCallerContext(): any;
					public getLowestPermittedRequestLevel(): com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
					public setPriority(param0: com.facebook.imagepipeline.common.Priority): void;
					public isPrefetch(): boolean;
					public constructor(param0: com.facebook.imagepipeline.request.ImageRequest, param1: com.facebook.imagepipeline.producers.ProducerContext);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export abstract class StatefulProducerRunnable<T>  extends com.facebook.common.executors.StatefulRunnable<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.StatefulProducerRunnable<any>>;
					public onFailure(param0: java.lang.Exception): void;
					public onCancellation(): void;
					public constructor();
					public getExtraMapOnSuccess(param0: any): java.util.Map<string,string>;
					public run(): void;
					public getExtraMapOnFailure(param0: java.lang.Exception): java.util.Map<string,string>;
					public disposeResult(param0: any): void;
					public getExtraMapOnCancellation(): java.util.Map<string,string>;
					public onSuccess(param0: any): void;
					public constructor(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerListener, param2: string, param3: string);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class SwallowResultProducer<T>  extends com.facebook.imagepipeline.producers.Producer<java.lang.Void> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.SwallowResultProducer<any>>;
					public constructor(param0: com.facebook.imagepipeline.producers.Producer<any>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<java.lang.Void>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class ThreadHandoffProducer<T>  extends com.facebook.imagepipeline.producers.Producer<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.ThreadHandoffProducer<any>>;
					public static PRODUCER_NAME: string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: com.facebook.imagepipeline.producers.Producer<any>, param1: com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class ThreadHandoffProducerQueue extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue>;
					public addToQueueOrExecute(param0: java.lang.Runnable): void;
					public isQueueing(): boolean;
					public constructor(param0: java.util.concurrent.Executor);
					public remove(param0: java.lang.Runnable): void;
					public stopQueuing(): void;
					public startQueueing(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class ThrottlingProducer<T>  extends com.facebook.imagepipeline.producers.Producer<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.ThrottlingProducer<any>>;
					public static PRODUCER_NAME: string;
					public constructor(param0: number, param1: java.util.concurrent.Executor, param2: com.facebook.imagepipeline.producers.Producer<any>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
				export module ThrottlingProducer {
					export class ThrottlerConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<any,any> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.ThrottlingProducer.ThrottlerConsumer>;
						public onFailureImpl(param0: java.lang.Throwable): void;
						public onCancellationImpl(): void;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class ThumbnailBranchProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.ThumbnailBranchProducer>;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: native.Array<com.facebook.imagepipeline.producers.ThumbnailProducer<com.facebook.imagepipeline.image.EncodedImage>>);
				}
				export module ThumbnailBranchProducer {
					export class ThumbnailConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.ThumbnailBranchProducer.ThumbnailConsumer>;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<any>);
						public constructor();
						public onNewResultImpl(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
						public onFailureImpl(param0: java.lang.Throwable): void;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext, param2: number);
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class ThumbnailProducer<T>  extends com.facebook.imagepipeline.producers.Producer<any> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.ThumbnailProducer<any>>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.producers.ThumbnailProducer<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						canProvideImageForSize(param0: com.facebook.imagepipeline.common.ResizeOptions): boolean;
						produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					});
					public constructor();
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public canProvideImageForSize(param0: com.facebook.imagepipeline.common.ResizeOptions): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class ThumbnailSizeChecker extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.ThumbnailSizeChecker>;
					public static ACCEPTABLE_REQUESTED_TO_ACTUAL_SIZE_RATIO: number;
					public static isImageBigEnough(param0: com.facebook.imagepipeline.image.EncodedImage, param1: com.facebook.imagepipeline.common.ResizeOptions): boolean;
					public constructor();
					public static isImageBigEnough(param0: number, param1: number, param2: com.facebook.imagepipeline.common.ResizeOptions): boolean;
					public static getAcceptableSize(param0: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module producers {
				export class WebpTranscodeProducer extends com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage> {
					public static class: java.lang.Class<com.facebook.imagepipeline.producers.WebpTranscodeProducer>;
					public static PRODUCER_NAME: string;
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<any>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
					public constructor(param0: java.util.concurrent.Executor, param1: com.facebook.common.memory.PooledByteBufferFactory, param2: com.facebook.imagepipeline.producers.Producer<com.facebook.imagepipeline.image.EncodedImage>);
					public produceResults(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext): void;
				}
				export module WebpTranscodeProducer {
					export class WebpTranscodeConsumer extends com.facebook.imagepipeline.producers.DelegatingConsumer<com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage> {
						public static class: java.lang.Class<com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer>;
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<any>);
						public constructor();
						public constructor(param0: com.facebook.imagepipeline.producers.Consumer<com.facebook.imagepipeline.image.EncodedImage>, param1: com.facebook.imagepipeline.producers.ProducerContext);
						public onNewResultImpl(param0: com.facebook.imagepipeline.image.EncodedImage, param1: number): void;
						public onFailure(param0: java.lang.Throwable): void;
						public onNewResultImpl(param0: any, param1: number): void;
						public onProgressUpdate(param0: number): void;
						public onCancellation(): void;
						public onNewResult(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module request {
				export abstract class BasePostprocessor extends java.lang.Object implements com.facebook.imagepipeline.request.Postprocessor {
					public static class: java.lang.Class<com.facebook.imagepipeline.request.BasePostprocessor>;
					public static FALLBACK_BITMAP_CONFIGURATION: globalAndroid.graphics.Bitmap.Config;
					public process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor();
					public getName(): string;
					public process(param0: globalAndroid.graphics.Bitmap): void;
					public getPostprocessorCacheKey(): com.facebook.cache.common.CacheKey;
					public process(param0: globalAndroid.graphics.Bitmap, param1: globalAndroid.graphics.Bitmap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module request {
				export abstract class BaseRepeatedPostProcessor extends com.facebook.imagepipeline.request.BasePostprocessor implements com.facebook.imagepipeline.request.RepeatedPostprocessor {
					public static class: java.lang.Class<com.facebook.imagepipeline.request.BaseRepeatedPostProcessor>;
					public process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public constructor();
					public getName(): string;
					public update(): void;
					public setCallback(param0: com.facebook.imagepipeline.request.RepeatedPostprocessorRunner): void;
					public process(param0: globalAndroid.graphics.Bitmap): void;
					public getPostprocessorCacheKey(): com.facebook.cache.common.CacheKey;
					public process(param0: globalAndroid.graphics.Bitmap, param1: globalAndroid.graphics.Bitmap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module request {
				export class HasImageRequest extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.request.HasImageRequest>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.request.HasImageRequest interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getImageRequest(): com.facebook.imagepipeline.request.ImageRequest;
					});
					public constructor();
					public getImageRequest(): com.facebook.imagepipeline.request.ImageRequest;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module request {
				export class ImageRequest extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.request.ImageRequest>;
					public getPreferredHeight(): number;
					public getSourceUriType(): number;
					public isDiskCacheEnabled(): boolean;
					public getResizingAllowedOverride(): java.lang.Boolean;
					public getResizeOptions(): com.facebook.imagepipeline.common.ResizeOptions;
					public toString(): string;
					public constructor(param0: com.facebook.imagepipeline.request.ImageRequestBuilder);
					public getRequestListener(): com.facebook.imagepipeline.listener.RequestListener;
					public getCacheChoice(): com.facebook.imagepipeline.request.ImageRequest.CacheChoice;
					public getRotationOptions(): com.facebook.imagepipeline.common.RotationOptions;
					/** @deprecated */
					public getAutoRotateEnabled(): boolean;
					public hashCode(): number;
					public getLocalThumbnailPreviewsEnabled(): boolean;
					public getImageDecodeOptions(): com.facebook.imagepipeline.common.ImageDecodeOptions;
					public getSourceUri(): globalAndroid.net.Uri;
					public static fromFile(param0: java.io.File): com.facebook.imagepipeline.request.ImageRequest;
					public getPriority(): com.facebook.imagepipeline.common.Priority;
					public getProgressiveRenderingEnabled(): boolean;
					public getSourceFile(): java.io.File;
					public getBytesRange(): com.facebook.imagepipeline.common.BytesRange;
					public shouldDecodePrefetches(): java.lang.Boolean;
					public static fromUri(param0: globalAndroid.net.Uri): com.facebook.imagepipeline.request.ImageRequest;
					public equals(param0: any): boolean;
					public getPreferredWidth(): number;
					public getPostprocessor(): com.facebook.imagepipeline.request.Postprocessor;
					public static fromUri(param0: string): com.facebook.imagepipeline.request.ImageRequest;
					public isMemoryCacheEnabled(): boolean;
					public getLowestPermittedRequestLevel(): com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
				}
				export module ImageRequest {
					export class CacheChoice {
						public static class: java.lang.Class<com.facebook.imagepipeline.request.ImageRequest.CacheChoice>;
						public static SMALL: com.facebook.imagepipeline.request.ImageRequest.CacheChoice;
						public static DEFAULT: com.facebook.imagepipeline.request.ImageRequest.CacheChoice;
						public static values(): native.Array<com.facebook.imagepipeline.request.ImageRequest.CacheChoice>;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static valueOf(param0: string): com.facebook.imagepipeline.request.ImageRequest.CacheChoice;
					}
					export class RequestLevel {
						public static class: java.lang.Class<com.facebook.imagepipeline.request.ImageRequest.RequestLevel>;
						public static FULL_FETCH: com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
						public static DISK_CACHE: com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
						public static ENCODED_MEMORY_CACHE: com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
						public static BITMAP_MEMORY_CACHE: com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
						public static values(): native.Array<com.facebook.imagepipeline.request.ImageRequest.RequestLevel>;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static valueOf(param0: string): com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
						public getValue(): number;
						public static getMax(param0: com.facebook.imagepipeline.request.ImageRequest.RequestLevel, param1: com.facebook.imagepipeline.request.ImageRequest.RequestLevel): com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module request {
				export class ImageRequestBuilder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.request.ImageRequestBuilder>;
					public disableMemoryCache(): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public setResizeOptions(param0: com.facebook.imagepipeline.common.ResizeOptions): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public setSource(param0: globalAndroid.net.Uri): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public setRotationOptions(param0: com.facebook.imagepipeline.common.RotationOptions): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public setLocalThumbnailPreviewsEnabled(param0: boolean): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public setShouldDecodePrefetches(param0: java.lang.Boolean): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public isLocalThumbnailPreviewsEnabled(): boolean;
					public setProgressiveRenderingEnabled(param0: boolean): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public setRequestListener(param0: com.facebook.imagepipeline.listener.RequestListener): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public setBytesRange(param0: com.facebook.imagepipeline.common.BytesRange): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public isDiskCacheEnabled(): boolean;
					public setResizingAllowedOverride(param0: java.lang.Boolean): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public static fromRequest(param0: com.facebook.imagepipeline.request.ImageRequest): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public validate(): void;
					public isProgressiveRenderingEnabled(): boolean;
					public getResizingAllowedOverride(): java.lang.Boolean;
					public getResizeOptions(): com.facebook.imagepipeline.common.ResizeOptions;
					public setPostprocessor(param0: com.facebook.imagepipeline.request.Postprocessor): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public setRequestPriority(param0: com.facebook.imagepipeline.common.Priority): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public static newBuilderWithSource(param0: globalAndroid.net.Uri): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public getRequestListener(): com.facebook.imagepipeline.listener.RequestListener;
					public getCacheChoice(): com.facebook.imagepipeline.request.ImageRequest.CacheChoice;
					public build(): com.facebook.imagepipeline.request.ImageRequest;
					public getRotationOptions(): com.facebook.imagepipeline.common.RotationOptions;
					public disableDiskCache(): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public getImageDecodeOptions(): com.facebook.imagepipeline.common.ImageDecodeOptions;
					public getSourceUri(): globalAndroid.net.Uri;
					public getRequestPriority(): com.facebook.imagepipeline.common.Priority;
					public setCacheChoice(param0: com.facebook.imagepipeline.request.ImageRequest.CacheChoice): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public static newBuilderWithResourceId(param0: number): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public getBytesRange(): com.facebook.imagepipeline.common.BytesRange;
					public shouldDecodePrefetches(): java.lang.Boolean;
					public getPostprocessor(): com.facebook.imagepipeline.request.Postprocessor;
					public isMemoryCacheEnabled(): boolean;
					public getLowestPermittedRequestLevel(): com.facebook.imagepipeline.request.ImageRequest.RequestLevel;
					/** @deprecated */
					public setAutoRotateEnabled(param0: boolean): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public setImageDecodeOptions(param0: com.facebook.imagepipeline.common.ImageDecodeOptions): com.facebook.imagepipeline.request.ImageRequestBuilder;
					public setLowestPermittedRequestLevel(param0: com.facebook.imagepipeline.request.ImageRequest.RequestLevel): com.facebook.imagepipeline.request.ImageRequestBuilder;
				}
				export module ImageRequestBuilder {
					export class BuilderException extends java.lang.RuntimeException {
						public static class: java.lang.Class<com.facebook.imagepipeline.request.ImageRequestBuilder.BuilderException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module request {
				export class Postprocessor extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.request.Postprocessor>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.request.Postprocessor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
						getName(): string;
						getPostprocessorCacheKey(): com.facebook.cache.common.CacheKey;
					});
					public constructor();
					public process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public getName(): string;
					public getPostprocessorCacheKey(): com.facebook.cache.common.CacheKey;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module request {
				export class RepeatedPostprocessor extends java.lang.Object implements com.facebook.imagepipeline.request.Postprocessor {
					public static class: java.lang.Class<com.facebook.imagepipeline.request.RepeatedPostprocessor>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.request.RepeatedPostprocessor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setCallback(param0: com.facebook.imagepipeline.request.RepeatedPostprocessorRunner): void;
						process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
						getName(): string;
						getPostprocessorCacheKey(): com.facebook.cache.common.CacheKey;
					});
					public constructor();
					public process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
					public getName(): string;
					public setCallback(param0: com.facebook.imagepipeline.request.RepeatedPostprocessorRunner): void;
					public getPostprocessorCacheKey(): com.facebook.cache.common.CacheKey;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module request {
				export class RepeatedPostprocessorRunner extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.request.RepeatedPostprocessorRunner>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.request.RepeatedPostprocessorRunner interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						update(): void;
					});
					public constructor();
					public update(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module stetho {
				export abstract class BaseFrescoStethoPlugin extends java.lang.Object implements com.facebook.stetho.dumpapp.DumperPlugin {
					public static class: java.lang.Class<com.facebook.imagepipeline.stetho.BaseFrescoStethoPlugin>;
					public mInitialized: boolean;
					public constructor(param0: com.facebook.imagepipeline.core.ImagePipelineFactory);
					public dump(param0: com.facebook.stetho.dumpapp.DumperContext): void;
					public constructor();
					public initialize(param0: com.facebook.imagepipeline.core.ImagePipelineFactory): void;
					public getName(): string;
					public ensureInitialized(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module stetho {
				export class FrescoStethoPlugin extends com.facebook.imagepipeline.stetho.BaseFrescoStethoPlugin {
					public static class: java.lang.Class<com.facebook.imagepipeline.stetho.FrescoStethoPlugin>;
					public constructor(param0: com.facebook.imagepipeline.core.ImagePipelineFactory);
					public dump(param0: com.facebook.stetho.dumpapp.DumperContext): void;
					public constructor();
					public getName(): string;
					public ensureInitialized(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module systrace {
				export class DefaultFrescoSystrace extends java.lang.Object implements com.facebook.imagepipeline.systrace.FrescoSystrace.Systrace {
					public static class: java.lang.Class<com.facebook.imagepipeline.systrace.DefaultFrescoSystrace>;
					public endSection(): void;
					public isTracing(): boolean;
					public constructor();
					public beginSectionWithArgs(param0: string): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
					public beginSection(param0: string): void;
				}
				export module DefaultFrescoSystrace {
					export class DefaultArgsBuilder extends java.lang.Object implements com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder {
						public static class: java.lang.Class<com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder>;
						public arg(param0: string, param1: any): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
						public flush(): void;
						public constructor(param0: string);
						public arg(param0: string, param1: number): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module systrace {
				export class FrescoSystrace extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.systrace.FrescoSystrace>;
					public static NO_OP_ARGS_BUILDER: com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
					public static beginSectionWithArgs(param0: string): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
					public static endSection(): void;
					public static beginSection(param0: string): void;
					public static provide(param0: com.facebook.imagepipeline.systrace.FrescoSystrace.Systrace): void;
					public static isTracing(): boolean;
				}
				export module FrescoSystrace {
					export class ArgsBuilder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							flush(): void;
							arg(param0: string, param1: any): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
							arg(param0: string, param1: number): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
							arg(param0: string, param1: number): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
							arg(param0: string, param1: number): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
						});
						public constructor();
						public arg(param0: string, param1: any): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
						public flush(): void;
						public arg(param0: string, param1: number): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
					}
					export class NoOpArgsBuilder extends java.lang.Object implements com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder {
						public static class: java.lang.Class<com.facebook.imagepipeline.systrace.FrescoSystrace.NoOpArgsBuilder>;
						public arg(param0: string, param1: any): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
						public flush(): void;
						public arg(param0: string, param1: number): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
					}
					export class Systrace extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.imagepipeline.systrace.FrescoSystrace.Systrace>;
						/**
						 * Constructs a new instance of the com.facebook.imagepipeline.systrace.FrescoSystrace$Systrace interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							beginSection(param0: string): void;
							beginSectionWithArgs(param0: string): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
							endSection(): void;
							isTracing(): boolean;
						});
						public constructor();
						public endSection(): void;
						public beginSectionWithArgs(param0: string): com.facebook.imagepipeline.systrace.FrescoSystrace.ArgsBuilder;
						public isTracing(): boolean;
						public beginSection(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module transcoder {
				export class DownsampleUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.transcoder.DownsampleUtil>;
					public static DEFAULT_SAMPLE_SIZE: number;
					public static determineDownsampleRatio(param0: com.facebook.imagepipeline.common.RotationOptions, param1: com.facebook.imagepipeline.common.ResizeOptions, param2: com.facebook.imagepipeline.image.EncodedImage): number;
					public static ratioToSampleSizeJPEG(param0: number): number;
					public static roundToPowerOfTwo(param0: number): number;
					public static ratioToSampleSize(param0: number): number;
					public static determineSampleSize(param0: com.facebook.imagepipeline.common.RotationOptions, param1: com.facebook.imagepipeline.common.ResizeOptions, param2: com.facebook.imagepipeline.image.EncodedImage, param3: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module transcoder {
				export class ImageTranscodeResult extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.transcoder.ImageTranscodeResult>;
					public toString(): string;
					public getTranscodeStatus(): number;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module transcoder {
				export class ImageTranscoder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.transcoder.ImageTranscoder>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.transcoder.ImageTranscoder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						transcode(param0: com.facebook.imagepipeline.image.EncodedImage, param1: java.io.OutputStream, param2: com.facebook.imagepipeline.common.RotationOptions, param3: com.facebook.imagepipeline.common.ResizeOptions, param4: com.facebook.imageformat.ImageFormat, param5: java.lang.Integer): com.facebook.imagepipeline.transcoder.ImageTranscodeResult;
						canResize(param0: com.facebook.imagepipeline.image.EncodedImage, param1: com.facebook.imagepipeline.common.RotationOptions, param2: com.facebook.imagepipeline.common.ResizeOptions): boolean;
						canTranscode(param0: com.facebook.imageformat.ImageFormat): boolean;
						getIdentifier(): string;
					});
					public constructor();
					public canResize(param0: com.facebook.imagepipeline.image.EncodedImage, param1: com.facebook.imagepipeline.common.RotationOptions, param2: com.facebook.imagepipeline.common.ResizeOptions): boolean;
					public transcode(param0: com.facebook.imagepipeline.image.EncodedImage, param1: java.io.OutputStream, param2: com.facebook.imagepipeline.common.RotationOptions, param3: com.facebook.imagepipeline.common.ResizeOptions, param4: com.facebook.imageformat.ImageFormat, param5: java.lang.Integer): com.facebook.imagepipeline.transcoder.ImageTranscodeResult;
					public getIdentifier(): string;
					public canTranscode(param0: com.facebook.imageformat.ImageFormat): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module transcoder {
				export class ImageTranscoderFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.transcoder.ImageTranscoderFactory>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.transcoder.ImageTranscoderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						createImageTranscoder(param0: com.facebook.imageformat.ImageFormat, param1: boolean): com.facebook.imagepipeline.transcoder.ImageTranscoder;
					});
					public constructor();
					public createImageTranscoder(param0: com.facebook.imageformat.ImageFormat, param1: boolean): com.facebook.imagepipeline.transcoder.ImageTranscoder;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module transcoder {
				export class JpegTranscoderUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.transcoder.JpegTranscoderUtils>;
					public static MIN_QUALITY: number;
					public static MAX_QUALITY: number;
					public static MIN_SCALE_NUMERATOR: number;
					public static MAX_SCALE_NUMERATOR: number;
					public static SCALE_DENOMINATOR: number;
					public static INVERTED_EXIF_ORIENTATIONS: com.facebook.common.internal.ImmutableList<java.lang.Integer>;
					public static DEFAULT_JPEG_QUALITY: number;
					public static getSoftwareNumerator(param0: com.facebook.imagepipeline.common.RotationOptions, param1: com.facebook.imagepipeline.common.ResizeOptions, param2: com.facebook.imagepipeline.image.EncodedImage, param3: boolean): number;
					public static getRotationAngle(param0: com.facebook.imagepipeline.common.RotationOptions, param1: com.facebook.imagepipeline.image.EncodedImage): number;
					public static getForceRotatedInvertedExifOrientation(param0: com.facebook.imagepipeline.common.RotationOptions, param1: com.facebook.imagepipeline.image.EncodedImage): number;
					public constructor();
					public static determineResizeRatio(param0: com.facebook.imagepipeline.common.ResizeOptions, param1: number, param2: number): number;
					public static roundNumerator(param0: number, param1: number): number;
					public static calculateDownsampleNumerator(param0: number): number;
					public static isRotationAngleAllowed(param0: number): boolean;
					public static isExifOrientationAllowed(param0: number): boolean;
					public static getTransformationMatrix(param0: com.facebook.imagepipeline.image.EncodedImage, param1: com.facebook.imagepipeline.common.RotationOptions): globalAndroid.graphics.Matrix;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module transcoder {
				export class MultiImageTranscoderFactory extends java.lang.Object implements com.facebook.imagepipeline.transcoder.ImageTranscoderFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory>;
					public createImageTranscoder(param0: com.facebook.imageformat.ImageFormat, param1: boolean): com.facebook.imagepipeline.transcoder.ImageTranscoder;
					public constructor(param0: number, param1: boolean, param2: com.facebook.imagepipeline.transcoder.ImageTranscoderFactory, param3: java.lang.Integer);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module transcoder {
				export class SimpleImageTranscoder extends java.lang.Object implements com.facebook.imagepipeline.transcoder.ImageTranscoder {
					public static class: java.lang.Class<com.facebook.imagepipeline.transcoder.SimpleImageTranscoder>;
					public constructor(param0: boolean, param1: number);
					public canResize(param0: com.facebook.imagepipeline.image.EncodedImage, param1: com.facebook.imagepipeline.common.RotationOptions, param2: com.facebook.imagepipeline.common.ResizeOptions): boolean;
					public transcode(param0: com.facebook.imagepipeline.image.EncodedImage, param1: java.io.OutputStream, param2: com.facebook.imagepipeline.common.RotationOptions, param3: com.facebook.imagepipeline.common.ResizeOptions, param4: com.facebook.imageformat.ImageFormat, param5: java.lang.Integer): com.facebook.imagepipeline.transcoder.ImageTranscodeResult;
					public getIdentifier(): string;
					public canTranscode(param0: com.facebook.imageformat.ImageFormat): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module transcoder {
				export class SimpleImageTranscoderFactory extends java.lang.Object implements com.facebook.imagepipeline.transcoder.ImageTranscoderFactory {
					public static class: java.lang.Class<com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory>;
					public createImageTranscoder(param0: com.facebook.imageformat.ImageFormat, param1: boolean): com.facebook.imagepipeline.transcoder.ImageTranscoder;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module transcoder {
				export class TranscodeStatus extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.imagepipeline.transcoder.TranscodeStatus>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.transcoder.TranscodeStatus interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public static TRANSCODING_ERROR: number;
					public static TRANSCODING_NO_RESIZING: number;
					public static TRANSCODING_SUCCESS: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipeline {
			export module transformation {
				export class BitmapTransformation extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imagepipeline.transformation.BitmapTransformation>;
					/**
					 * Constructs a new instance of the com.facebook.imagepipeline.transformation.BitmapTransformation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						transform(param0: globalAndroid.graphics.Bitmap): void;
						modifiesTransparency(): boolean;
					});
					public constructor();
					public modifiesTransparency(): boolean;
					public transform(param0: globalAndroid.graphics.Bitmap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imagepipelinebase {
			export class BuildConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imagepipelinebase.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageutils {
			export class BitmapUtil extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imageutils.BitmapUtil>;
				public static ALPHA_8_BYTES_PER_PIXEL: number;
				public static ARGB_4444_BYTES_PER_PIXEL: number;
				public static ARGB_8888_BYTES_PER_PIXEL: number;
				public static RGB_565_BYTES_PER_PIXEL: number;
				public static RGBA_F16_BYTES_PER_PIXEL: number;
				public static MAX_BITMAP_SIZE: number;
				public static decodeDimensions(param0: java.io.InputStream): globalAndroid.util.Pair<java.lang.Integer,java.lang.Integer>;
				public static decodeDimensionsAndColorSpace(param0: java.io.InputStream): com.facebook.imageutils.ImageMetaData;
				public static getPixelSizeForBitmapConfig(param0: globalAndroid.graphics.Bitmap.Config): number;
				public static getSizeInBytes(param0: globalAndroid.graphics.Bitmap): number;
				public static decodeDimensions(param0: globalAndroid.net.Uri): globalAndroid.util.Pair<java.lang.Integer,java.lang.Integer>;
				public constructor();
				public static decodeDimensions(param0: native.Array<number>): globalAndroid.util.Pair<java.lang.Integer,java.lang.Integer>;
				public static getSizeInByteForBitmap(param0: number, param1: number, param2: globalAndroid.graphics.Bitmap.Config): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageutils {
			export class HeifExifUtil extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imageutils.HeifExifUtil>;
				public static TAG: string;
				public static getOrientation(param0: java.io.InputStream): number;
				public constructor();
			}
			export module HeifExifUtil {
				export class HeifExifUtilAndroidN extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imageutils.HeifExifUtil.HeifExifUtilAndroidN>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageutils {
			export class ImageMetaData extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imageutils.ImageMetaData>;
				public constructor(param0: number, param1: number, param2: globalAndroid.graphics.ColorSpace);
				public getColorSpace(): globalAndroid.graphics.ColorSpace;
				public getDimensions(): globalAndroid.util.Pair<java.lang.Integer,java.lang.Integer>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageutils {
			export class JfifUtil extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imageutils.JfifUtil>;
				public static MARKER_FIRST_BYTE: number;
				public static MARKER_ESCAPE_BYTE: number;
				public static MARKER_SOI: number;
				public static MARKER_TEM: number;
				public static MARKER_EOI: number;
				public static MARKER_SOS: number;
				public static MARKER_APP1: number;
				public static MARKER_SOFn: number;
				public static MARKER_RST0: number;
				public static MARKER_RST7: number;
				public static APP1_EXIF_MAGIC: number;
				public static getAutoRotateAngleFromOrientation(param0: number): number;
				public static getOrientation(param0: java.io.InputStream): number;
				public static getOrientation(param0: native.Array<number>): number;
				public static moveToMarker(param0: java.io.InputStream, param1: number): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageutils {
			export class StreamProcessor extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imageutils.StreamProcessor>;
				public static readPackedInt(param0: java.io.InputStream, param1: number, param2: boolean): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageutils {
			export class TiffUtil extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imageutils.TiffUtil>;
				public static TIFF_BYTE_ORDER_BIG_END: number;
				public static TIFF_BYTE_ORDER_LITTLE_END: number;
				public static TIFF_TAG_ORIENTATION: number;
				public static TIFF_TYPE_SHORT: number;
				public static getAutoRotateAngleFromOrientation(param0: number): number;
				public static readOrientationFromTIFF(param0: java.io.InputStream, param1: number): number;
			}
			export module TiffUtil {
				export class TiffHeader extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.imageutils.TiffUtil.TiffHeader>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module imageutils {
			export class WebpUtil extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.imageutils.WebpUtil>;
				public static getSize(param0: java.io.InputStream): globalAndroid.util.Pair<java.lang.Integer,java.lang.Integer>;
				public static get2BytesAsInt(param0: java.io.InputStream): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class Assertions extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.infer.annotation.Assertions>;
					public static getAssumingNotNull(param0: java.util.List<any>, param1: number): any;
					public static assertUnreachable(param0: java.lang.Exception): java.lang.AssertionError;
					public static getAssumingNotNull(param0: java.util.Map<any, any>, param1: any): any;
					public static assumeNotNull(param0: any, param1: string): any;
					public static assertCondition(param0: boolean): void;
					public static assumeNotNull(param0: any): any;
					public static getAssertingNotNull(param0: java.util.List<any>, param1: number): any;
					public static assumeCondition(param0: boolean, param1: string): void;
					public static assertCondition(param0: boolean, param1: string): void;
					public static assertNotNull(param0: any, param1: string): any;
					public constructor();
					public static assertUnreachable(param0: string): java.lang.AssertionError;
					public static assertNotNull(param0: any): any;
					public static getAssertingNotNull(param0: java.util.Map<any, any>, param1: any): any;
					public static assumeCondition(param0: boolean): void;
					public static assertUnreachable(): java.lang.AssertionError;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class Expensive extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.Expensive>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.Expensive interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class FalseOnNull extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.FalseOnNull>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.FalseOnNull interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class Functional extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.Functional>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.Functional interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class IgnoreAllocations extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.IgnoreAllocations>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.IgnoreAllocations interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class Initializer extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.Initializer>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.Initializer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class IntegritySink extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.IntegritySink>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.IntegritySink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class IntegritySource extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.IntegritySource>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.IntegritySource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class Mutable extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.Mutable>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.Mutable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class NoAllocation extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.NoAllocation>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.NoAllocation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class OkToExtend extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.OkToExtend>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.OkToExtend interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class PerformanceCritical extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.PerformanceCritical>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.PerformanceCritical interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class Present extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.Present>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.Present interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class PrivacySink extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.PrivacySink>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.PrivacySink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class PrivacySource extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.PrivacySource>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.PrivacySource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class PropagatesNullable extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.PropagatesNullable>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.PropagatesNullable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class ReturnsOwnership extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.ReturnsOwnership>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.ReturnsOwnership interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class SuppressFieldNotInitialized extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.SuppressFieldNotInitialized>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.SuppressFieldNotInitialized interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class SuppressFieldNotNullable extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.SuppressFieldNotNullable>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.SuppressFieldNotNullable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class SuppressLint extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.SuppressLint>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.SuppressLint interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						value(): native.Array<string>;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public value(): native.Array<string>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class SuppressNullFieldAccess extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.SuppressNullFieldAccess>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.SuppressNullFieldAccess interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class SuppressNullMethodCall extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.SuppressNullMethodCall>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.SuppressNullMethodCall interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class SuppressParameterNotNullable extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.SuppressParameterNotNullable>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.SuppressParameterNotNullable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class SuppressReturnOverAnnotated extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.SuppressReturnOverAnnotated>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.SuppressReturnOverAnnotated interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class SuppressViewNullability extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.SuppressViewNullability>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.SuppressViewNullability interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class SynchronizedCollection extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.SynchronizedCollection>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.SynchronizedCollection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class ThreadConfined extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.ThreadConfined>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.ThreadConfined interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						value(): string;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public static UI: string;
					public static ANY: string;
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public value(): string;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class ThreadSafe extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.ThreadSafe>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.ThreadSafe interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						enableChecks(): boolean;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public enableChecks(): boolean;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class TrueOnNull extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.TrueOnNull>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.TrueOnNull interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module infer {
			export module annotation {
				export class Verify extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.infer.annotation.Verify>;
					/**
					 * Constructs a new instance of the com.facebook.infer.annotation.Verify interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module jni {
			export class CppException extends java.lang.RuntimeException {
				public static class: java.lang.Class<com.facebook.jni.CppException>;
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: java.lang.Throwable);
				public constructor(param0: string);
				public constructor();
				public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module jni {
			export class CppSystemErrorException extends com.facebook.jni.CppException {
				public static class: java.lang.Class<com.facebook.jni.CppSystemErrorException>;
				public constructor(param0: string, param1: number);
				public constructor(param0: string, param1: java.lang.Throwable);
				public getErrorCode(): number;
				public constructor(param0: java.lang.Throwable);
				public constructor(param0: string);
				public constructor();
				public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module jni {
			export class DestructorThread extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.jni.DestructorThread>;
				public constructor();
			}
			export module DestructorThread {
				export abstract class Destructor extends java.lang.ref.PhantomReference<any> {
					public static class: java.lang.Class<com.facebook.jni.DestructorThread.Destructor>;
				}
				export class DestructorList extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.jni.DestructorThread.DestructorList>;
					public constructor();
					public enqueue(param0: com.facebook.jni.DestructorThread.Destructor): void;
				}
				export class DestructorStack extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.jni.DestructorThread.DestructorStack>;
					public transferAllToList(): void;
					public push(param0: com.facebook.jni.DestructorThread.Destructor): void;
				}
				export class Terminus extends com.facebook.jni.DestructorThread.Destructor {
					public static class: java.lang.Class<com.facebook.jni.DestructorThread.Terminus>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module jni {
			export abstract class HybridClassBase extends com.facebook.jni.HybridData {
				public static class: java.lang.Class<com.facebook.jni.HybridClassBase>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module jni {
			export class HybridData extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.jni.HybridData>;
				public resetNative(): void;
				public isValid(): boolean;
				public constructor();
			}
			export module HybridData {
				export class Destructor extends com.facebook.jni.DestructorThread.Destructor {
					public static class: java.lang.Class<com.facebook.jni.HybridData.Destructor>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module jni {
			export class IteratorHelper extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.jni.IteratorHelper>;
				public constructor(param0: java.lang.Iterable<any>);
				public constructor(param0: java.util.Iterator<any>);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module jni {
			export class MapIteratorHelper extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.jni.MapIteratorHelper>;
				public constructor(param0: java.util.Map<any, any>);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module jni {
			export class NativeRunnable extends java.lang.Object implements java.lang.Runnable {
				public static class: java.lang.Class<com.facebook.jni.NativeRunnable>;
				public run(): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module jni {
			export class ThreadScopeSupport extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.jni.ThreadScopeSupport>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module jni {
			export class UnknownCppException extends com.facebook.jni.CppException {
				public static class: java.lang.Class<com.facebook.jni.UnknownCppException>;
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: java.lang.Throwable);
				public constructor(param0: string);
				public constructor();
				public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module jni {
			export module annotations {
				export class DoNotStrip extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.jni.annotations.DoNotStrip>;
					/**
					 * Constructs a new instance of the com.facebook.jni.annotations.DoNotStrip interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module libfb {
			export class BuildConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.libfb.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class AccessibilityRole extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.AccessibilityRole>;
				public static NONE: string;
				public static BUTTON: string;
				public static CHECK_BOX: string;
				public static DROP_DOWN_LIST: string;
				public static EDIT_TEXT: string;
				public static GRID: string;
				public static IMAGE: string;
				public static IMAGE_BUTTON: string;
				public static LIST: string;
				public static PAGER: string;
				public static RADIO_BUTTON: string;
				public static SEEK_CONTROL: string;
				public static SWITCH: string;
				public static TAB_BAR: string;
				public static TOGGLE_BUTTON: string;
				public static VIEW_GROUP: string;
				public static WEB_VIEW: string;
				public static CHECKED_TEXT_VIEW: string;
				public static PROGRESS_BAR: string;
				public static ACTION_BAR_TAB: string;
				public static DRAWER_LAYOUT: string;
				public static SLIDING_DRAWER: string;
				public static ICON_MENU: string;
				public static TOAST: string;
				public static DATE_PICKER_DIALOG: string;
				public static TIME_PICKER_DIALOG: string;
				public static DATE_PICKER: string;
				public static TIME_PICKER: string;
				public static NUMBER_PICKER: string;
				public static SCROLL_VIEW: string;
				public static HORIZONTAL_SCROLL_VIEW: string;
				public static KEYBOARD_KEY: string;
			}
			export module AccessibilityRole {
				export class AccessibilityRoleType extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.AccessibilityRole.AccessibilityRoleType>;
					/**
					 * Constructs a new instance of the com.facebook.litho.AccessibilityRole$AccessibilityRoleType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class AccessibilityUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.AccessibilityUtils>;
				public static isAccessibilityEnabled(param0: globalAndroid.content.Context): boolean;
				public static isAccessibilityEnabled(param0: globalAndroid.view.accessibility.AccessibilityManager): boolean;
				public static invalidateCachedIsAccessibilityEnabled(): void;
				public static enabledServiceCanFocusAndRetrieveWindowContent(param0: globalAndroid.view.accessibility.AccessibilityManager): boolean;
				public static isRunningApplicableAccessibilityService(param0: globalAndroid.view.accessibility.AccessibilityManager): boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class AnimatableItem extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.AnimatableItem>;
				/**
				 * Constructs a new instance of the com.facebook.litho.AnimatableItem interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getBounds(): globalAndroid.graphics.Rect;
					getScale(): number;
					getAlpha(): number;
					getRotation(): number;
					getRotationX(): number;
					getRotationY(): number;
					isScaleSet(): boolean;
					isAlphaSet(): boolean;
					isRotationSet(): boolean;
					isRotationXSet(): boolean;
					isRotationYSet(): boolean;
				});
				public constructor();
				public getRotationY(): number;
				public getScale(): number;
				public isRotationYSet(): boolean;
				public getBounds(): globalAndroid.graphics.Rect;
				public getRotation(): number;
				public isRotationXSet(): boolean;
				public isScaleSet(): boolean;
				public getAlpha(): number;
				public getRotationX(): number;
				public isAlphaSet(): boolean;
				public isRotationSet(): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class AnimationsDebug extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.AnimationsDebug>;
				public static ENABLED: boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ArrayBatchAllocator extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ArrayBatchAllocator>;
				public static newArrayOfSize2(): native.Array<number>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class AttachDetachHandler extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.AttachDetachHandler>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export abstract class BaseComponentsLogger extends java.lang.Object implements com.facebook.litho.ComponentsLogger {
				public static class: java.lang.Class<com.facebook.litho.BaseComponentsLogger>;
				public getExtraAnnotations(param0: com.facebook.litho.TreeProps): java.util.Map<string,string>;
				public getKeyCollisionStackTraceKeywords(): java.util.Set<string>;
				public cancelPerfEvent(param0: com.facebook.litho.PerfEvent): void;
				public getKeyCollisionStackTraceBlacklist(): java.util.Set<string>;
				public newPerformanceEvent(param0: com.facebook.litho.ComponentContext, param1: number): com.facebook.litho.PerfEvent;
				public emitMessage(param0: com.facebook.litho.ComponentsLogger.LogLevel, param1: string): void;
				public isTracing(param0: com.facebook.litho.PerfEvent): boolean;
				public constructor();
				public logPerfEvent(param0: com.facebook.litho.PerfEvent): void;
				public emitMessage(param0: com.facebook.litho.ComponentsLogger.LogLevel, param1: string, param2: number): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Border extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.Border>;
				public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Border.Builder;
			}
			export module Border {
				export class Builder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.Border.Builder>;
					public widthDip(param0: com.facebook.yoga.YogaEdge, param1: number): com.facebook.litho.Border.Builder;
					public radiusAttr(param0: number, param1: number, param2: number): com.facebook.litho.Border.Builder;
					public radiusRes(param0: number): com.facebook.litho.Border.Builder;
					public widthAttr(param0: com.facebook.yoga.YogaEdge, param1: number, param2: number): com.facebook.litho.Border.Builder;
					public radiusDip(param0: number): com.facebook.litho.Border.Builder;
					public colorRes(param0: com.facebook.yoga.YogaEdge, param1: number): com.facebook.litho.Border.Builder;
					public radiusAttr(param0: number, param1: number): com.facebook.litho.Border.Builder;
					public radiusPx(param0: number, param1: number): com.facebook.litho.Border.Builder;
					/** @deprecated */
					public cornerEffect(param0: number): com.facebook.litho.Border.Builder;
					public color(param0: com.facebook.yoga.YogaEdge, param1: number): com.facebook.litho.Border.Builder;
					public dashEffect(param0: native.Array<number>, param1: number): com.facebook.litho.Border.Builder;
					public pathDashEffect(param0: globalAndroid.graphics.Path, param1: number, param2: number, param3: globalAndroid.graphics.PathDashPathEffect.Style): com.facebook.litho.Border.Builder;
					public radiusDip(param0: number, param1: number): com.facebook.litho.Border.Builder;
					public discreteEffect(param0: number, param1: number): com.facebook.litho.Border.Builder;
					public radiusRes(param0: number, param1: number): com.facebook.litho.Border.Builder;
					public radiusPx(param0: number): com.facebook.litho.Border.Builder;
					public radiusAttr(param0: number): com.facebook.litho.Border.Builder;
					public widthRes(param0: com.facebook.yoga.YogaEdge, param1: number): com.facebook.litho.Border.Builder;
					public widthAttr(param0: com.facebook.yoga.YogaEdge, param1: number): com.facebook.litho.Border.Builder;
					public build(): com.facebook.litho.Border;
					public widthPx(param0: com.facebook.yoga.YogaEdge, param1: number): com.facebook.litho.Border.Builder;
				}
				export class Corner extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.Border.Corner>;
					/**
					 * Constructs a new instance of the com.facebook.litho.Border$Corner interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public static BOTTOM_LEFT: number;
					public static TOP_LEFT: number;
					public static BOTTOM_RIGHT: number;
					public static TOP_RIGHT: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class BoundaryWorkingRange extends java.lang.Object implements com.facebook.litho.WorkingRange {
				public static class: java.lang.Class<com.facebook.litho.BoundaryWorkingRange>;
				public shouldEnterRange(param0: number, param1: number, param2: number, param3: number, param4: number): boolean;
				public constructor(param0: number);
				public shouldExitRange(param0: number, param1: number, param2: number, param3: number, param4: number): boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class BoundsHelper extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.BoundsHelper>;
				public static applyBoundsToView(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: boolean): void;
				public static applySizeToDrawableForAnimation(param0: globalAndroid.graphics.drawable.Drawable, param1: number, param2: number): void;
				public static applyXYToDrawableForAnimation(param0: globalAndroid.graphics.drawable.Drawable, param1: number, param2: number): void;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class BuildConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public static IS_INTERNAL_BUILD: boolean;
				public static USE_INCREMENTAL_MOUNT_HELPER: boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ClickEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ClickEvent>;
				public view: globalAndroid.view.View;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Column extends com.facebook.litho.Component {
				public static class: java.lang.Class<com.facebook.litho.Column>;
				public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.Column.Builder;
				public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number, param3: string): com.facebook.litho.Column.Builder;
				public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
				public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
				public isEquivalentTo(param0: any): boolean;
				/** @deprecated */
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Column.Builder;
				public canResolve(): boolean;
				public static create(param0: com.facebook.litho.ComponentContext, param1: string): com.facebook.litho.Column.Builder;
				public resolve(param0: com.facebook.litho.ComponentContext): com.facebook.litho.ComponentLayout;
				public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
				public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
			}
			export module Column {
				export class Builder extends com.facebook.litho.Component.ContainerBuilder<any> {
					public static class: java.lang.Class<com.facebook.litho.Column.Builder>;
					public justifyContent(param0: com.facebook.yoga.YogaJustify): com.facebook.litho.Column.Builder;
					public child(param0: com.facebook.litho.Component): com.facebook.litho.Column.Builder;
					public child(param0: com.facebook.litho.Component): any;
					public build(): com.facebook.litho.Component;
					public build(): com.facebook.litho.Column;
					public justifyContent(param0: com.facebook.yoga.YogaJustify): any;
					public child(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.Column.Builder;
					public reverse(param0: boolean): com.facebook.litho.Column.Builder;
					public getThis(): any;
					public alignContent(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.Column.Builder;
					public wrap(param0: com.facebook.yoga.YogaWrap): any;
					public constructor();
					public alignItems(param0: com.facebook.yoga.YogaAlign): any;
					public reverse(param0: boolean): any;
					public getThis(): com.facebook.litho.Column.Builder;
					public alignContent(param0: com.facebook.yoga.YogaAlign): any;
					public wrap(param0: com.facebook.yoga.YogaWrap): com.facebook.litho.Column.Builder;
					public alignItems(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.Column.Builder;
					public child(param0: com.facebook.litho.Component.Builder<any>): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class CommonProps extends java.lang.Object implements com.facebook.litho.CommonPropsCopyable, com.facebook.litho.LayoutProps {
				public static class: java.lang.Class<com.facebook.litho.CommonProps>;
				/**
				 * Constructs a new instance of the com.facebook.litho.CommonProps interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>;
					getLongClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>;
					getFocusChangeHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>;
					getTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>;
					getInterceptTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>;
					getFocusable(): boolean;
					getTransitionKey(): string;
					setStyle(param0: number, param1: number): void;
					background(param0: com.facebook.litho.drawable.ComparableDrawable): void;
					testKey(param0: string): void;
					wrapInView(): void;
					importantForAccessibility(param0: number): void;
					duplicateParentState(param0: boolean): void;
					border(param0: com.facebook.litho.Border): void;
					stateListAnimator(param0: globalAndroid.animation.StateListAnimator): void;
					stateListAnimatorRes(param0: number): void;
					touchExpansionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					foreground(param0: com.facebook.litho.drawable.ComparableDrawable): void;
					clickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>): void;
					getBackground(): com.facebook.litho.drawable.ComparableDrawable;
					longClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>): void;
					focusChangeHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>): void;
					touchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>): void;
					interceptTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>): void;
					focusable(param0: boolean): void;
					clickable(param0: boolean): void;
					enabled(param0: boolean): void;
					selected(param0: boolean): void;
					visibleHeightRatio(param0: number): void;
					visibleWidthRatio(param0: number): void;
					visibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>): void;
					focusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>): void;
					unfocusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>): void;
					fullImpressionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>): void;
					invisibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>): void;
					visibilityChangedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>): void;
					contentDescription(param0: string): void;
					viewTag(param0: any): void;
					viewTags(param0: globalAndroid.util.SparseArray<any>): void;
					shadowElevationPx(param0: number): void;
					outlineProvider(param0: globalAndroid.view.ViewOutlineProvider): void;
					clipToOutline(param0: boolean): void;
					clipChildren(param0: boolean): void;
					accessibilityRole(param0: string): void;
					accessibilityRoleDescription(param0: string): void;
					dispatchPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>): void;
					onInitializeAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>): void;
					onInitializeAccessibilityNodeInfoHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>): void;
					onPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>): void;
					onRequestSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>): void;
					performAccessibilityActionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>): void;
					sendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>): void;
					sendAccessibilityEventUncheckedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>): void;
					scale(param0: number): void;
					alpha(param0: number): void;
					rotation(param0: number): void;
					rotationX(param0: number): void;
					rotationY(param0: number): void;
					transitionKey(param0: string): void;
					transitionKeyType(param0: com.facebook.litho.Transition.TransitionKeyType): void;
					getTransitionKeyType(): com.facebook.litho.Transition.TransitionKeyType;
					getNullableNodeInfo(): com.facebook.litho.NodeInfo;
					getOrCreateNodeInfo(): com.facebook.litho.NodeInfo;
					copyInto(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.InternalNode): void;
					widthPx(param0: number): void;
					widthPercent(param0: number): void;
					minWidthPx(param0: number): void;
					maxWidthPx(param0: number): void;
					minWidthPercent(param0: number): void;
					maxWidthPercent(param0: number): void;
					heightPx(param0: number): void;
					heightPercent(param0: number): void;
					minHeightPx(param0: number): void;
					maxHeightPx(param0: number): void;
					minHeightPercent(param0: number): void;
					maxHeightPercent(param0: number): void;
					layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
					alignSelf(param0: com.facebook.yoga.YogaAlign): void;
					flex(param0: number): void;
					flexGrow(param0: number): void;
					flexShrink(param0: number): void;
					flexBasisPx(param0: number): void;
					flexBasisPercent(param0: number): void;
					aspectRatio(param0: number): void;
					positionType(param0: com.facebook.yoga.YogaPositionType): void;
					positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginAuto(param0: com.facebook.yoga.YogaEdge): void;
					isReferenceBaseline(param0: boolean): void;
					useHeightAsBaseline(param0: boolean): void;
				});
				public constructor();
				public focusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>): void;
				public unfocusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>): void;
				public positionType(param0: com.facebook.yoga.YogaPositionType): void;
				public interceptTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>): void;
				public visibilityChangedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>): void;
				public sendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>): void;
				public getTransitionKeyType(): com.facebook.litho.Transition.TransitionKeyType;
				public focusChangeHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>): void;
				public copyInto(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.InternalNode): void;
				public paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getFocusChangeHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>;
				public selected(param0: boolean): void;
				public visibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>): void;
				public getBackground(): com.facebook.litho.drawable.ComparableDrawable;
				public enabled(param0: boolean): void;
				public outlineProvider(param0: globalAndroid.view.ViewOutlineProvider): void;
				public contentDescription(param0: string): void;
				public shadowElevationPx(param0: number): void;
				public onPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>): void;
				public getTransitionKey(): string;
				public scale(param0: number): void;
				public layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
				public focusable(param0: boolean): void;
				public getTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>;
				public marginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public isReferenceBaseline(param0: boolean): void;
				public clickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>): void;
				public onRequestSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>): void;
				public onInitializeAccessibilityNodeInfoHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>): void;
				public importantForAccessibility(param0: number): void;
				public performAccessibilityActionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>): void;
				public dispatchPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>): void;
				public maxHeightPercent(param0: number): void;
				public positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public maxWidthPx(param0: number): void;
				public setStyle(param0: number, param1: number): void;
				public alpha(param0: number): void;
				public maxWidthPercent(param0: number): void;
				public getInterceptTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>;
				public clickable(param0: boolean): void;
				public clipToOutline(param0: boolean): void;
				public getClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>;
				public useHeightAsBaseline(param0: boolean): void;
				public minWidthPercent(param0: number): void;
				public viewTags(param0: globalAndroid.util.SparseArray<any>): void;
				public longClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>): void;
				public transitionKeyType(param0: com.facebook.litho.Transition.TransitionKeyType): void;
				public minHeightPx(param0: number): void;
				public invisibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>): void;
				public alignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public getFocusable(): boolean;
				public rotationY(param0: number): void;
				public getLongClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>;
				public border(param0: com.facebook.litho.Border): void;
				public foreground(param0: com.facebook.litho.drawable.ComparableDrawable): void;
				public heightPx(param0: number): void;
				public viewTag(param0: any): void;
				public clipChildren(param0: boolean): void;
				public visibleHeightRatio(param0: number): void;
				public flexGrow(param0: number): void;
				public minHeightPercent(param0: number): void;
				public widthPx(param0: number): void;
				public flex(param0: number): void;
				public paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public transitionKey(param0: string): void;
				public accessibilityRoleDescription(param0: string): void;
				public flexShrink(param0: number): void;
				public flexBasisPercent(param0: number): void;
				public stateListAnimatorRes(param0: number): void;
				public maxHeightPx(param0: number): void;
				public rotation(param0: number): void;
				public flexBasisPx(param0: number): void;
				public rotationX(param0: number): void;
				public testKey(param0: string): void;
				public touchExpansionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public background(param0: com.facebook.litho.drawable.ComparableDrawable): void;
				public touchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>): void;
				public getNullableNodeInfo(): com.facebook.litho.NodeInfo;
				public marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public minWidthPx(param0: number): void;
				public marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public widthPercent(param0: number): void;
				public visibleWidthRatio(param0: number): void;
				public accessibilityRole(param0: string): void;
				public positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public stateListAnimator(param0: globalAndroid.animation.StateListAnimator): void;
				public onInitializeAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>): void;
				public sendAccessibilityEventUncheckedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>): void;
				public aspectRatio(param0: number): void;
				public duplicateParentState(param0: boolean): void;
				public fullImpressionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>): void;
				public getOrCreateNodeInfo(): com.facebook.litho.NodeInfo;
				public heightPercent(param0: number): void;
				public wrapInView(): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class CommonPropsCopyable extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.CommonPropsCopyable>;
				/**
				 * Constructs a new instance of the com.facebook.litho.CommonPropsCopyable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					copyInto(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.InternalNode): void;
				});
				public constructor();
				public copyInto(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.InternalNode): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class CommonPropsHolder extends java.lang.Object implements com.facebook.litho.CommonProps {
				public static class: java.lang.Class<com.facebook.litho.CommonPropsHolder>;
				public focusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>): void;
				public unfocusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>): void;
				public positionType(param0: com.facebook.yoga.YogaPositionType): void;
				public interceptTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>): void;
				public visibilityChangedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>): void;
				public sendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>): void;
				public getTransitionKeyType(): com.facebook.litho.Transition.TransitionKeyType;
				public focusChangeHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>): void;
				public paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public copyInto(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.InternalNode): void;
				public getFocusChangeHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>;
				public selected(param0: boolean): void;
				public visibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>): void;
				public getBackground(): com.facebook.litho.drawable.ComparableDrawable;
				public enabled(param0: boolean): void;
				public outlineProvider(param0: globalAndroid.view.ViewOutlineProvider): void;
				public contentDescription(param0: string): void;
				public shadowElevationPx(param0: number): void;
				public onPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>): void;
				public getTransitionKey(): string;
				public layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
				public scale(param0: number): void;
				public focusable(param0: boolean): void;
				public marginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public getTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>;
				public isReferenceBaseline(param0: boolean): void;
				public clickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>): void;
				public onRequestSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>): void;
				public onInitializeAccessibilityNodeInfoHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>): void;
				public importantForAccessibility(param0: number): void;
				public performAccessibilityActionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>): void;
				public maxHeightPercent(param0: number): void;
				public dispatchPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>): void;
				public positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public maxWidthPx(param0: number): void;
				public setStyle(param0: number, param1: number): void;
				public alpha(param0: number): void;
				public maxWidthPercent(param0: number): void;
				public getInterceptTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>;
				public clickable(param0: boolean): void;
				public clipToOutline(param0: boolean): void;
				public useHeightAsBaseline(param0: boolean): void;
				public getClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>;
				public minWidthPercent(param0: number): void;
				public viewTags(param0: globalAndroid.util.SparseArray<any>): void;
				public longClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>): void;
				public transitionKeyType(param0: com.facebook.litho.Transition.TransitionKeyType): void;
				public minHeightPx(param0: number): void;
				public alignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public invisibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>): void;
				public getFocusable(): boolean;
				public rotationY(param0: number): void;
				public border(param0: com.facebook.litho.Border): void;
				public foreground(param0: com.facebook.litho.drawable.ComparableDrawable): void;
				public getLongClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>;
				public heightPx(param0: number): void;
				public viewTag(param0: any): void;
				public clipChildren(param0: boolean): void;
				public flexGrow(param0: number): void;
				public visibleHeightRatio(param0: number): void;
				public minHeightPercent(param0: number): void;
				public widthPx(param0: number): void;
				public flex(param0: number): void;
				public paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public transitionKey(param0: string): void;
				public flexShrink(param0: number): void;
				public accessibilityRoleDescription(param0: string): void;
				public flexBasisPercent(param0: number): void;
				public stateListAnimatorRes(param0: number): void;
				public maxHeightPx(param0: number): void;
				public rotation(param0: number): void;
				public flexBasisPx(param0: number): void;
				public rotationX(param0: number): void;
				public testKey(param0: string): void;
				public touchExpansionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public background(param0: com.facebook.litho.drawable.ComparableDrawable): void;
				public touchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>): void;
				public marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getNullableNodeInfo(): com.facebook.litho.NodeInfo;
				public minWidthPx(param0: number): void;
				public marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public widthPercent(param0: number): void;
				public visibleWidthRatio(param0: number): void;
				public accessibilityRole(param0: string): void;
				public positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public stateListAnimator(param0: globalAndroid.animation.StateListAnimator): void;
				public onInitializeAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>): void;
				public sendAccessibilityEventUncheckedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>): void;
				public aspectRatio(param0: number): void;
				public duplicateParentState(param0: boolean): void;
				public fullImpressionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>): void;
				public getOrCreateNodeInfo(): com.facebook.litho.NodeInfo;
				public heightPercent(param0: number): void;
				public wrapInView(): void;
			}
			export module CommonPropsHolder {
				export class DefaultLayoutProps extends java.lang.Object implements com.facebook.litho.CopyableLayoutProps {
					public static class: java.lang.Class<com.facebook.litho.CommonPropsHolder.DefaultLayoutProps>;
					public maxWidthPx(param0: number): void;
					public alignSelf(param0: com.facebook.yoga.YogaAlign): void;
					public maxWidthPercent(param0: number): void;
					public flexBasisPx(param0: number): void;
					public marginAuto(param0: com.facebook.yoga.YogaEdge): void;
					public maxHeightPercent(param0: number): void;
					public marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					public minWidthPx(param0: number): void;
					public heightPx(param0: number): void;
					public flexGrow(param0: number): void;
					public aspectRatio(param0: number): void;
					public useHeightAsBaseline(param0: boolean): void;
					public flexShrink(param0: number): void;
					public paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					public flex(param0: number): void;
					public widthPx(param0: number): void;
					public flexBasisPercent(param0: number): void;
					public isReferenceBaseline(param0: boolean): void;
					public copyInto(param0: com.facebook.litho.LayoutProps): void;
					public maxHeightPx(param0: number): void;
					public copyInto(param0: any): void;
					public widthPercent(param0: number): void;
					public positionType(param0: com.facebook.yoga.YogaPositionType): void;
					public positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					public positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					public minHeightPx(param0: number): void;
					public minWidthPercent(param0: number): void;
					public minHeightPercent(param0: number): void;
					public heightPercent(param0: number): void;
					public paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					public marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					public layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
				}
				export class OtherProps extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.CommonPropsHolder.OtherProps>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class CommonUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.CommonUtils>;
				public static addOrCreateList(param0: java.util.List<any>, param1: any): java.util.List<any>;
				public equals(param0: any): boolean;
				public static hash(param0: native.Array<any>): number;
				public static equals(param0: any, param1: any): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export abstract class Component extends com.facebook.litho.ComponentLifecycle {
				public static class: java.lang.Class<com.facebook.litho.Component>;
				public mThreadIdToLastMeasuredLayout: java.util.concurrent.ConcurrentHashMap<java.lang.Long,com.facebook.litho.InternalNode>;
				/** @deprecated */
				public static willRender(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): boolean;
				public getSimpleNameDelegate(): com.facebook.litho.Component;
				public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
				public getDynamicProps(): native.Array<com.facebook.litho.DynamicValue<any>>;
				public measure(param0: com.facebook.litho.ComponentContext, param1: number, param2: number, param3: com.facebook.litho.Size): void;
				public isEquivalentTo(param0: any): boolean;
				public bindDynamicProp(param0: number, param1: any, param2: any): void;
				public constructor(param0: string);
				public getSimpleName(): string;
				public constructor(param0: string, param1: any);
				public getStateContainer(): com.facebook.litho.StateContainer;
				public makeShallowCopy(): com.facebook.litho.Component;
				public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
				public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
				public getId(): number;
				public getScopedContext(): com.facebook.litho.ComponentContext;
				public hasBackgroundSet(): boolean;
				public static retrieveValue(param0: com.facebook.litho.DynamicValue<any>): any;
				/** @deprecated */
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public setScopedContext(param0: com.facebook.litho.ComponentContext): void;
				public canResolve(): boolean;
				public hasClickHandlerSet(): boolean;
				public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
				public copyInterStageImpl(param0: com.facebook.litho.Component): void;
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public clearCachedLayout(): void;
				public constructor(param0: any);
				public getCommonProps(): com.facebook.litho.CommonProps;
				public updateInternalChildState(param0: com.facebook.litho.ComponentContext): void;
				public static registerWorkingRange(param0: string, param1: com.facebook.litho.WorkingRange, param2: com.facebook.litho.Component): void;
			}
			export module Component {
				export abstract class Builder<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.Component.Builder<any>>;
					public mResourceResolver: com.facebook.litho.ResourceResolver;
					public marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public touchExpansionAttr(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public marginAttr(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public flexShrink(param0: number): T;
					public marginAuto(param0: com.facebook.yoga.YogaEdge): T;
					public maxWidthRes(param0: number): T;
					public maxWidthAttr(param0: number): T;
					public heightRes(param0: number): T;
					public build(): com.facebook.litho.Component;
					public flexBasisAttr(param0: number, param1: number): T;
					public alpha(param0: number): T;
					public positionDip(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public key(param0: string): T;
					public positionRes(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public maxHeightRes(param0: number): T;
					public scale(param0: number): T;
					public constructor();
					public paddingAttr(param0: com.facebook.yoga.YogaEdge, param1: number, param2: number): T;
					public aspectRatio(param0: number): T;
					public minHeightPercent(param0: number): T;
					public wrapInView(): T;
					public widthAttr(param0: number): T;
					public heightPx(param0: number): T;
					public rotationY(param0: number): T;
					public hasClickHandlerSet(): boolean;
					public widthRes(param0: number): T;
					public onInitializeAccessibilityNodeInfoHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>): T;
					public useHeightAsBaseline(param0: boolean): T;
					public shadowElevationRes(param0: number): T;
					public scaleY(param0: com.facebook.litho.DynamicValue<java.lang.Float>): T;
					public rotation(param0: number): T;
					public widthAttr(param0: number, param1: number): T;
					public minWidthAttr(param0: number, param1: number): T;
					public minHeightDip(param0: number): T;
					public touchExpansionPx(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public dispatchPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>): T;
					public minWidthPx(param0: number): T;
					public heightAttr(param0: number, param1: number): T;
					public touchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>): T;
					public transitionKey(param0: string): T;
					public translationX(param0: com.facebook.litho.DynamicValue<java.lang.Float>): T;
					public selected(param0: boolean): T;
					public longClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>): T;
					public accessibilityRoleDescription(param0: number, param1: native.Array<any>): T;
					public clickable(param0: boolean): T;
					public visibleWidthRatio(param0: number): T;
					public foregroundRes(param0: number): T;
					public backgroundColor(param0: number): T;
					public shadowElevationAttr(param0: number, param1: number): T;
					public widthPercent(param0: number): T;
					public stateListAnimatorRes(param0: number): T;
					public contentDescription(param0: string): T;
					public marginAttr(param0: com.facebook.yoga.YogaEdge, param1: number, param2: number): T;
					public outlineProvider(param0: globalAndroid.view.ViewOutlineProvider): T;
					public unfocusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>): T;
					public clickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>): T;
					public translationY(param0: com.facebook.litho.DynamicValue<java.lang.Float>): T;
					public importantForAccessibility(param0: number): T;
					public touchExpansionRes(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public backgroundAttr(param0: number): T;
					public shadowElevationAttr(param0: number): T;
					/** @deprecated */
					public foreground(param0: globalAndroid.graphics.drawable.Drawable): T;
					public viewTags(param0: globalAndroid.util.SparseArray<any>): T;
					public init(param0: com.facebook.litho.ComponentContext, param1: number, param2: number, param3: com.facebook.litho.Component): void;
					public onRequestSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>): T;
					public focusChangeHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>): T;
					public flexBasisAttr(param0: number): T;
					public isReferenceBaseline(param0: boolean): T;
					public foregroundColor(param0: number): T;
					public clipChildren(param0: boolean): T;
					public backgroundAttr(param0: number, param1: number): T;
					public border(param0: com.facebook.litho.Border): T;
					public backgroundRes(param0: number): T;
					public flexBasisPercent(param0: number): T;
					public foreground(param0: com.facebook.litho.drawable.ComparableDrawable): T;
					public marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public heightAttr(param0: number): T;
					public focusable(param0: boolean): T;
					public maxHeightPercent(param0: number): T;
					public duplicateParentState(param0: boolean): T;
					public static checkArgs(param0: number, param1: java.util.BitSet, param2: native.Array<string>): void;
					public minWidthDip(param0: number): T;
					public onPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>): T;
					public paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public visibilityChangedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>): T;
					public flexBasisDip(param0: number): T;
					public foregroundAttr(param0: number, param1: number): T;
					public contentDescription(param0: number): T;
					public hasBackgroundSet(): boolean;
					public invisibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>): T;
					public fullImpressionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>): T;
					public getThis(): T;
					public contentDescription(param0: number, param1: native.Array<any>): T;
					public marginRes(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public onInitializeAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>): T;
					public sendAccessibilityEventUncheckedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>): T;
					public scaleX(param0: com.facebook.litho.DynamicValue<java.lang.Float>): T;
					public enabled(param0: boolean): T;
					public foregroundAttr(param0: number): T;
					public maxWidthPercent(param0: number): T;
					public stateListAnimator(param0: globalAndroid.animation.StateListAnimator): T;
					public accessibilityRoleDescription(param0: number): T;
					public touchExpansionAttr(param0: com.facebook.yoga.YogaEdge, param1: number, param2: number): T;
					public visibleHeightRatio(param0: number): T;
					public maxWidthAttr(param0: number, param1: number): T;
					public sendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>): T;
					public minHeightRes(param0: number): T;
					public flexBasisRes(param0: number): T;
					public alpha(param0: com.facebook.litho.DynamicValue<java.lang.Float>): T;
					public accessibilityRoleDescription(param0: string): T;
					public alignSelf(param0: com.facebook.yoga.YogaAlign): T;
					public getContext(): com.facebook.litho.ComponentContext;
					public touchExpansionDip(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public performAccessibilityActionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>): T;
					public paddingAttr(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public positionAttr(param0: com.facebook.yoga.YogaEdge, param1: number, param2: number): T;
					public shadowElevationDip(param0: number): T;
					public positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public positionAttr(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public heightPercent(param0: number): T;
					public visibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>): T;
					public background(param0: com.facebook.litho.drawable.ComparableDrawable): T;
					public minHeightAttr(param0: number): T;
					public flexBasisPx(param0: number): T;
					public maxHeightPx(param0: number): T;
					public maxHeightAttr(param0: number): T;
					public focusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>): T;
					public transitionKeyType(param0: com.facebook.litho.Transition.TransitionKeyType): T;
					public maxHeightAttr(param0: number, param1: number): T;
					public widthPx(param0: number): T;
					public heightDip(param0: number): T;
					public layoutDirection(param0: com.facebook.yoga.YogaDirection): T;
					public widthDip(param0: number): T;
					public maxWidthDip(param0: number): T;
					public flexGrow(param0: number): T;
					public paddingDip(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public shadowElevationPx(param0: number): T;
					public viewTag(param0: any): T;
					public clipToOutline(param0: boolean): T;
					public positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public minWidthPercent(param0: number): T;
					public positionType(param0: com.facebook.yoga.YogaPositionType): T;
					public flex(param0: number): T;
					public testKey(param0: string): T;
					public accessibilityRole(param0: string): T;
					/** @deprecated */
					public background(param0: globalAndroid.graphics.drawable.Drawable): T;
					public minWidthRes(param0: number): T;
					public maxHeightDip(param0: number): T;
					public minHeightAttr(param0: number, param1: number): T;
					public paddingRes(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public maxWidthPx(param0: number): T;
					public marginDip(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): T;
					public minWidthAttr(param0: number): T;
					public rotationX(param0: number): T;
					public interceptTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>): T;
					public minHeightPx(param0: number): T;
					public backgroundColor(param0: com.facebook.litho.DynamicValue<java.lang.Integer>): T;
				}
				export abstract class ContainerBuilder<T>  extends com.facebook.litho.Component.Builder<any> {
					public static class: java.lang.Class<com.facebook.litho.Component.ContainerBuilder<any>>;
					public wrap(param0: com.facebook.yoga.YogaWrap): any;
					public constructor();
					public alignItems(param0: com.facebook.yoga.YogaAlign): any;
					public reverse(param0: boolean): any;
					public alignContent(param0: com.facebook.yoga.YogaAlign): any;
					public child(param0: com.facebook.litho.Component.Builder<any>): any;
					public child(param0: com.facebook.litho.Component): any;
					public justifyContent(param0: com.facebook.yoga.YogaJustify): any;
				}
				export class DefaultErrorEventDispatcher extends java.lang.Object implements com.facebook.litho.HasEventDispatcher {
					public static class: java.lang.Class<com.facebook.litho.Component.DefaultErrorEventDispatcher>;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentAccessibilityDelegate extends androidx.customview.widget.ExploreByTouchHelper {
				public static class: java.lang.Class<com.facebook.litho.ComponentAccessibilityDelegate>;
				public sendAccessibilityEventUnchecked(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
				public onPerformActionForVirtualView(param0: number, param1: number, param2: globalAndroid.os.Bundle): boolean;
				public performAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
				public onPopulateEventForVirtualView(param0: number, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public getAccessibilityNodeProvider(param0: globalAndroid.view.View): androidx.core.view.accessibility.AccessibilityNodeProviderCompat;
				public onPopulateAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
				public getVisibleVirtualViews(param0: java.util.List<java.lang.Integer>): void;
				public onPopulateNodeForVirtualView(param0: number, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
				public onRequestSendAccessibilityEvent(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.View, param2: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
				public sendAccessibilityEvent(param0: globalAndroid.view.View, param1: number): void;
				public getVirtualViewAt(param0: number, param1: number): number;
			}
			export module ComponentAccessibilityDelegate {
				export class SuperDelegate extends androidx.core.view.AccessibilityDelegateCompat {
					public static class: java.lang.Class<com.facebook.litho.ComponentAccessibilityDelegate.SuperDelegate>;
					public onPopulateAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onRequestSendAccessibilityEvent(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.View, param2: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
					public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
					public sendAccessibilityEventUnchecked(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
					public sendAccessibilityEvent(param0: globalAndroid.view.View, param1: number): void;
					public performAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentClickListener extends java.lang.Object implements globalAndroid.view.View.OnClickListener {
				public static class: java.lang.Class<com.facebook.litho.ComponentClickListener>;
				public onClick(param0: globalAndroid.view.View): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentContext extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentContext>;
				public static NULL_LAYOUT: com.facebook.litho.InternalNode;
				public constructor(param0: com.facebook.litho.ComponentContext);
				public getApplicationContext(): globalAndroid.content.Context;
				public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.facebook.litho.ComponentsLogger);
				public getString(param0: number): string;
				public getYogaNodeFactory(): com.facebook.litho.ComponentContext.YogaNodeFactory;
				public constructor(param0: globalAndroid.content.Context, param1: com.facebook.litho.StateHandler);
				public updateStateSync(param0: com.facebook.litho.StateContainer.StateUpdate, param1: string): void;
				public getLayoutStateFuture(): com.facebook.litho.ComponentTree.LayoutStateFuture;
				public getTreePropsCopy(): com.facebook.litho.TreeProps;
				public getMainLooper(): globalAndroid.os.Looper;
				public applyLazyStateUpdatesForContainer(param0: com.facebook.litho.StateContainer): void;
				public getTreeProp(param0: java.lang.Class<any>): any;
				public isReconciliationEnabled(): boolean;
				public getLogger(): com.facebook.litho.ComponentsLogger;
				public getString(param0: number, param1: native.Array<any>): string;
				public constructor(param0: globalAndroid.content.Context, param1: com.facebook.litho.ComponentContext.YogaNodeFactory);
				public constructor(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.StateHandler, param2: com.facebook.litho.AttachDetachHandler, param3: com.facebook.litho.KeyHandler, param4: com.facebook.litho.TreeProps, param5: com.facebook.litho.ComponentTree.LayoutStateFuture);
				public updateStateAsync(param0: com.facebook.litho.StateContainer.StateUpdate, param1: string): void;
				public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.facebook.litho.ComponentsLogger, param3: com.facebook.litho.StateHandler, param4: com.facebook.litho.KeyHandler, param5: com.facebook.litho.TreeProps);
				public constructor(param0: globalAndroid.content.Context);
				public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.facebook.litho.ComponentsLogger, param3: com.facebook.litho.TreeProps);
				public getText(param0: number): string;
				public setTreeProps(param0: com.facebook.litho.TreeProps): void;
				public getCachedValue(param0: any): any;
				public getLogTag(): string;
				public getResources(): globalAndroid.content.res.Resources;
				public getColor(param0: number): number;
				public constructor(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.StateHandler, param2: com.facebook.litho.KeyHandler, param3: com.facebook.litho.TreeProps, param4: com.facebook.litho.ComponentTree.LayoutStateFuture);
				public getAndroidContext(): globalAndroid.content.Context;
				public putCachedValue(param0: any, param1: any): void;
				public obtainStyledAttributes(param0: native.Array<number>, param1: number): globalAndroid.content.res.TypedArray;
				public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.facebook.litho.ComponentsLogger, param3: com.facebook.litho.StateHandler, param4: com.facebook.litho.KeyHandler, param5: com.facebook.litho.TreeProps, param6: com.facebook.litho.ComponentContext.YogaNodeFactory);
				public updateStateLazy(param0: com.facebook.litho.StateContainer.StateUpdate): void;
				public updateStateWithTransition(param0: com.facebook.litho.StateContainer.StateUpdate, param1: string): void;
				public newEventHandler(param0: number, param1: native.Array<any>): com.facebook.litho.EventHandler<any>;
				public static isIncrementalMountDisabled(param0: com.facebook.litho.ComponentContext): boolean;
				public getResourceCache(): com.facebook.litho.ResourceCache;
				public getTreeProps(): com.facebook.litho.TreeProps;
				public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.facebook.litho.ComponentsLogger, param3: com.facebook.litho.StateHandler, param4: com.facebook.litho.KeyHandler, param5: com.facebook.litho.TreeProps, param6: com.facebook.litho.ComponentContext.YogaNodeFactory, param7: boolean);
				public getComponentScope(): com.facebook.litho.Component;
				public static withComponentScope(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): com.facebook.litho.ComponentContext;
				public isNestedTreeResolutionExperimentEnabled(): boolean;
			}
			export module ComponentContext {
				export class YogaNodeFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentContext.YogaNodeFactory>;
					/**
					 * Constructs a new instance of the com.facebook.litho.ComponentContext$YogaNodeFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(): com.facebook.yoga.YogaNode;
					});
					public constructor();
					public create(): com.facebook.yoga.YogaNode;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentFocusChangeListener extends java.lang.Object implements globalAndroid.view.View.OnFocusChangeListener {
				public static class: java.lang.Class<com.facebook.litho.ComponentFocusChangeListener>;
				public onFocusChange(param0: globalAndroid.view.View, param1: boolean): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentHost extends globalAndroid.view.ViewGroup {
				public static class: java.lang.Class<com.facebook.litho.ComponentHost>;
				/** @deprecated */
				public removeDetachedView(param0: globalAndroid.view.View, param1: boolean): void;
				public childDrawableStateChanged(param0: globalAndroid.view.View): void;
				public getContentDescription(): string;
				/** @deprecated */
				public removeAllViewsInLayout(): void;
				public clearChildFocus(param0: globalAndroid.view.View): void;
				/** @deprecated */
				public removeViewsInLayout(param0: number, param1: number): void;
				/** @deprecated */
				public addView(param0: globalAndroid.view.View): void;
				public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
				/** @deprecated */
				public removeViewInLayout(param0: globalAndroid.view.View): void;
				public isLayoutRequested(): boolean;
				public sendAccessibilityEvent(param0: number): void;
				public shouldRequestLayout(): boolean;
				public removeViewAt(param0: number): void;
				public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
				public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				/** @deprecated */
				public invalidate(param0: number, param1: number, param2: number, param3: number): void;
				public getTextDirection(): number;
				public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
				public refreshAccessibilityDelegatesIfNeeded(param0: boolean): void;
				public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
				public performAccessibilityAction(param0: number, param1: globalAndroid.os.Bundle): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public getParentForAccessibility(): globalAndroid.view.ViewParent;
				public dispatchDraw(param0: globalAndroid.graphics.Canvas): void;
				public getContentDescriptions(): java.util.List<string>;
				public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
				/** @deprecated */
				public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
				public setVisibility(param0: number): void;
				public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
				public isTextDirectionResolved(): boolean;
				public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public invalidate(): void;
				public addViewInLayout(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams, param3: boolean): boolean;
				public setContentDescription(param0: string): void;
				public drawableStateChanged(): void;
				public isLayoutDirectionResolved(): boolean;
				public constructor(param0: com.facebook.litho.ComponentContext);
				public setAccessibilityDelegate(param0: any): void;
				public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
				public jumpDrawablesToCurrentState(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
				public getContentNames(): java.util.List<string>;
				public setViewTags(param0: globalAndroid.util.SparseArray<any>): void;
				public removeAllViewsInLayout(): void;
				public dispatchHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public invalidate(param0: number, param1: number, param2: number, param3: number): void;
				public focusSearch(param0: number): globalAndroid.view.View;
				public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
				public removeViews(param0: number, param1: number): void;
				public getComponentTouchListener(): com.facebook.litho.ComponentTouchListener;
				/** @deprecated */
				public requestFitSystemWindows(): void;
				public bringChildToFront(param0: globalAndroid.view.View): void;
				public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public removeDetachedView(param0: globalAndroid.view.View, param1: boolean): void;
				public setClipChildren(param0: boolean): void;
				public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public invalidate(param0: globalAndroid.graphics.Rect): void;
				public unmount(param0: number, param1: com.facebook.litho.MountItem): void;
				public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
				/** @deprecated */
				public attachViewToParent(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
				public onStopNestedScroll(param0: globalAndroid.view.View): void;
				public setTag(param0: any): void;
				public getParent(): globalAndroid.view.ViewParent;
				public requestDisallowInterceptTouchEvent(param0: boolean): void;
				/** @deprecated */
				public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
				public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
				public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
				public addViewInLayout(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): boolean;
				/** @deprecated */
				public invalidate(param0: globalAndroid.graphics.Rect): void;
				public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
				public requestFitSystemWindows(): void;
				public setTag(param0: number, param1: any): void;
				public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
				public requestTransparentRegion(param0: globalAndroid.view.View): void;
				public removeViewsInLayout(param0: number, param1: number): void;
				public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
				public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
				public requestFocus(param0: number): boolean;
				public getTextAlignment(): number;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				/** @deprecated */
				public removeViewAt(param0: number): void;
				public addView(param0: globalAndroid.view.View, param1: number): void;
				public getChildDrawingOrder(param0: number, param1: number): number;
				public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
				public getImageContent(): com.facebook.litho.ImageContent;
				public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
				public getDrawables(): java.util.List<globalAndroid.graphics.drawable.Drawable>;
				public setViewTag(param0: any): void;
				public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
				/** @deprecated */
				public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
				public recomputeViewAttributes(param0: globalAndroid.view.View): void;
				public isTextAlignmentResolved(): boolean;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
				public constructor(param0: com.facebook.litho.ComponentContext, param1: globalAndroid.util.AttributeSet);
				public getLayoutDirection(): number;
				public mount(param0: number, param1: com.facebook.litho.MountItem, param2: globalAndroid.graphics.Rect): void;
				public getTag(param0: number): any;
				public removeView(param0: globalAndroid.view.View): void;
				public canResolveTextDirection(): boolean;
				/** @deprecated */
				public addView(param0: globalAndroid.view.View, param1: number): void;
				public canResolveTextAlignment(): boolean;
				public getClipChildren(): boolean;
				public requestLayout(): void;
				public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public constructor(param0: globalAndroid.content.Context);
				public attachViewToParent(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
				public getTag(): any;
				/** @deprecated */
				public addViewInLayout(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams, param3: boolean): boolean;
				public getTextContent(): com.facebook.litho.TextContent;
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public requestFocus(): boolean;
				/** @deprecated */
				public removeViews(param0: number, param1: number): void;
				public addViewForTest(param0: globalAndroid.view.View): void;
				public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
				public verifyDrawable(param0: globalAndroid.graphics.drawable.Drawable): boolean;
				public removeViewInLayout(param0: globalAndroid.view.View): void;
				public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
				public focusableViewAvailable(param0: globalAndroid.view.View): void;
				public addView(param0: globalAndroid.view.View): void;
				public canResolveLayoutDirection(): boolean;
				/** @deprecated */
				public removeView(param0: globalAndroid.view.View): void;
				public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getLinkedDrawablesForAnimation(): java.util.List<globalAndroid.graphics.drawable.Drawable>;
				public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public requestFocus(param0: number, param1: globalAndroid.graphics.Rect): boolean;
				public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
				public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
				public shouldDelayChildPressedState(): boolean;
			}
			export module ComponentHost {
				export class InterleavedDispatchDraw extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentHost.InterleavedDispatchDraw>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentHostRecycleUtil extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentHostRecycleUtil>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentHostUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentHostUtils>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentKeyUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentKeyUtils>;
				public static getKeyWithSeparator(param0: string, param1: string): string;
				public static getKeyForChildPosition(param0: string, param1: number): string;
				public static getKeyWithSeparator(param0: native.Array<any>): string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentLayout extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentLayout>;
				/**
				 * Constructs a new instance of the com.facebook.litho.ComponentLayout interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getX(): number;
					getY(): number;
					getWidth(): number;
					getHeight(): number;
					getPaddingTop(): number;
					getPaddingRight(): number;
					getPaddingBottom(): number;
					getPaddingLeft(): number;
					isPaddingSet(): boolean;
					getBackground(): com.facebook.litho.drawable.ComparableDrawable;
					getResolvedLayoutDirection(): com.facebook.yoga.YogaDirection;
				});
				public constructor();
				public isPaddingSet(): boolean;
				public getWidth(): number;
				public getHeight(): number;
				public getPaddingRight(): number;
				public getPaddingTop(): number;
				public getPaddingLeft(): number;
				public getX(): number;
				public getY(): number;
				public getPaddingBottom(): number;
				public getBackground(): com.facebook.litho.drawable.ComparableDrawable;
				public getResolvedLayoutDirection(): com.facebook.yoga.YogaDirection;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export abstract class ComponentLifecycle extends java.lang.Object implements com.facebook.litho.EventDispatcher, com.facebook.litho.EventTriggerTarget {
				public static class: java.lang.Class<com.facebook.litho.ComponentLifecycle>;
				public recordRenderData(param0: com.facebook.litho.ComponentLifecycle.RenderData): com.facebook.litho.ComponentLifecycle.RenderData;
				public dispatchOnEnteredRange(param0: string): void;
				public onPopulateAccessibilityNode(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
				public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
				public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
				public transferState(param0: com.facebook.litho.StateContainer, param1: com.facebook.litho.StateContainer): void;
				public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
				public applyPreviousRenderData(param0: com.facebook.litho.ComponentLifecycle.RenderData): void;
				public dispatchOnExitedRange(param0: string): void;
				public canMeasure(): boolean;
				public onCreateTransition(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Transition;
				public static newEventTrigger(param0: com.facebook.litho.ComponentContext, param1: string, param2: number): com.facebook.litho.EventTrigger<any>;
				public onBoundsDefined(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout): void;
				public getTreePropsForChildren(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.TreeProps): com.facebook.litho.TreeProps;
				public createInitialState(param0: com.facebook.litho.ComponentContext): void;
				public onShouldCreateLayoutWithNewSizeSpec(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): boolean;
				public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
				public static dispatchErrorEvent(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ErrorEvent): void;
				public hasState(): boolean;
				public onDetached(param0: com.facebook.litho.ComponentContext): void;
				public getExtraAccessibilityNodesCount(): number;
				public onCreateMountContentPool(): com.facebook.litho.MountContentPool<any>;
				public static newEventHandler(param0: com.facebook.litho.ComponentContext, param1: number, param2: native.Array<any>): com.facebook.litho.EventHandler<any>;
				public callsShouldUpdateOnMount(): boolean;
				public hasAttachDetachCallback(): boolean;
				public shouldUseDisplayList(): boolean;
				public implementsExtraAccessibilityNodes(): boolean;
				public onCreateMountContent(param0: globalAndroid.content.Context): any;
				public constructor(param0: any);
				public onMeasureBaseline(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): number;
				public onAttached(param0: com.facebook.litho.ComponentContext): void;
				public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
				public hasChildLithoViews(): boolean;
				public onPopulateExtraAccessibilityNode(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: number, param2: number, param3: number): void;
				public onBind(param0: com.facebook.litho.ComponentContext, param1: any): void;
				public shouldAlwaysRemeasure(): boolean;
				public resolve(param0: com.facebook.litho.ComponentContext): com.facebook.litho.ComponentLayout;
				public onUnbind(param0: com.facebook.litho.ComponentContext, param1: any): void;
				public createMountContent(param0: globalAndroid.content.Context): any;
				public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
				public isPureRender(): boolean;
				public static dispatchErrorEvent(param0: com.facebook.litho.ComponentContext, param1: java.lang.Exception): void;
				public populateTreeProps(param0: com.facebook.litho.TreeProps): void;
				public isLayoutSpecWithSizeSpecCheck(): boolean;
				public static newEventHandler(param0: com.facebook.litho.Component, param1: number, param2: native.Array<any>): com.facebook.litho.EventHandler<any>;
				public canPreallocate(): boolean;
				public static getEventTrigger(param0: com.facebook.litho.ComponentContext, param1: number, param2: string): com.facebook.litho.EventTrigger<any>;
				public isMountSizeDependent(): boolean;
				public onCreateLayoutWithSizeSpec(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.Component;
				public onPrepare(param0: com.facebook.litho.ComponentContext): void;
				public onError(param0: com.facebook.litho.ComponentContext, param1: java.lang.Exception): void;
				public poolSize(): number;
				public implementsAccessibility(): boolean;
				public onLoadStyle(param0: com.facebook.litho.ComponentContext): void;
				public onMeasure(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout, param2: number, param3: number, param4: com.facebook.litho.Size): void;
				public getExtraAccessibilityNodeAt(param0: number, param1: number): number;
				public needsPreviousRenderData(): boolean;
				public shouldUpdate(param0: com.facebook.litho.Component, param1: com.facebook.litho.Component): boolean;
			}
			export module ComponentLifecycle {
				export class CreateLayoutException extends java.lang.RuntimeException {
					public static class: java.lang.Class<com.facebook.litho.ComponentLifecycle.CreateLayoutException>;
				}
				export class MountType {
					public static class: java.lang.Class<com.facebook.litho.ComponentLifecycle.MountType>;
					public static NONE: com.facebook.litho.ComponentLifecycle.MountType;
					public static DRAWABLE: com.facebook.litho.ComponentLifecycle.MountType;
					public static VIEW: com.facebook.litho.ComponentLifecycle.MountType;
					public static values(): native.Array<com.facebook.litho.ComponentLifecycle.MountType>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
					public static valueOf(param0: string): com.facebook.litho.ComponentLifecycle.MountType;
				}
				export class RenderData extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentLifecycle.RenderData>;
					/**
					 * Constructs a new instance of the com.facebook.litho.ComponentLifecycle$RenderData interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
					});
					public constructor();
				}
				export class TransitionContainer extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentLifecycle.TransitionContainer>;
					/**
					 * Constructs a new instance of the com.facebook.litho.ComponentLifecycle$TransitionContainer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						consumeTransitions(): java.util.List<com.facebook.litho.Transition>;
					});
					public constructor();
					public consumeTransitions(): java.util.List<com.facebook.litho.Transition>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentLogParams extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentLogParams>;
				public logProductId: string;
				public logType: string;
				public samplingFrequency: number;
				public failHarder: boolean;
				public constructor(param0: string, param1: string, param2: number, param3: boolean);
				public constructor(param0: string, param1: string);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentLongClickListener extends java.lang.Object implements globalAndroid.view.View.OnLongClickListener {
				public static class: java.lang.Class<com.facebook.litho.ComponentLongClickListener>;
				public onLongClick(param0: globalAndroid.view.View): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentTouchListener extends java.lang.Object implements globalAndroid.view.View.OnTouchListener {
				public static class: java.lang.Class<com.facebook.litho.ComponentTouchListener>;
				public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentTree extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentTree>;
				public static INVALID_ID: number;
				public mId: number;
				public consumePreviousRenderState(): com.facebook.litho.RenderState;
				public acquireStateHandler(): com.facebook.litho.StateHandler;
				public setSizeSpec(param0: number, param1: number, param2: com.facebook.litho.Size): void;
				public setRootAndSizeSpec(param0: com.facebook.litho.Component, param1: number, param2: number): void;
				public updateMeasureListener(param0: com.facebook.litho.ComponentTree.MeasureListener): void;
				public setSizeSpec(param0: number, param1: number): void;
				public setRootAndSizeSpecAsync(param0: com.facebook.litho.Component, param1: number, param2: number, param3: com.facebook.litho.TreeProps): void;
				public setRootAndSizeSpec(param0: com.facebook.litho.Component, param1: number, param2: number, param3: com.facebook.litho.Size, param4: com.facebook.litho.TreeProps): void;
				public constructor(param0: com.facebook.litho.ComponentTree.Builder);
				public isReconciliationEnabled(): boolean;
				public getSimpleName(): string;
				public getNewLayoutStateReadyListener(): com.facebook.litho.ComponentTree.NewLayoutStateReadyListener;
				public isIncrementalMountEnabled(): boolean;
				public release(): void;
				public calculateLayoutState(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component, param2: number, param3: number, param4: boolean, param5: com.facebook.litho.LayoutState, param6: com.facebook.litho.TreeProps, param7: number, param8: string): com.facebook.litho.LayoutState;
				public checkWorkingRangeAndDispatch(param0: number, param1: number, param2: number, param3: number, param4: number): void;
				public hasMounted(): boolean;
				public static generateComponentTreeId(): number;
				public updateLayoutThreadHandler(param0: com.facebook.litho.LithoHandler): void;
				public isReleased(): boolean;
				public static create(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): com.facebook.litho.ComponentTree.Builder;
				public setRoot(param0: com.facebook.litho.Component): void;
				public setSizeSpecAsync(param0: number, param1: number): void;
				public static create(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component.Builder<any>): com.facebook.litho.ComponentTree.Builder;
				public getBackgroundLayoutState(): com.facebook.litho.LayoutState;
				public setNewLayoutStateReadyListener(param0: com.facebook.litho.ComponentTree.NewLayoutStateReadyListener): void;
				public setRootAndSizeSpecAsync(param0: com.facebook.litho.Component, param1: number, param2: number): void;
				public setRootAndSizeSpec(param0: com.facebook.litho.Component, param1: number, param2: number, param3: com.facebook.litho.Size): void;
				public getLithoView(): com.facebook.litho.LithoView;
				public hasCompatibleLayout(param0: number, param1: number): boolean;
				public getContext(): com.facebook.litho.ComponentContext;
				public isNestedTreeResolutionExperimentEnabled(): boolean;
				public setRootAsync(param0: com.facebook.litho.Component): void;
			}
			export module ComponentTree {
				export class Builder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentTree.Builder>;
					public previousRenderState(param0: com.facebook.litho.RenderState): com.facebook.litho.ComponentTree.Builder;
					public incrementalMount(param0: boolean): com.facebook.litho.ComponentTree.Builder;
					public preAllocateMountContentHandler(param0: com.facebook.litho.LithoHandler): com.facebook.litho.ComponentTree.Builder;
					public preallocateOnDefaultHandler(param0: boolean): com.facebook.litho.ComponentTree.Builder;
					public constructor(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component);
					public asyncStateUpdates(param0: boolean): com.facebook.litho.ComponentTree.Builder;
					public enableNestedTreeResolutionExperiment(param0: boolean): com.facebook.litho.ComponentTree.Builder;
					public shouldPreallocateMountContentPerMountSpec(param0: boolean): com.facebook.litho.ComponentTree.Builder;
					public hasMounted(param0: boolean): com.facebook.litho.ComponentTree.Builder;
					public layoutThreadHandler(param0: com.facebook.litho.LithoHandler): com.facebook.litho.ComponentTree.Builder;
					public useCancelableLayoutFutures(param0: boolean): com.facebook.litho.ComponentTree.Builder;
					public overrideComponentTreeId(param0: number): com.facebook.litho.ComponentTree.Builder;
					public layoutDiffing(param0: boolean): com.facebook.litho.ComponentTree.Builder;
					public build(): com.facebook.litho.ComponentTree;
					public stateHandler(param0: com.facebook.litho.StateHandler): com.facebook.litho.ComponentTree.Builder;
					public canInterruptAndMoveLayoutsBetweenThreads(param0: boolean): com.facebook.litho.ComponentTree.Builder;
					public layoutThreadLooper(param0: globalAndroid.os.Looper): com.facebook.litho.ComponentTree.Builder;
					public measureListener(param0: com.facebook.litho.ComponentTree.MeasureListener): com.facebook.litho.ComponentTree.Builder;
					public isReconciliationEnabled(param0: boolean): com.facebook.litho.ComponentTree.Builder;
				}
				export class CalculateLayoutRunnable extends com.facebook.litho.ThreadTracingRunnable {
					public static class: java.lang.Class<com.facebook.litho.ComponentTree.CalculateLayoutRunnable>;
					public constructor(param0: java.lang.Throwable);
					public constructor();
					public run(): void;
					public constructor(param0: com.facebook.litho.ComponentTree, param1: number, param2: com.facebook.litho.TreeProps, param3: string, param4: com.facebook.litho.ComponentTree.LayoutStateFuture);
					public tracedRun(param0: java.lang.Throwable): void;
				}
				export class LayoutStateFuture extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentTree.LayoutStateFuture>;
					public equals(param0: any): boolean;
					public getWaitingCount(): number;
					public hashCode(): number;
				}
				export class MeasureListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentTree.MeasureListener>;
					/**
					 * Constructs a new instance of the com.facebook.litho.ComponentTree$MeasureListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onSetRootAndSizeSpec(param0: number, param1: number): void;
					});
					public constructor();
					public onSetRootAndSizeSpec(param0: number, param1: number): void;
				}
				export class NewLayoutStateReadyListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentTree.NewLayoutStateReadyListener>;
					/**
					 * Constructs a new instance of the com.facebook.litho.ComponentTree$NewLayoutStateReadyListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onNewLayoutStateReady(param0: com.facebook.litho.ComponentTree): void;
					});
					public constructor();
					public onNewLayoutStateReady(param0: com.facebook.litho.ComponentTree): void;
				}
				export class UpdateStateSyncRunnable extends com.facebook.litho.ThreadTracingRunnable {
					public static class: java.lang.Class<com.facebook.litho.ComponentTree.UpdateStateSyncRunnable>;
					public constructor(param0: java.lang.Throwable);
					public constructor();
					public run(): void;
					public constructor(param0: com.facebook.litho.ComponentTree, param1: string);
					public tracedRun(param0: java.lang.Throwable): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentTreeDumpingHelper extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentTreeDumpingHelper>;
				public static dumpContextTree(param0: com.facebook.litho.ComponentContext): string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentUtils>;
				public static hasEquivalentFields(param0: any, param1: any): boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentsChainException extends java.lang.RuntimeException {
				public static class: java.lang.Class<com.facebook.litho.ComponentsChainException>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentsLifecycles extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentsLifecycles>;
				public static onContextCreated(param0: globalAndroid.app.Activity): void;
				public static onContextDestroyed(param0: globalAndroid.content.Context): void;
				public static onContextCreated(param0: globalAndroid.content.Context): void;
				public static onActivityDestroyed(param0: globalAndroid.app.Activity): void;
				public static onActivityCreated(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle): void;
				public constructor();
			}
			export module ComponentsLifecycles {
				export class LeakDetector extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentsLifecycles.LeakDetector>;
					public finalize(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentsLogger extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentsLogger>;
				/**
				 * Constructs a new instance of the com.facebook.litho.ComponentsLogger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					newPerformanceEvent(param0: com.facebook.litho.ComponentContext, param1: number): com.facebook.litho.PerfEvent;
					logPerfEvent(param0: com.facebook.litho.PerfEvent): void;
					cancelPerfEvent(param0: com.facebook.litho.PerfEvent): void;
					emitMessage(param0: com.facebook.litho.ComponentsLogger.LogLevel, param1: string): void;
					emitMessage(param0: com.facebook.litho.ComponentsLogger.LogLevel, param1: string, param2: number): void;
					getKeyCollisionStackTraceKeywords(): java.util.Set<string>;
					getKeyCollisionStackTraceBlacklist(): java.util.Set<string>;
					getExtraAnnotations(param0: com.facebook.litho.TreeProps): java.util.Map<string,string>;
					isTracing(param0: com.facebook.litho.PerfEvent): boolean;
				});
				public constructor();
				public getExtraAnnotations(param0: com.facebook.litho.TreeProps): java.util.Map<string,string>;
				public cancelPerfEvent(param0: com.facebook.litho.PerfEvent): void;
				public getKeyCollisionStackTraceKeywords(): java.util.Set<string>;
				public getKeyCollisionStackTraceBlacklist(): java.util.Set<string>;
				public newPerformanceEvent(param0: com.facebook.litho.ComponentContext, param1: number): com.facebook.litho.PerfEvent;
				public emitMessage(param0: com.facebook.litho.ComponentsLogger.LogLevel, param1: string): void;
				public isTracing(param0: com.facebook.litho.PerfEvent): boolean;
				public logPerfEvent(param0: com.facebook.litho.PerfEvent): void;
				public emitMessage(param0: com.facebook.litho.ComponentsLogger.LogLevel, param1: string, param2: number): void;
			}
			export module ComponentsLogger {
				export class LogLevel {
					public static class: java.lang.Class<com.facebook.litho.ComponentsLogger.LogLevel>;
					public static WARNING: com.facebook.litho.ComponentsLogger.LogLevel;
					public static ERROR: com.facebook.litho.ComponentsLogger.LogLevel;
					public static FATAL: com.facebook.litho.ComponentsLogger.LogLevel;
					public static values(): native.Array<com.facebook.litho.ComponentsLogger.LogLevel>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
					public static valueOf(param0: string): com.facebook.litho.ComponentsLogger.LogLevel;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentsPools extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentsPools>;
				public static maybePreallocateContent(param0: globalAndroid.content.Context, param1: com.facebook.litho.ComponentLifecycle): void;
				public static clearMountContentPools(): void;
			}
			export module ComponentsPools {
				export class PoolsActivityCallback extends java.lang.Object implements globalAndroid.app.Application.ActivityLifecycleCallbacks {
					public static class: java.lang.Class<com.facebook.litho.ComponentsPools.PoolsActivityCallback>;
					public onActivitySaveInstanceState(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle): void;
					public onActivityStarted(param0: globalAndroid.app.Activity): void;
					public onActivityCreated(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle): void;
					public onActivityStopped(param0: globalAndroid.app.Activity): void;
					public onActivityResumed(param0: globalAndroid.app.Activity): void;
					public onActivityPaused(param0: globalAndroid.app.Activity): void;
					public onActivityDestroyed(param0: globalAndroid.app.Activity): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentsReporter extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentsReporter>;
				public static emitMessage(param0: com.facebook.litho.ComponentsReporter.LogLevel, param1: string): void;
				public static emitMessage(param0: com.facebook.litho.ComponentsReporter.LogLevel, param1: string, param2: number): void;
				public static provide(param0: com.facebook.litho.ComponentsReporter.Reporter): void;
			}
			export module ComponentsReporter {
				export class LogLevel {
					public static class: java.lang.Class<com.facebook.litho.ComponentsReporter.LogLevel>;
					public static WARNING: com.facebook.litho.ComponentsReporter.LogLevel;
					public static ERROR: com.facebook.litho.ComponentsReporter.LogLevel;
					public static FATAL: com.facebook.litho.ComponentsReporter.LogLevel;
					public static valueOf(param0: string): com.facebook.litho.ComponentsReporter.LogLevel;
					public static values(): native.Array<com.facebook.litho.ComponentsReporter.LogLevel>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
				export class Reporter extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentsReporter.Reporter>;
					/**
					 * Constructs a new instance of the com.facebook.litho.ComponentsReporter$Reporter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						emitMessage(param0: com.facebook.litho.ComponentsReporter.LogLevel, param1: string): void;
						emitMessage(param0: com.facebook.litho.ComponentsReporter.LogLevel, param1: string, param2: number): void;
					});
					public constructor();
					public emitMessage(param0: com.facebook.litho.ComponentsReporter.LogLevel, param1: string, param2: number): void;
					public emitMessage(param0: com.facebook.litho.ComponentsReporter.LogLevel, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ComponentsSystrace extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ComponentsSystrace>;
				public static NO_OP_ARGS_BUILDER: com.facebook.litho.ComponentsSystrace.ArgsBuilder;
				public static beginSectionAsync(param0: string, param1: number): void;
				public static provide(param0: com.facebook.litho.ComponentsSystrace.Systrace): void;
				public static endSectionAsync(param0: string, param1: number): void;
				public static endSection(): void;
				public static beginSectionAsync(param0: string): void;
				public static endSectionAsync(param0: string): void;
				public static beginSection(param0: string): void;
				public static beginSectionWithArgs(param0: string): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
				public static isTracing(): boolean;
			}
			export module ComponentsSystrace {
				export class ArgsBuilder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentsSystrace.ArgsBuilder>;
					/**
					 * Constructs a new instance of the com.facebook.litho.ComponentsSystrace$ArgsBuilder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						flush(): void;
						arg(param0: string, param1: any): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
						arg(param0: string, param1: number): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
						arg(param0: string, param1: number): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
						arg(param0: string, param1: number): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
					});
					public constructor();
					public flush(): void;
					public arg(param0: string, param1: number): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
					public arg(param0: string, param1: any): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
				}
				export class NoOpArgsBuilder extends java.lang.Object implements com.facebook.litho.ComponentsSystrace.ArgsBuilder {
					public static class: java.lang.Class<com.facebook.litho.ComponentsSystrace.NoOpArgsBuilder>;
					public flush(): void;
					public arg(param0: string, param1: number): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
					public arg(param0: string, param1: any): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
				}
				export class Systrace extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.ComponentsSystrace.Systrace>;
					/**
					 * Constructs a new instance of the com.facebook.litho.ComponentsSystrace$Systrace interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						beginSection(param0: string): void;
						beginSectionAsync(param0: string): void;
						beginSectionAsync(param0: string, param1: number): void;
						beginSectionWithArgs(param0: string): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
						endSection(): void;
						endSectionAsync(param0: string): void;
						endSectionAsync(param0: string, param1: number): void;
						isTracing(): boolean;
					});
					public constructor();
					public beginSectionAsync(param0: string, param1: number): void;
					public endSection(): void;
					public isTracing(): boolean;
					public beginSectionWithArgs(param0: string): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
					public endSectionAsync(param0: string): void;
					public endSectionAsync(param0: string, param1: number): void;
					public beginSection(param0: string): void;
					public beginSectionAsync(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ContextUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ContextUtils>;
				public static findActivityInContext(param0: globalAndroid.content.Context): globalAndroid.app.Activity;
				public static getTargetSdkVersion(param0: globalAndroid.content.Context): number;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Copyable<T>  extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.Copyable<any>>;
				/**
				 * Constructs a new instance of the com.facebook.litho.Copyable<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					copyInto(param0: T): void;
				});
				public constructor();
				public copyInto(param0: T): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class CopyableLayoutProps extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.CopyableLayoutProps>;
				/**
				 * Constructs a new instance of the com.facebook.litho.CopyableLayoutProps interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					widthPx(param0: number): void;
					widthPercent(param0: number): void;
					minWidthPx(param0: number): void;
					maxWidthPx(param0: number): void;
					minWidthPercent(param0: number): void;
					maxWidthPercent(param0: number): void;
					heightPx(param0: number): void;
					heightPercent(param0: number): void;
					minHeightPx(param0: number): void;
					maxHeightPx(param0: number): void;
					minHeightPercent(param0: number): void;
					maxHeightPercent(param0: number): void;
					layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
					alignSelf(param0: com.facebook.yoga.YogaAlign): void;
					flex(param0: number): void;
					flexGrow(param0: number): void;
					flexShrink(param0: number): void;
					flexBasisPx(param0: number): void;
					flexBasisPercent(param0: number): void;
					aspectRatio(param0: number): void;
					positionType(param0: com.facebook.yoga.YogaPositionType): void;
					positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginAuto(param0: com.facebook.yoga.YogaEdge): void;
					isReferenceBaseline(param0: boolean): void;
					useHeightAsBaseline(param0: boolean): void;
					copyInto(param0: any): void;
				});
				public constructor();
				public heightPx(param0: number): void;
				public positionType(param0: com.facebook.yoga.YogaPositionType): void;
				public flexGrow(param0: number): void;
				public minHeightPercent(param0: number): void;
				public paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public widthPx(param0: number): void;
				public flex(param0: number): void;
				public paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public flexShrink(param0: number): void;
				public layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
				public flexBasisPercent(param0: number): void;
				public maxHeightPx(param0: number): void;
				public marginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public isReferenceBaseline(param0: boolean): void;
				public copyInto(param0: any): void;
				public flexBasisPx(param0: number): void;
				public maxHeightPercent(param0: number): void;
				public positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public maxWidthPx(param0: number): void;
				public marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public minWidthPx(param0: number): void;
				public maxWidthPercent(param0: number): void;
				public marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public widthPercent(param0: number): void;
				public useHeightAsBaseline(param0: boolean): void;
				public minWidthPercent(param0: number): void;
				public positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public minHeightPx(param0: number): void;
				public alignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public aspectRatio(param0: number): void;
				public heightPercent(param0: number): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DebugComponent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.DebugComponent>;
				public getLayoutNode(): com.facebook.litho.DebugLayoutNode;
				public isRoot(): boolean;
				public getBoundsInLithoView(): globalAndroid.graphics.Rect;
				public getComponent(): com.facebook.litho.Component;
				public getKey(): string;
				public static getRootInstance(param0: com.facebook.litho.LithoView): com.facebook.litho.DebugComponent;
				public getBounds(): globalAndroid.graphics.Rect;
				public getTextContent(): string;
				public static getRootInstance(param0: com.facebook.litho.Component): com.facebook.litho.DebugComponent;
				public static getRootInstance(param0: com.facebook.litho.ComponentTree): com.facebook.litho.DebugComponent;
				public getMountedDrawable(): globalAndroid.graphics.drawable.Drawable;
				public getAllTextContent(): string;
				public getStateContainer(): com.facebook.litho.StateContainer;
				public rerender(): void;
				public getTestKey(): string;
				public isLayoutNode(): boolean;
				public getGlobalKey(): string;
				public getComponentHost(): com.facebook.litho.ComponentHost;
				public getChildComponents(): java.util.List<com.facebook.litho.DebugComponent>;
				public canResolve(): boolean;
				public getMountedView(): globalAndroid.view.View;
				public static getRootInstance(param0: com.facebook.litho.InternalNode): com.facebook.litho.DebugComponent;
				public getLithoView(): com.facebook.litho.LithoView;
				public setOverrider(param0: com.facebook.litho.DebugComponent.Overrider): void;
				public getContext(): com.facebook.litho.ComponentContext;
			}
			export module DebugComponent {
				export class Overrider extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.DebugComponent.Overrider>;
					/**
					 * Constructs a new instance of the com.facebook.litho.DebugComponent$Overrider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						applyComponentOverrides(param0: string, param1: com.facebook.litho.Component): void;
						applyStateOverrides(param0: string, param1: com.facebook.litho.StateContainer): void;
						applyLayoutOverrides(param0: string, param1: com.facebook.litho.DebugLayoutNode): void;
					});
					public constructor();
					public applyComponentOverrides(param0: string, param1: com.facebook.litho.Component): void;
					public applyStateOverrides(param0: string, param1: com.facebook.litho.StateContainer): void;
					public applyLayoutOverrides(param0: string, param1: com.facebook.litho.DebugLayoutNode): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DebugComponentDescriptionHelper extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.DebugComponentDescriptionHelper>;
				public static addViewDescription(param0: number, param1: number, param2: com.facebook.litho.DebugComponent, param3: java.lang.StringBuilder, param4: boolean): void;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DebugDraw extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.DebugDraw>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DebugLayoutNode extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.DebugLayoutNode>;
				public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
				public setMinWidth(param0: com.facebook.yoga.YogaValue): void;
				public setFocusable(param0: boolean): void;
				public getContentDescription(): string;
				public getFlexGrow(): number;
				public getBackground(): com.facebook.litho.drawable.ComparableDrawable;
				public getPadding(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
				public setHeight(param0: com.facebook.yoga.YogaValue): void;
				public setMargin(param0: com.facebook.yoga.YogaEdge, param1: com.facebook.yoga.YogaValue): void;
				public isReferenceBaseline(param0: boolean): void;
				public getForeground(): globalAndroid.graphics.drawable.Drawable;
				public getJustifyContent(): com.facebook.yoga.YogaJustify;
				public getPosition(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public getResultMargin(param0: com.facebook.yoga.YogaEdge): number;
				public setFlexShrink(param0: number): void;
				public getMaxHeight(): com.facebook.yoga.YogaValue;
				public getMargin(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public getFlexBasis(): com.facebook.yoga.YogaValue;
				public getAspectRatio(): number;
				public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
				public setAspectRatio(param0: number): void;
				public getFocusable(): boolean;
				public getHeight(): com.facebook.yoga.YogaValue;
				public setContentDescription(param0: string): void;
				public getClickHandler(): com.facebook.litho.EventHandler<any>;
				public setMaxWidth(param0: com.facebook.yoga.YogaValue): void;
				public setImportantForAccessibility(param0: number): void;
				public setFlexGrow(param0: number): void;
				public getBorderWidth(param0: com.facebook.yoga.YogaEdge): number;
				public getAlignItems(): com.facebook.yoga.YogaAlign;
				public setPadding(param0: com.facebook.yoga.YogaEdge, param1: com.facebook.yoga.YogaValue): void;
				public getAlignContent(): com.facebook.yoga.YogaAlign;
				public setWidth(param0: com.facebook.yoga.YogaValue): void;
				public setBorderWidth(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public setMaxHeight(param0: com.facebook.yoga.YogaValue): void;
				public setMinHeight(param0: com.facebook.yoga.YogaValue): void;
				public setForegroundColor(param0: number): void;
				public getFlexShrink(): number;
				public getResultPadding(param0: com.facebook.yoga.YogaEdge): number;
				public getWidth(): com.facebook.yoga.YogaValue;
				public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
				public setBackgroundColor(param0: number): void;
				public getPositionType(): com.facebook.yoga.YogaPositionType;
				public getMinHeight(): com.facebook.yoga.YogaValue;
				public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
				public getAlignSelf(): com.facebook.yoga.YogaAlign;
				public getMinWidth(): com.facebook.yoga.YogaValue;
				public setFlexBasis(param0: com.facebook.yoga.YogaValue): void;
				public setPosition(param0: com.facebook.yoga.YogaEdge, param1: com.facebook.yoga.YogaValue): void;
				public getLayoutDirection(): com.facebook.yoga.YogaDirection;
				public getMaxWidth(): com.facebook.yoga.YogaValue;
				public getImportantForAccessibility(): java.lang.Integer;
				public getFlexDirection(): com.facebook.yoga.YogaFlexDirection;
				public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DebugOverlayDrawable extends com.facebook.litho.drawable.ComparableDrawable {
				public static class: java.lang.Class<com.facebook.litho.DebugOverlayDrawable>;
				public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
				public static isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable, param1: com.facebook.litho.drawable.ComparableDrawable): boolean;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public setAlpha(param0: number): void;
				public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
				public constructor(param0: java.util.List<java.lang.Boolean>);
				public getOpacity(): number;
				public isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable): boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DefaultComponentsReporter extends java.lang.Object implements com.facebook.litho.ComponentsReporter.Reporter {
				public static class: java.lang.Class<com.facebook.litho.DefaultComponentsReporter>;
				public emitMessage(param0: com.facebook.litho.ComponentsReporter.LogLevel, param1: string): void;
				public emitMessage(param0: com.facebook.litho.ComponentsReporter.LogLevel, param1: string, param2: number): void;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DefaultComponentsSystrace extends java.lang.Object implements com.facebook.litho.ComponentsSystrace.Systrace {
				public static class: java.lang.Class<com.facebook.litho.DefaultComponentsSystrace>;
				public isTracing(): boolean;
				public beginSectionWithArgs(param0: string): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
				public endSection(): void;
				public beginSection(param0: string): void;
				public beginSectionAsync(param0: string): void;
				public beginSectionAsync(param0: string, param1: number): void;
				public endSectionAsync(param0: string): void;
				public constructor();
				public endSectionAsync(param0: string, param1: number): void;
			}
			export module DefaultComponentsSystrace {
				export class DefaultArgsBuilder extends java.lang.Object implements com.facebook.litho.ComponentsSystrace.ArgsBuilder {
					public static class: java.lang.Class<com.facebook.litho.DefaultComponentsSystrace.DefaultArgsBuilder>;
					public constructor(param0: string);
					public flush(): void;
					public arg(param0: string, param1: number): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
					public arg(param0: string, param1: any): com.facebook.litho.ComponentsSystrace.ArgsBuilder;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DefaultInternalNode extends java.lang.Object implements com.facebook.litho.InternalNode, java.lang.Cloneable {
				public static class: java.lang.Class<com.facebook.litho.DefaultInternalNode>;
				public positionType(param0: com.facebook.yoga.YogaPositionType): void;
				public getHeight(): number;
				public getPaddingTop(): number;
				public paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public addWorkingRanges(param0: java.util.List<com.facebook.litho.WorkingRangeContainer.Registration>): void;
				public getBackground(): com.facebook.litho.drawable.ComparableDrawable;
				public getLastHeightSpec(): number;
				public getMaxHeight(): number;
				public stateListAnimator(param0: globalAndroid.animation.StateListAnimator): com.facebook.litho.InternalNode;
				public getYogaNode(): com.facebook.yoga.YogaNode;
				public getSimpleName(): string;
				/** @deprecated */
				public foreground(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.InternalNode;
				public alignItems(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.InternalNode;
				public setRootComponent(param0: com.facebook.litho.Component): void;
				public marginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public getTouchExpansionBottom(): number;
				public isReferenceBaseline(param0: boolean): void;
				public getDiffNode(): com.facebook.litho.DiffNode;
				public setLastHeightSpec(param0: number): void;
				public getWorkingRangeRegistrations(): java.util.ArrayList<com.facebook.litho.WorkingRangeContainer.Registration>;
				public hasStateListAnimatorResSet(): boolean;
				public getTouchExpansionLeft(): number;
				public isDuplicateParentStateEnabled(): boolean;
				public getLayoutBorder(param0: com.facebook.yoga.YogaEdge): number;
				public getBorderPathEffect(): globalAndroid.graphics.PathEffect;
				public positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public maxWidthPx(param0: number): void;
				public getLastWidthSpec(): number;
				public getStyleWidth(): number;
				public unfocusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>): com.facebook.litho.InternalNode;
				public maxWidthPercent(param0: number): void;
				public backgroundRes(param0: number): com.facebook.litho.InternalNode;
				public getComponents(): java.util.List<com.facebook.litho.Component>;
				public useHeightAsBaseline(param0: boolean): void;
				public wrap(param0: com.facebook.yoga.YogaWrap): com.facebook.litho.InternalNode;
				public isNestedTreeHolder(): boolean;
				public getFocusedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>;
				public getStyleHeight(): number;
				public addComponentNeedingPreviousRenderData(param0: com.facebook.litho.Component): void;
				public getPaddingLeft(): number;
				public getLastMeasuredWidth(): number;
				public getStyleDirection(): com.facebook.yoga.YogaDirection;
				public getTouchExpansionTop(): number;
				public heightPx(param0: number): void;
				public constructor(param0: com.facebook.litho.ComponentContext);
				public getPendingTreeProps(): com.facebook.litho.TreeProps;
				public setStyleHeightFromSpec(param0: number): void;
				public alignContent(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.InternalNode;
				public addTransition(param0: com.facebook.litho.Transition): void;
				public foreground(param0: com.facebook.litho.drawable.ComparableDrawable): com.facebook.litho.InternalNode;
				public minHeightPercent(param0: number): void;
				public getChildAt(param0: number): com.facebook.litho.InternalNode;
				public widthPx(param0: number): void;
				public getBorderColors(): native.Array<number>;
				public getVisibilityChangedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>;
				public setCachedMeasuresValid(param0: boolean): void;
				public stateListAnimatorRes(param0: number): com.facebook.litho.InternalNode;
				public getPaddingRight(): number;
				public hasVisibilityHandlers(): boolean;
				public setStyleWidthFromSpec(param0: number): void;
				public maxHeightPx(param0: number): void;
				public setNodeInfo(param0: com.facebook.litho.NodeInfo): void;
				public touchExpansionPx(param0: com.facebook.yoga.YogaEdge, param1: number): com.facebook.litho.InternalNode;
				public flexBasisPx(param0: number): void;
				public appendComponent(param0: com.facebook.litho.Component): void;
				public foregroundColor(param0: number): com.facebook.litho.InternalNode;
				public getInvisibleHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>;
				public hasNestedTree(): boolean;
				public markIsNestedTreeHolder(param0: com.facebook.litho.TreeProps): void;
				/** @deprecated */
				public background(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.InternalNode;
				public getChildCount(): number;
				public minWidthPx(param0: number): void;
				public constructor(param0: com.facebook.litho.ComponentContext, param1: boolean);
				public justifyContent(param0: com.facebook.yoga.YogaJustify): com.facebook.litho.InternalNode;
				public transitionKey(param0: string): com.facebook.litho.InternalNode;
				public setDiffNode(param0: com.facebook.litho.DiffNode): void;
				public getImportantForAccessibility(): number;
				public child(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.InternalNode;
				public getPaddingBottom(): number;
				public getBorderRadius(): native.Array<number>;
				public removeChildAt(param0: number): com.facebook.litho.InternalNode;
				public clone(): com.facebook.litho.DefaultInternalNode;
				public getTailComponent(): com.facebook.litho.Component;
				public shouldDrawBorders(): boolean;
				public visibleHeightRatio(param0: number): com.facebook.litho.InternalNode;
				public focusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>): com.facebook.litho.InternalNode;
				public getHeadComponent(): com.facebook.litho.Component;
				public getContext(): com.facebook.litho.ComponentContext;
				public heightPercent(param0: number): void;
				public flexDirection(param0: com.facebook.yoga.YogaFlexDirection): com.facebook.litho.InternalNode;
				public constructor(param0: com.facebook.litho.ComponentContext, param1: com.facebook.yoga.YogaNode);
				public border(param0: com.facebook.litho.Border): com.facebook.litho.InternalNode;
				public getTransitionKeyType(): com.facebook.litho.Transition.TransitionKeyType;
				public setLastMeasuredHeight(param0: number): void;
				public border(param0: com.facebook.litho.Edges, param1: native.Array<number>, param2: native.Array<number>): void;
				public child(param0: com.facebook.litho.InternalNode): com.facebook.litho.InternalNode;
				public importantForAccessibility(param0: number): com.facebook.litho.InternalNode;
				public getVisibleWidthRatio(): number;
				public foregroundRes(param0: number): com.facebook.litho.InternalNode;
				public getTransitionKey(): string;
				public isPaddingSet(): boolean;
				public hasBorderColor(): boolean;
				public getOrCreateNestedTreeProps(): com.facebook.litho.InternalNode.NestedTreeProps;
				public layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
				public hasTransitionKey(): boolean;
				public getX(): number;
				public clone(): any;
				public getVisibleHandler(): com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>;
				public getStateListAnimatorRes(): number;
				public getNodeInfo(): com.facebook.litho.NodeInfo;
				public getParent(): com.facebook.litho.InternalNode;
				public maxHeightPercent(param0: number): void;
				public child(param0: com.facebook.litho.Component): com.facebook.litho.InternalNode;
				public isForceViewWrapping(): boolean;
				public calculateLayout(): void;
				public constructor(param0: com.facebook.litho.ComponentContext, param1: com.facebook.yoga.YogaNode, param2: boolean);
				public visibleWidthRatio(param0: number): com.facebook.litho.InternalNode;
				public widthAuto(): com.facebook.litho.InternalNode;
				public copyInto(param0: com.facebook.litho.InternalNode): void;
				public hasNewLayout(): boolean;
				public getForeground(): com.facebook.litho.drawable.ComparableDrawable;
				public minWidthPercent(param0: number): void;
				public setLastWidthSpec(param0: number): void;
				public minHeightPx(param0: number): void;
				public alignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public getTouchExpansion(): com.facebook.litho.Edges;
				public assertContextSpecificStyleNotSet(): void;
				public getResolvedLayoutDirection(): com.facebook.yoga.YogaDirection;
				public getNestedTreeHolder(): com.facebook.litho.InternalNode;
				public getStateListAnimator(): globalAndroid.animation.StateListAnimator;
				public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
				public getMinHeight(): number;
				public applyAttributes(param0: globalAndroid.content.res.TypedArray): void;
				public getY(): number;
				public flexGrow(param0: number): void;
				public getMaxWidth(): number;
				public areCachedMeasuresValid(): boolean;
				public getTouchExpansionRight(): number;
				public addChildAt(param0: com.facebook.litho.InternalNode, param1: number): void;
				public flex(param0: number): void;
				public getComponentsNeedingPreviousRenderData(): java.util.ArrayList<com.facebook.litho.Component>;
				public paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public calculateLayout(param0: number, param1: number): void;
				public flexShrink(param0: number): void;
				public getUnresolvedComponents(): java.util.List<com.facebook.litho.Component>;
				public getVisibleHeightRatio(): number;
				public backgroundColor(param0: number): com.facebook.litho.InternalNode;
				public flexBasisPercent(param0: number): void;
				public getMinWidth(): number;
				public copyInto(param0: any): void;
				public registerDebugComponent(param0: com.facebook.litho.DebugComponent): void;
				public getNestedTree(): com.facebook.litho.InternalNode;
				public setBorderWidth(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public isInitialized(): boolean;
				public getChildIndex(param0: com.facebook.litho.InternalNode): number;
				public setLastMeasuredWidth(param0: number): void;
				public heightAuto(): com.facebook.litho.InternalNode;
				public visibilityChangedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>): com.facebook.litho.InternalNode;
				public deepClone(): com.facebook.litho.DefaultInternalNode;
				public isImportantForAccessibilityIsSet(): boolean;
				public transitionKeyType(param0: com.facebook.litho.Transition.TransitionKeyType): com.facebook.litho.InternalNode;
				public getTestKey(): string;
				public visibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>): com.facebook.litho.InternalNode;
				public background(param0: com.facebook.litho.drawable.ComparableDrawable): com.facebook.litho.InternalNode;
				public markLayoutSeen(): void;
				public flexBasisAuto(): com.facebook.litho.InternalNode;
				public resetResolvedLayoutProperties(): void;
				public wrapInView(): com.facebook.litho.InternalNode;
				public getFullImpressionHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>;
				public marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public widthPercent(param0: number): void;
				public testKey(param0: string): com.facebook.litho.InternalNode;
				public appendUnresolvedComponent(param0: com.facebook.litho.Component): void;
				public recursivelyResolveLayoutDirection(): com.facebook.yoga.YogaDirection;
				public setNestedTree(param0: com.facebook.litho.InternalNode): void;
				public getTransitions(): java.util.ArrayList<com.facebook.litho.Transition>;
				public getLastMeasuredHeight(): number;
				public fullImpressionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>): com.facebook.litho.InternalNode;
				public getWidth(): number;
				public reconcile(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): com.facebook.litho.InternalNode;
				public invisibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>): com.facebook.litho.InternalNode;
				public positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public duplicateParentState(param0: boolean): com.facebook.litho.InternalNode;
				public aspectRatio(param0: number): void;
				public getUnfocusedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>;
				public isLayoutDirectionInherit(): boolean;
				public deepClone(): com.facebook.litho.InternalNode;
				public getOrCreateNodeInfo(): com.facebook.litho.NodeInfo;
				public hasTouchExpansion(): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DefaultMountContentPool extends com.facebook.litho.RecyclePool<any> implements com.facebook.litho.MountContentPool<any> {
				public static class: java.lang.Class<com.facebook.litho.DefaultMountContentPool>;
				public release(param0: any): void;
				public getCurrentSize(): number;
				public constructor(param0: string, param1: number, param2: boolean);
				public maybePreallocateContent(param0: globalAndroid.content.Context, param1: com.facebook.litho.ComponentLifecycle): void;
				public acquire(): any;
				public acquire(param0: globalAndroid.content.Context, param1: com.facebook.litho.ComponentLifecycle): any;
				public getName(): string;
				public getMaxSize(): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DefaultNodeInfo extends java.lang.Object implements com.facebook.litho.NodeInfo {
				public static class: java.lang.Class<com.facebook.litho.DefaultNodeInfo>;
				public setOnInitializeAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>): void;
				public setFocusable(param0: boolean): void;
				public setTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>): void;
				public getRotationY(): number;
				public isEquivalentTo(param0: com.facebook.litho.NodeInfo): boolean;
				public getContentDescription(): string;
				public getOnInitializeAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>;
				public getAlpha(): number;
				public getFocusChangeHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>;
				public setSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>): void;
				public setClickable(param0: boolean): void;
				public setEnabled(param0: boolean): void;
				public getPerformAccessibilityActionHandler(): com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>;
				public getTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>;
				public setDispatchPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>): void;
				public setSelected(param0: boolean): void;
				public getFlags(): number;
				public isAlphaSet(): boolean;
				public isRotationSet(): boolean;
				public setLongClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>): void;
				public needsAccessibilityDelegate(): boolean;
				public getOnInitializeAccessibilityNodeInfoHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>;
				public hasTouchEventHandlers(): boolean;
				public setOnInitializeAccessibilityNodeInfoHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>): void;
				public getInterceptTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>;
				public isRotationXSet(): boolean;
				public getViewTag(): any;
				public setClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>): void;
				public getAccessibilityRoleDescription(): string;
				public setOnPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>): void;
				public getClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>;
				public setRotationX(param0: number): void;
				public getOutlineProvider(): globalAndroid.view.ViewOutlineProvider;
				public setClipToOutline(param0: boolean): void;
				public setSendAccessibilityEventUncheckedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>): void;
				public isScaleSet(): boolean;
				public setContentDescription(param0: string): void;
				public setViewTag(param0: any): void;
				public setAccessibilityRoleDescription(param0: string): void;
				public getLongClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>;
				public getClipToOutline(): boolean;
				public getOnRequestSendAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>;
				public isClipChildrenSet(): boolean;
				public getScale(): number;
				public getEnabledState(): number;
				public setViewTags(param0: globalAndroid.util.SparseArray<any>): void;
				public setRotationY(param0: number): void;
				public getClipChildren(): boolean;
				public setInterceptTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>): void;
				public setOnRequestSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>): void;
				public getClickableState(): number;
				public isRotationYSet(): boolean;
				public getFocusState(): number;
				public getViewTags(): globalAndroid.util.SparseArray<any>;
				public getSelectedState(): number;
				public getOnPopulateAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>;
				public getSendAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>;
				public setClipChildren(param0: boolean): void;
				public copyInto(param0: com.facebook.litho.NodeInfo): void;
				public setScale(param0: number): void;
				public setAlpha(param0: number): void;
				public getSendAccessibilityEventUncheckedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>;
				public getRotationX(): number;
				public getAccessibilityRole(): string;
				public setOutlineProvider(param0: globalAndroid.view.ViewOutlineProvider): void;
				public setFocusChangeHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>): void;
				public getShadowElevation(): number;
				public getRotation(): number;
				public setPerformAccessibilityActionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>): void;
				public setRotation(param0: number): void;
				public setShadowElevation(param0: number): void;
				public getDispatchPopulateAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>;
				public setAccessibilityRole(param0: string): void;
				public hasFocusChangeHandler(): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DelayTransitionSet extends com.facebook.litho.TransitionSet {
				public static class: java.lang.Class<com.facebook.litho.DelayTransitionSet>;
				public constructor();
				public constructor(param0: number, param1: com.facebook.litho.Transition);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DelegatingEventHandler<E>  extends com.facebook.litho.EventHandler<any> {
				public static class: java.lang.Class<com.facebook.litho.DelegatingEventHandler<any>>;
				public constructor(param0: com.facebook.litho.HasEventDispatcher, param1: number, param2: native.Array<any>);
				public constructor(param0: com.facebook.litho.EventHandler<any>, param1: com.facebook.litho.EventHandler<any>);
				public dispatchEvent(param0: any): void;
				public isEquivalentTo(param0: com.facebook.litho.EventHandler<any>): boolean;
				public constructor(param0: com.facebook.litho.HasEventDispatcher, param1: number);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DeprecatedLithoTooltip extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.DeprecatedLithoTooltip>;
				/**
				 * Constructs a new instance of the com.facebook.litho.DeprecatedLithoTooltip interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					showBottomLeft(param0: globalAndroid.view.View, param1: number, param2: number): void;
				});
				public constructor();
				public showBottomLeft(param0: globalAndroid.view.View, param1: number, param2: number): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Diff<T>  extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.Diff<any>>;
				public getPrevious(): T;
				public getNext(): T;
				public setNext(param0: T): void;
				public constructor(param0: T, param1: T);
				public toString(): string;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DiffNode extends java.lang.Object implements java.lang.Cloneable {
				public static class: java.lang.Class<com.facebook.litho.DiffNode>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DisabledMountContentPool extends java.lang.Object implements com.facebook.litho.MountContentPool<any> {
				public static class: java.lang.Class<com.facebook.litho.DisabledMountContentPool>;
				public release(param0: any): void;
				public getCurrentSize(): number;
				public maybePreallocateContent(param0: globalAndroid.content.Context, param1: com.facebook.litho.ComponentLifecycle): void;
				public acquire(param0: globalAndroid.content.Context, param1: com.facebook.litho.ComponentLifecycle): any;
				public getName(): string;
				public getMaxSize(): number;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DispatchPopulateAccessibilityEventEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>;
				public host: globalAndroid.view.View;
				public event: globalAndroid.view.accessibility.AccessibilityEvent;
				public superDelegate: androidx.core.view.AccessibilityDelegateCompat;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DoubleMeasureFixUtil extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.DoubleMeasureFixUtil>;
				public static correctWidthSpecForAndroidDoubleMeasureBug(param0: globalAndroid.content.res.Resources, param1: globalAndroid.content.pm.PackageManager, param2: number): number;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DrawableComponent<T>  extends com.facebook.litho.Component {
				public static class: java.lang.Class<com.facebook.litho.DrawableComponent<any>>;
				public isPureRender(): boolean;
				public onBoundsDefined(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout): void;
				public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
				public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
				public onBind(param0: com.facebook.litho.ComponentContext, param1: any): void;
				public isEquivalentTo(param0: any): boolean;
				public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
				/** @deprecated */
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public static create(param0: com.facebook.litho.drawable.ComparableDrawable): com.facebook.litho.DrawableComponent<any>;
				public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
				public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public onCreateMountContent(param0: globalAndroid.content.Context): any;
				public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
				public shouldUpdate(param0: com.facebook.litho.Component, param1: com.facebook.litho.Component): boolean;
				public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DrawableMatrix extends globalAndroid.graphics.Matrix {
				public static class: java.lang.Class<com.facebook.litho.DrawableMatrix>;
				public static create(param0: globalAndroid.graphics.drawable.Drawable, param1: globalAndroid.widget.ImageView.ScaleType, param2: number, param3: number): com.facebook.litho.DrawableMatrix;
				public shouldClipRect(): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DynamicPropsManager extends java.lang.Object implements com.facebook.litho.DynamicValue.OnValueChangeListener<any> {
				public static class: java.lang.Class<com.facebook.litho.DynamicPropsManager>;
				public onValueChange(param0: com.facebook.litho.DynamicValue<any>): void;
				public onValueChange(param0: com.facebook.litho.DynamicValue<any>): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class DynamicValue<T>  extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.DynamicValue<any>>;
				public constructor(param0: T);
				public set(param0: T): void;
			}
			export module DynamicValue {
				export class OnValueChangeListener<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.DynamicValue.OnValueChangeListener<any>>;
					/**
					 * Constructs a new instance of the com.facebook.litho.DynamicValue$OnValueChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onValueChange(param0: com.facebook.litho.DynamicValue<T>): void;
					});
					public constructor();
					public onValueChange(param0: com.facebook.litho.DynamicValue<T>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Edges extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.Edges>;
				public static EDGES_LENGTH: number;
				public get(param0: com.facebook.yoga.YogaEdge): number;
				public set(param0: com.facebook.yoga.YogaEdge, param1: number): boolean;
				public getRaw(param0: number): number;
				public getRaw(param0: com.facebook.yoga.YogaEdge): number;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Equivalence<T>  extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.Equivalence<any>>;
				/**
				 * Constructs a new instance of the com.facebook.litho.Equivalence<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					isEquivalentTo(param0: T): boolean;
				});
				public constructor();
				public isEquivalentTo(param0: T): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ErrorBoundariesConfiguration extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ErrorBoundariesConfiguration>;
				public static rootWrapperComponentFactory: com.facebook.litho.RootWrapperComponentFactory;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ErrorEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ErrorEvent>;
				public exception: java.lang.Exception;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class EventDispatcher extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.EventDispatcher>;
				/**
				 * Constructs a new instance of the com.facebook.litho.EventDispatcher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
				});
				public constructor();
				public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class EventDispatcherUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.EventDispatcherUtils>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class EventHandler<E>  extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.EventHandler<any>>;
				public mHasEventDispatcher: com.facebook.litho.HasEventDispatcher;
				public id: number;
				public params: native.Array<any>;
				public constructor(param0: com.facebook.litho.HasEventDispatcher, param1: number, param2: native.Array<any>);
				public dispatchEvent(param0: E): void;
				public isEquivalentTo(param0: com.facebook.litho.EventHandler<any>): boolean;
				public constructor(param0: com.facebook.litho.HasEventDispatcher, param1: number);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class EventHandlersController extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.EventHandlersController>;
				public bindEventHandlers(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.HasEventDispatcher, param2: string): void;
				public recordEventHandler(param0: string, param1: com.facebook.litho.EventHandler<any>): void;
				public clearUnusedEventHandlers(): void;
				public getEventHandlers(): java.util.Map<string,com.facebook.litho.EventHandlersController.EventHandlersWrapper>;
				public constructor();
			}
			export module EventHandlersController {
				export class EventHandlersWrapper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.EventHandlersController.EventHandlersWrapper>;
					public getEventHandlers(): androidx.collection.SparseArrayCompat<com.facebook.litho.EventHandler<any>>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class EventTrigger<E>  extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.EventTrigger<any>>;
				public mTriggerTarget: com.facebook.litho.EventTriggerTarget;
				public mId: number;
				public mKey: string;
				public dispatchOnTrigger(param0: E, param1: native.Array<any>): any;
				public constructor(param0: string, param1: number, param2: string);
				public dispatchOnTrigger(param0: E): any;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class EventTriggerTarget extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.EventTriggerTarget>;
				/**
				 * Constructs a new instance of the com.facebook.litho.EventTriggerTarget interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
				});
				public constructor();
				public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class EventTriggersContainer extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.EventTriggersContainer>;
				public recordEventTrigger(param0: com.facebook.litho.EventTrigger<any>): void;
				public getEventTrigger(param0: string): com.facebook.litho.EventTrigger<any>;
				public clear(): void;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class FastMath extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.FastMath>;
				public static round(param0: number): number;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class FocusChangedEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.FocusChangedEvent>;
				public view: globalAndroid.view.View;
				public hasFocus: boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class FocusedVisibleEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.FocusedVisibleEvent>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class FrameworkLogEvents extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.FrameworkLogEvents>;
				/**
				 * Constructs a new instance of the com.facebook.litho.FrameworkLogEvents interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
				});
				public constructor();
				public static PARAM_CHANGESET_DELETE_RANGE_COUNT: string;
				public static PARAM_CURRENT_ROOT_COUNT: string;
				public static EVENT_SECTIONS_CREATE_NEW_TREE: number;
				public static PARAM_MOVED_COUNT: string;
				public static PARAM_CHANGESET_CHANGE_COUNT: string;
				public static PARAM_MOUNTED_COUNT: string;
				public static EVENT_LAYOUT_CALCULATE: number;
				public static PARAM_IS_BACKGROUND_LAYOUT: string;
				public static PARAM_COMPONENT: string;
				public static PARAM_UPDATED_TIME: string;
				public static EVENT_SECTIONS_GENERATE_CHANGESET: number;
				public static PARAM_SECTION_SET_ROOT_SOURCE: string;
				public static PARAM_UNCHANGED_COUNT: string;
				public static PARAM_LAYOUT_STATE_SOURCE: string;
				public static PARAM_VISIBILITY_HANDLER_TIME: string;
				public static PARAM_TREE_DIFF_ENABLED: string;
				public static PARAM_SECTION_NEXT: string;
				public static PARAM_CHANGESET_UPDATE_RANGE_COUNT: string;
				public static PARAM_UPDATED_CONTENT: string;
				public static EVENT_SECTIONS_SET_ROOT: number;
				public static PARAM_UNMOUNTED_CONTENT: string;
				public static EVENT_CALCULATE_LAYOUT_STATE: number;
				public static PARAM_UNMOUNTED_COUNT: string;
				public static PARAM_IS_DIRTY: string;
				public static PARAM_VISIBILITY_HANDLER: string;
				public static PARAM_SECTION_CURRENT: string;
				public static PARAM_MOUNTED_TIME: string;
				public static EVENT_SECTIONS_DATA_DIFF_CALCULATE_DIFF: number;
				public static PARAM_CHANGESET_INSERT_SINGLE_COUNT: string;
				public static PARAM_CHANGESET_FINAL_COUNT: string;
				public static PARAM_DRAWN_CONTENT: string;
				public static PARAM_CHANGESET_EFFECTIVE_COUNT: string;
				public static PARAM_SET_ROOT_ON_BG_THREAD: string;
				public static PARAM_CHANGESET_DELETE_SINGLE_COUNT: string;
				public static PARAM_MOUNTED_EXTRAS: string;
				public static EVENT_MOUNT: number;
				public static PARAM_ATTRIBUTION: string;
				public static EVENT_PRE_ALLOCATE_MOUNT_CONTENT: number;
				public static PARAM_ROOT_COMPONENT: string;
				public static EVENT_BENCHMARK_RUN: number;
				public static PARAM_UNMOUNTED_TIME: string;
				public static PARAM_NO_OP_COUNT: string;
				public static EVENT_SECTIONS_ON_CREATE_CHILDREN: number;
				public static PARAM_LOG_TAG: string;
				public static PARAM_MOUNTED_CONTENT: string;
				public static EVENT_RESUME_CALCULATE_LAYOUT_STATE: number;
				public static PARAM_VISIBILITY_HANDLERS_TOTAL_TIME: string;
				public static PARAM_CHANGESET_UPDATE_SINGLE_COUNT: string;
				public static PARAM_UPDATED_COUNT: string;
				public static PARAM_CHANGESET_MOVE_COUNT: string;
				public static PARAM_DRAWN_TIME: string;
				public static PARAM_CHANGESET_INSERT_RANGE_COUNT: string;
			}
			export module FrameworkLogEvents {
				export class LogEventId extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.FrameworkLogEvents.LogEventId>;
					/**
					 * Constructs a new instance of the com.facebook.litho.FrameworkLogEvents$LogEventId interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class FullImpressionVisibleEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.FullImpressionVisibleEvent>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class HandlerInstrumenter extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.HandlerInstrumenter>;
				public static provide(param0: com.facebook.litho.HandlerInstrumenter.Instrumenter): void;
				public static instrumentLithoHandler(param0: com.facebook.litho.LithoHandler): com.facebook.litho.LithoHandler;
				public constructor();
			}
			export module HandlerInstrumenter {
				export class Instrumenter extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.HandlerInstrumenter.Instrumenter>;
					/**
					 * Constructs a new instance of the com.facebook.litho.HandlerInstrumenter$Instrumenter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						instrumentLithoHandler(param0: com.facebook.litho.LithoHandler): com.facebook.litho.LithoHandler;
					});
					public constructor();
					public instrumentLithoHandler(param0: com.facebook.litho.LithoHandler): com.facebook.litho.LithoHandler;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class HasEventDispatcher extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.HasEventDispatcher>;
				/**
				 * Constructs a new instance of the com.facebook.litho.HasEventDispatcher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getEventDispatcher(): com.facebook.litho.EventDispatcher;
				});
				public constructor();
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class HasEventTrigger extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.HasEventTrigger>;
				/**
				 * Constructs a new instance of the com.facebook.litho.HasEventTrigger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
				});
				public constructor();
				public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class HasLithoViewChildren extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.HasLithoViewChildren>;
				/**
				 * Constructs a new instance of the com.facebook.litho.HasLithoViewChildren interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					obtainLithoViewChildren(param0: java.util.List<com.facebook.litho.LithoView>): void;
				});
				public constructor();
				public obtainLithoViewChildren(param0: java.util.List<com.facebook.litho.LithoView>): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class HostComponent extends com.facebook.litho.Component {
				public static class: java.lang.Class<com.facebook.litho.HostComponent>;
				public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
				public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
				public isEquivalentTo(param0: any): boolean;
				public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
				/** @deprecated */
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public constructor(param0: string);
				public constructor();
				public onCreateMountContentPool(): com.facebook.litho.MountContentPool<any>;
				public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
				public poolSize(): number;
				public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public onCreateMountContent(param0: globalAndroid.content.Context): any;
				public constructor(param0: string, param1: any);
				public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
				public constructor(param0: any);
				public shouldUpdate(param0: com.facebook.litho.Component, param1: com.facebook.litho.Component): boolean;
				public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class HotswapManager extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.HotswapManager>;
				public static onHotswap(): void;
				public static getClassLoader(): java.lang.ClassLoader;
				public static init(param0: java.lang.ClassLoader): void;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ImageContent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ImageContent>;
				/**
				 * Constructs a new instance of the com.facebook.litho.ImageContent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getImageItems(): java.util.List<globalAndroid.graphics.drawable.Drawable>;
					<clinit>(): void;
				});
				public constructor();
				public static EMPTY: com.facebook.litho.ImageContent;
				public getImageItems(): java.util.List<globalAndroid.graphics.drawable.Drawable>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class IncrementalMountHelper extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.IncrementalMountHelper>;
			}
			export module IncrementalMountHelper {
				export class ViewPagerListener extends androidx.viewpager.widget.ViewPager.SimpleOnPageChangeListener {
					public static class: java.lang.Class<com.facebook.litho.IncrementalMountHelper.ViewPagerListener>;
					public onPageSelected(param0: number): void;
					public onPageScrolled(param0: number, param1: number, param2: number): void;
					public onPageScrollStateChanged(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class InterceptTouchEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.InterceptTouchEvent>;
				public view: globalAndroid.view.View;
				public motionEvent: globalAndroid.view.MotionEvent;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class InternalNode extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.InternalNode>;
				/**
				 * Constructs a new instance of the com.facebook.litho.InternalNode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					addChildAt(param0: com.facebook.litho.InternalNode, param1: number): void;
					addComponentNeedingPreviousRenderData(param0: com.facebook.litho.Component): void;
					addTransition(param0: com.facebook.litho.Transition): void;
					addWorkingRanges(param0: java.util.List<com.facebook.litho.WorkingRangeContainer.Registration>): void;
					alignContent(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.InternalNode;
					alignItems(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.InternalNode;
					appendComponent(param0: com.facebook.litho.Component): void;
					appendUnresolvedComponent(param0: com.facebook.litho.Component): void;
					areCachedMeasuresValid(): boolean;
					background(param0: com.facebook.litho.drawable.ComparableDrawable): com.facebook.litho.InternalNode;
					background(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.InternalNode;
					backgroundColor(param0: number): com.facebook.litho.InternalNode;
					backgroundRes(param0: number): com.facebook.litho.InternalNode;
					border(param0: com.facebook.litho.Border): com.facebook.litho.InternalNode;
					border(param0: com.facebook.litho.Edges, param1: native.Array<number>, param2: native.Array<number>): void;
					calculateLayout(param0: number, param1: number): void;
					calculateLayout(): void;
					child(param0: com.facebook.litho.Component): com.facebook.litho.InternalNode;
					child(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.InternalNode;
					child(param0: com.facebook.litho.InternalNode): com.facebook.litho.InternalNode;
					duplicateParentState(param0: boolean): com.facebook.litho.InternalNode;
					flexBasisAuto(): com.facebook.litho.InternalNode;
					flexDirection(param0: com.facebook.yoga.YogaFlexDirection): com.facebook.litho.InternalNode;
					focusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>): com.facebook.litho.InternalNode;
					foreground(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.InternalNode;
					foreground(param0: com.facebook.litho.drawable.ComparableDrawable): com.facebook.litho.InternalNode;
					foregroundColor(param0: number): com.facebook.litho.InternalNode;
					foregroundRes(param0: number): com.facebook.litho.InternalNode;
					fullImpressionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>): com.facebook.litho.InternalNode;
					getBorderColors(): native.Array<number>;
					getBorderPathEffect(): globalAndroid.graphics.PathEffect;
					getBorderRadius(): native.Array<number>;
					getChildAt(param0: number): com.facebook.litho.InternalNode;
					getChildCount(): number;
					getChildIndex(param0: com.facebook.litho.InternalNode): number;
					getComponents(): java.util.List<com.facebook.litho.Component>;
					getUnresolvedComponents(): java.util.List<com.facebook.litho.Component>;
					getComponentsNeedingPreviousRenderData(): java.util.ArrayList<com.facebook.litho.Component>;
					getContext(): com.facebook.litho.ComponentContext;
					getDiffNode(): com.facebook.litho.DiffNode;
					setDiffNode(param0: com.facebook.litho.DiffNode): void;
					getFocusedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>;
					getForeground(): com.facebook.litho.drawable.ComparableDrawable;
					getFullImpressionHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>;
					getHeadComponent(): com.facebook.litho.Component;
					getImportantForAccessibility(): number;
					getInvisibleHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>;
					getLastHeightSpec(): number;
					setLastHeightSpec(param0: number): void;
					getLastMeasuredHeight(): number;
					setLastMeasuredHeight(param0: number): void;
					getLastMeasuredWidth(): number;
					setLastMeasuredWidth(param0: number): void;
					getLastWidthSpec(): number;
					setLastWidthSpec(param0: number): void;
					getLayoutBorder(param0: com.facebook.yoga.YogaEdge): number;
					getMaxHeight(): number;
					getMaxWidth(): number;
					getMinHeight(): number;
					getMinWidth(): number;
					getNestedTree(): com.facebook.litho.InternalNode;
					setNestedTree(param0: com.facebook.litho.InternalNode): void;
					getNestedTreeHolder(): com.facebook.litho.InternalNode;
					getNodeInfo(): com.facebook.litho.NodeInfo;
					setNodeInfo(param0: com.facebook.litho.NodeInfo): void;
					getOrCreateNestedTreeProps(): com.facebook.litho.InternalNode.NestedTreeProps;
					getOrCreateNodeInfo(): com.facebook.litho.NodeInfo;
					getParent(): com.facebook.litho.InternalNode;
					getPendingTreeProps(): com.facebook.litho.TreeProps;
					getTailComponent(): com.facebook.litho.Component;
					setRootComponent(param0: com.facebook.litho.Component): void;
					getStateListAnimator(): globalAndroid.animation.StateListAnimator;
					getStateListAnimatorRes(): number;
					getStyleDirection(): com.facebook.yoga.YogaDirection;
					getStyleHeight(): number;
					getStyleWidth(): number;
					getTestKey(): string;
					getTouchExpansion(): com.facebook.litho.Edges;
					getTouchExpansionBottom(): number;
					getTouchExpansionLeft(): number;
					getTouchExpansionRight(): number;
					getTouchExpansionTop(): number;
					getTransitionKey(): string;
					getTransitionKeyType(): com.facebook.litho.Transition.TransitionKeyType;
					getTransitions(): java.util.ArrayList<com.facebook.litho.Transition>;
					getUnfocusedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>;
					getVisibilityChangedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>;
					getVisibleHandler(): com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>;
					getVisibleHeightRatio(): number;
					getVisibleWidthRatio(): number;
					getWorkingRangeRegistrations(): java.util.ArrayList<com.facebook.litho.WorkingRangeContainer.Registration>;
					getYogaNode(): com.facebook.yoga.YogaNode;
					hasBorderColor(): boolean;
					hasNestedTree(): boolean;
					hasNewLayout(): boolean;
					hasStateListAnimatorResSet(): boolean;
					hasTouchExpansion(): boolean;
					hasTransitionKey(): boolean;
					hasVisibilityHandlers(): boolean;
					heightAuto(): com.facebook.litho.InternalNode;
					importantForAccessibility(param0: number): com.facebook.litho.InternalNode;
					invisibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>): com.facebook.litho.InternalNode;
					isDuplicateParentStateEnabled(): boolean;
					isForceViewWrapping(): boolean;
					isImportantForAccessibilityIsSet(): boolean;
					isInitialized(): boolean;
					isLayoutDirectionInherit(): boolean;
					isNestedTreeHolder(): boolean;
					justifyContent(param0: com.facebook.yoga.YogaJustify): com.facebook.litho.InternalNode;
					markIsNestedTreeHolder(param0: com.facebook.litho.TreeProps): void;
					markLayoutSeen(): void;
					recursivelyResolveLayoutDirection(): com.facebook.yoga.YogaDirection;
					registerDebugComponent(param0: com.facebook.litho.DebugComponent): void;
					removeChildAt(param0: number): com.facebook.litho.InternalNode;
					resetResolvedLayoutProperties(): void;
					setBorderWidth(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					setCachedMeasuresValid(param0: boolean): void;
					setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
					setStyleHeightFromSpec(param0: number): void;
					setStyleWidthFromSpec(param0: number): void;
					shouldDrawBorders(): boolean;
					stateListAnimator(param0: globalAndroid.animation.StateListAnimator): com.facebook.litho.InternalNode;
					stateListAnimatorRes(param0: number): com.facebook.litho.InternalNode;
					testKey(param0: string): com.facebook.litho.InternalNode;
					touchExpansionPx(param0: com.facebook.yoga.YogaEdge, param1: number): com.facebook.litho.InternalNode;
					transitionKey(param0: string): com.facebook.litho.InternalNode;
					transitionKeyType(param0: com.facebook.litho.Transition.TransitionKeyType): com.facebook.litho.InternalNode;
					unfocusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>): com.facebook.litho.InternalNode;
					visibilityChangedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>): com.facebook.litho.InternalNode;
					visibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>): com.facebook.litho.InternalNode;
					visibleHeightRatio(param0: number): com.facebook.litho.InternalNode;
					visibleWidthRatio(param0: number): com.facebook.litho.InternalNode;
					widthAuto(): com.facebook.litho.InternalNode;
					wrap(param0: com.facebook.yoga.YogaWrap): com.facebook.litho.InternalNode;
					wrapInView(): com.facebook.litho.InternalNode;
					applyAttributes(param0: globalAndroid.content.res.TypedArray): void;
					assertContextSpecificStyleNotSet(): void;
					deepClone(): com.facebook.litho.InternalNode;
					getSimpleName(): string;
					reconcile(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): com.facebook.litho.InternalNode;
					getX(): number;
					getY(): number;
					getWidth(): number;
					getHeight(): number;
					getPaddingTop(): number;
					getPaddingRight(): number;
					getPaddingBottom(): number;
					getPaddingLeft(): number;
					isPaddingSet(): boolean;
					getBackground(): com.facebook.litho.drawable.ComparableDrawable;
					getResolvedLayoutDirection(): com.facebook.yoga.YogaDirection;
					widthPx(param0: number): void;
					widthPercent(param0: number): void;
					minWidthPx(param0: number): void;
					maxWidthPx(param0: number): void;
					minWidthPercent(param0: number): void;
					maxWidthPercent(param0: number): void;
					heightPx(param0: number): void;
					heightPercent(param0: number): void;
					minHeightPx(param0: number): void;
					maxHeightPx(param0: number): void;
					minHeightPercent(param0: number): void;
					maxHeightPercent(param0: number): void;
					layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
					alignSelf(param0: com.facebook.yoga.YogaAlign): void;
					flex(param0: number): void;
					flexGrow(param0: number): void;
					flexShrink(param0: number): void;
					flexBasisPx(param0: number): void;
					flexBasisPercent(param0: number): void;
					aspectRatio(param0: number): void;
					positionType(param0: com.facebook.yoga.YogaPositionType): void;
					positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginAuto(param0: com.facebook.yoga.YogaEdge): void;
					isReferenceBaseline(param0: boolean): void;
					useHeightAsBaseline(param0: boolean): void;
					copyInto(param0: any): void;
				});
				public constructor();
				public getHeight(): number;
				public positionType(param0: com.facebook.yoga.YogaPositionType): void;
				public getPaddingTop(): number;
				public paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public addWorkingRanges(param0: java.util.List<com.facebook.litho.WorkingRangeContainer.Registration>): void;
				public getBackground(): com.facebook.litho.drawable.ComparableDrawable;
				public getLastHeightSpec(): number;
				public getMaxHeight(): number;
				public stateListAnimator(param0: globalAndroid.animation.StateListAnimator): com.facebook.litho.InternalNode;
				public getYogaNode(): com.facebook.yoga.YogaNode;
				public getSimpleName(): string;
				/** @deprecated */
				public foreground(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.InternalNode;
				public alignItems(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.InternalNode;
				public setRootComponent(param0: com.facebook.litho.Component): void;
				public marginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public getTouchExpansionBottom(): number;
				public isReferenceBaseline(param0: boolean): void;
				public getDiffNode(): com.facebook.litho.DiffNode;
				public setLastHeightSpec(param0: number): void;
				public getWorkingRangeRegistrations(): java.util.ArrayList<com.facebook.litho.WorkingRangeContainer.Registration>;
				public hasStateListAnimatorResSet(): boolean;
				public getTouchExpansionLeft(): number;
				public isDuplicateParentStateEnabled(): boolean;
				public getLayoutBorder(param0: com.facebook.yoga.YogaEdge): number;
				public getBorderPathEffect(): globalAndroid.graphics.PathEffect;
				public positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public maxWidthPx(param0: number): void;
				public getLastWidthSpec(): number;
				public getStyleWidth(): number;
				public unfocusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>): com.facebook.litho.InternalNode;
				public maxWidthPercent(param0: number): void;
				public backgroundRes(param0: number): com.facebook.litho.InternalNode;
				public getComponents(): java.util.List<com.facebook.litho.Component>;
				public useHeightAsBaseline(param0: boolean): void;
				public wrap(param0: com.facebook.yoga.YogaWrap): com.facebook.litho.InternalNode;
				public isNestedTreeHolder(): boolean;
				public getFocusedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>;
				public getStyleHeight(): number;
				public addComponentNeedingPreviousRenderData(param0: com.facebook.litho.Component): void;
				public getPaddingLeft(): number;
				public getLastMeasuredWidth(): number;
				public getStyleDirection(): com.facebook.yoga.YogaDirection;
				public getTouchExpansionTop(): number;
				public heightPx(param0: number): void;
				public getPendingTreeProps(): com.facebook.litho.TreeProps;
				public setStyleHeightFromSpec(param0: number): void;
				public alignContent(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.InternalNode;
				public addTransition(param0: com.facebook.litho.Transition): void;
				public foreground(param0: com.facebook.litho.drawable.ComparableDrawable): com.facebook.litho.InternalNode;
				public minHeightPercent(param0: number): void;
				public getChildAt(param0: number): com.facebook.litho.InternalNode;
				public widthPx(param0: number): void;
				public getBorderColors(): native.Array<number>;
				public getVisibilityChangedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>;
				public setCachedMeasuresValid(param0: boolean): void;
				public stateListAnimatorRes(param0: number): com.facebook.litho.InternalNode;
				public getPaddingRight(): number;
				public hasVisibilityHandlers(): boolean;
				public setStyleWidthFromSpec(param0: number): void;
				public maxHeightPx(param0: number): void;
				public setNodeInfo(param0: com.facebook.litho.NodeInfo): void;
				public touchExpansionPx(param0: com.facebook.yoga.YogaEdge, param1: number): com.facebook.litho.InternalNode;
				public flexBasisPx(param0: number): void;
				public appendComponent(param0: com.facebook.litho.Component): void;
				public foregroundColor(param0: number): com.facebook.litho.InternalNode;
				public getInvisibleHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>;
				public hasNestedTree(): boolean;
				public markIsNestedTreeHolder(param0: com.facebook.litho.TreeProps): void;
				/** @deprecated */
				public background(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.InternalNode;
				public getChildCount(): number;
				public minWidthPx(param0: number): void;
				public justifyContent(param0: com.facebook.yoga.YogaJustify): com.facebook.litho.InternalNode;
				public transitionKey(param0: string): com.facebook.litho.InternalNode;
				public setDiffNode(param0: com.facebook.litho.DiffNode): void;
				public getImportantForAccessibility(): number;
				public child(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.InternalNode;
				public getPaddingBottom(): number;
				public getBorderRadius(): native.Array<number>;
				public removeChildAt(param0: number): com.facebook.litho.InternalNode;
				public getTailComponent(): com.facebook.litho.Component;
				public shouldDrawBorders(): boolean;
				public visibleHeightRatio(param0: number): com.facebook.litho.InternalNode;
				public focusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>): com.facebook.litho.InternalNode;
				public getHeadComponent(): com.facebook.litho.Component;
				public getContext(): com.facebook.litho.ComponentContext;
				public heightPercent(param0: number): void;
				public flexDirection(param0: com.facebook.yoga.YogaFlexDirection): com.facebook.litho.InternalNode;
				public border(param0: com.facebook.litho.Border): com.facebook.litho.InternalNode;
				public getTransitionKeyType(): com.facebook.litho.Transition.TransitionKeyType;
				public setLastMeasuredHeight(param0: number): void;
				public border(param0: com.facebook.litho.Edges, param1: native.Array<number>, param2: native.Array<number>): void;
				public child(param0: com.facebook.litho.InternalNode): com.facebook.litho.InternalNode;
				public importantForAccessibility(param0: number): com.facebook.litho.InternalNode;
				public getVisibleWidthRatio(): number;
				public foregroundRes(param0: number): com.facebook.litho.InternalNode;
				public getTransitionKey(): string;
				public isPaddingSet(): boolean;
				public hasBorderColor(): boolean;
				public getOrCreateNestedTreeProps(): com.facebook.litho.InternalNode.NestedTreeProps;
				public layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
				public hasTransitionKey(): boolean;
				public getX(): number;
				public getVisibleHandler(): com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>;
				public getStateListAnimatorRes(): number;
				public getNodeInfo(): com.facebook.litho.NodeInfo;
				public getParent(): com.facebook.litho.InternalNode;
				public maxHeightPercent(param0: number): void;
				public child(param0: com.facebook.litho.Component): com.facebook.litho.InternalNode;
				public isForceViewWrapping(): boolean;
				public calculateLayout(): void;
				public visibleWidthRatio(param0: number): com.facebook.litho.InternalNode;
				public widthAuto(): com.facebook.litho.InternalNode;
				public hasNewLayout(): boolean;
				public getForeground(): com.facebook.litho.drawable.ComparableDrawable;
				public minWidthPercent(param0: number): void;
				public setLastWidthSpec(param0: number): void;
				public minHeightPx(param0: number): void;
				public getTouchExpansion(): com.facebook.litho.Edges;
				public alignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public assertContextSpecificStyleNotSet(): void;
				public getResolvedLayoutDirection(): com.facebook.yoga.YogaDirection;
				public getNestedTreeHolder(): com.facebook.litho.InternalNode;
				public getStateListAnimator(): globalAndroid.animation.StateListAnimator;
				public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
				public getMinHeight(): number;
				public applyAttributes(param0: globalAndroid.content.res.TypedArray): void;
				public getY(): number;
				public getMaxWidth(): number;
				public flexGrow(param0: number): void;
				public areCachedMeasuresValid(): boolean;
				public getTouchExpansionRight(): number;
				public addChildAt(param0: com.facebook.litho.InternalNode, param1: number): void;
				public getComponentsNeedingPreviousRenderData(): java.util.ArrayList<com.facebook.litho.Component>;
				public flex(param0: number): void;
				public paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public calculateLayout(param0: number, param1: number): void;
				public getUnresolvedComponents(): java.util.List<com.facebook.litho.Component>;
				public getVisibleHeightRatio(): number;
				public flexShrink(param0: number): void;
				public backgroundColor(param0: number): com.facebook.litho.InternalNode;
				public flexBasisPercent(param0: number): void;
				public getMinWidth(): number;
				public copyInto(param0: any): void;
				public registerDebugComponent(param0: com.facebook.litho.DebugComponent): void;
				public getNestedTree(): com.facebook.litho.InternalNode;
				public setBorderWidth(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public isInitialized(): boolean;
				public getChildIndex(param0: com.facebook.litho.InternalNode): number;
				public setLastMeasuredWidth(param0: number): void;
				public heightAuto(): com.facebook.litho.InternalNode;
				public visibilityChangedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>): com.facebook.litho.InternalNode;
				public isImportantForAccessibilityIsSet(): boolean;
				public transitionKeyType(param0: com.facebook.litho.Transition.TransitionKeyType): com.facebook.litho.InternalNode;
				public getTestKey(): string;
				public visibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>): com.facebook.litho.InternalNode;
				public background(param0: com.facebook.litho.drawable.ComparableDrawable): com.facebook.litho.InternalNode;
				public markLayoutSeen(): void;
				public flexBasisAuto(): com.facebook.litho.InternalNode;
				public resetResolvedLayoutProperties(): void;
				public wrapInView(): com.facebook.litho.InternalNode;
				public getFullImpressionHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>;
				public marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public widthPercent(param0: number): void;
				public testKey(param0: string): com.facebook.litho.InternalNode;
				public appendUnresolvedComponent(param0: com.facebook.litho.Component): void;
				public recursivelyResolveLayoutDirection(): com.facebook.yoga.YogaDirection;
				public setNestedTree(param0: com.facebook.litho.InternalNode): void;
				public getTransitions(): java.util.ArrayList<com.facebook.litho.Transition>;
				public getLastMeasuredHeight(): number;
				public fullImpressionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>): com.facebook.litho.InternalNode;
				public reconcile(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): com.facebook.litho.InternalNode;
				public getWidth(): number;
				public invisibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>): com.facebook.litho.InternalNode;
				public positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public duplicateParentState(param0: boolean): com.facebook.litho.InternalNode;
				public aspectRatio(param0: number): void;
				public getUnfocusedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>;
				public isLayoutDirectionInherit(): boolean;
				public deepClone(): com.facebook.litho.InternalNode;
				public getOrCreateNodeInfo(): com.facebook.litho.NodeInfo;
				public hasTouchExpansion(): boolean;
			}
			export module InternalNode {
				export class NestedTreeProps extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.InternalNode.NestedTreeProps>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class InternalNodeUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.InternalNodeUtils>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class InvisibleEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.InvisibleEvent>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class KeyHandler extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.KeyHandler>;
				public constructor(param0: com.facebook.litho.ComponentsLogger);
				public registerKey(param0: com.facebook.litho.Component): void;
				public hasKey(param0: string): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Layout extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.Layout>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LayoutOutput extends java.lang.Object implements java.lang.Cloneable, com.facebook.litho.AnimatableItem {
				public static class: java.lang.Class<com.facebook.litho.LayoutOutput>;
				public static STATE_UNKNOWN: number;
				public static STATE_UPDATED: number;
				public static STATE_DIRTY: number;
				public constructor(param0: com.facebook.litho.NodeInfo, param1: com.facebook.litho.ViewNodeInfo, param2: com.facebook.litho.Component, param3: globalAndroid.graphics.Rect, param4: number, param5: number, param6: number, param7: number, param8: number, param9: number, param10: com.facebook.litho.TransitionId);
				public getRotationY(): number;
				public getScale(): number;
				public isRotationXSet(): boolean;
				public getImportantForAccessibility(): number;
				public getAlpha(): number;
				public getRotationX(): number;
				public getTransitionId(): com.facebook.litho.TransitionId;
				public isRotationYSet(): boolean;
				public getBounds(): globalAndroid.graphics.Rect;
				public getRotation(): number;
				public getUpdateState(): number;
				public isScaleSet(): boolean;
				public isAlphaSet(): boolean;
				public isRotationSet(): boolean;
				public setUpdateState(param0: number): void;
			}
			export module LayoutOutput {
				export class UpdateState extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.LayoutOutput.UpdateState>;
					/**
					 * Constructs a new instance of the com.facebook.litho.LayoutOutput$UpdateState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LayoutPriorityThreadPoolExecutor extends java.util.concurrent.ThreadPoolExecutor {
				public static class: java.lang.Class<com.facebook.litho.LayoutPriorityThreadPoolExecutor>;
				public invokeAll(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.List<any>;
				public constructor(param0: number, param1: number, param2: number);
				public submit(param0: java.lang.Runnable): java.util.concurrent.Future<any>;
				public isTerminated(): boolean;
				public submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.Future<any>;
				public submit(param0: java.util.concurrent.Callable<any>, param1: number): java.util.concurrent.Future<any>;
				public constructor(param0: number, param1: number, param2: number, param3: java.util.concurrent.TimeUnit, param4: java.util.concurrent.BlockingQueue<java.lang.Runnable>);
				public constructor(param0: number, param1: number, param2: number, param3: java.util.concurrent.TimeUnit, param4: java.util.concurrent.BlockingQueue<java.lang.Runnable>, param5: java.util.concurrent.ThreadFactory, param6: java.util.concurrent.RejectedExecutionHandler);
				public invokeAny(param0: java.util.Collection<any>): any;
				public constructor();
				public submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.Future<any>;
				public awaitTermination(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
				public shutdown(): void;
				public shutdownNow(): java.util.List<java.lang.Runnable>;
				public isShutdown(): boolean;
				public invokeAll(param0: java.util.Collection<any>): java.util.List<any>;
				public constructor(param0: number, param1: number, param2: number, param3: java.util.concurrent.TimeUnit, param4: java.util.concurrent.BlockingQueue<java.lang.Runnable>, param5: java.util.concurrent.ThreadFactory);
				public constructor(param0: number, param1: number, param2: number, param3: java.util.concurrent.TimeUnit, param4: java.util.concurrent.BlockingQueue<java.lang.Runnable>, param5: java.util.concurrent.RejectedExecutionHandler);
				public invokeAny(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
			}
			export module LayoutPriorityThreadPoolExecutor {
				export class ComparableFutureTask<T>  extends java.util.concurrent.FutureTask<any> implements java.lang.Comparable<com.facebook.litho.LayoutPriorityThreadPoolExecutor.ComparableFutureTask<any>>  {
					public static class: java.lang.Class<com.facebook.litho.LayoutPriorityThreadPoolExecutor.ComparableFutureTask<any>>;
					public compareTo(param0: com.facebook.litho.LayoutPriorityThreadPoolExecutor.ComparableFutureTask<any>): number;
					public run(): void;
					public constructor(param0: java.util.concurrent.Callable<any>);
					public constructor(param0: java.util.concurrent.Callable<any>, param1: number);
					public constructor(param0: java.lang.Runnable, param1: any);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LayoutProps extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.LayoutProps>;
				/**
				 * Constructs a new instance of the com.facebook.litho.LayoutProps interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					widthPx(param0: number): void;
					widthPercent(param0: number): void;
					minWidthPx(param0: number): void;
					maxWidthPx(param0: number): void;
					minWidthPercent(param0: number): void;
					maxWidthPercent(param0: number): void;
					heightPx(param0: number): void;
					heightPercent(param0: number): void;
					minHeightPx(param0: number): void;
					maxHeightPx(param0: number): void;
					minHeightPercent(param0: number): void;
					maxHeightPercent(param0: number): void;
					layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
					alignSelf(param0: com.facebook.yoga.YogaAlign): void;
					flex(param0: number): void;
					flexGrow(param0: number): void;
					flexShrink(param0: number): void;
					flexBasisPx(param0: number): void;
					flexBasisPercent(param0: number): void;
					aspectRatio(param0: number): void;
					positionType(param0: com.facebook.yoga.YogaPositionType): void;
					positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
					marginAuto(param0: com.facebook.yoga.YogaEdge): void;
					isReferenceBaseline(param0: boolean): void;
					useHeightAsBaseline(param0: boolean): void;
				});
				public constructor();
				public heightPx(param0: number): void;
				public positionType(param0: com.facebook.yoga.YogaPositionType): void;
				public flexGrow(param0: number): void;
				public minHeightPercent(param0: number): void;
				public paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public widthPx(param0: number): void;
				public flex(param0: number): void;
				public paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public flexShrink(param0: number): void;
				public layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
				public flexBasisPercent(param0: number): void;
				public maxHeightPx(param0: number): void;
				public marginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public isReferenceBaseline(param0: boolean): void;
				public flexBasisPx(param0: number): void;
				public maxHeightPercent(param0: number): void;
				public positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public maxWidthPx(param0: number): void;
				public marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public minWidthPx(param0: number): void;
				public maxWidthPercent(param0: number): void;
				public marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public widthPercent(param0: number): void;
				public useHeightAsBaseline(param0: boolean): void;
				public minWidthPercent(param0: number): void;
				public positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public minHeightPx(param0: number): void;
				public alignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public aspectRatio(param0: number): void;
				public heightPercent(param0: number): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LayoutState extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.LayoutState>;
				public getDiffTree(): com.facebook.litho.DiffNode;
				public static hasCompatibleSizeSpec(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): boolean;
			}
			export module LayoutState {
				export class CalculateLayoutSource extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.LayoutState.CalculateLayoutSource>;
					/**
					 * Constructs a new instance of the com.facebook.litho.LayoutState$CalculateLayoutSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public static SET_ROOT_ASYNC: number;
					public static UPDATE_STATE_ASYNC: number;
					public static NONE: number;
					public static SET_ROOT_SYNC: number;
					public static SET_SIZE_SPEC_SYNC: number;
					public static UPDATE_STATE_SYNC: number;
					public static TEST: number;
					public static SET_SIZE_SPEC_ASYNC: number;
					public static MEASURE: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LayoutStateOutputIdCalculator extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.LayoutStateOutputIdCalculator>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LayoutThreadFactory extends java.lang.Object implements java.util.concurrent.ThreadFactory {
				public static class: java.lang.Class<com.facebook.litho.LayoutThreadFactory>;
				public constructor(param0: number);
				public newThread(param0: java.lang.Runnable): java.lang.Thread;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LayoutThreadPoolConfigurationImpl extends java.lang.Object implements com.facebook.litho.config.LayoutThreadPoolConfiguration {
				public static class: java.lang.Class<com.facebook.litho.LayoutThreadPoolConfigurationImpl>;
				public constructor(param0: number, param1: number, param2: number);
				public getCorePoolSize(): number;
				public getThreadPriority(): number;
				public getMaxPoolSize(): number;
			}
			export module LayoutThreadPoolConfigurationImpl {
				export class Builder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.LayoutThreadPoolConfigurationImpl.Builder>;
					public coreDependentPoolConfiguration(param0: number, param1: number, param2: number, param3: number): com.facebook.litho.LayoutThreadPoolConfigurationImpl.Builder;
					public threadPriority(param0: number): com.facebook.litho.LayoutThreadPoolConfigurationImpl.Builder;
					public fixedSizePoolConfiguration(param0: number, param1: number): com.facebook.litho.LayoutThreadPoolConfigurationImpl.Builder;
					public build(): com.facebook.litho.LayoutThreadPoolConfigurationImpl;
					public constructor();
					public hasFixedSizePool(param0: boolean): com.facebook.litho.LayoutThreadPoolConfigurationImpl.Builder;
					public logger(param0: com.facebook.litho.ComponentsLogger): com.facebook.litho.LayoutThreadPoolConfigurationImpl.Builder;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LayoutThreadPoolExecutor extends java.util.concurrent.ThreadPoolExecutor {
				public static class: java.lang.Class<com.facebook.litho.LayoutThreadPoolExecutor>;
				public invokeAll(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): java.util.List<any>;
				public constructor(param0: number, param1: number, param2: number);
				public isTerminated(): boolean;
				public submit(param0: java.lang.Runnable): java.util.concurrent.Future<any>;
				public submit(param0: java.lang.Runnable, param1: any): java.util.concurrent.Future<any>;
				public constructor(param0: number, param1: number, param2: number, param3: java.util.concurrent.TimeUnit, param4: java.util.concurrent.BlockingQueue<java.lang.Runnable>);
				public constructor(param0: number, param1: number, param2: number, param3: java.util.concurrent.TimeUnit, param4: java.util.concurrent.BlockingQueue<java.lang.Runnable>, param5: java.util.concurrent.ThreadFactory, param6: java.util.concurrent.RejectedExecutionHandler);
				public invokeAny(param0: java.util.Collection<any>): any;
				public constructor();
				public awaitTermination(param0: number, param1: java.util.concurrent.TimeUnit): boolean;
				public submit(param0: java.util.concurrent.Callable<any>): java.util.concurrent.Future<any>;
				public shutdown(): void;
				public shutdownNow(): java.util.List<java.lang.Runnable>;
				public isShutdown(): boolean;
				public invokeAll(param0: java.util.Collection<any>): java.util.List<any>;
				public constructor(param0: number, param1: number, param2: number, param3: java.util.concurrent.TimeUnit, param4: java.util.concurrent.BlockingQueue<java.lang.Runnable>, param5: java.util.concurrent.ThreadFactory);
				public constructor(param0: number, param1: number, param2: number, param3: java.util.concurrent.TimeUnit, param4: java.util.concurrent.BlockingQueue<java.lang.Runnable>, param5: java.util.concurrent.RejectedExecutionHandler);
				public invokeAny(param0: java.util.Collection<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LithoDebugInfo extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.LithoDebugInfo>;
				public static getPools(): java.util.List<com.facebook.litho.PoolWithDebugInfo>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LithoHandler extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.LithoHandler>;
				/**
				 * Constructs a new instance of the com.facebook.litho.LithoHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					isTracing(): boolean;
					post(param0: java.lang.Runnable, param1: string): void;
					remove(param0: java.lang.Runnable): void;
				});
				public constructor();
				public isTracing(): boolean;
				public remove(param0: java.lang.Runnable): void;
				public post(param0: java.lang.Runnable, param1: string): void;
			}
			export module LithoHandler {
				export class DefaultLithoHandler extends globalAndroid.os.Handler implements com.facebook.litho.LithoHandler {
					public static class: java.lang.Class<com.facebook.litho.LithoHandler.DefaultLithoHandler>;
					public post(param0: java.lang.Runnable, param1: string): void;
					public remove(param0: java.lang.Runnable): void;
					public isTracing(): boolean;
					public constructor();
					public constructor(param0: globalAndroid.os.Looper, param1: globalAndroid.os.Handler.Callback);
					public constructor(param0: globalAndroid.os.Handler.Callback);
					public post(param0: java.lang.Runnable): boolean;
					public constructor(param0: globalAndroid.os.Looper);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LithoTooltip extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.LithoTooltip>;
				/**
				 * Constructs a new instance of the com.facebook.litho.LithoTooltip interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					showLithoTooltip(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: number, param3: number): void;
				});
				public constructor();
				public showLithoTooltip(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: number, param3: number): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LithoTooltipController extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.LithoTooltipController>;
				public static showTooltipOnRootComponent(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.LithoTooltip): void;
				public static showTooltip(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.LithoTooltip, param2: string, param3: number, param4: number): void;
				public static showTooltipOnRootComponent(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.LithoTooltip, param2: number, param3: number): void;
				public static showTooltip(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.LithoTooltip, param2: string): void;
				/** @deprecated */
				public static showTooltip(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.DeprecatedLithoTooltip, param2: string, param3: com.facebook.litho.TooltipPosition, param4: number, param5: number): void;
				/** @deprecated */
				public static showTooltip(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.DeprecatedLithoTooltip, param2: string, param3: com.facebook.litho.TooltipPosition): void;
				public static showTooltipOnRootComponent(param0: com.facebook.litho.ComponentContext, param1: globalAndroid.widget.PopupWindow, param2: number, param3: number): void;
				public static showTooltip(param0: com.facebook.litho.ComponentContext, param1: globalAndroid.widget.PopupWindow, param2: string, param3: number, param4: number): void;
				/** @deprecated */
				public static showTooltip(param0: com.facebook.litho.ComponentContext, param1: globalAndroid.widget.PopupWindow, param2: string, param3: com.facebook.litho.TooltipPosition, param4: number, param5: number): void;
				public constructor();
				/** @deprecated */
				public static showTooltip(param0: com.facebook.litho.ComponentContext, param1: globalAndroid.widget.PopupWindow, param2: string, param3: com.facebook.litho.TooltipPosition): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LithoView extends com.facebook.litho.ComponentHost {
				public static class: java.lang.Class<com.facebook.litho.LithoView>;
				public static ZERO_HEIGHT_LOG: string;
				public static SET_ALREADY_ATTACHED_COMPONENT_TREE: string;
				public childDrawableStateChanged(param0: globalAndroid.view.View): void;
				public clearChildFocus(param0: globalAndroid.view.View): void;
				/** @deprecated */
				public addView(param0: globalAndroid.view.View): void;
				public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public setVisibilityHint(param0: boolean): void;
				public performIncrementalMount(): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
				public isLayoutRequested(): boolean;
				public sendAccessibilityEvent(param0: number): void;
				public shouldRequestLayout(): boolean;
				public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
				public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public getTextDirection(): number;
				public setOnPostDrawListener(param0: com.facebook.litho.LithoView.OnPostDrawListener): void;
				public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
				public setComponentTree(param0: com.facebook.litho.ComponentTree): void;
				public setInvalidStateLogParamsList(param0: java.util.List<com.facebook.litho.ComponentLogParams>): void;
				public isIncrementalMountEnabled(): boolean;
				public setAnimatedHeight(param0: number): void;
				public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public getParentForAccessibility(): globalAndroid.view.ViewParent;
				public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
				/** @deprecated */
				public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
				public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
				public isTextDirectionResolved(): boolean;
				public setOnDirtyMountListener(param0: com.facebook.litho.LithoView.OnDirtyMountListener): void;
				public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public getComponentTree(): com.facebook.litho.ComponentTree;
				public onFinishTemporaryDetach(): void;
				public isLayoutDirectionResolved(): boolean;
				public constructor(param0: com.facebook.litho.ComponentContext);
				public setAnimatedWidth(param0: number): void;
				public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setComponent(param0: com.facebook.litho.Component): void;
				public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
				public focusSearch(param0: number): globalAndroid.view.View;
				public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
				/** @deprecated */
				public requestFitSystemWindows(): void;
				public bringChildToFront(param0: globalAndroid.view.View): void;
				public setHasTransientState(param0: boolean): void;
				public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public release(): void;
				public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
				public offsetTopAndBottom(param0: number): void;
				public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
				public getPreviousMountBounds(): globalAndroid.graphics.Rect;
				public unbind(): void;
				public onStartTemporaryDetach(): void;
				public rerenderForAccessibility(param0: boolean): void;
				public onStopNestedScroll(param0: globalAndroid.view.View): void;
				public onAttachedToWindow(): void;
				/** @deprecated */
				public dispatchVisibilityEvent(param0: java.lang.Class<any>): void;
				public getParent(): globalAndroid.view.ViewParent;
				public requestDisallowInterceptTouchEvent(param0: boolean): void;
				/** @deprecated */
				public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
				public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
				public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public offsetLeftAndRight(param0: number): void;
				public shouldAlwaysLayoutChildren(): boolean;
				public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
				public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
				public performLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public performIncrementalMount(param0: globalAndroid.graphics.Rect, param1: boolean): void;
				public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
				public requestFitSystemWindows(): void;
				public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
				public requestTransparentRegion(param0: globalAndroid.view.View): void;
				public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
				public suppressMeasureComponentTree(param0: boolean): void;
				public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
				public getTextAlignment(): number;
				public toString(): string;
				public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
				public static create(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): com.facebook.litho.LithoView;
				public rebind(): void;
				public static create(param0: globalAndroid.content.Context, param1: com.facebook.litho.Component): com.facebook.litho.LithoView;
				public onDetachedFromWindow(): void;
				public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
				public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
				public setTranslationX(param0: number): void;
				public recomputeViewAttributes(param0: globalAndroid.view.View): void;
				/** @deprecated */
				public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
				public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
				public isTextAlignmentResolved(): boolean;
				public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
				public constructor(param0: com.facebook.litho.ComponentContext, param1: globalAndroid.util.AttributeSet);
				public getLayoutDirection(): number;
				public removeView(param0: globalAndroid.view.View): void;
				public canResolveTextDirection(): boolean;
				public canResolveTextAlignment(): boolean;
				/** @deprecated */
				public addView(param0: globalAndroid.view.View, param1: number): void;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public setComponentAsync(param0: com.facebook.litho.Component): void;
				public forceRelayout(): void;
				public unmountAllItems(): void;
				public requestLayout(): void;
				public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public constructor(param0: globalAndroid.content.Context);
				public startTemporaryDetach(): void;
				public setTranslationY(param0: number): void;
				public getComponentContext(): com.facebook.litho.ComponentContext;
				public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
				public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
				public focusableViewAvailable(param0: globalAndroid.view.View): void;
				public canResolveLayoutDirection(): boolean;
				/** @deprecated */
				public removeView(param0: globalAndroid.view.View): void;
				public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
				public onMeasure(param0: number, param1: number): void;
				public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
			}
			export module LithoView {
				export class AccessibilityStateChangeListener extends androidx.core.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat {
					public static class: java.lang.Class<com.facebook.litho.LithoView.AccessibilityStateChangeListener>;
					/** @deprecated */
					public onAccessibilityStateChanged(param0: boolean): void;
					public onAccessibilityStateChanged(param0: boolean): void;
				}
				export class LayoutManagerOverrideParams extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.LithoView.LayoutManagerOverrideParams>;
					/**
					 * Constructs a new instance of the com.facebook.litho.LithoView$LayoutManagerOverrideParams interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getWidthMeasureSpec(): number;
						getHeightMeasureSpec(): number;
						hasValidAdapterPosition(): boolean;
					});
					public constructor();
					public static UNINITIALIZED: number;
					public getWidthMeasureSpec(): number;
					public getHeightMeasureSpec(): number;
					public hasValidAdapterPosition(): boolean;
				}
				export class OnDirtyMountListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.LithoView.OnDirtyMountListener>;
					/**
					 * Constructs a new instance of the com.facebook.litho.LithoView$OnDirtyMountListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onDirtyMount(param0: com.facebook.litho.LithoView): void;
					});
					public constructor();
					public onDirtyMount(param0: com.facebook.litho.LithoView): void;
				}
				export class OnPostDrawListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.LithoView.OnPostDrawListener>;
					/**
					 * Constructs a new instance of the com.facebook.litho.LithoView$OnPostDrawListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPostDraw(): void;
					});
					public constructor();
					public onPostDraw(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LithoViewTestHelper extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.LithoViewTestHelper>;
				public static findTestItem(param0: com.facebook.litho.LithoView, param1: string): com.facebook.litho.TestItem;
				public static viewToString(param0: com.facebook.litho.LithoView): string;
				public static findTestItems(param0: com.facebook.litho.LithoView, param1: string): java.util.Deque<com.facebook.litho.TestItem>;
				public static getRootLayoutRef(param0: com.facebook.litho.LithoView): com.facebook.litho.LithoViewTestHelper.InternalNodeRef;
				public static setRootLayoutRef(param0: com.facebook.litho.LithoView, param1: com.facebook.litho.LithoViewTestHelper.InternalNodeRef): void;
				public static viewToString(param0: com.facebook.litho.LithoView, param1: boolean): string;
				public static toDebugString(param0: com.facebook.litho.LithoView): string;
				public constructor();
			}
			export module LithoViewTestHelper {
				export class InternalNodeRef extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.LithoViewTestHelper.InternalNodeRef>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LogTreePopulator extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.LogTreePopulator>;
				public static getAnnotationBundleFromLogger(param0: com.facebook.litho.Component, param1: com.facebook.litho.ComponentsLogger): string;
				public static populatePerfEventFromLogger(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentsLogger, param2: com.facebook.litho.PerfEvent): com.facebook.litho.PerfEvent;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LongClickEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.LongClickEvent>;
				public view: globalAndroid.view.View;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class LruResourceCache extends com.facebook.litho.ResourceCache {
				public static class: java.lang.Class<com.facebook.litho.LruResourceCache>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class MatrixDrawable<T>  extends globalAndroid.graphics.drawable.Drawable {
				public static class: java.lang.Class<com.facebook.litho.MatrixDrawable<any>>;
				public static UNSET: number;
				public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
				public getTransparentRegion(): globalAndroid.graphics.Region;
				public unmount(): void;
				public shouldHandleTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public draw(param0: globalAndroid.graphics.Canvas): void;
				public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
				public getPadding(param0: globalAndroid.graphics.Rect): boolean;
				public constructor();
				public setBounds(param0: globalAndroid.graphics.Rect): void;
				public getMountedDrawable(): any;
				public getIntrinsicWidth(): number;
				public setChangingConfigurations(param0: number): void;
				public getMinimumWidth(): number;
				public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
				public bind(param0: number, param1: number): void;
				public mount(param0: any): void;
				/** @deprecated */
				public setDither(param0: boolean): void;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.View): boolean;
				public getCurrent(): globalAndroid.graphics.drawable.Drawable;
				public onLevelChange(param0: number): boolean;
				public getState(): native.Array<number>;
				public mount(param0: any, param1: com.facebook.litho.DrawableMatrix): void;
				public setBounds(param0: number, param1: number, param2: number, param3: number): void;
				public setDither(param0: boolean): void;
				public getChangingConfigurations(): number;
				public setAlpha(param0: number): void;
				public getMinimumHeight(): number;
				public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				public getIntrinsicHeight(): number;
				public setState(param0: native.Array<number>): boolean;
				public setVisible(param0: boolean, param1: boolean): boolean;
				public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
				public setFilterBitmap(param0: boolean): void;
				public getOpacity(): number;
				public isStateful(): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class MeasureComparisonUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.MeasureComparisonUtils>;
				public static isMeasureSpecCompatible(param0: number, param1: number, param2: number): boolean;
				public static areMeasureSpecsEquivalent(param0: number, param1: number): boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class MountContentPool<T>  extends com.facebook.litho.PoolWithDebugInfo {
				public static class: java.lang.Class<com.facebook.litho.MountContentPool<any>>;
				/**
				 * Constructs a new instance of the com.facebook.litho.MountContentPool<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					acquire(param0: globalAndroid.content.Context, param1: com.facebook.litho.ComponentLifecycle): any;
					release(param0: any): void;
					maybePreallocateContent(param0: globalAndroid.content.Context, param1: com.facebook.litho.ComponentLifecycle): void;
					getName(): string;
					getMaxSize(): number;
					getCurrentSize(): number;
				});
				public constructor();
				public release(param0: any): void;
				public getCurrentSize(): number;
				public maybePreallocateContent(param0: globalAndroid.content.Context, param1: com.facebook.litho.ComponentLifecycle): void;
				public acquire(param0: globalAndroid.content.Context, param1: com.facebook.litho.ComponentLifecycle): any;
				public getName(): string;
				public getMaxSize(): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class MountItem extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.MountItem>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class MountState extends java.lang.Object implements com.facebook.litho.TransitionManager.OnAnimationCompleteListener {
				public static class: java.lang.Class<com.facebook.litho.MountState>;
				public constructor(param0: com.facebook.litho.LithoView);
				public onAnimationComplete(param0: com.facebook.litho.TransitionId): void;
			}
			export module MountState {
				export class MountStats extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.MountState.MountStats>;
				}
				export class PrepareMountStats extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.MountState.PrepareMountStats>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class NoOpInternalNode extends java.lang.Object implements com.facebook.litho.InternalNode {
				public static class: java.lang.Class<com.facebook.litho.NoOpInternalNode>;
				public getHeight(): number;
				public positionType(param0: com.facebook.yoga.YogaPositionType): void;
				public getPaddingTop(): number;
				public paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public addWorkingRanges(param0: java.util.List<com.facebook.litho.WorkingRangeContainer.Registration>): void;
				public getBackground(): com.facebook.litho.drawable.ComparableDrawable;
				public getLastHeightSpec(): number;
				public getMaxHeight(): number;
				public stateListAnimator(param0: globalAndroid.animation.StateListAnimator): com.facebook.litho.InternalNode;
				public getYogaNode(): com.facebook.yoga.YogaNode;
				public getSimpleName(): string;
				/** @deprecated */
				public foreground(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.InternalNode;
				public alignItems(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.InternalNode;
				public setRootComponent(param0: com.facebook.litho.Component): void;
				public marginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public getTouchExpansionBottom(): number;
				public isReferenceBaseline(param0: boolean): void;
				public getDiffNode(): com.facebook.litho.DiffNode;
				public setLastHeightSpec(param0: number): void;
				public getWorkingRangeRegistrations(): java.util.ArrayList<com.facebook.litho.WorkingRangeContainer.Registration>;
				public hasStateListAnimatorResSet(): boolean;
				public getTouchExpansionLeft(): number;
				public isDuplicateParentStateEnabled(): boolean;
				public getLayoutBorder(param0: com.facebook.yoga.YogaEdge): number;
				public getBorderPathEffect(): globalAndroid.graphics.PathEffect;
				public positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public maxWidthPx(param0: number): void;
				public getLastWidthSpec(): number;
				public getStyleWidth(): number;
				public unfocusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>): com.facebook.litho.InternalNode;
				public maxWidthPercent(param0: number): void;
				public backgroundRes(param0: number): com.facebook.litho.InternalNode;
				public getComponents(): java.util.List<com.facebook.litho.Component>;
				public useHeightAsBaseline(param0: boolean): void;
				public wrap(param0: com.facebook.yoga.YogaWrap): com.facebook.litho.InternalNode;
				public isNestedTreeHolder(): boolean;
				public getFocusedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>;
				public getStyleHeight(): number;
				public addComponentNeedingPreviousRenderData(param0: com.facebook.litho.Component): void;
				public getPaddingLeft(): number;
				public getLastMeasuredWidth(): number;
				public getStyleDirection(): com.facebook.yoga.YogaDirection;
				public getTouchExpansionTop(): number;
				public heightPx(param0: number): void;
				public getPendingTreeProps(): com.facebook.litho.TreeProps;
				public setStyleHeightFromSpec(param0: number): void;
				public alignContent(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.InternalNode;
				public addTransition(param0: com.facebook.litho.Transition): void;
				public foreground(param0: com.facebook.litho.drawable.ComparableDrawable): com.facebook.litho.InternalNode;
				public minHeightPercent(param0: number): void;
				public getChildAt(param0: number): com.facebook.litho.InternalNode;
				public widthPx(param0: number): void;
				public getBorderColors(): native.Array<number>;
				public getVisibilityChangedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>;
				public setCachedMeasuresValid(param0: boolean): void;
				public getPaddingRight(): number;
				public stateListAnimatorRes(param0: number): com.facebook.litho.InternalNode;
				public hasVisibilityHandlers(): boolean;
				public setStyleWidthFromSpec(param0: number): void;
				public maxHeightPx(param0: number): void;
				public setNodeInfo(param0: com.facebook.litho.NodeInfo): void;
				public touchExpansionPx(param0: com.facebook.yoga.YogaEdge, param1: number): com.facebook.litho.InternalNode;
				public flexBasisPx(param0: number): void;
				public appendComponent(param0: com.facebook.litho.Component): void;
				public foregroundColor(param0: number): com.facebook.litho.InternalNode;
				public getInvisibleHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>;
				public hasNestedTree(): boolean;
				public markIsNestedTreeHolder(param0: com.facebook.litho.TreeProps): void;
				/** @deprecated */
				public background(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.InternalNode;
				public getChildCount(): number;
				public minWidthPx(param0: number): void;
				public justifyContent(param0: com.facebook.yoga.YogaJustify): com.facebook.litho.InternalNode;
				public transitionKey(param0: string): com.facebook.litho.InternalNode;
				public setDiffNode(param0: com.facebook.litho.DiffNode): void;
				public getImportantForAccessibility(): number;
				public child(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.InternalNode;
				public getPaddingBottom(): number;
				public getBorderRadius(): native.Array<number>;
				public removeChildAt(param0: number): com.facebook.litho.InternalNode;
				public getTailComponent(): com.facebook.litho.Component;
				public shouldDrawBorders(): boolean;
				public visibleHeightRatio(param0: number): com.facebook.litho.InternalNode;
				public focusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>): com.facebook.litho.InternalNode;
				public getHeadComponent(): com.facebook.litho.Component;
				public foreground(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.InternalNode;
				public getContext(): com.facebook.litho.ComponentContext;
				public heightPercent(param0: number): void;
				public flexDirection(param0: com.facebook.yoga.YogaFlexDirection): com.facebook.litho.InternalNode;
				public border(param0: com.facebook.litho.Border): com.facebook.litho.InternalNode;
				public getTransitionKeyType(): com.facebook.litho.Transition.TransitionKeyType;
				public setLastMeasuredHeight(param0: number): void;
				public border(param0: com.facebook.litho.Edges, param1: native.Array<number>, param2: native.Array<number>): void;
				public child(param0: com.facebook.litho.InternalNode): com.facebook.litho.InternalNode;
				public importantForAccessibility(param0: number): com.facebook.litho.InternalNode;
				public getVisibleWidthRatio(): number;
				public foregroundRes(param0: number): com.facebook.litho.InternalNode;
				public isPaddingSet(): boolean;
				public getTransitionKey(): string;
				public hasBorderColor(): boolean;
				public getOrCreateNestedTreeProps(): com.facebook.litho.InternalNode.NestedTreeProps;
				public layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
				public getX(): number;
				public hasTransitionKey(): boolean;
				public getVisibleHandler(): com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>;
				public getStateListAnimatorRes(): number;
				public getNodeInfo(): com.facebook.litho.NodeInfo;
				public getParent(): com.facebook.litho.InternalNode;
				public maxHeightPercent(param0: number): void;
				public child(param0: com.facebook.litho.Component): com.facebook.litho.InternalNode;
				public isForceViewWrapping(): boolean;
				public calculateLayout(): void;
				public visibleWidthRatio(param0: number): com.facebook.litho.InternalNode;
				public widthAuto(): com.facebook.litho.InternalNode;
				public copyInto(param0: com.facebook.litho.InternalNode): void;
				public hasNewLayout(): boolean;
				public getForeground(): com.facebook.litho.drawable.ComparableDrawable;
				public minWidthPercent(param0: number): void;
				public setLastWidthSpec(param0: number): void;
				public minHeightPx(param0: number): void;
				public getTouchExpansion(): com.facebook.litho.Edges;
				public alignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public background(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.InternalNode;
				public assertContextSpecificStyleNotSet(): void;
				public getResolvedLayoutDirection(): com.facebook.yoga.YogaDirection;
				public getNestedTreeHolder(): com.facebook.litho.InternalNode;
				public getStateListAnimator(): globalAndroid.animation.StateListAnimator;
				public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
				public getMinHeight(): number;
				public applyAttributes(param0: globalAndroid.content.res.TypedArray): void;
				public getY(): number;
				public getMaxWidth(): number;
				public flexGrow(param0: number): void;
				public areCachedMeasuresValid(): boolean;
				public getTouchExpansionRight(): number;
				public addChildAt(param0: com.facebook.litho.InternalNode, param1: number): void;
				public getComponentsNeedingPreviousRenderData(): java.util.ArrayList<com.facebook.litho.Component>;
				public flex(param0: number): void;
				public paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public calculateLayout(param0: number, param1: number): void;
				public getUnresolvedComponents(): java.util.List<com.facebook.litho.Component>;
				public getVisibleHeightRatio(): number;
				public flexShrink(param0: number): void;
				public backgroundColor(param0: number): com.facebook.litho.InternalNode;
				public flexBasisPercent(param0: number): void;
				public getMinWidth(): number;
				public copyInto(param0: any): void;
				public registerDebugComponent(param0: com.facebook.litho.DebugComponent): void;
				public getNestedTree(): com.facebook.litho.InternalNode;
				public setBorderWidth(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public isInitialized(): boolean;
				public getChildIndex(param0: com.facebook.litho.InternalNode): number;
				public setLastMeasuredWidth(param0: number): void;
				public heightAuto(): com.facebook.litho.InternalNode;
				public visibilityChangedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>): com.facebook.litho.InternalNode;
				public isImportantForAccessibilityIsSet(): boolean;
				public transitionKeyType(param0: com.facebook.litho.Transition.TransitionKeyType): com.facebook.litho.InternalNode;
				public getTestKey(): string;
				public visibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>): com.facebook.litho.InternalNode;
				public background(param0: com.facebook.litho.drawable.ComparableDrawable): com.facebook.litho.InternalNode;
				public markLayoutSeen(): void;
				public flexBasisAuto(): com.facebook.litho.InternalNode;
				public resetResolvedLayoutProperties(): void;
				public wrapInView(): com.facebook.litho.InternalNode;
				public getFullImpressionHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>;
				public marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public widthPercent(param0: number): void;
				public testKey(param0: string): com.facebook.litho.InternalNode;
				public appendUnresolvedComponent(param0: com.facebook.litho.Component): void;
				public recursivelyResolveLayoutDirection(): com.facebook.yoga.YogaDirection;
				public setNestedTree(param0: com.facebook.litho.InternalNode): void;
				public getTransitions(): java.util.ArrayList<com.facebook.litho.Transition>;
				public getLastMeasuredHeight(): number;
				public fullImpressionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>): com.facebook.litho.InternalNode;
				public getWidth(): number;
				public reconcile(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): com.facebook.litho.InternalNode;
				public invisibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>): com.facebook.litho.InternalNode;
				public positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public duplicateParentState(param0: boolean): com.facebook.litho.InternalNode;
				public aspectRatio(param0: number): void;
				public getUnfocusedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>;
				public isLayoutDirectionInherit(): boolean;
				public deepClone(): com.facebook.litho.InternalNode;
				public getOrCreateNodeInfo(): com.facebook.litho.NodeInfo;
				public hasTouchExpansion(): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class NoOpPerfEvent extends java.lang.Object implements com.facebook.litho.PerfEvent {
				public static class: java.lang.Class<com.facebook.litho.NoOpPerfEvent>;
				public getMarkerId(): number;
				public markerAnnotate(param0: string, param1: boolean): void;
				public markerPoint(param0: string): void;
				public getInstanceKey(): number;
				public markerAnnotate(param0: string, param1: native.Array<java.lang.Double>): void;
				public markerAnnotate(param0: string, param1: string): void;
				public markerAnnotate(param0: string, param1: native.Array<string>): void;
				public markerAnnotate(param0: string, param1: native.Array<number>): void;
				public markerAnnotate(param0: string, param1: number): void;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class NodeConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.NodeConfig>;
				public static sYogaNodeFactory: com.facebook.litho.NodeConfig.YogaNodeFactory;
				public static sInternalNodeFactory: com.facebook.litho.NodeConfig.InternalNodeFactory;
				public static getYogaConfig(): com.facebook.yoga.YogaConfig;
				public static setPrintYogaDebugLogs(param0: boolean): void;
				public constructor();
			}
			export module NodeConfig {
				export class InternalNodeFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.NodeConfig.InternalNodeFactory>;
					/**
					 * Constructs a new instance of the com.facebook.litho.NodeConfig$InternalNodeFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.InternalNode;
					});
					public constructor();
					public create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.InternalNode;
				}
				export class YogaNodeFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.NodeConfig.YogaNodeFactory>;
					/**
					 * Constructs a new instance of the com.facebook.litho.NodeConfig$YogaNodeFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(param0: com.facebook.yoga.YogaConfig): com.facebook.yoga.YogaNode;
					});
					public constructor();
					public create(param0: com.facebook.yoga.YogaConfig): com.facebook.yoga.YogaNode;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class NodeInfo extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.NodeInfo>;
				/**
				 * Constructs a new instance of the com.facebook.litho.NodeInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					setContentDescription(param0: string): void;
					getContentDescription(): string;
					setViewTag(param0: any): void;
					getViewTag(): any;
					setViewTags(param0: globalAndroid.util.SparseArray<any>): void;
					getShadowElevation(): number;
					setShadowElevation(param0: number): void;
					getOutlineProvider(): globalAndroid.view.ViewOutlineProvider;
					setOutlineProvider(param0: globalAndroid.view.ViewOutlineProvider): void;
					getClipToOutline(): boolean;
					setClipToOutline(param0: boolean): void;
					setClipChildren(param0: boolean): void;
					getClipChildren(): boolean;
					isClipChildrenSet(): boolean;
					getViewTags(): globalAndroid.util.SparseArray<any>;
					setClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>): void;
					getClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>;
					setLongClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>): void;
					getLongClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>;
					setFocusChangeHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>): void;
					getFocusChangeHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>;
					hasFocusChangeHandler(): boolean;
					setTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>): void;
					getTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>;
					setInterceptTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>): void;
					getInterceptTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>;
					hasTouchEventHandlers(): boolean;
					setAccessibilityRole(param0: string): void;
					getAccessibilityRole(): string;
					setAccessibilityRoleDescription(param0: string): void;
					getAccessibilityRoleDescription(): string;
					setDispatchPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>): void;
					getDispatchPopulateAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>;
					setOnInitializeAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>): void;
					getOnInitializeAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>;
					setOnInitializeAccessibilityNodeInfoHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>): void;
					getOnInitializeAccessibilityNodeInfoHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>;
					setOnPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>): void;
					getOnPopulateAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>;
					setOnRequestSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>): void;
					getOnRequestSendAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>;
					setPerformAccessibilityActionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>): void;
					getPerformAccessibilityActionHandler(): com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>;
					setSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>): void;
					getSendAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>;
					setSendAccessibilityEventUncheckedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>): void;
					getSendAccessibilityEventUncheckedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>;
					needsAccessibilityDelegate(): boolean;
					setFocusable(param0: boolean): void;
					getFocusState(): number;
					setClickable(param0: boolean): void;
					getClickableState(): number;
					setEnabled(param0: boolean): void;
					getEnabledState(): number;
					setSelected(param0: boolean): void;
					getSelectedState(): number;
					getScale(): number;
					setScale(param0: number): void;
					isScaleSet(): boolean;
					getAlpha(): number;
					setAlpha(param0: number): void;
					isAlphaSet(): boolean;
					getRotation(): number;
					setRotation(param0: number): void;
					isRotationSet(): boolean;
					getRotationX(): number;
					setRotationX(param0: number): void;
					isRotationXSet(): boolean;
					getRotationY(): number;
					setRotationY(param0: number): void;
					isRotationYSet(): boolean;
					isEquivalentTo(param0: com.facebook.litho.NodeInfo): boolean;
					copyInto(param0: com.facebook.litho.NodeInfo): void;
					getFlags(): number;
				});
				public constructor();
				public static SELECTED_SET_TRUE: number;
				public static SELECTED_UNSET: number;
				public static FOCUS_SET_TRUE: number;
				public static ENABLED_SET_TRUE: number;
				public static CLICKABLE_UNSET: number;
				public static FOCUS_UNSET: number;
				public static CLICKABLE_SET_FALSE: number;
				public static ENABLED_UNSET: number;
				public static FOCUS_SET_FALSE: number;
				public static ENABLED_SET_FALSE: number;
				public static CLICKABLE_SET_TRUE: number;
				public static SELECTED_SET_FALSE: number;
				public setOnInitializeAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>): void;
				public setFocusable(param0: boolean): void;
				public setTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>): void;
				public getRotationY(): number;
				public isEquivalentTo(param0: com.facebook.litho.NodeInfo): boolean;
				public getContentDescription(): string;
				public getOnInitializeAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>;
				public getAlpha(): number;
				public getFocusChangeHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>;
				public setSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>): void;
				public setClickable(param0: boolean): void;
				public setEnabled(param0: boolean): void;
				public getPerformAccessibilityActionHandler(): com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>;
				public getTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>;
				public setDispatchPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>): void;
				public setSelected(param0: boolean): void;
				public getFlags(): number;
				public isAlphaSet(): boolean;
				public isRotationSet(): boolean;
				public setLongClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>): void;
				public needsAccessibilityDelegate(): boolean;
				public getOnInitializeAccessibilityNodeInfoHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>;
				public hasTouchEventHandlers(): boolean;
				public setOnInitializeAccessibilityNodeInfoHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>): void;
				public getInterceptTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>;
				public isRotationXSet(): boolean;
				public getViewTag(): any;
				public setClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>): void;
				public getAccessibilityRoleDescription(): string;
				public setOnPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>): void;
				public getClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>;
				public setRotationX(param0: number): void;
				public getOutlineProvider(): globalAndroid.view.ViewOutlineProvider;
				public setClipToOutline(param0: boolean): void;
				public setSendAccessibilityEventUncheckedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>): void;
				public isScaleSet(): boolean;
				public setContentDescription(param0: string): void;
				public setViewTag(param0: any): void;
				public setAccessibilityRoleDescription(param0: string): void;
				public getLongClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>;
				public getClipToOutline(): boolean;
				public getOnRequestSendAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>;
				public isClipChildrenSet(): boolean;
				public getScale(): number;
				public getEnabledState(): number;
				public setViewTags(param0: globalAndroid.util.SparseArray<any>): void;
				public setRotationY(param0: number): void;
				public getClipChildren(): boolean;
				public setInterceptTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>): void;
				public setOnRequestSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>): void;
				public getClickableState(): number;
				public isRotationYSet(): boolean;
				public getFocusState(): number;
				public getViewTags(): globalAndroid.util.SparseArray<any>;
				public getSelectedState(): number;
				public getOnPopulateAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>;
				public getSendAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>;
				public setClipChildren(param0: boolean): void;
				public copyInto(param0: com.facebook.litho.NodeInfo): void;
				public setScale(param0: number): void;
				public setAlpha(param0: number): void;
				public getSendAccessibilityEventUncheckedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>;
				public getRotationX(): number;
				public getAccessibilityRole(): string;
				public setOutlineProvider(param0: globalAndroid.view.ViewOutlineProvider): void;
				public setFocusChangeHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>): void;
				public getShadowElevation(): number;
				public getRotation(): number;
				public setPerformAccessibilityActionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>): void;
				public setRotation(param0: number): void;
				public setShadowElevation(param0: number): void;
				public getDispatchPopulateAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>;
				public setAccessibilityRole(param0: string): void;
				public hasFocusChangeHandler(): boolean;
			}
			export module NodeInfo {
				export class ClickableState extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.NodeInfo.ClickableState>;
					/**
					 * Constructs a new instance of the com.facebook.litho.NodeInfo$ClickableState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
				export class EnabledState extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.NodeInfo.EnabledState>;
					/**
					 * Constructs a new instance of the com.facebook.litho.NodeInfo$EnabledState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
				export class FocusState extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.NodeInfo.FocusState>;
					/**
					 * Constructs a new instance of the com.facebook.litho.NodeInfo$FocusState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
				export class SelectedState extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.NodeInfo.SelectedState>;
					/**
					 * Constructs a new instance of the com.facebook.litho.NodeInfo$SelectedState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class NodeInfoUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.NodeInfoUtils>;
				public static isEquivalentTo(param0: com.facebook.litho.NodeInfo, param1: com.facebook.litho.NodeInfo): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class OnInitializeAccessibilityEventEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.OnInitializeAccessibilityEventEvent>;
				public host: globalAndroid.view.View;
				public event: globalAndroid.view.accessibility.AccessibilityEvent;
				public superDelegate: androidx.core.view.AccessibilityDelegateCompat;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class OnInitializeAccessibilityNodeInfoEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>;
				public host: globalAndroid.view.View;
				public info: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
				public superDelegate: androidx.core.view.AccessibilityDelegateCompat;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class OnPopulateAccessibilityEventEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.OnPopulateAccessibilityEventEvent>;
				public host: globalAndroid.view.View;
				public event: globalAndroid.view.accessibility.AccessibilityEvent;
				public superDelegate: androidx.core.view.AccessibilityDelegateCompat;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class OnRequestSendAccessibilityEventEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.OnRequestSendAccessibilityEventEvent>;
				public host: globalAndroid.view.ViewGroup;
				public child: globalAndroid.view.View;
				public event: globalAndroid.view.accessibility.AccessibilityEvent;
				public superDelegate: androidx.core.view.AccessibilityDelegateCompat;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Output<T>  extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.Output<any>>;
				public set(param0: T): void;
				public get(): T;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class OutputUnitType extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<com.facebook.litho.OutputUnitType>;
				/**
				 * Constructs a new instance of the com.facebook.litho.OutputUnitType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public static HOST: number;
				public static CONTENT: number;
				public static BACKGROUND: number;
				public static FOREGROUND: number;
				public static BORDER: number;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public toString(): string;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class OutputUnitsAffinityGroup<T>  extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.OutputUnitsAffinityGroup<any>>;
				public clean(): void;
				public getMostSignificantUnit(): T;
				public toString(): string;
				public get(param0: number): T;
				public constructor();
				public size(): number;
				public constructor(param0: com.facebook.litho.OutputUnitsAffinityGroup<T>);
				public replace(param0: number, param1: T): void;
				public equals(param0: any): boolean;
				public isEmpty(): boolean;
				public typeAt(param0: number): number;
				public getAt(param0: number): T;
				public add(param0: number, param1: T): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ParallelTransitionSet extends com.facebook.litho.TransitionSet {
				public static class: java.lang.Class<com.facebook.litho.ParallelTransitionSet>;
				public constructor(param0: java.util.List<any>);
				public constructor(param0: native.Array<com.facebook.litho.Transition>);
				public constructor(param0: number, param1: native.Array<com.facebook.litho.Transition>);
				public constructor(param0: number, param1: java.util.List<any>);
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class PerfEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.PerfEvent>;
				/**
				 * Constructs a new instance of the com.facebook.litho.PerfEvent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getInstanceKey(): number;
					getMarkerId(): number;
					markerAnnotate(param0: string, param1: string): void;
					markerAnnotate(param0: string, param1: number): void;
					markerAnnotate(param0: string, param1: number): void;
					markerAnnotate(param0: string, param1: boolean): void;
					markerAnnotate(param0: string, param1: native.Array<string>): void;
					markerAnnotate(param0: string, param1: native.Array<java.lang.Double>): void;
					markerAnnotate(param0: string, param1: native.Array<number>): void;
					markerPoint(param0: string): void;
				});
				public constructor();
				public getMarkerId(): number;
				public markerAnnotate(param0: string, param1: boolean): void;
				public markerPoint(param0: string): void;
				public getInstanceKey(): number;
				public markerAnnotate(param0: string, param1: native.Array<java.lang.Double>): void;
				public markerAnnotate(param0: string, param1: string): void;
				public markerAnnotate(param0: string, param1: native.Array<string>): void;
				public markerAnnotate(param0: string, param1: native.Array<number>): void;
				public markerAnnotate(param0: string, param1: number): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class PerformAccessibilityActionEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.PerformAccessibilityActionEvent>;
				public host: globalAndroid.view.View;
				public action: number;
				public args: globalAndroid.os.Bundle;
				public superDelegate: androidx.core.view.AccessibilityDelegateCompat;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class PoolBisectUtil extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.PoolBisectUtil>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class PoolWithDebugInfo extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.PoolWithDebugInfo>;
				/**
				 * Constructs a new instance of the com.facebook.litho.PoolWithDebugInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getName(): string;
					getMaxSize(): number;
					getCurrentSize(): number;
				});
				public constructor();
				public getCurrentSize(): number;
				public getName(): string;
				public getMaxSize(): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class RecyclePool<T>  extends com.facebook.litho.PoolWithDebugInfo {
				public static class: java.lang.Class<com.facebook.litho.RecyclePool<any>>;
				public release(param0: any): void;
				public getCurrentSize(): number;
				public constructor(param0: string, param1: number, param2: boolean);
				public clear(): void;
				public acquire(): any;
				public getName(): string;
				public getMaxSize(): number;
				public isFull(): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class RenderCompleteEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.RenderCompleteEvent>;
				public renderState: com.facebook.litho.RenderCompleteEvent.RenderState;
				public timestampMillis: number;
				public constructor();
			}
			export module RenderCompleteEvent {
				export class RenderState {
					public static class: java.lang.Class<com.facebook.litho.RenderCompleteEvent.RenderState>;
					public static RENDER_DRAWN: com.facebook.litho.RenderCompleteEvent.RenderState;
					public static RENDER_ADDED: com.facebook.litho.RenderCompleteEvent.RenderState;
					public static FAILED_EXCEED_MAX_ATTEMPTS: com.facebook.litho.RenderCompleteEvent.RenderState;
					public static values(): native.Array<com.facebook.litho.RenderCompleteEvent.RenderState>;
					public static valueOf(param0: string): com.facebook.litho.RenderCompleteEvent.RenderState;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class RenderState extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.RenderState>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export abstract class ResourceCache extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ResourceCache>;
				public constructor(param0: globalAndroid.content.res.Configuration);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ResourceResolver extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ResourceResolver>;
				public resolveStringRes(param0: number, param1: native.Array<any>): string;
				public constructor(param0: com.facebook.litho.ComponentContext);
				public resolveIntegerArrayRes(param0: number): native.Array<java.lang.Integer>;
				public resolveDrawableAttr(param0: number, param1: number): globalAndroid.graphics.drawable.Drawable;
				public init(param0: com.facebook.litho.ComponentContext): void;
				public dipsToPixels(param0: number): number;
				public resolveDimenSizeRes(param0: number): number;
				public resolveFloatAttr(param0: number, param1: number): number;
				public sipsToPixels(param0: number): number;
				public resolveFloatRes(param0: number): number;
				public resolveIntRes(param0: number): number;
				public resolveIntArrayAttr(param0: number, param1: number): native.Array<number>;
				public resolveIntegerArrayAttr(param0: number, param1: number): native.Array<java.lang.Integer>;
				public resolveColorRes(param0: number): number;
				public resolveColorAttr(param0: number, param1: number): number;
				public release(): void;
				public resolveStringArrayAttr(param0: number, param1: number): native.Array<string>;
				public resolveStringRes(param0: number): string;
				public resolveDimenOffsetRes(param0: number): number;
				public resolveIntAttr(param0: number, param1: number): number;
				public resolveBoolAttr(param0: number, param1: number): boolean;
				public resolveDimenSizeAttr(param0: number, param1: number): number;
				public resolveStringArrayRes(param0: number): native.Array<string>;
				public resolveStringAttr(param0: number, param1: number): string;
				public resolveDimenOffsetAttr(param0: number, param1: number): number;
				public resolveDrawableRes(param0: number): globalAndroid.graphics.drawable.Drawable;
				public resolveIntArrayRes(param0: number): native.Array<number>;
				public resolveBoolRes(param0: number): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class RootWrapperComponentFactory extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.RootWrapperComponentFactory>;
				/**
				 * Constructs a new instance of the com.facebook.litho.RootWrapperComponentFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					createWrapper(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): com.facebook.litho.Component;
				});
				public constructor();
				public createWrapper(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): com.facebook.litho.Component;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Row extends com.facebook.litho.Component {
				public static class: java.lang.Class<com.facebook.litho.Row>;
				public static create(param0: com.facebook.litho.ComponentContext, param1: string): com.facebook.litho.Row.Builder;
				public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number, param3: string): com.facebook.litho.Row.Builder;
				public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
				public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
				public isEquivalentTo(param0: any): boolean;
				/** @deprecated */
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public canResolve(): boolean;
				public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Row.Builder;
				public resolve(param0: com.facebook.litho.ComponentContext): com.facebook.litho.ComponentLayout;
				public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
				public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.Row.Builder;
				public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
			}
			export module Row {
				export class Builder extends com.facebook.litho.Component.ContainerBuilder<any> {
					public static class: java.lang.Class<com.facebook.litho.Row.Builder>;
					public justifyContent(param0: com.facebook.yoga.YogaJustify): com.facebook.litho.Row.Builder;
					public getThis(): com.facebook.litho.Row.Builder;
					public wrap(param0: com.facebook.yoga.YogaWrap): com.facebook.litho.Row.Builder;
					public build(): com.facebook.litho.Row;
					public child(param0: com.facebook.litho.Component): any;
					public build(): com.facebook.litho.Component;
					public justifyContent(param0: com.facebook.yoga.YogaJustify): any;
					public child(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.Row.Builder;
					public getThis(): any;
					public wrap(param0: com.facebook.yoga.YogaWrap): any;
					public child(param0: com.facebook.litho.Component): com.facebook.litho.Row.Builder;
					public constructor();
					public alignItems(param0: com.facebook.yoga.YogaAlign): any;
					public alignItems(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.Row.Builder;
					public reverse(param0: boolean): any;
					public reverse(param0: boolean): com.facebook.litho.Row.Builder;
					public alignContent(param0: com.facebook.yoga.YogaAlign): any;
					public alignContent(param0: com.facebook.yoga.YogaAlign): com.facebook.litho.Row.Builder;
					public child(param0: com.facebook.litho.Component.Builder<any>): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class SendAccessibilityEventEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.SendAccessibilityEventEvent>;
				public host: globalAndroid.view.View;
				public eventType: number;
				public superDelegate: androidx.core.view.AccessibilityDelegateCompat;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class SendAccessibilityEventUncheckedEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.SendAccessibilityEventUncheckedEvent>;
				public host: globalAndroid.view.View;
				public event: globalAndroid.view.accessibility.AccessibilityEvent;
				public superDelegate: androidx.core.view.AccessibilityDelegateCompat;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class SequenceTransitionSet extends com.facebook.litho.TransitionSet {
				public static class: java.lang.Class<com.facebook.litho.SequenceTransitionSet>;
				public constructor(param0: java.util.List<any>);
				public constructor(param0: native.Array<com.facebook.litho.Transition>);
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Size extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.Size>;
				public width: number;
				public height: number;
				public constructor(param0: number, param1: number);
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class SizeSpec extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.SizeSpec>;
				public static UNSPECIFIED: number;
				public static EXACTLY: number;
				public static AT_MOST: number;
				public static getSize(param0: number): number;
				public static toString(param0: number): string;
				public static makeSizeSpecFromCssSpec(param0: number, param1: com.facebook.yoga.YogaMeasureMode): number;
				public toString(): string;
				public static resolveSize(param0: number, param1: number): number;
				public static makeSizeSpec(param0: number, param1: number): number;
				public constructor();
				public static getMode(param0: number): number;
			}
			export module SizeSpec {
				export class MeasureSpecMode extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.SizeSpec.MeasureSpecMode>;
					/**
					 * Constructs a new instance of the com.facebook.litho.SizeSpec$MeasureSpecMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class SparseCommonPropsHolder extends java.lang.Object implements com.facebook.litho.CommonProps {
				public static class: java.lang.Class<com.facebook.litho.SparseCommonPropsHolder>;
				public focusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusedVisibleEvent>): void;
				public unfocusedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>): void;
				public positionType(param0: com.facebook.yoga.YogaPositionType): void;
				public visibilityChangedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>): void;
				public interceptTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>): void;
				public getTransitionKeyType(): com.facebook.litho.Transition.TransitionKeyType;
				public sendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>): void;
				public focusChangeHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>): void;
				public paddingPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public copyInto(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.InternalNode): void;
				public visibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.VisibleEvent>): void;
				public getFocusChangeHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>;
				public selected(param0: boolean): void;
				public getBackground(): com.facebook.litho.drawable.ComparableDrawable;
				public enabled(param0: boolean): void;
				public outlineProvider(param0: globalAndroid.view.ViewOutlineProvider): void;
				public contentDescription(param0: string): void;
				public shadowElevationPx(param0: number): void;
				public onPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>): void;
				public getTransitionKey(): string;
				public layoutDirection(param0: com.facebook.yoga.YogaDirection): void;
				public scale(param0: number): void;
				public focusable(param0: boolean): void;
				public marginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public getTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>;
				public isReferenceBaseline(param0: boolean): void;
				public clickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>): void;
				public onRequestSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>): void;
				public onInitializeAccessibilityNodeInfoHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>): void;
				public importantForAccessibility(param0: number): void;
				public performAccessibilityActionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>): void;
				public maxHeightPercent(param0: number): void;
				public dispatchPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>): void;
				public positionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public maxWidthPx(param0: number): void;
				public setStyle(param0: number, param1: number): void;
				public alpha(param0: number): void;
				public maxWidthPercent(param0: number): void;
				public getInterceptTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>;
				public clickable(param0: boolean): void;
				public clipToOutline(param0: boolean): void;
				public useHeightAsBaseline(param0: boolean): void;
				public getClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>;
				public minWidthPercent(param0: number): void;
				public viewTags(param0: globalAndroid.util.SparseArray<any>): void;
				public transitionKeyType(param0: com.facebook.litho.Transition.TransitionKeyType): void;
				public longClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>): void;
				public minHeightPx(param0: number): void;
				public alignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public invisibleHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>): void;
				public getFocusable(): boolean;
				public rotationY(param0: number): void;
				public border(param0: com.facebook.litho.Border): void;
				public foreground(param0: com.facebook.litho.drawable.ComparableDrawable): void;
				public getLongClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>;
				public heightPx(param0: number): void;
				public viewTag(param0: any): void;
				public clipChildren(param0: boolean): void;
				public flexGrow(param0: number): void;
				public visibleHeightRatio(param0: number): void;
				public minHeightPercent(param0: number): void;
				public flex(param0: number): void;
				public paddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public widthPx(param0: number): void;
				public transitionKey(param0: string): void;
				public flexShrink(param0: number): void;
				public accessibilityRoleDescription(param0: string): void;
				public flexBasisPercent(param0: number): void;
				public maxHeightPx(param0: number): void;
				public stateListAnimatorRes(param0: number): void;
				public rotation(param0: number): void;
				public flexBasisPx(param0: number): void;
				public rotationX(param0: number): void;
				public testKey(param0: string): void;
				public touchExpansionPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public background(param0: com.facebook.litho.drawable.ComparableDrawable): void;
				public touchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>): void;
				public marginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getNullableNodeInfo(): com.facebook.litho.NodeInfo;
				public minWidthPx(param0: number): void;
				public marginPx(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public widthPercent(param0: number): void;
				public visibleWidthRatio(param0: number): void;
				public accessibilityRole(param0: string): void;
				public positionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public stateListAnimator(param0: globalAndroid.animation.StateListAnimator): void;
				public onInitializeAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>): void;
				public sendAccessibilityEventUncheckedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>): void;
				public aspectRatio(param0: number): void;
				public duplicateParentState(param0: boolean): void;
				public fullImpressionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FullImpressionVisibleEvent>): void;
				public getOrCreateNodeInfo(): com.facebook.litho.NodeInfo;
				public heightPercent(param0: number): void;
				public wrapInView(): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class SparseNodeInfo extends java.lang.Object implements com.facebook.litho.NodeInfo {
				public static class: java.lang.Class<com.facebook.litho.SparseNodeInfo>;
				public setOnInitializeAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>): void;
				public setFocusable(param0: boolean): void;
				public setTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>): void;
				public getRotationY(): number;
				public isEquivalentTo(param0: com.facebook.litho.NodeInfo): boolean;
				public getContentDescription(): string;
				public getOnInitializeAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityEventEvent>;
				public getAlpha(): number;
				public getFocusChangeHandler(): com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>;
				public setSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>): void;
				public setClickable(param0: boolean): void;
				public setEnabled(param0: boolean): void;
				public getPerformAccessibilityActionHandler(): com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>;
				public getTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.TouchEvent>;
				public setDispatchPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>): void;
				public setSelected(param0: boolean): void;
				public getFlags(): number;
				public isAlphaSet(): boolean;
				public isRotationSet(): boolean;
				public setLongClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>): void;
				public needsAccessibilityDelegate(): boolean;
				public getOnInitializeAccessibilityNodeInfoHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>;
				public hasTouchEventHandlers(): boolean;
				public setOnInitializeAccessibilityNodeInfoHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnInitializeAccessibilityNodeInfoEvent>): void;
				public getInterceptTouchHandler(): com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>;
				public isRotationXSet(): boolean;
				public getViewTag(): any;
				public setClickHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>): void;
				public getAccessibilityRoleDescription(): string;
				public setOnPopulateAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>): void;
				public getClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>;
				public setRotationX(param0: number): void;
				public getOutlineProvider(): globalAndroid.view.ViewOutlineProvider;
				public setClipToOutline(param0: boolean): void;
				public setSendAccessibilityEventUncheckedHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>): void;
				public isScaleSet(): boolean;
				public setContentDescription(param0: string): void;
				public setViewTag(param0: any): void;
				public setAccessibilityRoleDescription(param0: string): void;
				public getLongClickHandler(): com.facebook.litho.EventHandler<com.facebook.litho.LongClickEvent>;
				public getClipToOutline(): boolean;
				public getOnRequestSendAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>;
				public isClipChildrenSet(): boolean;
				public getScale(): number;
				public getEnabledState(): number;
				public setViewTags(param0: globalAndroid.util.SparseArray<any>): void;
				public setRotationY(param0: number): void;
				public getClipChildren(): boolean;
				public setInterceptTouchHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.InterceptTouchEvent>): void;
				public setOnRequestSendAccessibilityEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.OnRequestSendAccessibilityEventEvent>): void;
				public getClickableState(): number;
				public isRotationYSet(): boolean;
				public getFocusState(): number;
				public getViewTags(): globalAndroid.util.SparseArray<any>;
				public getSelectedState(): number;
				public getOnPopulateAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.OnPopulateAccessibilityEventEvent>;
				public getSendAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventEvent>;
				public setClipChildren(param0: boolean): void;
				public copyInto(param0: com.facebook.litho.NodeInfo): void;
				public setScale(param0: number): void;
				public setAlpha(param0: number): void;
				public getSendAccessibilityEventUncheckedHandler(): com.facebook.litho.EventHandler<com.facebook.litho.SendAccessibilityEventUncheckedEvent>;
				public getRotationX(): number;
				public getAccessibilityRole(): string;
				public setOutlineProvider(param0: globalAndroid.view.ViewOutlineProvider): void;
				public setFocusChangeHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.FocusChangedEvent>): void;
				public getShadowElevation(): number;
				public getRotation(): number;
				public setPerformAccessibilityActionHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.PerformAccessibilityActionEvent>): void;
				public setRotation(param0: number): void;
				public setShadowElevation(param0: number): void;
				public getDispatchPopulateAccessibilityEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.DispatchPopulateAccessibilityEventEvent>;
				public setAccessibilityRole(param0: string): void;
				public hasFocusChangeHandler(): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export abstract class StateContainer extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.StateContainer>;
				public applyStateUpdate(param0: com.facebook.litho.StateContainer.StateUpdate): void;
				public constructor();
			}
			export module StateContainer {
				export class StateUpdate extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.StateContainer.StateUpdate>;
					public type: number;
					public params: native.Array<any>;
					public constructor(param0: number, param1: native.Array<any>);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class StateHandler extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.StateHandler>;
				public mStateContainers: java.util.Map<string,com.facebook.litho.StateContainer>;
				public mNeededStateContainers: java.util.HashSet<string>;
				public constructor(param0: com.facebook.litho.StateHandler);
				public static createShallowCopyForLazyStateUpdates(param0: com.facebook.litho.StateHandler): com.facebook.litho.StateHandler;
				public isEmpty(): boolean;
				public static createNewInstance(param0: com.facebook.litho.StateHandler): com.facebook.litho.StateHandler;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class StateValue<T>  extends com.facebook.litho.Output<any> {
				public static class: java.lang.Class<com.facebook.litho.StateValue<any>>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TestComponent extends com.facebook.litho.Component {
				public static class: java.lang.Class<com.facebook.litho.TestComponent>;
				public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
				public isEquivalentTo(param0: any): boolean;
				/** @deprecated */
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
				public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TestComponentContext extends com.facebook.litho.ComponentContext {
				public static class: java.lang.Class<com.facebook.litho.TestComponentContext>;
				public newLayoutBuilder(param0: com.facebook.litho.Component, param1: number, param2: number): com.facebook.litho.InternalNode;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TestComponentTree extends com.facebook.litho.ComponentTree {
				public static class: java.lang.Class<com.facebook.litho.TestComponentTree>;
				public static create(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): com.facebook.litho.TestComponentTree.Builder;
				public measure(param0: number, param1: number, param2: native.Array<number>, param3: boolean): void;
				public static create(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component.Builder<any>): com.facebook.litho.ComponentTree.Builder;
				public attach(): void;
				public getSubComponents(): java.util.List<com.facebook.litho.Component>;
				public setLithoView(param0: com.facebook.litho.LithoView): void;
				public calculateLayoutState(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component, param2: number, param3: number, param4: boolean, param5: com.facebook.litho.LayoutState, param6: com.facebook.litho.TreeProps, param7: number, param8: string): com.facebook.litho.LayoutState;
				public static create(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Component): com.facebook.litho.ComponentTree.Builder;
				public mountComponent(param0: globalAndroid.graphics.Rect, param1: boolean): void;
			}
			export module TestComponentTree {
				export class Builder extends com.facebook.litho.ComponentTree.Builder {
					public static class: java.lang.Class<com.facebook.litho.TestComponentTree.Builder>;
					public build(): com.facebook.litho.ComponentTree;
					public incrementalMount(param0: boolean): com.facebook.litho.ComponentTree.Builder;
					public layoutDiffing(param0: boolean): com.facebook.litho.TestComponentTree.Builder;
					public layoutThreadLooper(param0: globalAndroid.os.Looper): com.facebook.litho.ComponentTree.Builder;
					public incrementalMount(param0: boolean): com.facebook.litho.TestComponentTree.Builder;
					public build(): com.facebook.litho.TestComponentTree;
					public layoutThreadLooper(param0: globalAndroid.os.Looper): com.facebook.litho.TestComponentTree.Builder;
					public layoutDiffing(param0: boolean): com.facebook.litho.ComponentTree.Builder;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TestItem extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.TestItem>;
				public isChecked(): boolean;
				public getHost(): com.facebook.litho.ComponentHost;
				public getTextItems(): java.util.List<string>;
				public getBounds(): globalAndroid.graphics.Rect;
				public getTextContent(): string;
				public getAcquireKey(): com.facebook.litho.TestItem.AcquireKey;
				public getTestKey(): string;
				public constructor();
			}
			export module TestItem {
				export class AcquireKey extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.TestItem.AcquireKey>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TestOutput extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.TestOutput>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TextContent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.TextContent>;
				/**
				 * Constructs a new instance of the com.facebook.litho.TextContent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getTextItems(): java.util.List<string>;
					<clinit>(): void;
				});
				public constructor();
				public static EMPTY: com.facebook.litho.TextContent;
				public getTextItems(): java.util.List<string>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ThreadPoolLayoutHandler extends java.lang.Object implements com.facebook.litho.LithoHandler {
				public static class: java.lang.Class<com.facebook.litho.ThreadPoolLayoutHandler>;
				public isTracing(): boolean;
				public constructor(param0: com.facebook.litho.config.LayoutThreadPoolConfiguration);
				public remove(param0: java.lang.Runnable): void;
				public post(param0: java.lang.Runnable, param1: string): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export abstract class ThreadTracingRunnable extends java.lang.Object implements java.lang.Runnable {
				public static class: java.lang.Class<com.facebook.litho.ThreadTracingRunnable>;
				public tracedRun(param0: java.lang.Throwable): void;
				public resetTrace(): void;
				public run(): void;
				public constructor(param0: java.lang.Throwable);
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ThreadUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ThreadUtils>;
				public static OVERRIDE_DISABLED: number;
				public static OVERRIDE_MAIN_THREAD_TRUE: number;
				public static OVERRIDE_MAIN_THREAD_FALSE: number;
				public static isMainThread(): boolean;
				public static setMainThreadOverride(param0: number): void;
				public static tryRaiseThreadPriority(param0: number, param1: number): number;
				public static assertDoesntHoldLock(param0: any): void;
				public static tryInheritThreadPriorityFromCurrentThread(param0: number): number;
				public static assertMainThread(): void;
				public static assertHoldsLock(param0: any): void;
			}
			export module ThreadUtils {
				export class MainThreadOverride extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.ThreadUtils.MainThreadOverride>;
					/**
					 * Constructs a new instance of the com.facebook.litho.ThreadUtils$MainThreadOverride interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TooltipPosition {
				public static class: java.lang.Class<com.facebook.litho.TooltipPosition>;
				public static CENTER: com.facebook.litho.TooltipPosition;
				public static BOTTOM_LEFT: com.facebook.litho.TooltipPosition;
				public static CENTER_LEFT: com.facebook.litho.TooltipPosition;
				public static TOP_LEFT: com.facebook.litho.TooltipPosition;
				public static CENTER_TOP: com.facebook.litho.TooltipPosition;
				public static TOP_RIGHT: com.facebook.litho.TooltipPosition;
				public static CENTER_RIGHT: com.facebook.litho.TooltipPosition;
				public static BOTTOM_RIGHT: com.facebook.litho.TooltipPosition;
				public static CENTER_BOTTOM: com.facebook.litho.TooltipPosition;
				public static values(): native.Array<com.facebook.litho.TooltipPosition>;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				public static valueOf(param0: string): com.facebook.litho.TooltipPosition;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TouchEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.TouchEvent>;
				public view: globalAndroid.view.View;
				public motionEvent: globalAndroid.view.MotionEvent;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TouchExpansionDelegate extends globalAndroid.view.TouchDelegate {
				public static class: java.lang.Class<com.facebook.litho.TouchExpansionDelegate>;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
			}
			export module TouchExpansionDelegate {
				export class InnerTouchDelegate extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.TouchExpansionDelegate.InnerTouchDelegate>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Touchable extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.Touchable>;
				/**
				 * Constructs a new instance of the com.facebook.litho.Touchable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					onTouchEvent(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.View): boolean;
					shouldHandleTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				});
				public constructor();
				public onTouchEvent(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.View): boolean;
				public shouldHandleTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export abstract class Transition extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.Transition>;
				public static SPRING_WITH_OVERSHOOT: com.facebook.litho.Transition.TransitionAnimator;
				public static SPRING_WITHOUT_OVERSHOOT: com.facebook.litho.Transition.TransitionAnimator;
				public static delay(param0: number, param1: com.facebook.litho.Transition): com.facebook.litho.Transition;
				public static timing(param0: number, param1: globalAndroid.view.animation.Interpolator): com.facebook.litho.Transition.TransitionAnimator;
				public static allLayout(): com.facebook.litho.Transition.AutoBoundsTransitionBuilder;
				public static springWithConfig(param0: number, param1: number): com.facebook.litho.Transition.TransitionAnimator;
				public static create(param0: com.facebook.litho.Transition.TransitionKeyType, param1: string): com.facebook.litho.Transition.TransitionUnitsBuilder;
				public static create(param0: com.facebook.litho.Transition.ComponentTarget): com.facebook.litho.Transition.TransitionUnitsBuilder;
				public static renderThread(param0: number, param1: number, param2: globalAndroid.view.animation.Interpolator): com.facebook.litho.Transition.TransitionAnimator;
				public static renderThread(param0: number): com.facebook.litho.Transition.TransitionAnimator;
				public constructor();
				public static stagger(param0: number, param1: native.Array<com.facebook.litho.Transition>): com.facebook.litho.TransitionSet;
				public static parallel(param0: native.Array<com.facebook.litho.Transition>): com.facebook.litho.TransitionSet;
				public static create(param0: com.facebook.litho.Transition.TransitionKeyType, param1: native.Array<string>): com.facebook.litho.Transition.TransitionUnitsBuilder;
				public static timing(param0: number): com.facebook.litho.Transition.TransitionAnimator;
				public static create(param0: native.Array<string>): com.facebook.litho.Transition.TransitionUnitsBuilder;
				public static renderThread(): com.facebook.litho.Transition.TransitionAnimator;
				public static renderThread(param0: number, param1: number): com.facebook.litho.Transition.TransitionAnimator;
				public static renderThread(param0: number, param1: globalAndroid.animation.TimeInterpolator): com.facebook.litho.Transition.TransitionAnimator;
				public static create(param0: string): com.facebook.litho.Transition.TransitionUnitsBuilder;
				public static sequence(param0: native.Array<com.facebook.litho.Transition>): com.facebook.litho.TransitionSet;
			}
			export module Transition {
				export class AnimationTarget extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.Transition.AnimationTarget>;
					public componentTarget: com.facebook.litho.Transition.ComponentTarget;
					public propertyTarget: com.facebook.litho.Transition.PropertyTarget;
				}
				export class AutoBoundsTransitionBuilder extends com.facebook.litho.Transition.BaseTransitionUnitsBuilder {
					public static class: java.lang.Class<com.facebook.litho.Transition.AutoBoundsTransitionBuilder>;
					public animator(param0: com.facebook.litho.Transition.TransitionAnimator): com.facebook.litho.Transition.AutoBoundsTransitionBuilder;
				}
				export abstract class BaseTransitionUnitsBuilder extends com.facebook.litho.Transition {
					public static class: java.lang.Class<com.facebook.litho.Transition.BaseTransitionUnitsBuilder>;
					public constructor();
				}
				export class ComponentTarget extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.Transition.ComponentTarget>;
					public componentTargetType: com.facebook.litho.Transition.ComponentTargetType;
					public componentTargetExtraData: any;
				}
				export class ComponentTargetType {
					public static class: java.lang.Class<com.facebook.litho.Transition.ComponentTargetType>;
					public static ALL: com.facebook.litho.Transition.ComponentTargetType;
					public static LOCAL_KEY: com.facebook.litho.Transition.ComponentTargetType;
					public static LOCAL_KEY_SET: com.facebook.litho.Transition.ComponentTargetType;
					public static GLOBAL_KEY: com.facebook.litho.Transition.ComponentTargetType;
					public static GLOBAL_KEY_SET: com.facebook.litho.Transition.ComponentTargetType;
					public static AUTO_LAYOUT: com.facebook.litho.Transition.ComponentTargetType;
					public static valueOf(param0: string): com.facebook.litho.Transition.ComponentTargetType;
					public static values(): native.Array<com.facebook.litho.Transition.ComponentTargetType>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
				export class PropertyTarget extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.Transition.PropertyTarget>;
					public propertyTargetType: com.facebook.litho.Transition.PropertyTargetType;
					public propertyTargetExtraData: any;
				}
				export class PropertyTargetType {
					public static class: java.lang.Class<com.facebook.litho.Transition.PropertyTargetType>;
					public static SET: com.facebook.litho.Transition.PropertyTargetType;
					public static SINGLE: com.facebook.litho.Transition.PropertyTargetType;
					public static AUTO_LAYOUT: com.facebook.litho.Transition.PropertyTargetType;
					public static valueOf(param0: string): com.facebook.litho.Transition.PropertyTargetType;
					public static values(): native.Array<com.facebook.litho.Transition.PropertyTargetType>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
				export class RenderThreadAnimator extends java.lang.Object implements com.facebook.litho.Transition.TransitionAnimator {
					public static class: java.lang.Class<com.facebook.litho.Transition.RenderThreadAnimator>;
					public createAnimation(param0: com.facebook.litho.animation.PropertyAnimation): com.facebook.litho.animation.TransitionAnimationBinding;
				}
				export class RootBoundsTransition extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.Transition.RootBoundsTransition>;
				}
				export class RootItemResolver extends java.lang.Object implements com.facebook.litho.animation.Resolver {
					public static class: java.lang.Class<com.facebook.litho.Transition.RootItemResolver>;
					public getCurrentState(param0: com.facebook.litho.animation.PropertyHandle): number;
					public getAnimatedPropertyNode(param0: com.facebook.litho.animation.PropertyHandle): com.facebook.litho.animation.AnimatedPropertyNode;
				}
				export class SpringTransitionAnimator extends java.lang.Object implements com.facebook.litho.Transition.TransitionAnimator {
					public static class: java.lang.Class<com.facebook.litho.Transition.SpringTransitionAnimator>;
					public constructor(param0: com.facebook.litho.dataflow.springs.SpringConfig);
					public constructor(param0: number, param1: number);
					public createAnimation(param0: com.facebook.litho.animation.PropertyAnimation): com.facebook.litho.animation.TransitionAnimationBinding;
				}
				export class TimingTransitionAnimator extends java.lang.Object implements com.facebook.litho.Transition.TransitionAnimator {
					public static class: java.lang.Class<com.facebook.litho.Transition.TimingTransitionAnimator>;
					public constructor(param0: number);
					public constructor(param0: number, param1: globalAndroid.view.animation.Interpolator);
					public createAnimation(param0: com.facebook.litho.animation.PropertyAnimation): com.facebook.litho.animation.TransitionAnimationBinding;
				}
				export class TransitionAnimator extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.Transition.TransitionAnimator>;
					/**
					 * Constructs a new instance of the com.facebook.litho.Transition$TransitionAnimator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						createAnimation(param0: com.facebook.litho.animation.PropertyAnimation): com.facebook.litho.animation.TransitionAnimationBinding;
					});
					public constructor();
					public createAnimation(param0: com.facebook.litho.animation.PropertyAnimation): com.facebook.litho.animation.TransitionAnimationBinding;
				}
				export class TransitionKeyType {
					public static class: java.lang.Class<com.facebook.litho.Transition.TransitionKeyType>;
					public static GLOBAL: com.facebook.litho.Transition.TransitionKeyType;
					public static LOCAL: com.facebook.litho.Transition.TransitionKeyType;
					public static valueOf(param0: string): com.facebook.litho.Transition.TransitionKeyType;
					public static values(): native.Array<com.facebook.litho.Transition.TransitionKeyType>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
				export class TransitionUnit extends com.facebook.litho.Transition {
					public static class: java.lang.Class<com.facebook.litho.Transition.TransitionUnit>;
				}
				export class TransitionUnitsBuilder extends com.facebook.litho.Transition.BaseTransitionUnitsBuilder {
					public static class: java.lang.Class<com.facebook.litho.Transition.TransitionUnitsBuilder>;
					public animator(param0: com.facebook.litho.Transition.TransitionAnimator): com.facebook.litho.Transition.TransitionUnitsBuilder;
					public disappearTo(param0: number): com.facebook.litho.Transition.TransitionUnitsBuilder;
					public animate(param0: com.facebook.litho.animation.AnimatedProperty): com.facebook.litho.Transition.TransitionUnitsBuilder;
					public disappearTo(param0: com.facebook.litho.animation.RuntimeValue): com.facebook.litho.Transition.TransitionUnitsBuilder;
					public traceName(param0: string): com.facebook.litho.Transition.TransitionUnitsBuilder;
					public appearFrom(param0: com.facebook.litho.animation.RuntimeValue): com.facebook.litho.Transition.TransitionUnitsBuilder;
					public appearFrom(param0: number): com.facebook.litho.Transition.TransitionUnitsBuilder;
					public animate(param0: com.facebook.litho.Transition.PropertyTarget): com.facebook.litho.Transition.TransitionUnitsBuilder;
					public animate(param0: native.Array<com.facebook.litho.animation.AnimatedProperty>): com.facebook.litho.Transition.TransitionUnitsBuilder;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TransitionId extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.TransitionId>;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public toString(): string;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TransitionIdMap<V>  extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.TransitionIdMap<any>>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TransitionManager extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.TransitionManager>;
				public constructor(param0: com.facebook.litho.TransitionManager.OnAnimationCompleteListener, param1: com.facebook.litho.MountState);
			}
			export module TransitionManager {
				export class AnimationState extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.TransitionManager.AnimationState>;
					public propertyStates: java.util.Map<com.facebook.litho.animation.AnimatedProperty,com.facebook.litho.TransitionManager.PropertyState>;
					public mountContentGroup: com.facebook.litho.OutputUnitsAffinityGroup<any>;
					public changeType: number;
					public currentLayoutOutputsGroup: com.facebook.litho.OutputUnitsAffinityGroup<com.facebook.litho.LayoutOutput>;
					public nextLayoutOutputsGroup: com.facebook.litho.OutputUnitsAffinityGroup<com.facebook.litho.LayoutOutput>;
					public seenInLastTransition: boolean;
				}
				export class OnAnimationCompleteListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.TransitionManager.OnAnimationCompleteListener>;
					/**
					 * Constructs a new instance of the com.facebook.litho.TransitionManager$OnAnimationCompleteListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onAnimationComplete(param0: com.facebook.litho.TransitionId): void;
					});
					public constructor();
					public onAnimationComplete(param0: com.facebook.litho.TransitionId): void;
				}
				export class PropertyState extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.TransitionManager.PropertyState>;
					public animatedPropertyNode: com.facebook.litho.animation.AnimatedPropertyNode;
					public animation: com.facebook.litho.animation.AnimationBinding;
					public targetValue: java.lang.Float;
					public lastMountedValue: java.lang.Float;
					public numPendingAnimations: number;
				}
				export class RootAnimationListener extends java.lang.Object implements com.facebook.litho.animation.AnimationBindingListener {
					public static class: java.lang.Class<com.facebook.litho.TransitionManager.RootAnimationListener>;
					public shouldStart(param0: com.facebook.litho.animation.AnimationBinding): boolean;
					public onWillStart(param0: com.facebook.litho.animation.AnimationBinding): void;
					public onCanceledBeforeStart(param0: com.facebook.litho.animation.AnimationBinding): void;
					public onScheduledToStartLater(param0: com.facebook.litho.animation.AnimationBinding): void;
					public onFinish(param0: com.facebook.litho.animation.AnimationBinding): void;
				}
				export class TransitionsAnimationBindingListener extends java.lang.Object implements com.facebook.litho.animation.AnimationBindingListener {
					public static class: java.lang.Class<com.facebook.litho.TransitionManager.TransitionsAnimationBindingListener>;
					public shouldStart(param0: com.facebook.litho.animation.AnimationBinding): boolean;
					public onWillStart(param0: com.facebook.litho.animation.AnimationBinding): void;
					public onCanceledBeforeStart(param0: com.facebook.litho.animation.AnimationBinding): void;
					public onScheduledToStartLater(param0: com.facebook.litho.animation.AnimationBinding): void;
					public onFinish(param0: com.facebook.litho.animation.AnimationBinding): void;
				}
				export class TransitionsResolver extends java.lang.Object implements com.facebook.litho.animation.Resolver {
					public static class: java.lang.Class<com.facebook.litho.TransitionManager.TransitionsResolver>;
					public getCurrentState(param0: com.facebook.litho.animation.PropertyHandle): number;
					public getAnimatedPropertyNode(param0: com.facebook.litho.animation.PropertyHandle): com.facebook.litho.animation.AnimatedPropertyNode;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export abstract class TransitionSet extends com.facebook.litho.Transition {
				public static class: java.lang.Class<com.facebook.litho.TransitionSet>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TransitionUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.TransitionUtils>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TreeProps extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.TreeProps>;
				public get(param0: java.lang.Class<any>): any;
				public put(param0: java.lang.Class<any>, param1: any): void;
				public static acquire(param0: com.facebook.litho.TreeProps): com.facebook.litho.TreeProps;
				public static copy(param0: com.facebook.litho.TreeProps): com.facebook.litho.TreeProps;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class TypedArrayUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.TypedArrayUtils>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class UnfocusedVisibleEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.UnfocusedVisibleEvent>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ViewCompatComponent<V>  extends com.facebook.litho.Component {
				public static class: java.lang.Class<com.facebook.litho.ViewCompatComponent<any>>;
				public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
				public isEquivalentTo(param0: any): boolean;
				public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
				/** @deprecated */
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public onPrepare(param0: com.facebook.litho.ComponentContext): void;
				public poolSize(): number;
				public static get(param0: com.facebook.litho.viewcompat.ViewCreator<any>, param1: string): com.facebook.litho.ViewCompatComponent<any>;
				public createMountContent(param0: globalAndroid.content.Context): any;
				public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public onMeasure(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout, param2: number, param3: number, param4: com.facebook.litho.Size): void;
				public canMeasure(): boolean;
				public create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.ViewCompatComponent.Builder<any>;
				public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
				public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
			}
			export module ViewCompatComponent {
				export class Builder<V>  extends com.facebook.litho.Component.Builder<any> {
					public static class: java.lang.Class<com.facebook.litho.ViewCompatComponent.Builder<any>>;
					public getThis(): any;
					public getThis(): com.facebook.litho.ViewCompatComponent.Builder<any>;
					public constructor();
					public contentPoolSize(param0: number): com.facebook.litho.ViewCompatComponent.Builder<any>;
					public build(): com.facebook.litho.ViewCompatComponent<any>;
					public viewBinder(param0: com.facebook.litho.viewcompat.ViewBinder<any>): com.facebook.litho.ViewCompatComponent.Builder<any>;
					public build(): com.facebook.litho.Component;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class ViewNodeInfo extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.ViewNodeInfo>;
				public isEquivalentTo(param0: com.facebook.litho.ViewNodeInfo): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class VisibilityChangedEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.VisibilityChangedEvent>;
				public visibleHeight: number;
				public visibleWidth: number;
				public percentVisibleWidth: number;
				public percentVisibleHeight: number;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class VisibilityItem extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.VisibilityItem>;
				public constructor(param0: string, param1: com.facebook.litho.EventHandler<com.facebook.litho.InvisibleEvent>, param2: com.facebook.litho.EventHandler<com.facebook.litho.UnfocusedVisibleEvent>, param3: com.facebook.litho.EventHandler<com.facebook.litho.VisibilityChangedEvent>);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class VisibilityOutput extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.VisibilityOutput>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class VisibleEvent extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.VisibleEvent>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class WorkingRange extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.WorkingRange>;
				/**
				 * Constructs a new instance of the com.facebook.litho.WorkingRange interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					shouldEnterRange(param0: number, param1: number, param2: number, param3: number, param4: number): boolean;
					shouldExitRange(param0: number, param1: number, param2: number, param3: number, param4: number): boolean;
				});
				public constructor();
				public shouldEnterRange(param0: number, param1: number, param2: number, param3: number, param4: number): boolean;
				public shouldExitRange(param0: number, param1: number, param2: number, param3: number, param4: number): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class WorkingRangeContainer extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.WorkingRangeContainer>;
			}
			export module WorkingRangeContainer {
				export class RangeTuple extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.WorkingRangeContainer.RangeTuple>;
				}
				export class Registration extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.WorkingRangeContainer.Registration>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class WorkingRangeStatusHandler extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.litho.WorkingRangeStatusHandler>;
				public constructor();
			}
			export module WorkingRangeStatusHandler {
				export class WorkingRangeStatus extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.WorkingRangeStatusHandler.WorkingRangeStatus>;
					/**
					 * Constructs a new instance of the com.facebook.litho.WorkingRangeStatusHandler$WorkingRangeStatus interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export class Wrapper extends com.facebook.litho.Component {
				public static class: java.lang.Class<com.facebook.litho.Wrapper>;
				public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Wrapper.Builder;
				public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
				public getSimpleNameDelegate(): com.facebook.litho.Component;
				public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
				public isEquivalentTo(param0: any): boolean;
				/** @deprecated */
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public canResolve(): boolean;
				public resolve(param0: com.facebook.litho.ComponentContext): com.facebook.litho.ComponentLayout;
				public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.Wrapper.Builder;
				public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
				public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
				public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
			}
			export module Wrapper {
				export class Builder extends com.facebook.litho.Component.Builder<any> {
					public static class: java.lang.Class<com.facebook.litho.Wrapper.Builder>;
					public getThis(): any;
					public delegate(param0: com.facebook.litho.Component): com.facebook.litho.Wrapper.Builder;
					public constructor();
					public build(): com.facebook.litho.Component;
					public getThis(): com.facebook.litho.Wrapper.Builder;
					public build(): com.facebook.litho.Wrapper;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class AnimatedProperties extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.animation.AnimatedProperties>;
					public static X: com.facebook.litho.animation.AnimatedProperty;
					public static Y: com.facebook.litho.animation.AnimatedProperty;
					public static WIDTH: com.facebook.litho.animation.AnimatedProperty;
					public static HEIGHT: com.facebook.litho.animation.AnimatedProperty;
					public static ALPHA: com.facebook.litho.animation.AnimatedProperty;
					public static SCALE: com.facebook.litho.animation.AnimatedProperty;
					public static SCALE_X: com.facebook.litho.animation.AnimatedProperty;
					public static SCALE_Y: com.facebook.litho.animation.AnimatedProperty;
					public static ROTATION: com.facebook.litho.animation.AnimatedProperty;
					public static AUTO_LAYOUT_PROPERTIES: native.Array<com.facebook.litho.animation.AnimatedProperty>;
				}
				export module AnimatedProperties {
					export class AlphaAnimatedProperty extends java.lang.Object implements com.facebook.litho.animation.AnimatedProperty {
						public static class: java.lang.Class<com.facebook.litho.animation.AnimatedProperties.AlphaAnimatedProperty>;
						public get(param0: com.facebook.litho.AnimatableItem): number;
						public set(param0: any, param1: number): void;
						public reset(param0: any): void;
						public get(param0: any): number;
						public getName(): string;
					}
					export class HeightAnimatedProperty extends java.lang.Object implements com.facebook.litho.animation.AnimatedProperty {
						public static class: java.lang.Class<com.facebook.litho.animation.AnimatedProperties.HeightAnimatedProperty>;
						public get(param0: com.facebook.litho.AnimatableItem): number;
						public set(param0: any, param1: number): void;
						public reset(param0: any): void;
						public get(param0: any): number;
						public getName(): string;
					}
					export class RotationAnimatedProperty extends java.lang.Object implements com.facebook.litho.animation.AnimatedProperty {
						public static class: java.lang.Class<com.facebook.litho.animation.AnimatedProperties.RotationAnimatedProperty>;
						public get(param0: com.facebook.litho.AnimatableItem): number;
						public set(param0: any, param1: number): void;
						public reset(param0: any): void;
						public get(param0: any): number;
						public getName(): string;
					}
					export class ScaleAnimatedProperty extends java.lang.Object implements com.facebook.litho.animation.AnimatedProperty {
						public static class: java.lang.Class<com.facebook.litho.animation.AnimatedProperties.ScaleAnimatedProperty>;
						public get(param0: com.facebook.litho.AnimatableItem): number;
						public set(param0: any, param1: number): void;
						public reset(param0: any): void;
						public get(param0: any): number;
						public getName(): string;
					}
					export class ScaleXAnimatedProperty extends java.lang.Object implements com.facebook.litho.animation.AnimatedProperty {
						public static class: java.lang.Class<com.facebook.litho.animation.AnimatedProperties.ScaleXAnimatedProperty>;
						public get(param0: com.facebook.litho.AnimatableItem): number;
						public set(param0: any, param1: number): void;
						public reset(param0: any): void;
						public get(param0: any): number;
						public getName(): string;
					}
					export class ScaleYAnimatedProperty extends java.lang.Object implements com.facebook.litho.animation.AnimatedProperty {
						public static class: java.lang.Class<com.facebook.litho.animation.AnimatedProperties.ScaleYAnimatedProperty>;
						public get(param0: com.facebook.litho.AnimatableItem): number;
						public set(param0: any, param1: number): void;
						public reset(param0: any): void;
						public get(param0: any): number;
						public getName(): string;
					}
					export class WidthAnimatedProperty extends java.lang.Object implements com.facebook.litho.animation.AnimatedProperty {
						public static class: java.lang.Class<com.facebook.litho.animation.AnimatedProperties.WidthAnimatedProperty>;
						public get(param0: com.facebook.litho.AnimatableItem): number;
						public set(param0: any, param1: number): void;
						public reset(param0: any): void;
						public get(param0: any): number;
						public getName(): string;
					}
					export class XAnimatedProperty extends java.lang.Object implements com.facebook.litho.animation.AnimatedProperty {
						public static class: java.lang.Class<com.facebook.litho.animation.AnimatedProperties.XAnimatedProperty>;
						public get(param0: com.facebook.litho.AnimatableItem): number;
						public set(param0: any, param1: number): void;
						public reset(param0: any): void;
						public get(param0: any): number;
						public getName(): string;
					}
					export class YAnimatedProperty extends java.lang.Object implements com.facebook.litho.animation.AnimatedProperty {
						public static class: java.lang.Class<com.facebook.litho.animation.AnimatedProperties.YAnimatedProperty>;
						public get(param0: com.facebook.litho.AnimatableItem): number;
						public set(param0: any, param1: number): void;
						public reset(param0: any): void;
						public get(param0: any): number;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class AnimatedProperty extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.animation.AnimatedProperty>;
					/**
					 * Constructs a new instance of the com.facebook.litho.animation.AnimatedProperty interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getName(): string;
						get(param0: any): number;
						get(param0: com.facebook.litho.AnimatableItem): number;
						set(param0: any, param1: number): void;
						reset(param0: any): void;
					});
					public constructor();
					public getName(): string;
					public set(param0: any, param1: number): void;
					public reset(param0: any): void;
					public get(param0: any): number;
					public get(param0: com.facebook.litho.AnimatableItem): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class AnimatedPropertyNode extends com.facebook.litho.dataflow.ValueNode {
					public static class: java.lang.Class<com.facebook.litho.animation.AnimatedPropertyNode>;
					public setMountContentGroup(param0: com.facebook.litho.OutputUnitsAffinityGroup<any>): void;
					public calculateValue(param0: number): number;
					public constructor();
					public setValue(param0: number): void;
					public constructor(param0: com.facebook.litho.OutputUnitsAffinityGroup<any>, param1: com.facebook.litho.animation.AnimatedProperty);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class AnimationBinding extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.animation.AnimationBinding>;
					/**
					 * Constructs a new instance of the com.facebook.litho.animation.AnimationBinding interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						prepareToStartLater(): void;
						start(param0: com.facebook.litho.animation.Resolver): void;
						stop(): void;
						isActive(): boolean;
						collectTransitioningProperties(param0: java.util.ArrayList<com.facebook.litho.animation.PropertyAnimation>): void;
						addListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
						removeListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					});
					public constructor();
					public isActive(): boolean;
					public removeListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					public prepareToStartLater(): void;
					public stop(): void;
					public collectTransitioningProperties(param0: java.util.ArrayList<com.facebook.litho.animation.PropertyAnimation>): void;
					public start(param0: com.facebook.litho.animation.Resolver): void;
					public addListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class AnimationBindingListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.animation.AnimationBindingListener>;
					/**
					 * Constructs a new instance of the com.facebook.litho.animation.AnimationBindingListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onScheduledToStartLater(param0: com.facebook.litho.animation.AnimationBinding): void;
						onWillStart(param0: com.facebook.litho.animation.AnimationBinding): void;
						onFinish(param0: com.facebook.litho.animation.AnimationBinding): void;
						onCanceledBeforeStart(param0: com.facebook.litho.animation.AnimationBinding): void;
						shouldStart(param0: com.facebook.litho.animation.AnimationBinding): boolean;
					});
					public constructor();
					public shouldStart(param0: com.facebook.litho.animation.AnimationBinding): boolean;
					public onWillStart(param0: com.facebook.litho.animation.AnimationBinding): void;
					public onCanceledBeforeStart(param0: com.facebook.litho.animation.AnimationBinding): void;
					public onScheduledToStartLater(param0: com.facebook.litho.animation.AnimationBinding): void;
					public onFinish(param0: com.facebook.litho.animation.AnimationBinding): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export abstract class BaseAnimationBinding extends java.lang.Object implements com.facebook.litho.animation.AnimationBinding {
					public static class: java.lang.Class<com.facebook.litho.animation.BaseAnimationBinding>;
					public removeListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					public isActive(): boolean;
					public prepareToStartLater(): void;
					public stop(): void;
					public collectTransitioningProperties(param0: java.util.ArrayList<com.facebook.litho.animation.PropertyAnimation>): void;
					public addListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					public start(param0: com.facebook.litho.animation.Resolver): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class BezierTransition extends com.facebook.litho.animation.TransitionAnimationBinding {
					public static class: java.lang.Class<com.facebook.litho.animation.BezierTransition>;
					public setupBinding(param0: com.facebook.litho.animation.Resolver): void;
					public isActive(): boolean;
					public removeListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					public prepareToStartLater(): void;
					public constructor();
					public constructor(param0: com.facebook.litho.animation.PropertyAnimation, param1: com.facebook.litho.animation.PropertyAnimation, param2: number, param3: number);
					public stop(): void;
					public collectTransitioningProperties(param0: java.util.ArrayList<com.facebook.litho.animation.PropertyAnimation>): void;
					public start(param0: com.facebook.litho.animation.Resolver): void;
					public addListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
				}
				export module BezierTransition {
					export class BezierNode extends com.facebook.litho.dataflow.ValueNode {
						public static class: java.lang.Class<com.facebook.litho.animation.BezierTransition.BezierNode>;
						public constructor();
						public constructor(param0: number, param1: number, param2: number);
						public calculateValue(param0: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class DelayBinding extends com.facebook.litho.animation.BaseAnimationBinding {
					public static class: java.lang.Class<com.facebook.litho.animation.DelayBinding>;
					public isActive(): boolean;
					public removeListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					public constructor(param0: number, param1: com.facebook.litho.animation.AnimationBinding);
					public prepareToStartLater(): void;
					public stop(): void;
					public collectTransitioningProperties(param0: java.util.ArrayList<com.facebook.litho.animation.PropertyAnimation>): void;
					public start(param0: com.facebook.litho.animation.Resolver): void;
					public addListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class DimensionValue extends java.lang.Object implements com.facebook.litho.animation.RuntimeValue {
					public static class: java.lang.Class<com.facebook.litho.animation.DimensionValue>;
					public resolve(param0: com.facebook.litho.animation.Resolver, param1: com.facebook.litho.animation.PropertyHandle): number;
					public static offsetDip(param0: globalAndroid.content.Context, param1: number): com.facebook.litho.animation.DimensionValue;
					public static widthPercentageOffset(param0: number): com.facebook.litho.animation.DimensionValue;
					public static heightPercentageOffset(param0: number): com.facebook.litho.animation.DimensionValue;
					public static absolute(param0: number): com.facebook.litho.animation.DimensionValue;
					public static offsetPx(param0: number): com.facebook.litho.animation.DimensionValue;
				}
				export module DimensionValue {
					export class Type {
						public static class: java.lang.Class<com.facebook.litho.animation.DimensionValue.Type>;
						public static ABSOLUTE: com.facebook.litho.animation.DimensionValue.Type;
						public static OFFSET: com.facebook.litho.animation.DimensionValue.Type;
						public static OFFSET_WIDTH_PERCENTAGE: com.facebook.litho.animation.DimensionValue.Type;
						public static OFFSET_HEIGHT_PERCENTAGE: com.facebook.litho.animation.DimensionValue.Type;
						public static valueOf(param0: string): com.facebook.litho.animation.DimensionValue.Type;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static values(): native.Array<com.facebook.litho.animation.DimensionValue.Type>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class FloatValue extends java.lang.Object implements com.facebook.litho.animation.RuntimeValue {
					public static class: java.lang.Class<com.facebook.litho.animation.FloatValue>;
					public resolve(param0: com.facebook.litho.animation.Resolver, param1: com.facebook.litho.animation.PropertyHandle): number;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class ParallelBinding extends com.facebook.litho.animation.BaseAnimationBinding {
					public static class: java.lang.Class<com.facebook.litho.animation.ParallelBinding>;
					public isActive(): boolean;
					public removeListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					public prepareToStartLater(): void;
					public stop(): void;
					public collectTransitioningProperties(param0: java.util.ArrayList<com.facebook.litho.animation.PropertyAnimation>): void;
					public constructor(param0: number, param1: java.util.List<com.facebook.litho.animation.AnimationBinding>);
					public start(param0: com.facebook.litho.animation.Resolver): void;
					public addListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class PropertyAnimation extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.animation.PropertyAnimation>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getProperty(): com.facebook.litho.animation.AnimatedProperty;
					public getTargetValue(): number;
					public getPropertyHandle(): com.facebook.litho.animation.PropertyHandle;
					public getTransitionId(): com.facebook.litho.TransitionId;
					public constructor(param0: com.facebook.litho.animation.PropertyHandle, param1: number);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class PropertyHandle extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.animation.PropertyHandle>;
					public equals(param0: any): boolean;
					public toString(): string;
					public getProperty(): com.facebook.litho.animation.AnimatedProperty;
					public constructor(param0: com.facebook.litho.TransitionId, param1: com.facebook.litho.animation.AnimatedProperty);
					public getTransitionId(): com.facebook.litho.TransitionId;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class RenderThreadTransition extends com.facebook.litho.animation.TransitionAnimationBinding {
					public static class: java.lang.Class<com.facebook.litho.animation.RenderThreadTransition>;
					public setupBinding(param0: com.facebook.litho.animation.Resolver): void;
					public isActive(): boolean;
					public removeListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					public constructor(param0: com.facebook.litho.animation.PropertyAnimation, param1: number, param2: number, param3: globalAndroid.animation.TimeInterpolator);
					public prepareToStartLater(): void;
					public constructor();
					public stop(): void;
					public collectTransitioningProperties(param0: java.util.ArrayList<com.facebook.litho.animation.PropertyAnimation>): void;
					public start(param0: com.facebook.litho.animation.Resolver): void;
					public addListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
				}
				export module RenderThreadTransition {
					export class DelayInterpolator extends java.lang.Object implements globalAndroid.animation.TimeInterpolator {
						public static class: java.lang.Class<com.facebook.litho.animation.RenderThreadTransition.DelayInterpolator>;
						public getInterpolation(param0: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class Resolver extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.animation.Resolver>;
					/**
					 * Constructs a new instance of the com.facebook.litho.animation.Resolver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getCurrentState(param0: com.facebook.litho.animation.PropertyHandle): number;
						getAnimatedPropertyNode(param0: com.facebook.litho.animation.PropertyHandle): com.facebook.litho.animation.AnimatedPropertyNode;
					});
					public constructor();
					public getCurrentState(param0: com.facebook.litho.animation.PropertyHandle): number;
					public getAnimatedPropertyNode(param0: com.facebook.litho.animation.PropertyHandle): com.facebook.litho.animation.AnimatedPropertyNode;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class RuntimeValue extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.animation.RuntimeValue>;
					/**
					 * Constructs a new instance of the com.facebook.litho.animation.RuntimeValue interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						resolve(param0: com.facebook.litho.animation.Resolver, param1: com.facebook.litho.animation.PropertyHandle): number;
					});
					public constructor();
					public resolve(param0: com.facebook.litho.animation.Resolver, param1: com.facebook.litho.animation.PropertyHandle): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class SequenceBinding extends com.facebook.litho.animation.BaseAnimationBinding {
					public static class: java.lang.Class<com.facebook.litho.animation.SequenceBinding>;
					public isActive(): boolean;
					public removeListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					public prepareToStartLater(): void;
					public constructor(param0: java.util.List<com.facebook.litho.animation.AnimationBinding>);
					public stop(): void;
					public collectTransitioningProperties(param0: java.util.ArrayList<com.facebook.litho.animation.PropertyAnimation>): void;
					public start(param0: com.facebook.litho.animation.Resolver): void;
					public addListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class SpringTransition extends com.facebook.litho.animation.TransitionAnimationBinding {
					public static class: java.lang.Class<com.facebook.litho.animation.SpringTransition>;
					public setupBinding(param0: com.facebook.litho.animation.Resolver): void;
					public isActive(): boolean;
					public removeListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					public constructor(param0: com.facebook.litho.animation.PropertyAnimation, param1: com.facebook.litho.dataflow.springs.SpringConfig);
					public constructor(param0: com.facebook.litho.animation.PropertyAnimation);
					public prepareToStartLater(): void;
					public constructor();
					public stop(): void;
					public collectTransitioningProperties(param0: java.util.ArrayList<com.facebook.litho.animation.PropertyAnimation>): void;
					public start(param0: com.facebook.litho.animation.Resolver): void;
					public addListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export class TimingTransition extends com.facebook.litho.animation.TransitionAnimationBinding {
					public static class: java.lang.Class<com.facebook.litho.animation.TimingTransition>;
					public constructor(param0: number, param1: com.facebook.litho.animation.PropertyAnimation);
					public setupBinding(param0: com.facebook.litho.animation.Resolver): void;
					public isActive(): boolean;
					public removeListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					public prepareToStartLater(): void;
					public constructor();
					public stop(): void;
					public collectTransitioningProperties(param0: java.util.ArrayList<com.facebook.litho.animation.PropertyAnimation>): void;
					public constructor(param0: number, param1: com.facebook.litho.animation.PropertyAnimation, param2: globalAndroid.view.animation.Interpolator);
					public start(param0: com.facebook.litho.animation.Resolver): void;
					public addListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module animation {
				export abstract class TransitionAnimationBinding extends com.facebook.litho.animation.BaseAnimationBinding {
					public static class: java.lang.Class<com.facebook.litho.animation.TransitionAnimationBinding>;
					public setupBinding(param0: com.facebook.litho.animation.Resolver): void;
					public isActive(): boolean;
					public removeListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
					public addBinding(param0: com.facebook.litho.dataflow.ValueNode, param1: com.facebook.litho.dataflow.ValueNode): void;
					public prepareToStartLater(): void;
					public constructor();
					public addBinding(param0: com.facebook.litho.dataflow.ValueNode, param1: com.facebook.litho.dataflow.ValueNode, param2: string): void;
					public stop(): void;
					public collectTransitioningProperties(param0: java.util.ArrayList<com.facebook.litho.animation.PropertyAnimation>): void;
					public start(param0: com.facebook.litho.animation.Resolver): void;
					public addListener(param0: com.facebook.litho.animation.AnimationBindingListener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class CachedValue extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.CachedValue>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.CachedValue interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class Comparable extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.Comparable>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.Comparable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						type(): number;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public static ARRAY: number;
					public static FLOAT: number;
					public static STATE_CONTAINER: number;
					public static COLLECTION_COMPLEVEL_1: number;
					public static COLLECTION_COMPLEVEL_2: number;
					public static EVENT_HANDLER: number;
					public static DOUBLE: number;
					public static COLLECTION_COMPLEVEL_0: number;
					public static COMPONENT: number;
					public static PRIMITIVE: number;
					public static SECTION: number;
					public static COMPARABLE_DRAWABLE: number;
					public static OTHER: number;
					public static EVENT_HANDLER_IN_PARAMETERIZED_TYPE: number;
					public static COLLECTION_COMPLEVEL_3: number;
					public static COLLECTION_COMPLEVEL_4: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public type(): number;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
				export module Comparable {
					export class Type extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.litho.annotations.Comparable.Type>;
						/**
						 * Constructs a new instance of the com.facebook.litho.annotations.Comparable$Type interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class Event extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.Event>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.Event interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						returnType(): java.lang.Class<any>;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
					public returnType(): java.lang.Class<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class FromBind extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.FromBind>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.FromBind interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class FromBoundsDefined extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.FromBoundsDefined>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.FromBoundsDefined interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class FromCreateLayout extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.FromCreateLayout>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.FromCreateLayout interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class FromEvent extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.FromEvent>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.FromEvent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						baseClass(): java.lang.Class<any>;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public baseClass(): java.lang.Class<any>;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class FromMeasure extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.FromMeasure>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.FromMeasure interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class FromMeasureBaseline extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.FromMeasureBaseline>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.FromMeasureBaseline interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class FromPrepare extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.FromPrepare>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.FromPrepare interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class FromTrigger extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.FromTrigger>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.FromTrigger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class GetExtraAccessibilityNodeAt extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.GetExtraAccessibilityNodeAt>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.GetExtraAccessibilityNodeAt interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class GetExtraAccessibilityNodesCount extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.GetExtraAccessibilityNodesCount>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.GetExtraAccessibilityNodesCount interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class ImportantForAccessibility extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.ImportantForAccessibility>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.ImportantForAccessibility interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public static IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS: number;
					public static IMPORTANT_FOR_ACCESSIBILITY_YES: number;
					public static IMPORTANT_FOR_ACCESSIBILITY_NO: number;
					public static IMPORTANT_FOR_ACCESSIBILITY_AUTO: number;
					public static IMPORTANT_FOR_ACCESSIBILITY_YES_HIDE_DESCENDANTS: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class InjectProp extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.InjectProp>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.InjectProp interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isLazy(): boolean;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public isLazy(): boolean;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class LayoutSpec extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.LayoutSpec>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.LayoutSpec interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						value(): string;
						isPublic(): boolean;
						isPureRender(): boolean;
						events(): native.Array<java.lang.Class<any>>;
						triggers(): native.Array<java.lang.Class<any>>;
						simpleNameDelegate(): string;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public isPureRender(): boolean;
					public simpleNameDelegate(): string;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public isPublic(): boolean;
					public events(): native.Array<java.lang.Class<any>>;
					public value(): string;
					public hashCode(): number;
					public triggers(): native.Array<java.lang.Class<any>>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class MountSpec extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.MountSpec>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.MountSpec interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						value(): string;
						isPublic(): boolean;
						isPureRender(): boolean;
						hasChildLithoViews(): boolean;
						events(): native.Array<java.lang.Class<any>>;
						shouldUseDisplayList(): boolean;
						poolSize(): number;
						canPreallocate(): boolean;
						triggers(): native.Array<java.lang.Class<any>>;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public isPureRender(): boolean;
					public annotationType(): java.lang.Class<any>;
					public value(): string;
					public hasChildLithoViews(): boolean;
					public triggers(): native.Array<java.lang.Class<any>>;
					public shouldUseDisplayList(): boolean;
					public canPreallocate(): boolean;
					public equals(param0: any): boolean;
					public poolSize(): number;
					public toString(): string;
					public isPublic(): boolean;
					public events(): native.Array<java.lang.Class<any>>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class MountingType {
					public static class: java.lang.Class<com.facebook.litho.annotations.MountingType>;
					public static INFER: com.facebook.litho.annotations.MountingType;
					public static VIEW: com.facebook.litho.annotations.MountingType;
					public static DRAWABLE: com.facebook.litho.annotations.MountingType;
					public static values(): native.Array<com.facebook.litho.annotations.MountingType>;
					public static valueOf(param0: string): com.facebook.litho.annotations.MountingType;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnAttached extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnAttached>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnAttached interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnBind extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnBind>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnBind interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnBindDynamicValue extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnBindDynamicValue>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnBindDynamicValue interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnBoundsDefined extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnBoundsDefined>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnBoundsDefined interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnCalculateCachedValue extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnCalculateCachedValue>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnCalculateCachedValue interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						name(): string;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public name(): string;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnCreateInitialState extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnCreateInitialState>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnCreateInitialState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnCreateLayout extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnCreateLayout>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnCreateLayout interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnCreateLayoutWithSizeSpec extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnCreateLayoutWithSizeSpec>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnCreateLayoutWithSizeSpec interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnCreateMountContent extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnCreateMountContent>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnCreateMountContent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						mountingType(): com.facebook.litho.annotations.MountingType;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public mountingType(): com.facebook.litho.annotations.MountingType;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnCreateMountContentPool extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnCreateMountContentPool>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnCreateMountContentPool interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnCreateTransition extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnCreateTransition>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnCreateTransition interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnCreateTreeProp extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnCreateTreeProp>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnCreateTreeProp interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnDetached extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnDetached>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnDetached interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnEnteredRange extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnEnteredRange>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnEnteredRange interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						name(): string;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public name(): string;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnError extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnError>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnError interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnEvent extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnEvent>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnEvent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						value(): java.lang.Class<any>;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public value(): java.lang.Class<any>;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnExitedRange extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnExitedRange>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnExitedRange interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						name(): string;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public name(): string;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnLoadStyle extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnLoadStyle>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnLoadStyle interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnMeasure extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnMeasure>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnMeasure interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnMeasureBaseline extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnMeasureBaseline>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnMeasureBaseline interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnMount extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnMount>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnMount interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnPopulateAccessibilityNode extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnPopulateAccessibilityNode>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnPopulateAccessibilityNode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnPopulateExtraAccessibilityNode extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnPopulateExtraAccessibilityNode>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnPopulateExtraAccessibilityNode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnPrepare extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnPrepare>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnPrepare interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnRegisterRanges extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnRegisterRanges>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnRegisterRanges interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnShouldCreateLayoutWithNewSizeSpec extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnShouldCreateLayoutWithNewSizeSpec>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnShouldCreateLayoutWithNewSizeSpec interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnTrigger extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnTrigger>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnTrigger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						value(): java.lang.Class<any>;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public value(): java.lang.Class<any>;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnUnbind extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnUnbind>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnUnbind interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnUnmount extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnUnmount>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnUnmount interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnUpdateState extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnUpdateState>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnUpdateState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class OnUpdateStateWithTransition extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.OnUpdateStateWithTransition>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.OnUpdateStateWithTransition interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class Param extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.Param>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.Param interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class Prop extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.Prop>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.Prop interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						optional(): boolean;
						resType(): com.facebook.litho.annotations.ResType;
						docString(): string;
						varArg(): string;
						isCommonProp(): boolean;
						overrideCommonPropBehavior(): boolean;
						dynamic(): boolean;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public resType(): com.facebook.litho.annotations.ResType;
					public annotationType(): java.lang.Class<any>;
					public isCommonProp(): boolean;
					public varArg(): string;
					public overrideCommonPropBehavior(): boolean;
					public optional(): boolean;
					public hashCode(): number;
					public dynamic(): boolean;
					public docString(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class PropDefault extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.PropDefault>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.PropDefault interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						resType(): com.facebook.litho.annotations.ResType;
						resId(): number;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public resType(): com.facebook.litho.annotations.ResType;
					public annotationType(): java.lang.Class<any>;
					public resId(): number;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class ResType {
					public static class: java.lang.Class<com.facebook.litho.annotations.ResType>;
					public static NONE: com.facebook.litho.annotations.ResType;
					public static STRING: com.facebook.litho.annotations.ResType;
					public static STRING_ARRAY: com.facebook.litho.annotations.ResType;
					public static INT: com.facebook.litho.annotations.ResType;
					public static INT_ARRAY: com.facebook.litho.annotations.ResType;
					public static BOOL: com.facebook.litho.annotations.ResType;
					public static COLOR: com.facebook.litho.annotations.ResType;
					public static DIMEN_SIZE: com.facebook.litho.annotations.ResType;
					public static DIMEN_OFFSET: com.facebook.litho.annotations.ResType;
					public static DIMEN_TEXT: com.facebook.litho.annotations.ResType;
					public static FLOAT: com.facebook.litho.annotations.ResType;
					public static DRAWABLE: com.facebook.litho.annotations.ResType;
					public static values(): native.Array<com.facebook.litho.annotations.ResType>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
					public static valueOf(param0: string): com.facebook.litho.annotations.ResType;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class ShouldAlwaysRemeasure extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.ShouldAlwaysRemeasure>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.ShouldAlwaysRemeasure interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class ShouldUpdate extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.ShouldUpdate>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.ShouldUpdate interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onMount(): boolean;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public onMount(): boolean;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class State extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.State>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						canUpdateLazily(): boolean;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public canUpdateLazily(): boolean;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class TestSpec extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.TestSpec>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.TestSpec interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						value(): java.lang.Class<any>;
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public value(): java.lang.Class<any>;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module annotations {
				export class TreeProp extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.litho.annotations.TreeProp>;
					/**
					 * Constructs a new instance of the com.facebook.litho.annotations.TreeProp interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module choreographercompat {
				export class ChoreographerCompat extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.choreographercompat.ChoreographerCompat>;
					/**
					 * Constructs a new instance of the com.facebook.litho.choreographercompat.ChoreographerCompat interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						postFrameCallback(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback): void;
						postFrameCallbackDelayed(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback, param1: number): void;
						removeFrameCallback(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback): void;
					});
					public constructor();
					public postFrameCallback(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback): void;
					public postFrameCallbackDelayed(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback, param1: number): void;
					public removeFrameCallback(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback): void;
				}
				export module ChoreographerCompat {
					export abstract class FrameCallback extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback>;
						public constructor();
						public doFrame(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module choreographercompat {
				export class ChoreographerCompatImpl extends java.lang.Object implements com.facebook.litho.choreographercompat.ChoreographerCompat {
					public static class: java.lang.Class<com.facebook.litho.choreographercompat.ChoreographerCompatImpl>;
					public postFrameCallback(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback): void;
					public postFrameCallbackDelayed(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback, param1: number): void;
					public static getInstance(): com.facebook.litho.choreographercompat.ChoreographerCompat;
					public static setInstance(param0: com.facebook.litho.choreographercompat.ChoreographerCompat): void;
					public removeFrameCallback(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module config {
				export class ComponentsConfiguration extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.config.ComponentsConfiguration>;
					public static YOGA_LOGGER: com.facebook.yoga.YogaLogger;
					public static IS_INTERNAL_BUILD: boolean;
					public static USE_INCREMENTAL_MOUNT_HELPER: boolean;
					public static ARE_TRANSITIONS_SUPPORTED: boolean;
					public static CAN_CHECK_GLOBAL_ANIMATOR_SETTINGS: boolean;
					public static NEEDS_THEME_SYNCHRONIZATION: boolean;
					public static DEFAULT_BACKGROUND_THREAD_PRIORITY: number;
					public static DEFAULT_CHANGE_SET_THREAD_PRIORITY: number;
					public static isDebugModeEnabled: boolean;
					public static debugHighlightInteractiveBounds: boolean;
					public static enableLithoViewDebugOverlay: boolean;
					public static debugHighlightMountBounds: boolean;
					public static isEndToEndTestRun: boolean;
					public static forceEnableTransitionsForInstrumentationTests: boolean;
					public static enableOnErrorHandling: boolean;
					public static useGlobalKeys: boolean;
					public static unmountAllWhenComponentTreeSetToNull: boolean;
					public static threadPoolForBackgroundThreadsConfig: com.facebook.litho.config.LayoutThreadPoolConfiguration;
					public static useSingleThreadPool: boolean;
					public static asyncInitRange: boolean;
					public static bgScheduleAllInitRange: boolean;
					public static threadPoolConfiguration: com.facebook.litho.config.LayoutThreadPoolConfiguration;
					public static enableThreadTracingStacktrace: boolean;
					public static incrementalMountWhenNotVisible: boolean;
					public static inheritPriorityFromUiThread: boolean;
					public static enableShouldCreateLayoutWithNewSizeSpec: boolean;
					public static onlyProcessAutogeneratedTransitionIdsWhenNecessary: boolean;
					public static isNestedTreeResolutionExperimentEnabled: boolean;
					public static isSparseCommonPropsHolderIsEnabled: boolean;
					public static isSparseNodeInfoIsEnabled: boolean;
					public static isReconciliationEnabled: boolean;
					public static lazyComparableAnimatedColorDrawable: boolean;
					public static enableRenderInfoDebugging: boolean;
					public static useCancelableLayoutFutures: boolean;
					public static canInterruptAndMoveLayoutsBetweenThreads: boolean;
					public static createInitialStateOncePerThread: boolean;
					public static isPoolBisectEnabled: boolean;
					public static disablePoolsStart: string;
					public static disablePoolsEnd: string;
					public static prioritizeRenderingOnParallel: boolean;
					public static useSharedFutureOnParallel: boolean;
					public static checkNeedsRemeasure: boolean;
					public static disableComponentHostPool: boolean;
					public static splitLayoutForMeasureAndRangeEstimation: boolean;
					public static isMountIndexBisectEnabled: boolean;
					public static mountIndexBisectStart: number;
					public static mountIndexBisectEnd: number;
					public static isRootComponentBisectEnabled: boolean;
					public static rootComponentBisectStart: string;
					public static rootComponentBisectEnd: string;
					public static perfBoosterFactory: com.facebook.litho.perfboost.LithoPerfBoosterFactory;
					public static boostPerfLayoutStateFuture: boolean;
					public static isReleaseComponentTreeInRecyclerBinder: boolean;
					public static disableUnmountOnRecycle: boolean;
					public constructor();
					public static isRenderInfoDebuggingEnabled(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module config {
				export class DeviceInfoUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.config.DeviceInfoUtils>;
					public static DEVICEINFO_UNKNOWN: number;
					public static NUM_CORES_NOT_SET: number;
					public static getNumberOfCPUCores(): number;
					public constructor();
					public static hasMultipleCores(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module config {
				export class LayoutThreadPoolConfiguration extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.config.LayoutThreadPoolConfiguration>;
					/**
					 * Constructs a new instance of the com.facebook.litho.config.LayoutThreadPoolConfiguration interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getCorePoolSize(): number;
						getMaxPoolSize(): number;
						getThreadPriority(): number;
					});
					public constructor();
					public getCorePoolSize(): number;
					public getMaxPoolSize(): number;
					public getThreadPriority(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class BadGraphSetupException extends java.lang.RuntimeException {
					public static class: java.lang.Class<com.facebook.litho.dataflow.BadGraphSetupException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class BindingListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.dataflow.BindingListener>;
					/**
					 * Constructs a new instance of the com.facebook.litho.dataflow.BindingListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onAllNodesFinished(param0: com.facebook.litho.dataflow.GraphBinding): void;
					});
					public constructor();
					public onAllNodesFinished(param0: com.facebook.litho.dataflow.GraphBinding): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class ChoreographerTimingSource extends java.lang.Object implements com.facebook.litho.dataflow.TimingSource {
					public static class: java.lang.Class<com.facebook.litho.dataflow.ChoreographerTimingSource>;
					public constructor();
					public stop(): void;
					public setDataFlowGraph(param0: com.facebook.litho.dataflow.DataFlowGraph): void;
					public start(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class ConstantNode extends com.facebook.litho.dataflow.ValueNode {
					public static class: java.lang.Class<com.facebook.litho.dataflow.ConstantNode>;
					public calculateValue(param0: number): number;
					public constructor();
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class DataFlowBinding extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.dataflow.DataFlowBinding>;
					/**
					 * Constructs a new instance of the com.facebook.litho.dataflow.DataFlowBinding interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						activate(): void;
						deactivate(): void;
						isActive(): boolean;
						setListener(param0: com.facebook.litho.dataflow.BindingListener): void;
					});
					public constructor();
					public activate(): void;
					public isActive(): boolean;
					public setListener(param0: com.facebook.litho.dataflow.BindingListener): void;
					public deactivate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class DataFlowGraph extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.dataflow.DataFlowGraph>;
					public static getInstance(): com.facebook.litho.dataflow.DataFlowGraph;
					public static create(param0: com.facebook.litho.dataflow.TimingSource): com.facebook.litho.dataflow.DataFlowGraph;
					public unregister(param0: com.facebook.litho.dataflow.GraphBinding): void;
					public register(param0: com.facebook.litho.dataflow.GraphBinding): void;
					public static setInstance(param0: com.facebook.litho.dataflow.DataFlowGraph): void;
				}
				export module DataFlowGraph {
					export class NodeState extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.dataflow.DataFlowGraph.NodeState>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class DetectedCycleException extends com.facebook.litho.dataflow.BadGraphSetupException {
					public static class: java.lang.Class<com.facebook.litho.dataflow.DetectedCycleException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class GraphBinding extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.dataflow.GraphBinding>;
					public activate(): void;
					public isActive(): boolean;
					public setListener(param0: com.facebook.litho.dataflow.BindingListener): void;
					public static create(): com.facebook.litho.dataflow.GraphBinding;
					public addBinding(param0: com.facebook.litho.dataflow.ValueNode, param1: com.facebook.litho.dataflow.ValueNode): void;
					public addBinding(param0: com.facebook.litho.dataflow.ValueNode, param1: com.facebook.litho.dataflow.ValueNode, param2: string): void;
					public deactivate(): void;
					public static create(param0: com.facebook.litho.dataflow.DataFlowGraph): com.facebook.litho.dataflow.GraphBinding;
				}
				export module GraphBinding {
					export class Bindings extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.dataflow.GraphBinding.Bindings>;
						public addBinding(param0: com.facebook.litho.dataflow.ValueNode, param1: com.facebook.litho.dataflow.ValueNode, param2: string): void;
						public applyBindings(): void;
						public removeBindings(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class IllegalValueException extends java.lang.RuntimeException {
					public static class: java.lang.Class<com.facebook.litho.dataflow.IllegalValueException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class InterpolatorNode extends com.facebook.litho.dataflow.ValueNode {
					public static class: java.lang.Class<com.facebook.litho.dataflow.InterpolatorNode>;
					public calculateValue(param0: number): number;
					public constructor();
					public constructor(param0: globalAndroid.animation.TimeInterpolator);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class MappingNode extends com.facebook.litho.dataflow.ValueNode {
					public static class: java.lang.Class<com.facebook.litho.dataflow.MappingNode>;
					public static INITIAL_INPUT: string;
					public static END_INPUT: string;
					public calculateValue(param0: number): number;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class MockTimingSource extends java.lang.Object implements com.facebook.litho.dataflow.TimingSource, com.facebook.litho.choreographercompat.ChoreographerCompat {
					public static class: java.lang.Class<com.facebook.litho.dataflow.MockTimingSource>;
					public static FRAME_TIME_MS: number;
					public postFrameCallback(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback): void;
					public postFrameCallbackDelayed(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback, param1: number): void;
					public constructor();
					public stop(): void;
					public removeFrameCallback(param0: com.facebook.litho.choreographercompat.ChoreographerCompat.FrameCallback): void;
					public setDataFlowGraph(param0: com.facebook.litho.dataflow.DataFlowGraph): void;
					public start(): void;
					public step(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class NodeCanFinish extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.dataflow.NodeCanFinish>;
					/**
					 * Constructs a new instance of the com.facebook.litho.dataflow.NodeCanFinish interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isFinished(): boolean;
					});
					public constructor();
					public isFinished(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class SimpleNode extends com.facebook.litho.dataflow.ValueNode {
					public static class: java.lang.Class<com.facebook.litho.dataflow.SimpleNode>;
					public calculateValue(param0: number): number;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class SpringNode extends com.facebook.litho.dataflow.ValueNode implements com.facebook.litho.dataflow.NodeCanFinish {
					public static class: java.lang.Class<com.facebook.litho.dataflow.SpringNode>;
					public static NS_PER_SECOND: number;
					public static INITIAL_INPUT: string;
					public static END_INPUT: string;
					public isFinished(): boolean;
					public calculateValue(param0: number): number;
					public constructor();
					public constructor(param0: com.facebook.litho.dataflow.springs.SpringConfig);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class TimingNode extends com.facebook.litho.dataflow.ValueNode implements com.facebook.litho.dataflow.NodeCanFinish {
					public static class: java.lang.Class<com.facebook.litho.dataflow.TimingNode>;
					public isFinished(): boolean;
					public calculateValue(param0: number): number;
					public constructor();
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export class TimingSource extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.dataflow.TimingSource>;
					/**
					 * Constructs a new instance of the com.facebook.litho.dataflow.TimingSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setDataFlowGraph(param0: com.facebook.litho.dataflow.DataFlowGraph): void;
						start(): void;
						stop(): void;
					});
					public constructor();
					public stop(): void;
					public setDataFlowGraph(param0: com.facebook.litho.dataflow.DataFlowGraph): void;
					public start(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export abstract class ValueNode extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.dataflow.ValueNode>;
					public static DEFAULT_INPUT: string;
					public hasInput(param0: string): boolean;
					public calculateValue(param0: number): number;
					public constructor();
					public getInput(param0: string): com.facebook.litho.dataflow.ValueNode;
					public getValue(): number;
					public hasInput(): boolean;
					public setValue(param0: number): void;
					public getInput(): com.facebook.litho.dataflow.ValueNode;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export module springs {
					export class Spring extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.dataflow.springs.Spring>;
						public setCurrentValue(param0: number, param1: boolean): com.facebook.litho.dataflow.springs.Spring;
						public setEndValue(param0: number): com.facebook.litho.dataflow.springs.Spring;
						public setAtRest(): com.facebook.litho.dataflow.springs.Spring;
						public getSpringConfig(): com.facebook.litho.dataflow.springs.SpringConfig;
						public destroy(): void;
						public getCurrentValue(): number;
						public systemShouldAdvance(): boolean;
						public setRestSpeedThreshold(param0: number): com.facebook.litho.dataflow.springs.Spring;
						public isAtRest(): boolean;
						public currentValueIsApproximately(param0: number): boolean;
						public getVelocity(): number;
						public addListener(param0: com.facebook.litho.dataflow.springs.SpringListener): com.facebook.litho.dataflow.springs.Spring;
						public getId(): string;
						public removeListener(param0: com.facebook.litho.dataflow.springs.SpringListener): com.facebook.litho.dataflow.springs.Spring;
						public constructor();
						public isOvershootClampingEnabled(): boolean;
						public setSpringConfig(param0: com.facebook.litho.dataflow.springs.SpringConfig): com.facebook.litho.dataflow.springs.Spring;
						public getRestSpeedThreshold(): number;
						public getEndValue(): number;
						public wasAtRest(): boolean;
						public setOvershootClampingEnabled(param0: boolean): com.facebook.litho.dataflow.springs.Spring;
						public advance(param0: number): void;
						public setVelocity(param0: number): com.facebook.litho.dataflow.springs.Spring;
						public getRestDisplacementThreshold(): number;
						public setRestDisplacementThreshold(param0: number): com.facebook.litho.dataflow.springs.Spring;
						public setCurrentValue(param0: number): com.facebook.litho.dataflow.springs.Spring;
						public removeAllListeners(): com.facebook.litho.dataflow.springs.Spring;
						public getStartValue(): number;
						public getCurrentDisplacementDistance(): number;
						public isOvershooting(): boolean;
					}
					export module Spring {
						export class PhysicsState extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.litho.dataflow.springs.Spring.PhysicsState>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export module springs {
					export class SpringConfig extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.dataflow.springs.SpringConfig>;
						public static DEFAULT_TENSION: number;
						public static DEFAULT_FRICTION: number;
						public friction: number;
						public tension: number;
						public static defaultConfig: com.facebook.litho.dataflow.springs.SpringConfig;
						public static noOvershootConfig: com.facebook.litho.dataflow.springs.SpringConfig;
						public constructor(param0: number, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module dataflow {
				export module springs {
					export class SpringListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.dataflow.springs.SpringListener>;
						/**
						 * Constructs a new instance of the com.facebook.litho.dataflow.springs.SpringListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSpringUpdate(param0: com.facebook.litho.dataflow.springs.Spring): void;
							onSpringAtRest(param0: com.facebook.litho.dataflow.springs.Spring): void;
							onSpringActivate(param0: com.facebook.litho.dataflow.springs.Spring): void;
							onSpringEndStateChange(param0: com.facebook.litho.dataflow.springs.Spring): void;
						});
						public constructor();
						public onSpringAtRest(param0: com.facebook.litho.dataflow.springs.Spring): void;
						public onSpringEndStateChange(param0: com.facebook.litho.dataflow.springs.Spring): void;
						public onSpringUpdate(param0: com.facebook.litho.dataflow.springs.Spring): void;
						public onSpringActivate(param0: com.facebook.litho.dataflow.springs.Spring): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module drawable {
				export class BorderColorDrawable extends com.facebook.litho.drawable.ComparableDrawable {
					public static class: java.lang.Class<com.facebook.litho.drawable.BorderColorDrawable>;
					public equals(param0: any): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public static isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable, param1: com.facebook.litho.drawable.ComparableDrawable): boolean;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public init(): void;
					public setAlpha(param0: number): void;
					public hashCode(): number;
					public isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable): boolean;
					public getOpacity(): number;
				}
				export module BorderColorDrawable {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.drawable.BorderColorDrawable.Builder>;
						public borderRadius(param0: native.Array<number>): com.facebook.litho.drawable.BorderColorDrawable.Builder;
						public constructor();
						public pathEffect(param0: globalAndroid.graphics.PathEffect): com.facebook.litho.drawable.BorderColorDrawable.Builder;
						public borderRightColor(param0: number): com.facebook.litho.drawable.BorderColorDrawable.Builder;
						public borderLeftColor(param0: number): com.facebook.litho.drawable.BorderColorDrawable.Builder;
						public borderWidth(param0: number): com.facebook.litho.drawable.BorderColorDrawable.Builder;
						public borderColor(param0: number): com.facebook.litho.drawable.BorderColorDrawable.Builder;
						public borderLeftWidth(param0: number): com.facebook.litho.drawable.BorderColorDrawable.Builder;
						public build(): com.facebook.litho.drawable.BorderColorDrawable;
						public borderTopColor(param0: number): com.facebook.litho.drawable.BorderColorDrawable.Builder;
						public borderBottomWidth(param0: number): com.facebook.litho.drawable.BorderColorDrawable.Builder;
						public borderBottomColor(param0: number): com.facebook.litho.drawable.BorderColorDrawable.Builder;
						public borderTopWidth(param0: number): com.facebook.litho.drawable.BorderColorDrawable.Builder;
						public borderRightWidth(param0: number): com.facebook.litho.drawable.BorderColorDrawable.Builder;
					}
					export class State extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.drawable.BorderColorDrawable.State>;
						public hashCode(): number;
						public equals(param0: any): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module drawable {
				export class ComparableColorDrawable extends com.facebook.litho.drawable.ComparableDrawableWrapper {
					public static class: java.lang.Class<com.facebook.litho.drawable.ComparableColorDrawable>;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public getColor(): number;
					public static isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable, param1: com.facebook.litho.drawable.ComparableDrawable): boolean;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public static create(param0: number): com.facebook.litho.drawable.ComparableColorDrawable;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module drawable {
				export abstract class ComparableDrawable extends globalAndroid.graphics.drawable.Drawable {
					public static class: java.lang.Class<com.facebook.litho.drawable.ComparableDrawable>;
					public constructor();
					public static isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable, param1: com.facebook.litho.drawable.ComparableDrawable): boolean;
					public isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module drawable {
				export abstract class ComparableDrawableWrapper extends com.facebook.litho.drawable.ComparableDrawable implements globalAndroid.graphics.drawable.Drawable.Callback {
					public static class: java.lang.Class<com.facebook.litho.drawable.ComparableDrawableWrapper>;
					public getMinimumWidth(): number;
					public setDither(param0: boolean): void;
					public setTintList(param0: globalAndroid.content.res.ColorStateList): void;
					public isStateful(): boolean;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public onLevelChange(param0: number): boolean;
					public getIntrinsicWidth(): number;
					public setHotspotBounds(param0: number, param1: number, param2: number, param3: number): void;
					public setWrappedDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setHotspot(param0: number, param1: number): void;
					public setTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): void;
					public getChangingConfigurations(): number;
					public setFilterBitmap(param0: boolean): void;
					public constructor();
					public getPadding(param0: globalAndroid.graphics.Rect): boolean;
					/** @deprecated */
					public setDither(param0: boolean): void;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public getState(): native.Array<number>;
					public getMinimumHeight(): number;
					public getWrappedDrawable(): globalAndroid.graphics.drawable.Drawable;
					public setAutoMirrored(param0: boolean): void;
					public setTint(param0: number): void;
					public setChangingConfigurations(param0: number): void;
					public getOpacity(): number;
					public jumpToCurrentState(): void;
					public getTransparentRegion(): globalAndroid.graphics.Region;
					public getIntrinsicHeight(): number;
					public getCurrent(): globalAndroid.graphics.drawable.Drawable;
					public setAlpha(param0: number): void;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable);
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
					public setState(param0: native.Array<number>): boolean;
					public setVisible(param0: boolean, param1: boolean): boolean;
					public isAutoMirrored(): boolean;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module drawable {
				export class ComparableGradientDrawable extends com.facebook.litho.drawable.ComparableDrawableWrapper {
					public static class: java.lang.Class<com.facebook.litho.drawable.ComparableGradientDrawable>;
					public orientation: globalAndroid.graphics.drawable.GradientDrawable.Orientation;
					public color: number;
					public colorStateList: globalAndroid.content.res.ColorStateList;
					public colors: native.Array<number>;
					public cornerRadius: number;
					public cornerRadii: native.Array<number>;
					public gradientType: number;
					public gradientRadius: number;
					public shape: number;
					public width: number;
					public height: number;
					public strokeWidth: number;
					public strokeDashWidth: number;
					public strokeDashGap: number;
					public strokeColor: number;
					public strokeColorStateList: globalAndroid.content.res.ColorStateList;
					public setColor(param0: globalAndroid.content.res.ColorStateList): void;
					public static isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable, param1: com.facebook.litho.drawable.ComparableDrawable): boolean;
					public setStroke(param0: number, param1: globalAndroid.content.res.ColorStateList): void;
					public setGradientRadius(param0: number): void;
					public constructor();
					public setStroke(param0: number, param1: number): void;
					public getGradientDrawable(): globalAndroid.graphics.drawable.GradientDrawable;
					public setOrientation(param0: globalAndroid.graphics.drawable.GradientDrawable.Orientation): void;
					public hashCode(): number;
					public setColor(param0: number): void;
					public setColors(param0: native.Array<number>): void;
					public setCornerRadius(param0: number): void;
					public setCornerRadii(param0: native.Array<number>): void;
					public setStroke(param0: number, param1: number, param2: number, param3: number): void;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable);
					public setGradientType(param0: number): void;
					public constructor(param0: globalAndroid.graphics.drawable.GradientDrawable.Orientation, param1: native.Array<number>);
					public equals(param0: any): boolean;
					public setStroke(param0: number, param1: globalAndroid.content.res.ColorStateList, param2: number, param3: number): void;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public setSize(param0: number, param1: number): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setShape(param0: number): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module drawable {
				export class ComparableIntIdDrawable extends com.facebook.litho.drawable.ComparableDrawableWrapper {
					public static class: java.lang.Class<com.facebook.litho.drawable.ComparableIntIdDrawable>;
					public mId: number;
					public equals(param0: any): boolean;
					public static create(param0: globalAndroid.graphics.drawable.Drawable, param1: number): com.facebook.litho.drawable.ComparableIntIdDrawable;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public constructor();
					public static isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable, param1: com.facebook.litho.drawable.ComparableDrawable): boolean;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable, param1: number);
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public constructor(param0: globalAndroid.graphics.drawable.Drawable);
					public hashCode(): number;
					public isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module drawable {
				export class ComparableResDrawable extends com.facebook.litho.drawable.ComparableDrawableWrapper {
					public static class: java.lang.Class<com.facebook.litho.drawable.ComparableResDrawable>;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public static isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable, param1: com.facebook.litho.drawable.ComparableDrawable): boolean;
					public static create(param0: globalAndroid.content.Context, param1: number): com.facebook.litho.drawable.ComparableResDrawable;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module drawable {
				export class DefaultComparableDrawable extends com.facebook.litho.drawable.ComparableDrawableWrapper {
					public static class: java.lang.Class<com.facebook.litho.drawable.DefaultComparableDrawable>;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public static isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable, param1: com.facebook.litho.drawable.ComparableDrawable): boolean;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public isEquivalentTo(param0: com.facebook.litho.drawable.ComparableDrawable): boolean;
					/** @deprecated */
					public static create(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.drawable.DefaultComparableDrawable;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module internal {
				export class ArraySet<E>  extends java.util.Set<any> {
					public static class: java.lang.Class<com.facebook.litho.internal.ArraySet<any>>;
					public addAll(param0: java.util.Collection<any>): boolean;
					public isEmpty(): boolean;
					public add(param0: any): boolean;
					public spliterator(): java.util.Spliterator<any>;
					public containsAll(param0: java.util.Collection<any>): boolean;
					public size(): number;
					public iterator(): java.util.Iterator<any>;
					public toString(): string;
					public toArray(param0: native.Array<any>): native.Array<any>;
					public constructor();
					public ensureCapacity(param0: number): void;
					public toArray(): native.Array<any>;
					public clear(): void;
					public hashCode(): number;
					public constructor(param0: number);
					public contains(param0: any): boolean;
					public removeIf(param0: any /* any*/): boolean;
					public remove(param0: any): boolean;
					public removeAll(param0: java.util.Collection<any>): boolean;
					public valueAt(param0: number): any;
					public parallelStream(): java.util.stream.Stream<any>;
					public retainAll(param0: java.util.Collection<any>): boolean;
					public indexOf(param0: any): number;
					public equals(param0: any): boolean;
					public constructor(param0: java.util.Collection<any>);
					public stream(): java.util.stream.Stream<any>;
					public removeAt(param0: number): any;
					public forEach(param0: any /* any*/): void;
					public clearAndAddAll(param0: com.facebook.litho.internal.ArraySet<any>): void;
				}
				export module ArraySet {
					export class ArraySetIterator extends java.util.Iterator<any> {
						public static class: java.lang.Class<com.facebook.litho.internal.ArraySet.ArraySetIterator>;
						public next(): any;
						public hasNext(): boolean;
						public constructor(param0: com.facebook.litho.internal.ArraySet<any>);
						public remove(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module internal {
				export class MutableInt extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.internal.MutableInt>;
					public value: number;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module internal {
				export class SparseFloatArray extends java.lang.Object implements java.lang.Cloneable {
					public static class: java.lang.Class<com.facebook.litho.internal.SparseFloatArray>;
					public indexOfValue(param0: number): number;
					public keyAt(param0: number): number;
					public append(param0: number, param1: number): void;
					public setValueAt(param0: number, param1: number): void;
					public size(): number;
					public get(param0: number): number;
					public toString(): string;
					public clone(): any;
					public clone(): com.facebook.litho.internal.SparseFloatArray;
					public constructor();
					public delete(param0: number): void;
					public clear(): void;
					public valueAt(param0: number): number;
					public copyKeys(): native.Array<number>;
					public put(param0: number, param1: number): void;
					public removeAt(param0: number): void;
					public constructor(param0: number);
					public get(param0: number, param1: number): number;
					public indexOfKey(param0: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module perfboost {
				export class LithoPerfBooster extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.perfboost.LithoPerfBooster>;
					/**
					 * Constructs a new instance of the com.facebook.litho.perfboost.LithoPerfBooster interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						markImportantThread(param0: globalAndroid.os.Handler): void;
					});
					public constructor();
					public markImportantThread(param0: globalAndroid.os.Handler): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module perfboost {
				export abstract class LithoPerfBoosterFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.perfboost.LithoPerfBoosterFactory>;
					public acquireInstance(): com.facebook.litho.perfboost.LithoPerfBooster;
					public constructor();
					public create(): com.facebook.litho.perfboost.LithoPerfBooster;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class BaseLoadEventsHandler extends java.lang.Object implements com.facebook.litho.sections.LoadEventsHandler {
					public static class: java.lang.Class<com.facebook.litho.sections.BaseLoadEventsHandler>;
					public onLoadStarted(param0: boolean): void;
					public constructor();
					public onLoadSucceeded(param0: boolean): void;
					public onInitialLoad(): void;
					public onLoadFailed(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class BatchedTarget extends java.lang.Object implements com.facebook.litho.sections.SectionTree.Target {
					public static class: java.lang.Class<com.facebook.litho.sections.BatchedTarget>;
					public requestFocusWithOffset(param0: number, param1: number): void;
					public insertRange(param0: number, param1: number, param2: java.util.List<com.facebook.litho.widget.RenderInfo>): void;
					public requestFocus(param0: number): void;
					public delete(param0: number): void;
					public update(param0: number, param1: com.facebook.litho.widget.RenderInfo): void;
					public updateRange(param0: number, param1: number, param2: java.util.List<com.facebook.litho.widget.RenderInfo>): void;
					public notifyChangeSetComplete(param0: boolean, param1: com.facebook.litho.widget.ChangeSetCompleteCallback): void;
					public requestSmoothFocus(param0: number, param1: number, param2: com.facebook.litho.widget.SmoothScrollAlignmentType): void;
					public supportsBackgroundChangeSets(): boolean;
					public deleteRange(param0: number, param1: number): void;
					public insert(param0: number, param1: com.facebook.litho.widget.RenderInfo): void;
					public move(param0: number, param1: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class BuildConfig extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.BuildConfig>;
					public static DEBUG: boolean;
					public static APPLICATION_ID: string;
					public static BUILD_TYPE: string;
					public static FLAVOR: string;
					public static VERSION_CODE: number;
					public static VERSION_NAME: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class Change extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.Change>;
					public static INSERT: number;
					public static INSERT_RANGE: number;
					public static UPDATE: number;
					public static UPDATE_RANGE: number;
					public static DELETE: number;
					public static DELETE_RANGE: number;
					public static MOVE: number;
					public getType(): number;
					public getIndex(): number;
					public constructor(param0: number, param1: number, param2: number, param3: number, param4: com.facebook.litho.widget.RenderInfo, param5: java.util.List<com.facebook.litho.widget.RenderInfo>, param6: java.util.List<any>, param7: java.util.List<any>);
					public getCount(): number;
					public getPrevData(): java.util.List<any>;
					public getRenderInfo(): com.facebook.litho.widget.RenderInfo;
					public getNextData(): java.util.List<any>;
					public static changeTypeToString(param0: number): string;
					public getRenderInfos(): java.util.List<com.facebook.litho.widget.RenderInfo>;
					public getToIndex(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class ChangeSet extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.ChangeSet>;
					public insertRange(param0: number, param1: number, param2: java.util.List<com.facebook.litho.widget.RenderInfo>, param3: com.facebook.litho.TreeProps, param4: java.util.List<any>): void;
					public move(param0: number, param1: number, param2: any): void;
					public insert(param0: number, param1: com.facebook.litho.widget.RenderInfo, param2: com.facebook.litho.TreeProps, param3: any): void;
					public getChangeAt(param0: number): com.facebook.litho.sections.Change;
					public update(param0: number, param1: com.facebook.litho.widget.RenderInfo, param2: com.facebook.litho.TreeProps): void;
					public insert(param0: number, param1: com.facebook.litho.widget.RenderInfo, param2: com.facebook.litho.TreeProps): void;
					public getChangeSetStats(): com.facebook.litho.sections.ChangeSet.ChangeSetStats;
					public delete(param0: number, param1: any): void;
					public insertRange(param0: number, param1: number, param2: java.util.List<com.facebook.litho.widget.RenderInfo>, param3: com.facebook.litho.TreeProps): void;
					public updateRange(param0: number, param1: number, param2: java.util.List<com.facebook.litho.widget.RenderInfo>, param3: com.facebook.litho.TreeProps): void;
					public addChange(param0: com.facebook.litho.sections.Change): void;
					public update(param0: number, param1: com.facebook.litho.widget.RenderInfo, param2: com.facebook.litho.TreeProps, param3: any, param4: any): void;
					public updateRange(param0: number, param1: number, param2: java.util.List<com.facebook.litho.widget.RenderInfo>, param3: com.facebook.litho.TreeProps, param4: java.util.List<any>, param5: java.util.List<any>): void;
					public static acquireChangeSet(param0: com.facebook.litho.sections.Section, param1: boolean): com.facebook.litho.sections.ChangeSet;
					public delete(param0: number): void;
					public deleteRange(param0: number, param1: number, param2: java.util.List<any>): void;
					public getChangeCount(): number;
					public deleteRange(param0: number, param1: number): void;
					public move(param0: number, param1: number): void;
				}
				export module ChangeSet {
					export class ChangeSetStats extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.ChangeSet.ChangeSetStats>;
						public getDeleteSingleCount(): number;
						public getDeleteRangeCount(): number;
						public getMoveCount(): number;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public getEffectiveChangesCount(): number;
						public getUpdateSingleCount(): number;
						public getInsertRangeCount(): number;
						public toString(): string;
						public getInsertSingleCount(): number;
						public getUpdateRangeCount(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class ChangeSetState extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.ChangeSetState>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class ChangesInfo extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.ChangesInfo>;
					public constructor(param0: java.util.List<com.facebook.litho.sections.Change>);
					public getVisibleChanges(param0: number, param1: number): java.util.List<com.facebook.litho.sections.Change>;
					public getAllChanges(): java.util.List<com.facebook.litho.sections.Change>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class ChangesetDebugConfiguration extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.ChangesetDebugConfiguration>;
					public constructor();
					public static setListener(param0: com.facebook.litho.sections.ChangesetDebugConfiguration.ChangesetDebugListener): void;
					public static getRenderInfoNames(param0: com.facebook.litho.sections.Change): java.util.List<string>;
					public static isSectionDirty(param0: com.facebook.litho.sections.Section, param1: com.facebook.litho.sections.Section): boolean;
					public static getSectionCount(param0: com.facebook.litho.sections.Section): number;
				}
				export module ChangesetDebugConfiguration {
					export class ChangesetDebugListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.ChangesetDebugConfiguration.ChangesetDebugListener>;
						/**
						 * Constructs a new instance of the com.facebook.litho.sections.ChangesetDebugConfiguration$ChangesetDebugListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onChangesetApplied(param0: com.facebook.litho.sections.Section, param1: com.facebook.litho.sections.Section, param2: com.facebook.litho.sections.ChangesInfo, param3: string, param4: number, param5: string): void;
						});
						public constructor();
						public onChangesetApplied(param0: com.facebook.litho.sections.Section, param1: com.facebook.litho.sections.Section, param2: com.facebook.litho.sections.ChangesInfo, param3: string, param4: number, param5: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class Children extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.Children>;
					public getChildren(): java.util.List<com.facebook.litho.sections.Section>;
					public static create(): com.facebook.litho.sections.Children.Builder;
				}
				export module Children {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.Children.Builder>;
						public child(param0: com.facebook.litho.sections.Section.Builder<any>): com.facebook.litho.sections.Children.Builder;
						public child(param0: com.facebook.litho.sections.Section): com.facebook.litho.sections.Children.Builder;
						public constructor();
						public child(param0: java.util.List<com.facebook.litho.sections.Section>): com.facebook.litho.sections.Children.Builder;
						public children(param0: java.util.List<com.facebook.litho.sections.Section.Builder<any>>): com.facebook.litho.sections.Children.Builder;
						public build(): com.facebook.litho.sections.Children;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class FocusDispatcher extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.FocusDispatcher>;
				}
				export module FocusDispatcher {
					export class FocusRequest extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.FocusDispatcher.FocusRequest>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class FocusType {
					public static class: java.lang.Class<com.facebook.litho.sections.FocusType>;
					public static START: com.facebook.litho.sections.FocusType;
					public static END: com.facebook.litho.sections.FocusType;
					public static valueOf(param0: string): com.facebook.litho.sections.FocusType;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
					public static values(): native.Array<com.facebook.litho.sections.FocusType>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class KeyHandler extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.KeyHandler>;
					public hasKey(param0: string): boolean;
					public constructor();
					public registerKey(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class ListEventsHandler<QueryParams>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.ListEventsHandler<any>>;
					/**
					 * Constructs a new instance of the com.facebook.litho.sections.ListEventsHandler<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPTR(param0: QueryParams): void;
						onScrollNearBottom(param0: QueryParams): void;
						onScrollNearTop(param0: QueryParams): void;
					});
					public constructor();
					public onPTR(param0: QueryParams): void;
					public onScrollNearTop(param0: QueryParams): void;
					public onScrollNearBottom(param0: QueryParams): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class LoadEventsHandler extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.LoadEventsHandler>;
					/**
					 * Constructs a new instance of the com.facebook.litho.sections.LoadEventsHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onInitialLoad(): void;
						onLoadStarted(param0: boolean): void;
						onLoadSucceeded(param0: boolean): void;
						onLoadFailed(param0: boolean): void;
					});
					public constructor();
					public onLoadStarted(param0: boolean): void;
					public onLoadSucceeded(param0: boolean): void;
					public onInitialLoad(): void;
					public onLoadFailed(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class LoadingEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.LoadingEvent>;
					public isEmpty: boolean;
					public loadingState: com.facebook.litho.sections.LoadingEvent.LoadingState;
					public t: java.lang.Throwable;
					public constructor();
				}
				export module LoadingEvent {
					export class LoadingState {
						public static class: java.lang.Class<com.facebook.litho.sections.LoadingEvent.LoadingState>;
						public static INITIAL_LOAD: com.facebook.litho.sections.LoadingEvent.LoadingState;
						public static LOADING: com.facebook.litho.sections.LoadingEvent.LoadingState;
						public static SUCCEEDED: com.facebook.litho.sections.LoadingEvent.LoadingState;
						public static FAILED: com.facebook.litho.sections.LoadingEvent.LoadingState;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static valueOf(param0: string): com.facebook.litho.sections.LoadingEvent.LoadingState;
						public static values(): native.Array<com.facebook.litho.sections.LoadingEvent.LoadingState>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class Logger extends java.lang.Object implements com.facebook.litho.sections.logger.SectionsDebugLogger {
					public static class: java.lang.Class<com.facebook.litho.sections.Logger>;
					public mSectionsDebugLoggers: java.util.Set<com.facebook.litho.sections.logger.SectionsDebugLogger>;
					public logDelete(param0: string, param1: number, param2: string): void;
					public logMove(param0: string, param1: number, param2: number, param3: string): void;
					public logRequestFocus(param0: string, param1: number, param2: com.facebook.litho.widget.RenderInfo, param3: string): void;
					public logUpdate(param0: string, param1: number, param2: com.facebook.litho.widget.RenderInfo, param3: string): void;
					public logShouldUpdate(param0: string, param1: any, param2: any, param3: string, param4: string, param5: java.lang.Boolean, param6: string): void;
					public logRequestFocusWithOffset(param0: string, param1: number, param2: number, param3: com.facebook.litho.widget.RenderInfo, param4: string): void;
					public logInsert(param0: string, param1: number, param2: com.facebook.litho.widget.RenderInfo, param3: string): void;
					public constructor(param0: java.util.Collection<com.facebook.litho.sections.logger.SectionsDebugLogger>);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export abstract class Section extends com.facebook.litho.sections.SectionLifecycle {
					public static class: java.lang.Class<com.facebook.litho.sections.Section>;
					public setCount(param0: number): void;
					public setScopedContext(param0: com.facebook.litho.sections.SectionContext): void;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public setKey(param0: string): void;
					public constructor(param0: string);
					public isEquivalentTo(param0: com.facebook.litho.sections.Section): boolean;
					public makeShallowCopy(param0: boolean): com.facebook.litho.sections.Section;
					public getLogTag(): string;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public makeShallowCopy(): com.facebook.litho.sections.Section;
					public getStateContainer(): com.facebook.litho.StateContainer;
					public getGlobalKey(): string;
					public isEquivalentTo(param0: any): boolean;
					public getSimpleName(): string;
					public setChildren(param0: com.facebook.litho.sections.Children): void;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public getChildren(): java.util.List<com.facebook.litho.sections.Section>;
					public constructor();
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public getScopedContext(): com.facebook.litho.sections.SectionContext;
					public setGlobalKey(param0: string): void;
					public getParent(): com.facebook.litho.sections.Section;
				}
				export module Section {
					export abstract class Builder<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.Section.Builder<any>>;
						public mResourceResolver: com.facebook.litho.ResourceResolver;
						public constructor();
						public getThis(): T;
						public init(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.sections.Section): void;
						public static checkArgs(param0: number, param1: java.util.BitSet, param2: native.Array<string>): void;
						public release(): void;
						public key(param0: string): T;
						public loadingEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.sections.LoadingEvent>): T;
						public build(): com.facebook.litho.sections.Section;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class SectionContext extends com.facebook.litho.ComponentContext {
					public static class: java.lang.Class<com.facebook.litho.sections.SectionContext>;
					public static withSectionTree(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.sections.SectionTree): com.facebook.litho.sections.SectionContext;
					public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.facebook.litho.ComponentsLogger, param3: com.facebook.litho.StateHandler, param4: com.facebook.litho.KeyHandler, param5: com.facebook.litho.TreeProps);
					public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.facebook.litho.ComponentsLogger, param3: com.facebook.litho.StateHandler, param4: com.facebook.litho.KeyHandler, param5: com.facebook.litho.TreeProps, param6: com.facebook.litho.ComponentContext.YogaNodeFactory, param7: boolean);
					public constructor(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.StateHandler, param2: com.facebook.litho.KeyHandler, param3: com.facebook.litho.TreeProps, param4: com.facebook.litho.ComponentTree.LayoutStateFuture);
					public newEventHandler(param0: number, param1: native.Array<any>): com.facebook.litho.EventHandler<any>;
					public constructor(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.StateHandler, param2: com.facebook.litho.AttachDetachHandler, param3: com.facebook.litho.KeyHandler, param4: com.facebook.litho.TreeProps, param5: com.facebook.litho.ComponentTree.LayoutStateFuture);
					public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.facebook.litho.ComponentsLogger, param3: com.facebook.litho.TreeProps);
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.litho.StateHandler);
					public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.facebook.litho.ComponentsLogger, param3: com.facebook.litho.StateHandler, param4: com.facebook.litho.KeyHandler, param5: com.facebook.litho.TreeProps, param6: com.facebook.litho.ComponentContext.YogaNodeFactory);
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.litho.ComponentContext.YogaNodeFactory);
					public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.facebook.litho.ComponentsLogger);
					public constructor(param0: globalAndroid.content.Context);
					public updateStateAsync(param0: com.facebook.litho.StateContainer.StateUpdate, param1: string): void;
					public constructor(param0: com.facebook.litho.ComponentContext);
					public updateStateSync(param0: com.facebook.litho.StateContainer.StateUpdate, param1: string): void;
					public setTreeProps(param0: com.facebook.litho.TreeProps): void;
					public static withScope(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.sections.Section): com.facebook.litho.sections.SectionContext;
					public updateStateLazy(param0: com.facebook.litho.StateContainer.StateUpdate): void;
					public getTreeProps(): com.facebook.litho.TreeProps;
					public getSectionScope(): com.facebook.litho.sections.Section;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class SectionDebugUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.SectionDebugUtil>;
					public static getStateContainerDebug(param0: com.facebook.litho.sections.Section): com.facebook.litho.StateContainer;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class SectionKeyNotFoundException extends java.lang.RuntimeException {
					public static class: java.lang.Class<com.facebook.litho.sections.SectionKeyNotFoundException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export abstract class SectionLifecycle extends java.lang.Object implements com.facebook.litho.EventDispatcher, com.facebook.litho.EventTriggerTarget {
					public static class: java.lang.Class<com.facebook.litho.sections.SectionLifecycle>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public static newEventHandler(param0: com.facebook.litho.sections.Section, param1: number, param2: native.Array<any>): com.facebook.litho.EventHandler<any>;
					public static requestFocus(param0: com.facebook.litho.sections.SectionContext, param1: string, param2: com.facebook.litho.sections.FocusType): void;
					public dataBound(param0: com.facebook.litho.sections.SectionContext): void;
					public createInitialState(param0: com.facebook.litho.sections.SectionContext): void;
					public populateTreeProps(param0: com.facebook.litho.TreeProps): void;
					public static requestFocusWithOffset(param0: com.facebook.litho.sections.SectionContext, param1: string, param2: number): void;
					public transferService(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.sections.Section, param2: com.facebook.litho.sections.Section): void;
					public getTreePropsForChildren(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.TreeProps): com.facebook.litho.TreeProps;
					public static requestFocusWithOffset(param0: com.facebook.litho.sections.SectionContext, param1: string, param2: number, param3: number): void;
					public unbindService(param0: com.facebook.litho.sections.SectionContext): void;
					public constructor();
					public transferState(param0: com.facebook.litho.StateContainer, param1: com.facebook.litho.StateContainer): void;
					public static dispatchLoadingEvent(param0: com.facebook.litho.sections.SectionContext, param1: boolean, param2: com.facebook.litho.sections.LoadingEvent.LoadingState, param3: java.lang.Throwable): void;
					public static requestFocus(param0: com.facebook.litho.sections.SectionContext, param1: string): void;
					public static requestSmoothFocus(param0: com.facebook.litho.sections.SectionContext, param1: number): void;
					public dataRendered(param0: com.facebook.litho.sections.SectionContext, param1: boolean, param2: boolean, param3: number, param4: number, param5: number, param6: com.facebook.litho.sections.ChangesInfo): void;
					public static requestSmoothFocus(param0: com.facebook.litho.sections.SectionContext, param1: string, param2: number, param3: number, param4: com.facebook.litho.widget.SmoothScrollAlignmentType): void;
					public getService(param0: com.facebook.litho.sections.Section): any;
					public static requestFocusWithOffset(param0: com.facebook.litho.sections.SectionContext, param1: number, param2: number): void;
					public createService(param0: com.facebook.litho.sections.SectionContext): void;
					public static newEventHandler(param0: com.facebook.litho.sections.SectionContext, param1: number, param2: native.Array<any>): com.facebook.litho.EventHandler<any>;
					public refresh(param0: com.facebook.litho.sections.SectionContext): void;
					public viewportChanged(param0: com.facebook.litho.sections.SectionContext, param1: number, param2: number, param3: number, param4: number, param5: number): void;
					public bindService(param0: com.facebook.litho.sections.SectionContext): void;
					public isDiffSectionSpec(): boolean;
					public shouldUpdate(param0: com.facebook.litho.sections.Section, param1: com.facebook.litho.sections.Section): boolean;
					public static getLoadingEventHandler(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.EventHandler<any>;
					public static requestFocus(param0: com.facebook.litho.sections.SectionContext, param1: number): void;
					public static requestSmoothFocus(param0: com.facebook.litho.sections.SectionContext, param1: number, param2: com.facebook.litho.widget.SmoothScrollAlignmentType): void;
					public static isSectionIndexValid(param0: com.facebook.litho.sections.SectionContext, param1: string, param2: number): boolean;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public static getEventTrigger(param0: com.facebook.litho.sections.SectionContext, param1: number, param2: string): com.facebook.litho.EventTrigger<any>;
					public generateChangeSet(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.sections.ChangeSet, param2: com.facebook.litho.sections.Section, param3: com.facebook.litho.sections.Section): void;
					public createChildren(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.sections.Children;
					public static newEventTrigger(param0: com.facebook.litho.sections.SectionContext, param1: string, param2: number): com.facebook.litho.EventTrigger<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class SectionLifecycleTestUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.SectionLifecycleTestUtil>;
					public static isDiffSectionSpec(param0: com.facebook.litho.sections.SectionLifecycle): boolean;
					public static setScopedContext(param0: com.facebook.litho.sections.Section, param1: com.facebook.litho.sections.SectionContext): void;
					public static createChildren(param0: com.facebook.litho.sections.SectionLifecycle, param1: com.facebook.litho.sections.SectionContext, param2: com.facebook.litho.sections.Section): com.facebook.litho.sections.Children;
					public static getStateContainer(param0: com.facebook.litho.sections.Section): com.facebook.litho.StateContainer;
					public static createInitialState(param0: com.facebook.litho.sections.SectionLifecycle, param1: com.facebook.litho.sections.SectionContext, param2: com.facebook.litho.sections.Section): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class SectionTree extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.SectionTree>;
					public refresh(): void;
					public requestFocusOnRoot(param0: number): void;
					public setRootAsync(param0: com.facebook.litho.sections.Section): void;
					public setRoot(param0: com.facebook.litho.sections.Section): void;
					public viewPortChanged(param0: number, param1: number, param2: number, param3: number, param4: number): void;
					public static getDefaultChangeSetThreadLooper(): globalAndroid.os.Looper;
					public static create(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.sections.SectionTree.Target): com.facebook.litho.sections.SectionTree.Builder;
					public viewPortChangedFromScrolling(param0: number, param1: number, param2: number, param3: number): void;
					public setLoadEventsHandler(param0: com.facebook.litho.sections.LoadEventsHandler): void;
					public isSectionIndexValid(param0: string, param1: number): boolean;
					public release(): void;
					public isReleased(): boolean;
				}
				export module SectionTree {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.SectionTree.Builder>;
						public changeSetThreadHandler(param0: com.facebook.litho.LithoHandler): com.facebook.litho.sections.SectionTree.Builder;
						public build(): com.facebook.litho.sections.SectionTree;
						public forceSyncStateUpdates(param0: boolean): com.facebook.litho.sections.SectionTree.Builder;
						public tag(param0: string): com.facebook.litho.sections.SectionTree.Builder;
						public asyncStateUpdates(param0: boolean): com.facebook.litho.sections.SectionTree.Builder;
						public asyncPropUpdates(param0: boolean): com.facebook.litho.sections.SectionTree.Builder;
					}
					export class CalculateChangeSetRunnable extends com.facebook.litho.ThreadTracingRunnable {
						public static class: java.lang.Class<com.facebook.litho.sections.SectionTree.CalculateChangeSetRunnable>;
						public constructor();
						public ensurePosted(param0: number, param1: string): void;
						public run(): void;
						public constructor(param0: java.lang.Throwable);
						public cancel(): void;
						public constructor(param0: com.facebook.litho.sections.SectionTree, param1: com.facebook.litho.LithoHandler);
						public tracedRun(param0: java.lang.Throwable): void;
					}
					export class Range extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.SectionTree.Range>;
					}
					export class SectionLocationInfo extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.SectionTree.SectionLocationInfo>;
						public constructor(param0: com.facebook.litho.sections.Section, param1: number);
					}
					export class StateUpdatesHolder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.SectionTree.StateUpdatesHolder>;
					}
					export class Target extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.SectionTree.Target>;
						/**
						 * Constructs a new instance of the com.facebook.litho.sections.SectionTree$Target interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							insert(param0: number, param1: com.facebook.litho.widget.RenderInfo): void;
							insertRange(param0: number, param1: number, param2: java.util.List<com.facebook.litho.widget.RenderInfo>): void;
							update(param0: number, param1: com.facebook.litho.widget.RenderInfo): void;
							updateRange(param0: number, param1: number, param2: java.util.List<com.facebook.litho.widget.RenderInfo>): void;
							delete(param0: number): void;
							deleteRange(param0: number, param1: number): void;
							move(param0: number, param1: number): void;
							notifyChangeSetComplete(param0: boolean, param1: com.facebook.litho.widget.ChangeSetCompleteCallback): void;
							requestFocus(param0: number): void;
							requestSmoothFocus(param0: number, param1: number, param2: com.facebook.litho.widget.SmoothScrollAlignmentType): void;
							requestFocusWithOffset(param0: number, param1: number): void;
							supportsBackgroundChangeSets(): boolean;
						});
						public constructor();
						public requestFocusWithOffset(param0: number, param1: number): void;
						public supportsBackgroundChangeSets(): boolean;
						public insert(param0: number, param1: com.facebook.litho.widget.RenderInfo): void;
						public update(param0: number, param1: com.facebook.litho.widget.RenderInfo): void;
						public requestSmoothFocus(param0: number, param1: number, param2: com.facebook.litho.widget.SmoothScrollAlignmentType): void;
						public notifyChangeSetComplete(param0: boolean, param1: com.facebook.litho.widget.ChangeSetCompleteCallback): void;
						public updateRange(param0: number, param1: number, param2: java.util.List<com.facebook.litho.widget.RenderInfo>): void;
						public delete(param0: number): void;
						public deleteRange(param0: number, param1: number): void;
						public insertRange(param0: number, param1: number, param2: java.util.List<com.facebook.litho.widget.RenderInfo>): void;
						public requestFocus(param0: number): void;
						public move(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class SectionTreeLoadingEventHandler extends com.facebook.litho.EventHandler<com.facebook.litho.sections.LoadingEvent> {
					public static class: java.lang.Class<com.facebook.litho.sections.SectionTreeLoadingEventHandler>;
					public dispatchEvent(param0: any): void;
					public dispatchEvent(param0: com.facebook.litho.sections.LoadingEvent): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class SectionsDebugParams extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.SectionsDebugParams>;
					public static SECTION_GLOBAL_KEY: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class SectionsLogEventUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.SectionsLogEventUtils>;
					public constructor();
					public static applyNewChangeSetSourceToString(param0: number): string;
					public static getSectionsPerformanceEvent(param0: com.facebook.litho.ComponentContext, param1: number, param2: com.facebook.litho.sections.Section, param3: com.facebook.litho.sections.Section): com.facebook.litho.PerfEvent;
				}
				export module SectionsLogEventUtils {
					export class ApplyNewChangeSet extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.litho.sections.SectionsLogEventUtils.ApplyNewChangeSet>;
						/**
						 * Constructs a new instance of the com.facebook.litho.sections.SectionsLogEventUtils$ApplyNewChangeSet interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public static SET_ROOT_ASYNC: number;
						public static SET_ROOT: number;
						public static UPDATE_STATE_ASYNC: number;
						public static NONE: number;
						public static UPDATE_STATE: number;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export class SectionsPools extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.sections.SectionsPools>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class ConnectionStateEvent extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.common.ConnectionStateEvent>;
						public fetchState: com.facebook.litho.sections.common.RenderSectionEvent.FetchState;
						public connectionData: any;
						public isEmpty: boolean;
						public fetchError: java.lang.Throwable;
						public dataSource: com.facebook.litho.sections.common.RenderSectionEvent.DataSource;
						public fetchType: com.facebook.litho.sections.common.RenderSectionEvent.FetchType;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class DataDiffSection<T>  extends com.facebook.litho.sections.Section {
						public static class: java.lang.Class<com.facebook.litho.sections.common.DataDiffSection<any>>;
						public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
						public isEquivalentTo(param0: com.facebook.litho.sections.Section): boolean;
						public generateChangeSet(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.sections.ChangeSet, param2: com.facebook.litho.sections.Section, param3: com.facebook.litho.sections.Section): void;
						public static create(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.sections.common.DataDiffSection.Builder<any>;
						public isDiffSectionSpec(): boolean;
						public static getOnCheckIsSameContentEventHandler(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.EventHandler<any>;
						public static getRenderEventHandler(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.EventHandler<any>;
						public isEquivalentTo(param0: any): boolean;
						public getEventDispatcher(): com.facebook.litho.EventDispatcher;
						public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
						public static getOnCheckIsSameItemEventHandler(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.EventHandler<any>;
						public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					}
					export module DataDiffSection {
						export class Builder<T>  extends com.facebook.litho.sections.Section.Builder<com.facebook.litho.sections.common.DataDiffSection.Builder<any>> {
							public static class: java.lang.Class<com.facebook.litho.sections.common.DataDiffSection.Builder<any>>;
							public constructor();
							public key(param0: string): any;
							public data(param0: java.util.List<any>): com.facebook.litho.sections.common.DataDiffSection.Builder<any>;
							public key(param0: string): com.facebook.litho.sections.common.DataDiffSection.Builder<any>;
							public getThis(): any;
							public loadingEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.sections.LoadingEvent>): com.facebook.litho.sections.common.DataDiffSection.Builder<any>;
							public loadingEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.sections.LoadingEvent>): any;
							public onCheckIsSameItemEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.sections.common.DataDiffSection.Builder<any>;
							public build(): com.facebook.litho.sections.Section;
							public onCheckIsSameContentEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.sections.common.DataDiffSection.Builder<any>;
							public getThis(): com.facebook.litho.sections.common.DataDiffSection.Builder<any>;
							public detectMoves(param0: java.lang.Boolean): com.facebook.litho.sections.common.DataDiffSection.Builder<any>;
							public build(): com.facebook.litho.sections.common.DataDiffSection<any>;
							public renderEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.sections.common.DataDiffSection.Builder<any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class DataDiffSectionSpec<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.common.DataDiffSectionSpec<any>>;
						public constructor();
						public static onCreateChangeSet(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.sections.ChangeSet, param2: com.facebook.litho.Diff<any>, param3: com.facebook.litho.Diff<any>): void;
					}
					export module DataDiffSectionSpec {
						export class Callback<T>  extends androidx.recyclerview.widget.DiffUtil.Callback {
							public static class: java.lang.Class<com.facebook.litho.sections.common.DataDiffSectionSpec.Callback<any>>;
							public getNewListSize(): number;
							public areItemsTheSame(param0: number, param1: number): boolean;
							public getOldListSize(): number;
							public areContentsTheSame(param0: number, param1: number): boolean;
						}
						export class ComponentRenderer extends java.lang.Object implements com.facebook.litho.widget.RecyclerBinderUpdateCallback.ComponentRenderer<any> {
							public static class: java.lang.Class<com.facebook.litho.sections.common.DataDiffSectionSpec.ComponentRenderer>;
							public render(param0: any, param1: number): com.facebook.litho.widget.RenderInfo;
						}
						export class DiffSectionOperationExecutor extends java.lang.Object implements com.facebook.litho.widget.RecyclerBinderUpdateCallback.OperationExecutor {
							public static class: java.lang.Class<com.facebook.litho.sections.common.DataDiffSectionSpec.DiffSectionOperationExecutor>;
							public executeOperations(param0: com.facebook.litho.ComponentContext, param1: java.util.List<com.facebook.litho.widget.RecyclerBinderUpdateCallback.Operation>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class GetUniqueIdentifierEvent extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.common.GetUniqueIdentifierEvent>;
						public model: any;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class HideItemEvent extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.common.HideItemEvent>;
						public model: any;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class HideableDataDiffSection<T>  extends com.facebook.litho.sections.Section {
						public static class: java.lang.Class<com.facebook.litho.sections.common.HideableDataDiffSection<any>>;
						public getStateContainer(): com.facebook.litho.StateContainer;
						public makeShallowCopy(): com.facebook.litho.sections.Section;
						public makeShallowCopy(param0: boolean): com.facebook.litho.sections.common.HideableDataDiffSection<any>;
						public isEquivalentTo(param0: com.facebook.litho.sections.Section): boolean;
						public transferState(param0: com.facebook.litho.StateContainer, param1: com.facebook.litho.StateContainer): void;
						public static onBlacklistUpdate(param0: com.facebook.litho.sections.SectionContext, param1: any, param2: com.facebook.litho.EventHandler<com.facebook.litho.sections.common.GetUniqueIdentifierEvent>): void;
						public createInitialState(param0: com.facebook.litho.sections.SectionContext): void;
						public static getRenderWithHideItemHandlerEventHandler(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.EventHandler<any>;
						public createChildren(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.sections.Children;
						public static onBlacklistUpdateSync(param0: com.facebook.litho.sections.SectionContext, param1: any, param2: com.facebook.litho.EventHandler<com.facebook.litho.sections.common.GetUniqueIdentifierEvent>): void;
						public static getGetUniqueIdentifierEventHandler(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.EventHandler<any>;
						public static onRenderEvent(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.EventHandler<com.facebook.litho.sections.common.RenderEvent>;
						public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
						public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
						public static create(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>;
						public makeShallowCopy(param0: boolean): com.facebook.litho.sections.Section;
						public static onBlacklistUpdateAsync(param0: com.facebook.litho.sections.SectionContext, param1: any, param2: com.facebook.litho.EventHandler<com.facebook.litho.sections.common.GetUniqueIdentifierEvent>): void;
						public isEquivalentTo(param0: any): boolean;
						public getEventDispatcher(): com.facebook.litho.EventDispatcher;
						public static onHideItem(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.EventHandler<com.facebook.litho.sections.common.HideItemEvent>;
						public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					}
					export module HideableDataDiffSection {
						export class Builder<T>  extends com.facebook.litho.sections.Section.Builder<com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>> {
							public static class: java.lang.Class<com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>>;
							public constructor();
							public onSameContentEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.sections.common.OnCheckIsSameContentEvent>): com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>;
							public key(param0: string): any;
							public build(): com.facebook.litho.sections.common.HideableDataDiffSection<any>;
							public getThis(): any;
							public getThis(): com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>;
							public getUniqueIdentifierHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.sections.common.GetUniqueIdentifierEvent>): com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>;
							public getUniqueIdentifierEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>;
							public key(param0: string): com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>;
							public loadingEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.sections.LoadingEvent>): any;
							public data(param0: java.util.List<any>): com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>;
							public build(): com.facebook.litho.sections.Section;
							public onSameItemEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.sections.common.OnCheckIsSameItemEvent>): com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>;
							public renderWithHideItemHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.sections.common.RenderWithHideItemHandlerEvent>): com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>;
							public loadingEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.sections.LoadingEvent>): com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>;
							public renderWithHideItemHandlerEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.sections.common.HideableDataDiffSection.Builder<any>;
						}
						export class HideableDataDiffSectionStateContainer<T>  extends com.facebook.litho.StateContainer {
							public static class: java.lang.Class<com.facebook.litho.sections.common.HideableDataDiffSection.HideableDataDiffSectionStateContainer<any>>;
							public applyStateUpdate(param0: com.facebook.litho.StateContainer.StateUpdate): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class HideableDataDiffSectionSpec<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.common.HideableDataDiffSectionSpec<any>>;
						public static onRenderEvent(param0: com.facebook.litho.sections.SectionContext, param1: number, param2: any, param3: globalAndroid.os.Bundle, param4: com.facebook.litho.EventHandler<com.facebook.litho.sections.common.RenderWithHideItemHandlerEvent>): com.facebook.litho.widget.RenderInfo;
						public constructor();
						public static onCreateInitialState(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.StateValue<any>): void;
						public static onHideItem(param0: com.facebook.litho.sections.SectionContext, param1: any, param2: com.facebook.litho.EventHandler<com.facebook.litho.sections.common.GetUniqueIdentifierEvent>): void;
						public static onBlacklistUpdate(param0: com.facebook.litho.StateValue<java.util.HashSet<any>>, param1: any, param2: com.facebook.litho.EventHandler<com.facebook.litho.sections.common.GetUniqueIdentifierEvent>): void;
						public static onCreateChildren(param0: com.facebook.litho.sections.SectionContext, param1: java.util.HashSet<any>, param2: java.util.List<any>, param3: com.facebook.litho.EventHandler<any>, param4: com.facebook.litho.EventHandler<any>, param5: com.facebook.litho.EventHandler<any>): com.facebook.litho.sections.Children;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class OnCheckIsSameContentEvent extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.common.OnCheckIsSameContentEvent>;
						public previousItem: any;
						public nextItem: any;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class OnCheckIsSameItemEvent extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.common.OnCheckIsSameItemEvent>;
						public previousItem: any;
						public nextItem: any;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class RenderEvent extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.common.RenderEvent>;
						public index: number;
						public model: any;
						public loggingExtras: globalAndroid.os.Bundle;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class RenderSectionEvent extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.common.RenderSectionEvent>;
						public model: any;
						public lastNonNullModel: any;
						public state: com.facebook.litho.sections.common.RenderSectionEvent.FetchState;
						public error: java.lang.Throwable;
						public dataSource: com.facebook.litho.sections.common.RenderSectionEvent.DataSource;
						public fetchType: com.facebook.litho.sections.common.RenderSectionEvent.FetchType;
						public constructor();
					}
					export module RenderSectionEvent {
						export class DataSource {
							public static class: java.lang.Class<com.facebook.litho.sections.common.RenderSectionEvent.DataSource>;
							public static UNSET: com.facebook.litho.sections.common.RenderSectionEvent.DataSource;
							public static FROM_NETWORK: com.facebook.litho.sections.common.RenderSectionEvent.DataSource;
							public static FROM_LOCAL_CACHE: com.facebook.litho.sections.common.RenderSectionEvent.DataSource;
							public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
							public static valueOf(param0: string): com.facebook.litho.sections.common.RenderSectionEvent.DataSource;
							public static values(): native.Array<com.facebook.litho.sections.common.RenderSectionEvent.DataSource>;
						}
						export class FetchState {
							public static class: java.lang.Class<com.facebook.litho.sections.common.RenderSectionEvent.FetchState>;
							public static INITIAL_STATE: com.facebook.litho.sections.common.RenderSectionEvent.FetchState;
							public static DOWNLOADING_STATE: com.facebook.litho.sections.common.RenderSectionEvent.FetchState;
							public static IDLE_STATE: com.facebook.litho.sections.common.RenderSectionEvent.FetchState;
							public static DOWNLOAD_ERROR: com.facebook.litho.sections.common.RenderSectionEvent.FetchState;
							public static valueOf(param0: string): com.facebook.litho.sections.common.RenderSectionEvent.FetchState;
							public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
							public static values(): native.Array<com.facebook.litho.sections.common.RenderSectionEvent.FetchState>;
						}
						export class FetchType {
							public static class: java.lang.Class<com.facebook.litho.sections.common.RenderSectionEvent.FetchType>;
							public static REFRESH_FETCH: com.facebook.litho.sections.common.RenderSectionEvent.FetchType;
							public static HEAD_FETCH: com.facebook.litho.sections.common.RenderSectionEvent.FetchType;
							public static TAIL_FETCH: com.facebook.litho.sections.common.RenderSectionEvent.FetchType;
							public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
							public static valueOf(param0: string): com.facebook.litho.sections.common.RenderSectionEvent.FetchType;
							public static values(): native.Array<com.facebook.litho.sections.common.RenderSectionEvent.FetchType>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class RenderWithHideItemHandlerEvent extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.common.RenderWithHideItemHandlerEvent>;
						public index: number;
						public model: any;
						public hideItemHandler: com.facebook.litho.EventHandler<com.facebook.litho.sections.common.HideItemEvent>;
						public loggingExtras: globalAndroid.os.Bundle;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class SingleComponentSection extends com.facebook.litho.sections.Section {
						public static class: java.lang.Class<com.facebook.litho.sections.common.SingleComponentSection>;
						public makeShallowCopy(): com.facebook.litho.sections.Section;
						public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
						public isEquivalentTo(param0: com.facebook.litho.sections.Section): boolean;
						public makeShallowCopy(param0: boolean): com.facebook.litho.sections.Section;
						public static create(param0: com.facebook.litho.sections.SectionContext): com.facebook.litho.sections.common.SingleComponentSection.Builder;
						public generateChangeSet(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.sections.ChangeSet, param2: com.facebook.litho.sections.Section, param3: com.facebook.litho.sections.Section): void;
						public isDiffSectionSpec(): boolean;
						public makeShallowCopy(param0: boolean): com.facebook.litho.sections.common.SingleComponentSection;
						public isEquivalentTo(param0: any): boolean;
						public getEventDispatcher(): com.facebook.litho.EventDispatcher;
						public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
						public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					}
					export module SingleComponentSection {
						export class Builder extends com.facebook.litho.sections.Section.Builder<any> {
							public static class: java.lang.Class<com.facebook.litho.sections.common.SingleComponentSection.Builder>;
							public constructor();
							public isFullSpan(param0: java.lang.Boolean): com.facebook.litho.sections.common.SingleComponentSection.Builder;
							public key(param0: string): any;
							public build(): com.facebook.litho.sections.common.SingleComponentSection;
							public spanSize(param0: java.lang.Integer): com.facebook.litho.sections.common.SingleComponentSection.Builder;
							public component(param0: com.facebook.litho.Component): com.facebook.litho.sections.common.SingleComponentSection.Builder;
							public getThis(): any;
							public loadingEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.sections.LoadingEvent>): com.facebook.litho.sections.common.SingleComponentSection.Builder;
							public sticky(param0: java.lang.Boolean): com.facebook.litho.sections.common.SingleComponentSection.Builder;
							public loadingEventHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.sections.LoadingEvent>): any;
							public component(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.sections.common.SingleComponentSection.Builder;
							public key(param0: string): com.facebook.litho.sections.common.SingleComponentSection.Builder;
							public build(): com.facebook.litho.sections.Section;
							public getThis(): com.facebook.litho.sections.common.SingleComponentSection.Builder;
							public data(param0: any): com.facebook.litho.sections.common.SingleComponentSection.Builder;
							public customAttributes(param0: java.util.Map<string,any>): com.facebook.litho.sections.common.SingleComponentSection.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module common {
					export class SingleComponentSectionSpec extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.common.SingleComponentSectionSpec>;
						public constructor();
						public static onCreateChangeSet(param0: com.facebook.litho.sections.SectionContext, param1: com.facebook.litho.sections.ChangeSet, param2: com.facebook.litho.Diff<com.facebook.litho.Component>, param3: com.facebook.litho.Diff<java.lang.Boolean>, param4: com.facebook.litho.Diff<java.lang.Integer>, param5: com.facebook.litho.Diff<java.lang.Boolean>, param6: com.facebook.litho.Diff<java.util.Map<string,any>>, param7: com.facebook.litho.Diff<any>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module config {
					export class SectionsConfiguration extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.config.SectionsConfiguration>;
						public static LOGGERS: java.util.List<com.facebook.litho.sections.logger.SectionsDebugLogger>;
						public static sectionComponentsAsyncPropUpdates: boolean;
						public static sectionComponentsAsyncStateUpdates: boolean;
						public static trimDataDiffSectionHeadAndTail: boolean;
						public static trimSameInstancesOnly: boolean;
						public static useBackgroundChangeSets: boolean;
						public static deepCopySectionChildren: boolean;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module debug {
					export class BuildConfig extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.debug.BuildConfig>;
						public static DEBUG: boolean;
						public static APPLICATION_ID: string;
						public static BUILD_TYPE: string;
						public static FLAVOR: string;
						public static VERSION_CODE: number;
						public static VERSION_NAME: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module debug {
					export class DebugSection extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.debug.DebugSection>;
						public getStateContainer(): com.facebook.litho.StateContainer;
						public getSection(): com.facebook.litho.sections.Section;
						public isDiffSectionSpec(): boolean;
						public getSectionChildren(): java.util.List<any>;
						public getGlobalKey(): string;
						public getName(): string;
						public getBounds(): globalAndroid.graphics.Rect;
						public static getRootInstance(param0: java.util.List<globalAndroid.view.View>): com.facebook.litho.sections.debug.DebugSection;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module sections {
				export module logger {
					export class SectionsDebugLogger extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.sections.logger.SectionsDebugLogger>;
						/**
						 * Constructs a new instance of the com.facebook.litho.sections.logger.SectionsDebugLogger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							logInsert(param0: string, param1: number, param2: com.facebook.litho.widget.RenderInfo, param3: string): void;
							logUpdate(param0: string, param1: number, param2: com.facebook.litho.widget.RenderInfo, param3: string): void;
							logDelete(param0: string, param1: number, param2: string): void;
							logRequestFocus(param0: string, param1: number, param2: com.facebook.litho.widget.RenderInfo, param3: string): void;
							logRequestFocusWithOffset(param0: string, param1: number, param2: number, param3: com.facebook.litho.widget.RenderInfo, param4: string): void;
							logMove(param0: string, param1: number, param2: number, param3: string): void;
							logShouldUpdate(param0: string, param1: any, param2: any, param3: string, param4: string, param5: java.lang.Boolean, param6: string): void;
						});
						public constructor();
						public logUpdate(param0: string, param1: number, param2: com.facebook.litho.widget.RenderInfo, param3: string): void;
						public logRequestFocus(param0: string, param1: number, param2: com.facebook.litho.widget.RenderInfo, param3: string): void;
						public logShouldUpdate(param0: string, param1: any, param2: any, param3: string, param4: string, param5: java.lang.Boolean, param6: string): void;
						public logInsert(param0: string, param1: number, param2: com.facebook.litho.widget.RenderInfo, param3: string): void;
						public logMove(param0: string, param1: number, param2: number, param3: string): void;
						public logRequestFocusWithOffset(param0: string, param1: number, param2: number, param3: com.facebook.litho.widget.RenderInfo, param4: string): void;
						public logDelete(param0: string, param1: number, param2: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module stats {
				export class LithoStats extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.stats.LithoStats>;
					public static getStateUpdatesSync(): number;
					public static getStateUpdates(): number;
					public constructor();
					public static incStateUpdate(param0: number): number;
					public static incStateUpdateSync(param0: number): number;
					public static getStateUpdatesLazy(): number;
					public static incStateUpdateLazy(param0: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module utils {
				export class IncrementalMountUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.utils.IncrementalMountUtils>;
					public static performIncrementalMount(param0: globalAndroid.view.ViewGroup): void;
					public constructor();
					public static incrementallyMountLithoViews(param0: globalAndroid.view.View): void;
				}
				export module IncrementalMountUtils {
					export class WrapperView extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.utils.IncrementalMountUtils.WrapperView>;
						/**
						 * Constructs a new instance of the com.facebook.litho.utils.IncrementalMountUtils$WrapperView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getWrappedView(): globalAndroid.view.View;
						});
						public constructor();
						public getWrappedView(): globalAndroid.view.View;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module utils {
				export class MapDiffUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.utils.MapDiffUtils>;
					public constructor();
					public static areMapsEqual(param0: java.util.Map<any, any>, param1: java.util.Map<any, any>): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module utils {
				export class MeasureUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.utils.MeasureUtils>;
					public constructor();
					public static getViewMeasureSpec(param0: number): number;
					public static measureWithEqualDimens(param0: number, param1: number, param2: com.facebook.litho.Size): void;
					public static measureWithAspectRatio(param0: number, param1: number, param2: number, param3: number, param4: number, param5: com.facebook.litho.Size): void;
					public static measureWithDesiredPx(param0: number, param1: number, param2: number, param3: number, param4: com.facebook.litho.Size): void;
					public static measureWithAspectRatio(param0: number, param1: number, param2: number, param3: com.facebook.litho.Size): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module utils {
				export class StacktraceHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.utils.StacktraceHelper>;
					public constructor();
					public static formatStacktrace(param0: java.lang.Throwable): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module viewcompat {
				export class SimpleViewBinder<V>  extends com.facebook.litho.viewcompat.ViewBinder<any> {
					public static class: java.lang.Class<com.facebook.litho.viewcompat.SimpleViewBinder<any>>;
					public constructor();
					public unbind(param0: any): void;
					public prepare(): void;
					public bind(param0: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module viewcompat {
				export class ViewBinder<V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.viewcompat.ViewBinder<any>>;
					/**
					 * Constructs a new instance of the com.facebook.litho.viewcompat.ViewBinder<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						prepare(): void;
						bind(param0: V): void;
						unbind(param0: V): void;
					});
					public constructor();
					public unbind(param0: V): void;
					public bind(param0: V): void;
					public prepare(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module viewcompat {
				export class ViewCreator<V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.viewcompat.ViewCreator<any>>;
					/**
					 * Constructs a new instance of the com.facebook.litho.viewcompat.ViewCreator<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						createView(param0: globalAndroid.content.Context, param1: globalAndroid.view.ViewGroup): V;
					});
					public constructor();
					public createView(param0: globalAndroid.content.Context, param1: globalAndroid.view.ViewGroup): V;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export abstract class BaseRenderInfo extends java.lang.Object implements com.facebook.litho.widget.RenderInfo {
					public static class: java.lang.Class<com.facebook.litho.widget.BaseRenderInfo>;
					public getSpanSize(): number;
					public getCustomAttribute(param0: string): any;
					public getViewCreator(): com.facebook.litho.viewcompat.ViewCreator<any>;
					public hasCustomViewType(): boolean;
					public isSticky(): boolean;
					public getRenderCompleteEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.RenderCompleteEvent>;
					public isFullSpan(): boolean;
					public rendersComponent(): boolean;
					public getComponent(): com.facebook.litho.Component;
					public getViewBinder(): com.facebook.litho.viewcompat.ViewBinder<any>;
					public getName(): string;
					public addDebugInfo(param0: string, param1: any): void;
					public setViewType(param0: number): void;
					public getViewType(): number;
					public getDebugInfo(param0: string): any;
					public rendersView(): boolean;
				}
				export module BaseRenderInfo {
					export abstract class Builder<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.BaseRenderInfo.Builder<any>>;
						public constructor();
						public spanSize(param0: number): T;
						public isFullSpan(param0: boolean): T;
						public customAttribute(param0: string, param1: any): T;
						public isSticky(param0: boolean): T;
						public debugInfo(param0: string, param1: any): T;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class Binder<V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.Binder<any>>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.Binder<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setSize(param0: number, param1: number): void;
						measure(param0: com.facebook.litho.Size, param1: number, param2: number, param3: com.facebook.litho.EventHandler<com.facebook.litho.widget.ReMeasureEvent>): void;
						getComponentAt(param0: number): com.facebook.litho.ComponentTree;
						mount(param0: V): void;
						bind(param0: V): void;
						unbind(param0: V): void;
						unmount(param0: V): void;
						setViewportChangedListener(param0: com.facebook.litho.widget.ViewportInfo.ViewportChanged): void;
						isWrapContent(): boolean;
						canMeasure(): boolean;
						setCanMeasure(param0: boolean): void;
						detach(): void;
					});
					public constructor();
					public unbind(param0: V): void;
					public mount(param0: V): void;
					public measure(param0: com.facebook.litho.Size, param1: number, param2: number, param3: com.facebook.litho.EventHandler<com.facebook.litho.widget.ReMeasureEvent>): void;
					public bind(param0: V): void;
					public canMeasure(): boolean;
					public getComponentAt(param0: number): com.facebook.litho.ComponentTree;
					public unmount(param0: V): void;
					public setSize(param0: number, param1: number): void;
					public setCanMeasure(param0: boolean): void;
					public setViewportChangedListener(param0: com.facebook.litho.widget.ViewportInfo.ViewportChanged): void;
					public detach(): void;
					public isWrapContent(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class BuildConfig extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.BuildConfig>;
					public static DEBUG: boolean;
					public static APPLICATION_ID: string;
					public static BUILD_TYPE: string;
					public static FLAVOR: string;
					public static VERSION_CODE: number;
					public static VERSION_NAME: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class Card extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.Card>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public isPureRender(): boolean;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.Card.Builder;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public makeShallowCopy(): com.facebook.litho.widget.Card;
					public isEquivalentTo(param0: any): boolean;
					public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
					public makeShallowCopy(): com.facebook.litho.Component;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.Card.Builder;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module Card {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.Card.Builder>;
						public shadowEndColor(param0: number): com.facebook.litho.widget.Card.Builder;
						public elevationRes(param0: number): com.facebook.litho.widget.Card.Builder;
						public elevationPx(param0: number): com.facebook.litho.widget.Card.Builder;
						public shadowBottomOverridePx(param0: number): com.facebook.litho.widget.Card.Builder;
						public shadowBottomOverrideRes(param0: number): com.facebook.litho.widget.Card.Builder;
						public shadowEndColorRes(param0: number): com.facebook.litho.widget.Card.Builder;
						public getThis(): com.facebook.litho.widget.Card.Builder;
						public cornerRadiusRes(param0: number): com.facebook.litho.widget.Card.Builder;
						public shadowBottomOverrideAttr(param0: number, param1: number): com.facebook.litho.widget.Card.Builder;
						public clippingColorRes(param0: number): com.facebook.litho.widget.Card.Builder;
						public cornerRadiusSp(param0: number): com.facebook.litho.widget.Card.Builder;
						public cornerRadiusAttr(param0: number): com.facebook.litho.widget.Card.Builder;
						public build(): com.facebook.litho.widget.Card;
						public disableClipTopRight(param0: boolean): com.facebook.litho.widget.Card.Builder;
						public shadowBottomOverrideSp(param0: number): com.facebook.litho.widget.Card.Builder;
						public shadowStartColorAttr(param0: number, param1: number): com.facebook.litho.widget.Card.Builder;
						public cardBackgroundColorRes(param0: number): com.facebook.litho.widget.Card.Builder;
						public cornerRadiusAttr(param0: number, param1: number): com.facebook.litho.widget.Card.Builder;
						public shadowStartColorAttr(param0: number): com.facebook.litho.widget.Card.Builder;
						public content(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.widget.Card.Builder;
						public cornerRadiusPx(param0: number): com.facebook.litho.widget.Card.Builder;
						public cornerRadiusDip(param0: number): com.facebook.litho.widget.Card.Builder;
						public disableClipBottomRight(param0: boolean): com.facebook.litho.widget.Card.Builder;
						public constructor();
						public cardBackgroundColorAttr(param0: number, param1: number): com.facebook.litho.widget.Card.Builder;
						public disableClipBottomLeft(param0: boolean): com.facebook.litho.widget.Card.Builder;
						public disableClipTopLeft(param0: boolean): com.facebook.litho.widget.Card.Builder;
						public clippingColorAttr(param0: number, param1: number): com.facebook.litho.widget.Card.Builder;
						public elevationDip(param0: number): com.facebook.litho.widget.Card.Builder;
						public shadowBottomOverrideAttr(param0: number): com.facebook.litho.widget.Card.Builder;
						public elevationAttr(param0: number, param1: number): com.facebook.litho.widget.Card.Builder;
						public shadowEndColorAttr(param0: number): com.facebook.litho.widget.Card.Builder;
						public elevationAttr(param0: number): com.facebook.litho.widget.Card.Builder;
						public shadowEndColorAttr(param0: number, param1: number): com.facebook.litho.widget.Card.Builder;
						public cardBackgroundColorAttr(param0: number): com.facebook.litho.widget.Card.Builder;
						public cardBackgroundColor(param0: number): com.facebook.litho.widget.Card.Builder;
						public shadowBottomOverrideDip(param0: number): com.facebook.litho.widget.Card.Builder;
						public getThis(): any;
						public elevationSp(param0: number): com.facebook.litho.widget.Card.Builder;
						public build(): com.facebook.litho.Component;
						public clippingColorAttr(param0: number): com.facebook.litho.widget.Card.Builder;
						public shadowStartColorRes(param0: number): com.facebook.litho.widget.Card.Builder;
						public clippingColor(param0: number): com.facebook.litho.widget.Card.Builder;
						public shadowStartColor(param0: number): com.facebook.litho.widget.Card.Builder;
						public content(param0: com.facebook.litho.Component): com.facebook.litho.widget.Card.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class CardClip extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.CardClip>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public isPureRender(): boolean;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public isEquivalentTo(param0: any): boolean;
					public canPreallocate(): boolean;
					public onCreateMountContent(param0: globalAndroid.content.Context): any;
					public poolSize(): number;
					public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.CardClip.Builder;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.CardClip.Builder;
					public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module CardClip {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.CardClip.Builder>;
						public cornerRadiusSp(param0: number): com.facebook.litho.widget.CardClip.Builder;
						public cornerRadiusAttr(param0: number): com.facebook.litho.widget.CardClip.Builder;
						public disableClipTopLeft(param0: boolean): com.facebook.litho.widget.CardClip.Builder;
						public constructor();
						public cornerRadiusAttr(param0: number, param1: number): com.facebook.litho.widget.CardClip.Builder;
						public clippingColorAttr(param0: number, param1: number): com.facebook.litho.widget.CardClip.Builder;
						public build(): com.facebook.litho.widget.CardClip;
						public cornerRadiusRes(param0: number): com.facebook.litho.widget.CardClip.Builder;
						public clippingColor(param0: number): com.facebook.litho.widget.CardClip.Builder;
						public cornerRadiusDip(param0: number): com.facebook.litho.widget.CardClip.Builder;
						public getThis(): com.facebook.litho.widget.CardClip.Builder;
						public disableClipBottomRight(param0: boolean): com.facebook.litho.widget.CardClip.Builder;
						public disableClipTopRight(param0: boolean): com.facebook.litho.widget.CardClip.Builder;
						public getThis(): any;
						public clippingColorRes(param0: number): com.facebook.litho.widget.CardClip.Builder;
						public cornerRadiusPx(param0: number): com.facebook.litho.widget.CardClip.Builder;
						public build(): com.facebook.litho.Component;
						public clippingColorAttr(param0: number): com.facebook.litho.widget.CardClip.Builder;
						public disableClipBottomLeft(param0: boolean): com.facebook.litho.widget.CardClip.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class CardClipDrawable extends globalAndroid.graphics.drawable.Drawable {
					public static class: java.lang.Class<com.facebook.litho.widget.CardClipDrawable>;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public setAlpha(param0: number): void;
					public getOpacity(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class CardClipSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.CardClipSpec>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class CardShadow extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.CardShadow>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public isPureRender(): boolean;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.CardShadow.Builder;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.CardShadow.Builder;
					public isEquivalentTo(param0: any): boolean;
					public canPreallocate(): boolean;
					public onCreateMountContent(param0: globalAndroid.content.Context): any;
					public poolSize(): number;
					public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module CardShadow {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.CardShadow.Builder>;
						public shadowSizePx(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public shadowSizeRes(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public shadowSizeAttr(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public shadowStartColorAttr(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public cornerRadiusPx(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public cornerRadiusSp(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public cornerRadiusAttr(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public cornerRadiusDip(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public shadowEndColorAttr(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public shadowStartColorRes(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public shadowEndColorRes(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public build(): com.facebook.litho.widget.CardShadow;
						public shadowStartColorAttr(param0: number, param1: number): com.facebook.litho.widget.CardShadow.Builder;
						public constructor();
						public shadowStartColor(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public getThis(): com.facebook.litho.widget.CardShadow.Builder;
						public cornerRadiusRes(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public hideBottomShadow(param0: boolean): com.facebook.litho.widget.CardShadow.Builder;
						public shadowEndColorAttr(param0: number, param1: number): com.facebook.litho.widget.CardShadow.Builder;
						public shadowSizeDip(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public hideTopShadow(param0: boolean): com.facebook.litho.widget.CardShadow.Builder;
						public getThis(): any;
						public shadowSizeAttr(param0: number, param1: number): com.facebook.litho.widget.CardShadow.Builder;
						public build(): com.facebook.litho.Component;
						public shadowEndColor(param0: number): com.facebook.litho.widget.CardShadow.Builder;
						public cornerRadiusAttr(param0: number, param1: number): com.facebook.litho.widget.CardShadow.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class CardShadowDrawable extends globalAndroid.graphics.drawable.Drawable {
					public static class: java.lang.Class<com.facebook.litho.widget.CardShadowDrawable>;
					public static getShadowRight(param0: number): number;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public static getShadowTop(param0: number): number;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public setAlpha(param0: number): void;
					public static getShadowHorizontal(param0: number): number;
					public static getShadowBottom(param0: number): number;
					public getOpacity(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class CardShadowSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.CardShadowSpec>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class CardSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.CardSpec>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class CenterSnappingSmoothScroller extends androidx.recyclerview.widget.LinearSmoothScroller {
					public static class: java.lang.Class<com.facebook.litho.widget.CenterSnappingSmoothScroller>;
					public constructor(param0: globalAndroid.content.Context);
					public constructor();
					public constructor(param0: globalAndroid.content.Context, param1: number);
					public calculateDtToFit(param0: number, param1: number, param2: number, param3: number, param4: number): number;
					public calculateSpeedPerPixel(param0: globalAndroid.util.DisplayMetrics): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ChangeSetCompleteCallback extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.ChangeSetCompleteCallback>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.ChangeSetCompleteCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onDataBound(): void;
						onDataRendered(param0: boolean, param1: number): void;
					});
					public constructor();
					public onDataBound(): void;
					public onDataRendered(param0: boolean, param1: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ClearFocusEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.ClearFocusEvent>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ClickableSpanListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.ClickableSpanListener>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.ClickableSpanListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onClick(param0: globalAndroid.text.style.ClickableSpan, param1: globalAndroid.view.View): boolean;
						onLongClick(param0: com.facebook.litho.widget.LongClickableSpan, param1: globalAndroid.view.View): boolean;
					});
					public constructor();
					public onLongClick(param0: com.facebook.litho.widget.LongClickableSpan, param1: globalAndroid.view.View): boolean;
					public onClick(param0: globalAndroid.text.style.ClickableSpan, param1: globalAndroid.view.View): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ComponentCreator extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.ComponentCreator>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.ComponentCreator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(): com.facebook.litho.Component;
					});
					public constructor();
					public create(): com.facebook.litho.Component;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ComponentRenderInfo extends com.facebook.litho.widget.BaseRenderInfo {
					public static class: java.lang.Class<com.facebook.litho.widget.ComponentRenderInfo>;
					public static LAYOUT_DIFFING_ENABLED: string;
					public static RECONCILIATION_ENABLED: string;
					public getSpanSize(): number;
					public getCustomAttribute(param0: string): any;
					public getViewCreator(): com.facebook.litho.viewcompat.ViewCreator<any>;
					public hasCustomViewType(): boolean;
					public isSticky(): boolean;
					public getRenderCompleteEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.RenderCompleteEvent>;
					public static create(): com.facebook.litho.widget.ComponentRenderInfo.Builder;
					public isFullSpan(): boolean;
					public rendersComponent(): boolean;
					public getComponent(): com.facebook.litho.Component;
					public getName(): string;
					public getViewBinder(): com.facebook.litho.viewcompat.ViewBinder<any>;
					public static createEmpty(): com.facebook.litho.widget.RenderInfo;
					public addDebugInfo(param0: string, param1: any): void;
					public setViewType(param0: number): void;
					public getViewType(): number;
					public getDebugInfo(param0: string): any;
					public rendersView(): boolean;
				}
				export module ComponentRenderInfo {
					export class Builder extends com.facebook.litho.widget.BaseRenderInfo.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.ComponentRenderInfo.Builder>;
						public constructor();
						public renderCompleteHandler(param0: com.facebook.litho.EventHandler<com.facebook.litho.RenderCompleteEvent>): com.facebook.litho.widget.ComponentRenderInfo.Builder;
						public component(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.widget.ComponentRenderInfo.Builder;
						public component(param0: com.facebook.litho.Component): com.facebook.litho.widget.ComponentRenderInfo.Builder;
						public build(): com.facebook.litho.widget.ComponentRenderInfo;
					}
					export class EmptyComponent extends com.facebook.litho.Component {
						public static class: java.lang.Class<com.facebook.litho.widget.ComponentRenderInfo.EmptyComponent>;
						public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
						public constructor();
						public constructor(param0: string, param1: any);
						public isEquivalentTo(param0: any): boolean;
						public getEventDispatcher(): com.facebook.litho.EventDispatcher;
						public constructor(param0: any);
						public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
						public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
						public constructor(param0: string);
						public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
						/** @deprecated */
						public getEventDispatcher(): com.facebook.litho.EventDispatcher;
						public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ComponentTreeHolder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.ComponentTreeHolder>;
					public static create(): com.facebook.litho.widget.ComponentTreeHolder.Builder;
					public isTreeValid(): boolean;
					public computeLayoutSync(param0: com.facebook.litho.ComponentContext, param1: number, param2: number, param3: com.facebook.litho.Size): void;
					public isTreeValidForSizeSpecs(param0: number, param1: number): boolean;
					public getRenderInfo(): com.facebook.litho.widget.RenderInfo;
					public updateLayoutHandler(param0: com.facebook.litho.LithoHandler): void;
					public setInserted(param0: boolean): void;
					public getComponentTree(): com.facebook.litho.ComponentTree;
					public isInserted(): boolean;
					public acquireStateAndReleaseTree(): void;
					public updateMeasureListener(param0: com.facebook.litho.ComponentTree.MeasureListener): void;
					public computeLayoutAsync(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): void;
					public setRenderInfo(param0: com.facebook.litho.widget.RenderInfo): void;
					public hasCompletedLatestLayout(): boolean;
					public computeLayoutAsync(param0: com.facebook.litho.ComponentContext, param1: number, param2: number, param3: com.facebook.litho.ComponentTree.MeasureListener): void;
					public releaseTree(): void;
				}
				export module ComponentTreeHolder {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.ComponentTreeHolder.Builder>;
						public componentTreeMeasureListenerFactory(param0: com.facebook.litho.widget.ComponentTreeHolder.ComponentTreeMeasureListenerFactory): com.facebook.litho.widget.ComponentTreeHolder.Builder;
						public useCancelableLayoutFutures(param0: boolean): com.facebook.litho.widget.ComponentTreeHolder.Builder;
						public canInterruptAndMoveLayoutsBetweenThreads(param0: boolean): com.facebook.litho.widget.ComponentTreeHolder.Builder;
						public canPreallocateOnDefaultHandler(param0: boolean): com.facebook.litho.widget.ComponentTreeHolder.Builder;
						public shouldPreallocatePerMountSpec(param0: boolean): com.facebook.litho.widget.ComponentTreeHolder.Builder;
						public preallocateMountContentHandler(param0: com.facebook.litho.LithoHandler): com.facebook.litho.widget.ComponentTreeHolder.Builder;
						public incrementalMount(param0: boolean): com.facebook.litho.widget.ComponentTreeHolder.Builder;
						public layoutHandler(param0: com.facebook.litho.LithoHandler): com.facebook.litho.widget.ComponentTreeHolder.Builder;
						public renderInfo(param0: com.facebook.litho.widget.RenderInfo): com.facebook.litho.widget.ComponentTreeHolder.Builder;
						public build(): com.facebook.litho.widget.ComponentTreeHolder;
					}
					export class ComponentTreeMeasureListenerFactory extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.ComponentTreeHolder.ComponentTreeMeasureListenerFactory>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.ComponentTreeHolder$ComponentTreeMeasureListenerFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(param0: com.facebook.litho.widget.ComponentTreeHolder): com.facebook.litho.ComponentTree.MeasureListener;
						});
						public constructor();
						public create(param0: com.facebook.litho.widget.ComponentTreeHolder): com.facebook.litho.ComponentTree.MeasureListener;
					}
					export class RenderState extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.litho.widget.ComponentTreeHolder.RenderState>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.ComponentTreeHolder$RenderState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class CustomSpeedLinearSnapHelper extends androidx.recyclerview.widget.LinearSnapHelper {
					public static class: java.lang.Class<com.facebook.litho.widget.CustomSpeedLinearSnapHelper>;
					public constructor();
					public findTargetSnapPosition(param0: androidx.recyclerview.widget.RecyclerView.LayoutManager, param1: number, param2: number): number;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class DataDiffModelName extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.DataDiffModelName>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.DataDiffModelName interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getName(): string;
					});
					public constructor();
					public getName(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class DispatchKeyEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.DispatchKeyEvent>;
					public keyEvent: globalAndroid.view.KeyEvent;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class EdgeSnappingSmoothScroller extends androidx.recyclerview.widget.LinearSmoothScroller {
					public static class: java.lang.Class<com.facebook.litho.widget.EdgeSnappingSmoothScroller>;
					public constructor(param0: globalAndroid.content.Context);
					public getHorizontalSnapPreference(): number;
					public constructor();
					public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
					public calculateDtToFit(param0: number, param1: number, param2: number, param3: number, param4: number): number;
					public getVerticalSnapPreference(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class EditText extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.EditText>;
					public static requestFocus(param0: com.facebook.litho.ComponentContext, param1: string): void;
					public static updateInput(param0: com.facebook.litho.ComponentContext, param1: string): void;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public isPureRender(): boolean;
					public static updateInputAsync(param0: com.facebook.litho.ComponentContext, param1: string): void;
					public static updateInputSync(param0: com.facebook.litho.ComponentContext, param1: string): void;
					public createInitialState(param0: com.facebook.litho.ComponentContext): void;
					public static getSelectionChangedEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public static setText(param0: com.facebook.litho.ComponentContext, param1: string, param2: string): void;
					public getStateContainer(): com.facebook.litho.StateContainer;
					public static setTextTrigger(param0: com.facebook.litho.ComponentContext, param1: string): com.facebook.litho.EventTrigger<any>;
					public hasState(): boolean;
					public canPreallocate(): boolean;
					public makeShallowCopy(): com.facebook.litho.Component;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.EditText.Builder;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.EditText.Builder;
					public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
					public static getSetTextEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public canMeasure(): boolean;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public transferState(param0: com.facebook.litho.StateContainer, param1: com.facebook.litho.StateContainer): void;
					public static setText(param0: com.facebook.litho.EventTrigger<any>, param1: string): void;
					public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public static getTextChangedEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public static requestFocus(param0: com.facebook.litho.EventTrigger<any>): void;
					public static clearFocusTrigger(param0: com.facebook.litho.ComponentContext, param1: string): com.facebook.litho.EventTrigger<any>;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public makeShallowCopy(): com.facebook.litho.widget.EditText;
					public static clearFocus(param0: com.facebook.litho.EventTrigger<any>): void;
					public isEquivalentTo(param0: any): boolean;
					public onLoadStyle(param0: com.facebook.litho.ComponentContext): void;
					public onCreateMountContent(param0: globalAndroid.content.Context): any;
					public static requestFocusTrigger(param0: com.facebook.litho.ComponentContext, param1: string): com.facebook.litho.EventTrigger<any>;
					public static lazyUpdateInput(param0: com.facebook.litho.ComponentContext, param1: string): void;
					public poolSize(): number;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public static getKeyUpEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public onBind(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public static clearFocus(param0: com.facebook.litho.ComponentContext, param1: string): void;
					public onUnbind(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public onMeasure(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout, param2: number, param3: number, param4: com.facebook.litho.Size): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module EditText {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.EditText.Builder>;
						public maxLengthRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public build(): com.facebook.litho.widget.EditText;
						public textColorAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public extraSpacingRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public inputFilter(param0: globalAndroid.text.InputFilter): com.facebook.litho.widget.EditText.Builder;
						public inputType(param0: number): com.facebook.litho.widget.EditText.Builder;
						public inputFilters(param0: java.util.List<globalAndroid.text.InputFilter>): com.facebook.litho.widget.EditText.Builder;
						public textColor(param0: number): com.facebook.litho.widget.EditText.Builder;
						public hintRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public requestFocusTrigger(param0: com.facebook.litho.EventTrigger<any>): com.facebook.litho.widget.EditText.Builder;
						public highlightColorRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public maxLengthAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public constructor();
						public shadowColorAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public key(param0: string): any;
						public maxLinesAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public hintRes(param0: number, param1: native.Array<any>): com.facebook.litho.widget.EditText.Builder;
						public maxLength(param0: number): com.facebook.litho.widget.EditText.Builder;
						public spacingMultiplierAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public extraSpacingPx(param0: number): com.facebook.litho.widget.EditText.Builder;
						public selection(param0: number): com.facebook.litho.widget.EditText.Builder;
						public requestFocus(param0: boolean): com.facebook.litho.widget.EditText.Builder;
						public hintColorStateList(param0: globalAndroid.content.res.ColorStateList): com.facebook.litho.widget.EditText.Builder;
						public key(param0: string): com.facebook.litho.widget.EditText.Builder;
						public extraSpacingSp(param0: number): com.facebook.litho.widget.EditText.Builder;
						public hintColorAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public hintAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public editorActionListener(param0: globalAndroid.widget.TextView.OnEditorActionListener): com.facebook.litho.widget.EditText.Builder;
						public extraSpacingDip(param0: number): com.facebook.litho.widget.EditText.Builder;
						public highlightColor(param0: number): com.facebook.litho.widget.EditText.Builder;
						public build(): com.facebook.litho.Component;
						public shadowDyPx(param0: number): com.facebook.litho.widget.EditText.Builder;
						public typeface(param0: globalAndroid.graphics.Typeface): com.facebook.litho.widget.EditText.Builder;
						public highlightColorAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public extraSpacingAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public shadowRadiusRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public shadowRadiusPx(param0: number): com.facebook.litho.widget.EditText.Builder;
						public shadowDxSp(param0: number): com.facebook.litho.widget.EditText.Builder;
						public hintColor(param0: number): com.facebook.litho.widget.EditText.Builder;
						public isSingleLineWrap(param0: boolean): com.facebook.litho.widget.EditText.Builder;
						public editable(param0: boolean): com.facebook.litho.widget.EditText.Builder;
						public shadowRadiusAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public shadowRadiusAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public maxLinesRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public textColorAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public shadowDyAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public clearFocusTrigger(param0: com.facebook.litho.EventTrigger<any>): com.facebook.litho.widget.EditText.Builder;
						public linkColorAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public cursorDrawableRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public textColorRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public getThis(): any;
						public shadowRadiusDip(param0: number): com.facebook.litho.widget.EditText.Builder;
						public shadowColor(param0: number): com.facebook.litho.widget.EditText.Builder;
						public text(param0: string): com.facebook.litho.widget.EditText.Builder;
						public setTextTrigger(param0: com.facebook.litho.EventTrigger<any>): com.facebook.litho.widget.EditText.Builder;
						public isSingleLine(param0: boolean): com.facebook.litho.widget.EditText.Builder;
						public spacingMultiplier(param0: number): com.facebook.litho.widget.EditText.Builder;
						public maxLengthAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public textSizeAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public textRes(param0: number, param1: native.Array<any>): com.facebook.litho.widget.EditText.Builder;
						public spacingMultiplierRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public shadowDyRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public initialText(param0: string): com.facebook.litho.widget.EditText.Builder;
						public stateUpdatePolicy(param0: com.facebook.litho.widget.EditTextStateUpdatePolicy): com.facebook.litho.widget.EditText.Builder;
						public textSizeSp(param0: number): com.facebook.litho.widget.EditText.Builder;
						public isSingleLineAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public shadowColorRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public shadowColorAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public textSizeAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public highlightColorAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public hint(param0: string): com.facebook.litho.widget.EditText.Builder;
						public shadowDxAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public minLinesAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public textStyle(param0: number): com.facebook.litho.widget.EditText.Builder;
						public maxLinesAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public textAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public getThis(): com.facebook.litho.widget.EditText.Builder;
						public textColorStateList(param0: globalAndroid.content.res.ColorStateList): com.facebook.litho.widget.EditText.Builder;
						public linkColor(param0: number): com.facebook.litho.widget.EditText.Builder;
						public hintColorRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public shadowDyDip(param0: number): com.facebook.litho.widget.EditText.Builder;
						public textRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public rawInputType(param0: number): com.facebook.litho.widget.EditText.Builder;
						public textWatchers(param0: java.util.List<globalAndroid.text.TextWatcher>): com.facebook.litho.widget.EditText.Builder;
						public isSingleLineRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public maxLines(param0: number): com.facebook.litho.widget.EditText.Builder;
						public textAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public minLinesAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public imeOptions(param0: number): com.facebook.litho.widget.EditText.Builder;
						public textWatcher(param0: globalAndroid.text.TextWatcher): com.facebook.litho.widget.EditText.Builder;
						public spacingMultiplierAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public selectionChangedEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.EditText.Builder;
						public initialTextAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public textSizeDip(param0: number): com.facebook.litho.widget.EditText.Builder;
						public shadowDxRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public extraSpacingAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public shadowDySp(param0: number): com.facebook.litho.widget.EditText.Builder;
						public tintColorStateList(param0: globalAndroid.content.res.ColorStateList): com.facebook.litho.widget.EditText.Builder;
						public shadowDxAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public isSingleLineAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public ellipsize(param0: globalAndroid.text.TextUtils.TruncateAt): com.facebook.litho.widget.EditText.Builder;
						public textChangedEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.EditText.Builder;
						public shadowDxPx(param0: number): com.facebook.litho.widget.EditText.Builder;
						public initialTextAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public shadowRadiusSp(param0: number): com.facebook.litho.widget.EditText.Builder;
						public textAlignment(param0: globalAndroid.text.Layout.Alignment): com.facebook.litho.widget.EditText.Builder;
						public minLinesRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public shadowDyAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public linkColorAttr(param0: number, param1: number): com.facebook.litho.widget.EditText.Builder;
						public textSizePx(param0: number): com.facebook.litho.widget.EditText.Builder;
						public linkColorRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public setTextEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.EditText.Builder;
						public minLines(param0: number): com.facebook.litho.widget.EditText.Builder;
						public gravity(param0: number): com.facebook.litho.widget.EditText.Builder;
						public keyUpEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.EditText.Builder;
						public shadowDxDip(param0: number): com.facebook.litho.widget.EditText.Builder;
						public textSizeRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public hintColorAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public initialTextRes(param0: number): com.facebook.litho.widget.EditText.Builder;
						public hintAttr(param0: number): com.facebook.litho.widget.EditText.Builder;
						public initialTextRes(param0: number, param1: native.Array<any>): com.facebook.litho.widget.EditText.Builder;
					}
					export class EditTextStateContainer extends com.facebook.litho.StateContainer {
						public static class: java.lang.Class<com.facebook.litho.widget.EditText.EditTextStateContainer>;
						public applyStateUpdate(param0: com.facebook.litho.StateContainer.StateUpdate): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class EditTextSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.EditTextSpec>;
					public static minLines: number;
					public static maxLines: number;
					public static maxLength: number;
					public static shadowColor: number;
					public static textColor: number;
					public static textColorStateList: globalAndroid.content.res.ColorStateList;
					public static hintColor: number;
					public static hintColorStateList: globalAndroid.content.res.ColorStateList;
					public static linkColor: number;
					public static textSize: number;
					public static textStyle: number;
					public static typeface: globalAndroid.graphics.Typeface;
					public static spacingMultiplier: number;
					public static textAlignment: globalAndroid.text.Layout.Alignment;
					public static gravity: number;
					public static editable: boolean;
					public static selection: number;
					public static inputType: number;
					public static rawInputType: number;
					public static imeOptions: number;
					public static isSingleLineWrap: boolean;
					public static requestFocus: boolean;
					public static cursorDrawableRes: number;
					public static stateUpdatePolicy: com.facebook.litho.widget.EditTextStateUpdatePolicy;
					public static onCreateMountContent(param0: globalAndroid.content.Context): com.facebook.litho.widget.EditTextSpec.EditTextWithEventHandlers;
				}
				export module EditTextSpec {
					export class EditTextForMeasure extends globalAndroid.widget.EditText {
						public static class: java.lang.Class<com.facebook.litho.widget.EditTextSpec.EditTextForMeasure>;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEvent(param0: number): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public onPreDraw(): boolean;
						public setBackground(param0: globalAndroid.graphics.drawable.Drawable): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					}
					export class EditTextWithEventHandlers extends globalAndroid.widget.EditText {
						public static class: java.lang.Class<com.facebook.litho.widget.EditTextSpec.EditTextWithEventHandlers>;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public onSelectionChanged(param0: number, param1: number): void;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEvent(param0: number): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public onPreDraw(): boolean;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					}
					export module EditTextWithEventHandlers {
						export class DelegatingTextWatcher extends java.lang.Object implements globalAndroid.text.TextWatcher {
							public static class: java.lang.Class<com.facebook.litho.widget.EditTextSpec.EditTextWithEventHandlers.DelegatingTextWatcher>;
							public setDelegates(param0: java.util.List<globalAndroid.text.TextWatcher>): void;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class EditTextStateUpdatePolicy {
					public static class: java.lang.Class<com.facebook.litho.widget.EditTextStateUpdatePolicy>;
					public static NO_UPDATES: com.facebook.litho.widget.EditTextStateUpdatePolicy;
					public static ONLY_LAZY_UPDATES: com.facebook.litho.widget.EditTextStateUpdatePolicy;
					public static UPDATE_ON_LINE_COUNT_CHANGE: com.facebook.litho.widget.EditTextStateUpdatePolicy;
					public static UPDATE_ON_TEXT_CHANGE: com.facebook.litho.widget.EditTextStateUpdatePolicy;
					public static values(): native.Array<com.facebook.litho.widget.EditTextStateUpdatePolicy>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
					public static valueOf(param0: string): com.facebook.litho.widget.EditTextStateUpdatePolicy;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class EditorActionEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.EditorActionEvent>;
					public actionId: number;
					public event: globalAndroid.view.KeyEvent;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class EmptyComponent extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.EmptyComponent>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.EmptyComponent.Builder;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.EmptyComponent.Builder;
					public isEquivalentTo(param0: any): boolean;
					public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module EmptyComponent {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.EmptyComponent.Builder>;
						public constructor();
						public build(): com.facebook.litho.widget.EmptyComponent;
						public getThis(): any;
						public getThis(): com.facebook.litho.widget.EmptyComponent.Builder;
						public build(): com.facebook.litho.Component;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class EmptyComponentSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.EmptyComponentSpec>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class GetTextEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.GetTextEvent>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class GridLayoutInfo extends java.lang.Object implements com.facebook.litho.widget.LayoutInfo {
					public static class: java.lang.Class<com.facebook.litho.widget.GridLayoutInfo>;
					public static OVERRIDE_SIZE: string;
					public findFirstFullyVisibleItemPosition(): number;
					public getScrollDirection(): number;
					public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: boolean, param4: boolean);
					public createViewportFiller(param0: number, param1: number): com.facebook.litho.widget.GridLayoutInfo.ViewportFiller;
					public constructor(param0: globalAndroid.content.Context, param1: number);
					public setRenderInfoCollection(param0: com.facebook.litho.widget.LayoutInfo.RenderInfoCollection): void;
					public findLastFullyVisibleItemPosition(): number;
					public approximateRangeSize(param0: number, param1: number, param2: number, param3: number): number;
					public findFirstVisibleItemPosition(): number;
					public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: boolean);
					public findLastVisibleItemPosition(): number;
					public getLayoutManager(): androidx.recyclerview.widget.RecyclerView.LayoutManager;
					public computeWrappedHeight(param0: number, param1: java.util.List<com.facebook.litho.widget.ComponentTreeHolder>): number;
					public getItemCount(): number;
					public getChildHeightSpec(param0: number, param1: com.facebook.litho.widget.RenderInfo): number;
					public getChildWidthSpec(param0: number, param1: com.facebook.litho.widget.RenderInfo): number;
					public createViewportFiller(param0: number, param1: number): com.facebook.litho.widget.LayoutInfo.ViewportFiller;
				}
				export module GridLayoutInfo {
					export class GridSpanSizeLookup extends androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup {
						public static class: java.lang.Class<com.facebook.litho.widget.GridLayoutInfo.GridSpanSizeLookup>;
						public getSpanSize(param0: number): number;
					}
					export class LithoGridLayoutManager extends androidx.recyclerview.widget.GridLayoutManager {
						public static class: java.lang.Class<com.facebook.litho.widget.GridLayoutInfo.LithoGridLayoutManager>;
						public constructor();
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
						public constructor(param0: globalAndroid.content.Context);
						public computeScrollVectorForPosition(param0: number): globalAndroid.graphics.PointF;
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: boolean);
						public generateLayoutParams(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.recyclerview.widget.RecyclerView.LayoutParams;
						public constructor(param0: globalAndroid.content.Context, param1: number);
						public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): androidx.recyclerview.widget.RecyclerView.LayoutParams;
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: boolean);
						public prepareForDrop(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): void;
					}
					export module LithoGridLayoutManager {
						export class LayoutParams extends androidx.recyclerview.widget.GridLayoutManager.LayoutParams implements com.facebook.litho.LithoView.LayoutManagerOverrideParams {
							public static class: java.lang.Class<com.facebook.litho.widget.GridLayoutInfo.LithoGridLayoutManager.LayoutParams>;
							public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
							public constructor(param0: number, param1: number);
							public constructor(param0: androidx.recyclerview.widget.RecyclerView.LayoutParams);
							public getHeightMeasureSpec(): number;
							public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public constructor(param0: com.facebook.litho.widget.RecyclerBinder.RecyclerViewLayoutManagerOverrideParams);
							public hasValidAdapterPosition(): boolean;
							public getWidthMeasureSpec(): number;
						}
					}
					export class ViewportFiller extends java.lang.Object implements com.facebook.litho.widget.LayoutInfo.ViewportFiller {
						public static class: java.lang.Class<com.facebook.litho.widget.GridLayoutInfo.ViewportFiller>;
						public wantsMore(): boolean;
						public getFill(): number;
						public add(param0: com.facebook.litho.widget.RenderInfo, param1: number, param2: number): void;
						public constructor(param0: number, param1: number, param2: number, param3: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class HasPostDispatchDrawListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.HasPostDispatchDrawListener>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.HasPostDispatchDrawListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setPostDispatchDrawListener(param0: com.facebook.litho.widget.PostDispatchDrawListener): void;
					});
					public constructor();
					public setPostDispatchDrawListener(param0: com.facebook.litho.widget.PostDispatchDrawListener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class HasStickyHeader extends java.lang.Object implements com.facebook.litho.widget.ViewportInfo {
					public static class: java.lang.Class<com.facebook.litho.widget.HasStickyHeader>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.HasStickyHeader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isSticky(param0: number): boolean;
						isValidPosition(param0: number): boolean;
						getComponentForStickyHeaderAt(param0: number): com.facebook.litho.ComponentTree;
						findFirstVisibleItemPosition(): number;
						findLastVisibleItemPosition(): number;
						findFirstFullyVisibleItemPosition(): number;
						findLastFullyVisibleItemPosition(): number;
						getItemCount(): number;
					});
					public constructor();
					public findFirstVisibleItemPosition(): number;
					public findLastVisibleItemPosition(): number;
					public findFirstFullyVisibleItemPosition(): number;
					public getComponentForStickyHeaderAt(param0: number): com.facebook.litho.ComponentTree;
					public findLastFullyVisibleItemPosition(): number;
					public getItemCount(): number;
					public isSticky(param0: number): boolean;
					public isValidPosition(param0: number): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class HorizontalScroll extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.HorizontalScroll>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public copyInterStageImpl(param0: com.facebook.litho.Component): void;
					public onBoundsDefined(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout): void;
					public createInitialState(param0: com.facebook.litho.ComponentContext): void;
					public getStateContainer(): com.facebook.litho.StateContainer;
					public hasState(): boolean;
					public canPreallocate(): boolean;
					public makeShallowCopy(): com.facebook.litho.Component;
					public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.HorizontalScroll.Builder;
					public canMeasure(): boolean;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public transferState(param0: com.facebook.litho.StateContainer, param1: com.facebook.litho.StateContainer): void;
					public isMountSizeDependent(): boolean;
					public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public makeShallowCopy(): com.facebook.litho.widget.HorizontalScroll;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public isEquivalentTo(param0: any): boolean;
					public onLoadStyle(param0: com.facebook.litho.ComponentContext): void;
					public onCreateMountContent(param0: globalAndroid.content.Context): any;
					public poolSize(): number;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.HorizontalScroll.Builder;
					public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public onMeasure(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout, param2: number, param3: number, param4: com.facebook.litho.Size): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module HorizontalScroll {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.HorizontalScroll.Builder>;
						public constructor();
						public scrollbarEnabled(param0: boolean): com.facebook.litho.widget.HorizontalScroll.Builder;
						public scrollbarEnabledRes(param0: number): com.facebook.litho.widget.HorizontalScroll.Builder;
						public fillViewport(param0: boolean): com.facebook.litho.widget.HorizontalScroll.Builder;
						public scrollbarEnabledAttr(param0: number): com.facebook.litho.widget.HorizontalScroll.Builder;
						public onScrollChangeListener(param0: com.facebook.litho.widget.HorizontalScrollSpec.OnScrollChangeListener): com.facebook.litho.widget.HorizontalScroll.Builder;
						public build(): com.facebook.litho.widget.HorizontalScroll;
						public getThis(): any;
						public eventsController(param0: com.facebook.litho.widget.HorizontalScrollEventsController): com.facebook.litho.widget.HorizontalScroll.Builder;
						public scrollbarEnabledAttr(param0: number, param1: number): com.facebook.litho.widget.HorizontalScroll.Builder;
						public contentProps(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.widget.HorizontalScroll.Builder;
						public contentProps(param0: com.facebook.litho.Component): com.facebook.litho.widget.HorizontalScroll.Builder;
						public build(): com.facebook.litho.Component;
						public initialScrollPosition(param0: java.lang.Integer): com.facebook.litho.widget.HorizontalScroll.Builder;
						public getThis(): com.facebook.litho.widget.HorizontalScroll.Builder;
					}
					export class HorizontalScrollStateContainer extends com.facebook.litho.StateContainer {
						public static class: java.lang.Class<com.facebook.litho.widget.HorizontalScroll.HorizontalScrollStateContainer>;
						public applyStateUpdate(param0: com.facebook.litho.StateContainer.StateUpdate): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class HorizontalScrollEventsController extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.HorizontalScrollEventsController>;
					public constructor();
					public scrollTo(param0: number): void;
					public smoothScrollTo(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class HorizontalScrollSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.HorizontalScrollSpec>;
				}
				export module HorizontalScrollSpec {
					export class HorizontalScrollLithoView extends globalAndroid.widget.HorizontalScrollView {
						public static class: java.lang.Class<com.facebook.litho.widget.HorizontalScrollSpec.HorizontalScrollLithoView>;
						public isLayoutRequested(): boolean;
						public canResolveLayoutDirection(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public sendAccessibilityEvent(param0: number): void;
						public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
						public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						/** @deprecated */
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
						public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
						public isTextAlignmentResolved(): boolean;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public onMeasure(param0: number, param1: number): void;
						public getTextDirection(): number;
						public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public removeView(param0: globalAndroid.view.View): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onScrollChanged(param0: number, param1: number, param2: number, param3: number): void;
						public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public canResolveTextDirection(): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public isLayoutDirectionResolved(): boolean;
						public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
						public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
						public isTextDirectionResolved(): boolean;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
						/** @deprecated */
						public requestFitSystemWindows(): void;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public onStopNestedScroll(param0: globalAndroid.view.View): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public addView(param0: globalAndroid.view.View): void;
						public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public requestFitSystemWindows(): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public getTextAlignment(): number;
						public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						/** @deprecated */
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public getParent(): globalAndroid.view.ViewParent;
						public getLayoutDirection(): number;
						public canResolveTextAlignment(): boolean;
					}
					export class OnScrollChangeListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.HorizontalScrollSpec.OnScrollChangeListener>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.HorizontalScrollSpec$OnScrollChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onScrollChange(param0: globalAndroid.view.View, param1: number, param2: number): void;
						});
						public constructor();
						public onScrollChange(param0: globalAndroid.view.View, param1: number, param2: number): void;
					}
					export class ScrollPosition extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.HorizontalScrollSpec.ScrollPosition>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class Image extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.Image>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public copyInterStageImpl(param0: com.facebook.litho.Component): void;
					public isPureRender(): boolean;
					public onBoundsDefined(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout): void;
					public shouldUpdate(param0: com.facebook.litho.Component, param1: com.facebook.litho.Component): boolean;
					public canPreallocate(): boolean;
					public makeShallowCopy(): com.facebook.litho.Component;
					public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
					public canMeasure(): boolean;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public isMountSizeDependent(): boolean;
					public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.Image.Builder;
					public makeShallowCopy(): com.facebook.litho.widget.Image;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.Image.Builder;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public isEquivalentTo(param0: any): boolean;
					public onLoadStyle(param0: com.facebook.litho.ComponentContext): void;
					public onCreateMountContent(param0: globalAndroid.content.Context): any;
					public poolSize(): number;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public onBind(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public callsShouldUpdateOnMount(): boolean;
					public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public onMeasure(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout, param2: number, param3: number, param4: com.facebook.litho.Size): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module Image {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.Image.Builder>;
						public constructor();
						public scaleType(param0: globalAndroid.widget.ImageView.ScaleType): com.facebook.litho.widget.Image.Builder;
						public getThis(): any;
						public build(): com.facebook.litho.widget.Image;
						public drawableRes(param0: number): com.facebook.litho.widget.Image.Builder;
						public drawableAttr(param0: number, param1: number): com.facebook.litho.widget.Image.Builder;
						public drawableAttr(param0: number): com.facebook.litho.widget.Image.Builder;
						public build(): com.facebook.litho.Component;
						public getThis(): com.facebook.litho.widget.Image.Builder;
						public drawable(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.widget.Image.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ImageSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.ImageSpec>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ItemSelectedEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.ItemSelectedEvent>;
					public newSelection: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class KeyUpEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.KeyUpEvent>;
					public keyCode: number;
					public keyEvent: globalAndroid.view.KeyEvent;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class LayoutHandlerFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.LayoutHandlerFactory>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.LayoutHandlerFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						createLayoutCalculationHandler(param0: com.facebook.litho.widget.RenderInfo): com.facebook.litho.LithoHandler;
						shouldUpdateLayoutHandler(param0: com.facebook.litho.widget.RenderInfo, param1: com.facebook.litho.widget.RenderInfo): boolean;
					});
					public constructor();
					public createLayoutCalculationHandler(param0: com.facebook.litho.widget.RenderInfo): com.facebook.litho.LithoHandler;
					public shouldUpdateLayoutHandler(param0: com.facebook.litho.widget.RenderInfo, param1: com.facebook.litho.widget.RenderInfo): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class LayoutInfo extends java.lang.Object implements com.facebook.litho.widget.ViewportInfo {
					public static class: java.lang.Class<com.facebook.litho.widget.LayoutInfo>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.LayoutInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getScrollDirection(): number;
						getLayoutManager(): androidx.recyclerview.widget.RecyclerView.LayoutManager;
						setRenderInfoCollection(param0: com.facebook.litho.widget.LayoutInfo.RenderInfoCollection): void;
						approximateRangeSize(param0: number, param1: number, param2: number, param3: number): number;
						getChildWidthSpec(param0: number, param1: com.facebook.litho.widget.RenderInfo): number;
						getChildHeightSpec(param0: number, param1: com.facebook.litho.widget.RenderInfo): number;
						createViewportFiller(param0: number, param1: number): com.facebook.litho.widget.LayoutInfo.ViewportFiller;
						computeWrappedHeight(param0: number, param1: java.util.List<com.facebook.litho.widget.ComponentTreeHolder>): number;
						findFirstVisibleItemPosition(): number;
						findLastVisibleItemPosition(): number;
						findFirstFullyVisibleItemPosition(): number;
						findLastFullyVisibleItemPosition(): number;
						getItemCount(): number;
					});
					public constructor();
					public findFirstFullyVisibleItemPosition(): number;
					public getScrollDirection(): number;
					public setRenderInfoCollection(param0: com.facebook.litho.widget.LayoutInfo.RenderInfoCollection): void;
					public findLastFullyVisibleItemPosition(): number;
					public approximateRangeSize(param0: number, param1: number, param2: number, param3: number): number;
					public findFirstVisibleItemPosition(): number;
					public findLastVisibleItemPosition(): number;
					public getLayoutManager(): androidx.recyclerview.widget.RecyclerView.LayoutManager;
					public computeWrappedHeight(param0: number, param1: java.util.List<com.facebook.litho.widget.ComponentTreeHolder>): number;
					public getChildHeightSpec(param0: number, param1: com.facebook.litho.widget.RenderInfo): number;
					public getItemCount(): number;
					public getChildWidthSpec(param0: number, param1: com.facebook.litho.widget.RenderInfo): number;
					public createViewportFiller(param0: number, param1: number): com.facebook.litho.widget.LayoutInfo.ViewportFiller;
				}
				export module LayoutInfo {
					export class RenderInfoCollection extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.LayoutInfo.RenderInfoCollection>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.LayoutInfo$RenderInfoCollection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getRenderInfoAt(param0: number): com.facebook.litho.widget.RenderInfo;
						});
						public constructor();
						public getRenderInfoAt(param0: number): com.facebook.litho.widget.RenderInfo;
					}
					export class ViewportFiller extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.LayoutInfo.ViewportFiller>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.LayoutInfo$ViewportFiller interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							wantsMore(): boolean;
							add(param0: com.facebook.litho.widget.RenderInfo, param1: number, param2: number): void;
							getFill(): number;
						});
						public constructor();
						public wantsMore(): boolean;
						public getFill(): number;
						public add(param0: com.facebook.litho.widget.RenderInfo, param1: number, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class LayoutInfoUtils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.LayoutInfoUtils>;
					public static getMaxHeightInRow(param0: number, param1: number, param2: java.util.List<com.facebook.litho.widget.ComponentTreeHolder>): number;
					public static computeLinearLayoutWrappedHeight(param0: androidx.recyclerview.widget.LinearLayoutManager, param1: number, param2: java.util.List<com.facebook.litho.widget.ComponentTreeHolder>): number;
					public static getBottomDecorationHeight(param0: androidx.recyclerview.widget.RecyclerView.LayoutManager, param1: number): number;
					public static getTopDecorationHeight(param0: androidx.recyclerview.widget.RecyclerView.LayoutManager, param1: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class LazySelectorComponent extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.LazySelectorComponent>;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.LazySelectorComponent.Builder;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.LazySelectorComponent.Builder;
					public isEquivalentTo(param0: any): boolean;
					public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module LazySelectorComponent {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.LazySelectorComponent.Builder>;
						public constructor();
						public getThis(): any;
						public build(): com.facebook.litho.widget.LazySelectorComponent;
						public build(): com.facebook.litho.Component;
						public getThis(): com.facebook.litho.widget.LazySelectorComponent.Builder;
						public components(param0: java.util.List<com.facebook.litho.widget.ComponentCreator>): com.facebook.litho.widget.LazySelectorComponent.Builder;
						public component(param0: com.facebook.litho.widget.ComponentCreator): com.facebook.litho.widget.LazySelectorComponent.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class LazySelectorComponentSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.LazySelectorComponentSpec>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class LinearLayoutInfo extends java.lang.Object implements com.facebook.litho.widget.LayoutInfo {
					public static class: java.lang.Class<com.facebook.litho.widget.LinearLayoutInfo>;
					public constructor(param0: androidx.recyclerview.widget.LinearLayoutManager);
					public createViewportFiller(param0: number, param1: number): com.facebook.litho.widget.LinearLayoutInfo.ViewportFiller;
					public findFirstFullyVisibleItemPosition(): number;
					public getScrollDirection(): number;
					public setRenderInfoCollection(param0: com.facebook.litho.widget.LayoutInfo.RenderInfoCollection): void;
					public findLastFullyVisibleItemPosition(): number;
					public approximateRangeSize(param0: number, param1: number, param2: number, param3: number): number;
					public constructor(param0: com.facebook.litho.ComponentContext, param1: number, param2: boolean);
					public findFirstVisibleItemPosition(): number;
					public findLastVisibleItemPosition(): number;
					public getLayoutManager(): androidx.recyclerview.widget.RecyclerView.LayoutManager;
					public computeWrappedHeight(param0: number, param1: java.util.List<com.facebook.litho.widget.ComponentTreeHolder>): number;
					public getItemCount(): number;
					public getChildHeightSpec(param0: number, param1: com.facebook.litho.widget.RenderInfo): number;
					public getChildWidthSpec(param0: number, param1: com.facebook.litho.widget.RenderInfo): number;
					public createViewportFiller(param0: number, param1: number): com.facebook.litho.widget.LayoutInfo.ViewportFiller;
					public constructor(param0: globalAndroid.content.Context, param1: number, param2: boolean);
				}
				export module LinearLayoutInfo {
					export class InternalLinearLayoutManager extends androidx.recyclerview.widget.LinearLayoutManager {
						public static class: java.lang.Class<com.facebook.litho.widget.LinearLayoutInfo.InternalLinearLayoutManager>;
						public generateDefaultLayoutParams(): androidx.recyclerview.widget.RecyclerView.LayoutParams;
						public computeScrollVectorForPosition(param0: number): globalAndroid.graphics.PointF;
						public supportsPredictiveItemAnimations(): boolean;
						public prepareForDrop(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): void;
					}
					export class ViewportFiller extends java.lang.Object implements com.facebook.litho.widget.LayoutInfo.ViewportFiller {
						public static class: java.lang.Class<com.facebook.litho.widget.LinearLayoutInfo.ViewportFiller>;
						public wantsMore(): boolean;
						public getFill(): number;
						public add(param0: com.facebook.litho.widget.RenderInfo, param1: number, param2: number): void;
						public constructor(param0: number, param1: number, param2: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class LithoRecylerView extends androidx.recyclerview.widget.RecyclerView implements com.facebook.litho.widget.HasPostDispatchDrawListener {
					public static class: java.lang.Class<com.facebook.litho.widget.LithoRecylerView>;
					public focusSearch(param0: number): globalAndroid.view.View;
					public focusableViewAvailable(param0: globalAndroid.view.View): void;
					public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>): boolean;
					public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
					public computeHorizontalScrollRange(): number;
					public isLayoutRequested(): boolean;
					public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public dispatchDraw(param0: globalAndroid.graphics.Canvas): void;
					public isTextDirectionResolved(): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public isLayoutDirectionResolved(): boolean;
					public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>, param4: number): boolean;
					public computeVerticalScrollExtent(): number;
					public stopNestedScroll(): void;
					public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
					public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public addView(param0: globalAndroid.view.View): void;
					public computeHorizontalScrollExtent(): number;
					public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
					public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
					public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
					public recomputeViewAttributes(param0: globalAndroid.view.View): void;
					public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
					public clearChildFocus(param0: globalAndroid.view.View): void;
					public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
					public getLayoutDirection(): number;
					public setPostDispatchDrawListener(param0: com.facebook.litho.widget.PostDispatchDrawListener): void;
					/** @deprecated */
					public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
					public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
					public computeVerticalScrollOffset(): number;
					public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
					public bringChildToFront(param0: globalAndroid.view.View): void;
					public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>): boolean;
					public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public requestTransparentRegion(param0: globalAndroid.view.View): void;
					/** @deprecated */
					public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
					public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
					public childDrawableStateChanged(param0: globalAndroid.view.View): void;
					public setTouchInterceptor(param0: com.facebook.litho.widget.LithoRecylerView.TouchInterceptor): void;
					public getTextDirection(): number;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public requestFitSystemWindows(): void;
					public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
					public getParent(): globalAndroid.view.ViewParent;
					public isTextAlignmentResolved(): boolean;
					public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
					public canResolveTextAlignment(): boolean;
					public stopNestedScroll(param0: number): void;
					public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
					/** @deprecated */
					public requestFitSystemWindows(): void;
					public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
					public canResolveTextDirection(): boolean;
					public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
					public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
					public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
					public requestDisallowInterceptTouchEvent(param0: boolean): void;
					public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
					public hasNestedScrollingParent(param0: number): boolean;
					public addView(param0: globalAndroid.view.View, param1: number): void;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
					public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
					public sendAccessibilityEvent(param0: number): void;
					public requestLayout(): void;
					public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
					public getParentForAccessibility(): globalAndroid.view.ViewParent;
					public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public canResolveLayoutDirection(): boolean;
					public getTextAlignment(): number;
					public computeVerticalScrollRange(): number;
					public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
					public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					public removeView(param0: globalAndroid.view.View): void;
					public constructor(param0: globalAndroid.content.Context);
					public onStopNestedScroll(param0: globalAndroid.view.View): void;
					public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
					public startNestedScroll(param0: number, param1: number): boolean;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public computeHorizontalScrollOffset(): number;
					public startNestedScroll(param0: number): boolean;
					public hasNestedScrollingParent(): boolean;
					public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
					public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>, param5: number): boolean;
				}
				export module LithoRecylerView {
					export class TouchInterceptor extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.LithoRecylerView.TouchInterceptor>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.LithoRecylerView$TouchInterceptor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onInterceptTouchEvent(param0: androidx.recyclerview.widget.RecyclerView, param1: globalAndroid.view.MotionEvent): com.facebook.litho.widget.LithoRecylerView.TouchInterceptor.Result;
						});
						public constructor();
						public onInterceptTouchEvent(param0: androidx.recyclerview.widget.RecyclerView, param1: globalAndroid.view.MotionEvent): com.facebook.litho.widget.LithoRecylerView.TouchInterceptor.Result;
					}
					export module TouchInterceptor {
						export class Result {
							public static class: java.lang.Class<com.facebook.litho.widget.LithoRecylerView.TouchInterceptor.Result>;
							public static INTERCEPT_TOUCH_EVENT: com.facebook.litho.widget.LithoRecylerView.TouchInterceptor.Result;
							public static IGNORE_TOUCH_EVENT: com.facebook.litho.widget.LithoRecylerView.TouchInterceptor.Result;
							public static CALL_SUPER: com.facebook.litho.widget.LithoRecylerView.TouchInterceptor.Result;
							public static valueOf(param0: string): com.facebook.litho.widget.LithoRecylerView.TouchInterceptor.Result;
							public static values(): native.Array<com.facebook.litho.widget.LithoRecylerView.TouchInterceptor.Result>;
							public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class LithoViewFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.LithoViewFactory>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.LithoViewFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						createLithoView(param0: com.facebook.litho.ComponentContext): com.facebook.litho.LithoView;
					});
					public constructor();
					public createLithoView(param0: com.facebook.litho.ComponentContext): com.facebook.litho.LithoView;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export abstract class LongClickableSpan extends globalAndroid.text.style.ClickableSpan {
					public static class: java.lang.Class<com.facebook.litho.widget.LongClickableSpan>;
					public constructor();
					public onLongClick(param0: globalAndroid.view.View): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class MountableCharSequence extends java.lang.Object implements java.lang.CharSequence {
					public static class: java.lang.Class<com.facebook.litho.widget.MountableCharSequence>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.MountableCharSequence interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onMount(param0: globalAndroid.graphics.drawable.Drawable): void;
						onUnmount(param0: globalAndroid.graphics.drawable.Drawable): void;
						length(): number;
						charAt(param0: number): string;
						subSequence(param0: number, param1: number): string;
						toString(): string;
						chars(): java.util.stream.IntStream;
						codePoints(): java.util.stream.IntStream;
					});
					public constructor();
					public onUnmount(param0: globalAndroid.graphics.drawable.Drawable): void;
					public toString(): string;
					public chars(): java.util.stream.IntStream;
					public charAt(param0: number): string;
					public subSequence(param0: number, param1: number): string;
					public onMount(param0: globalAndroid.graphics.drawable.Drawable): void;
					public codePoints(): java.util.stream.IntStream;
					public length(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class PTRRefreshEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.PTRRefreshEvent>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class PostDispatchDrawListener extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.PostDispatchDrawListener>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.PostDispatchDrawListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						postDispatchDraw(): void;
					});
					public constructor();
					public postDispatchDraw(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class Progress extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.Progress>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public copyInterStageImpl(param0: com.facebook.litho.Component): void;
					public makeShallowCopy(): com.facebook.litho.widget.Progress;
					public isPureRender(): boolean;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public isEquivalentTo(param0: any): boolean;
					public onLoadStyle(param0: com.facebook.litho.ComponentContext): void;
					public onPrepare(param0: com.facebook.litho.ComponentContext): void;
					public canPreallocate(): boolean;
					public onCreateMountContent(param0: globalAndroid.content.Context): any;
					public makeShallowCopy(): com.facebook.litho.Component;
					public poolSize(): number;
					public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
					public canMeasure(): boolean;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.Progress.Builder;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.Progress.Builder;
					public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public onMeasure(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout, param2: number, param3: number, param4: com.facebook.litho.Size): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module Progress {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.Progress.Builder>;
						public constructor();
						public getThis(): com.facebook.litho.widget.Progress.Builder;
						public indeterminateDrawableAttr(param0: number, param1: number): com.facebook.litho.widget.Progress.Builder;
						public colorAttr(param0: number): com.facebook.litho.widget.Progress.Builder;
						public colorRes(param0: number): com.facebook.litho.widget.Progress.Builder;
						public indeterminateDrawableAttr(param0: number): com.facebook.litho.widget.Progress.Builder;
						public colorAttr(param0: number, param1: number): com.facebook.litho.widget.Progress.Builder;
						public build(): com.facebook.litho.widget.Progress;
						public getThis(): any;
						public indeterminateDrawableRes(param0: number): com.facebook.litho.widget.Progress.Builder;
						public indeterminateDrawable(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.widget.Progress.Builder;
						public build(): com.facebook.litho.Component;
						public color(param0: number): com.facebook.litho.widget.Progress.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ProgressSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.ProgressSpec>;
				}
				export module ProgressSpec {
					export class ProgressView extends globalAndroid.widget.ProgressBar {
						public static class: java.lang.Class<com.facebook.litho.widget.ProgressSpec.ProgressView>;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEvent(param0: number): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public setIndeterminateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ReMeasureEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.ReMeasureEvent>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class Recycler extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.Recycler>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public copyInterStageImpl(param0: com.facebook.litho.Component): void;
					public isPureRender(): boolean;
					public static onUpdateMeasureSync(param0: com.facebook.litho.ComponentContext, param1: number): void;
					public onBoundsDefined(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout): void;
					public createInitialState(param0: com.facebook.litho.ComponentContext): void;
					public getStateContainer(): com.facebook.litho.StateContainer;
					public shouldUpdate(param0: com.facebook.litho.Component, param1: com.facebook.litho.Component): boolean;
					public hasState(): boolean;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.Recycler.Builder;
					public hasChildLithoViews(): boolean;
					public onPrepare(param0: com.facebook.litho.ComponentContext): void;
					public canPreallocate(): boolean;
					public makeShallowCopy(): com.facebook.litho.Component;
					public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
					public canMeasure(): boolean;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public transferState(param0: com.facebook.litho.StateContainer, param1: com.facebook.litho.StateContainer): void;
					public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public makeShallowCopy(): com.facebook.litho.widget.Recycler;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.Recycler.Builder;
					public isEquivalentTo(param0: any): boolean;
					public onCreateMountContent(param0: globalAndroid.content.Context): any;
					public static onUpdateMeasure(param0: com.facebook.litho.ComponentContext, param1: number): void;
					public poolSize(): number;
					public static getPTRRefreshEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public static onRemeasure(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<com.facebook.litho.widget.ReMeasureEvent>;
					public static onUpdateMeasureAsync(param0: com.facebook.litho.ComponentContext, param1: number): void;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public onBind(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public callsShouldUpdateOnMount(): boolean;
					public onUnbind(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public shouldAlwaysRemeasure(): boolean;
					public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public onMeasure(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout, param2: number, param3: number, param4: com.facebook.litho.Size): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module Recycler {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.Recycler.Builder>;
						public clipChildren(param0: boolean): any;
						public refreshProgressBarBackgroundColor(param0: java.lang.Integer): com.facebook.litho.widget.Recycler.Builder;
						public hasFixedSize(param0: boolean): com.facebook.litho.widget.Recycler.Builder;
						public fadingEdgeLengthAttr(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public build(): com.facebook.litho.widget.Recycler;
						public horizontalFadingEdgeEnabled(param0: boolean): com.facebook.litho.widget.Recycler.Builder;
						public contentDescription(param0: string): com.facebook.litho.widget.Recycler.Builder;
						public refreshProgressBarBackgroundColorAttr(param0: number, param1: number): com.facebook.litho.widget.Recycler.Builder;
						public refreshProgressBarColorRes(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public refreshProgressBarBackgroundColorRes(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public topPadding(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public onScrollListener(param0: androidx.recyclerview.widget.RecyclerView.OnScrollListener): com.facebook.litho.widget.Recycler.Builder;
						public clipToPadding(param0: boolean): com.facebook.litho.widget.Recycler.Builder;
						public recyclerEventsController(param0: com.facebook.litho.widget.RecyclerEventsController): com.facebook.litho.widget.Recycler.Builder;
						public fadingEdgeLengthDip(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public fadingEdgeLengthRes(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public refreshProgressBarColorAttr(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public refreshProgressBarColor(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public constructor();
						public refreshProgressBarColorAttr(param0: number, param1: number): com.facebook.litho.widget.Recycler.Builder;
						public overScrollMode(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public binder(param0: com.facebook.litho.widget.Binder<androidx.recyclerview.widget.RecyclerView>): com.facebook.litho.widget.Recycler.Builder;
						public leftPadding(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public refreshHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.Recycler.Builder;
						public itemDecoration(param0: androidx.recyclerview.widget.RecyclerView.ItemDecoration): com.facebook.litho.widget.Recycler.Builder;
						public verticalFadingEdgeEnabled(param0: boolean): com.facebook.litho.widget.Recycler.Builder;
						public refreshProgressBarBackgroundColorAttr(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public itemAnimator(param0: androidx.recyclerview.widget.RecyclerView.ItemAnimator): com.facebook.litho.widget.Recycler.Builder;
						public nestedScrollingEnabled(param0: boolean): com.facebook.litho.widget.Recycler.Builder;
						public rightPadding(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public pullToRefresh(param0: boolean): com.facebook.litho.widget.Recycler.Builder;
						public recyclerViewId(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public contentDescription(param0: string): any;
						public bottomPadding(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public clipChildren(param0: boolean): com.facebook.litho.widget.Recycler.Builder;
						public pTRRefreshEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.Recycler.Builder;
						public fadingEdgeLengthAttr(param0: number, param1: number): com.facebook.litho.widget.Recycler.Builder;
						public getThis(): any;
						public getThis(): com.facebook.litho.widget.Recycler.Builder;
						public touchInterceptor(param0: com.facebook.litho.widget.LithoRecylerView.TouchInterceptor): com.facebook.litho.widget.Recycler.Builder;
						public contentDescription(param0: number): any;
						public contentDescription(param0: number, param1: native.Array<any>): any;
						public build(): com.facebook.litho.Component;
						public fadingEdgeLengthPx(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public onScrollListeners(param0: java.util.List<androidx.recyclerview.widget.RecyclerView.OnScrollListener>): com.facebook.litho.widget.Recycler.Builder;
						public scrollBarStyle(param0: number): com.facebook.litho.widget.Recycler.Builder;
						public snapHelper(param0: androidx.recyclerview.widget.SnapHelper): com.facebook.litho.widget.Recycler.Builder;
					}
					export class RecyclerStateContainer extends com.facebook.litho.StateContainer {
						public static class: java.lang.Class<com.facebook.litho.widget.Recycler.RecyclerStateContainer>;
						public applyStateUpdate(param0: com.facebook.litho.StateContainer.StateUpdate): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class RecyclerBinder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder>;
					public clearAsync(): void;
					public measure(param0: com.facebook.litho.Size, param1: number, param2: number, param3: com.facebook.litho.EventHandler<com.facebook.litho.widget.ReMeasureEvent>): void;
					public getComponentForStickyHeaderAt(param0: number): com.facebook.litho.ComponentTree;
					public removeRangeAt(param0: number, param1: number): void;
					public insertItemAt(param0: number, param1: com.facebook.litho.Component): void;
					public updateItemAtAsync(param0: number, param1: com.facebook.litho.widget.RenderInfo): void;
					public scrollToPositionWithOffset(param0: number, param1: number): void;
					public insertRangeAt(param0: number, param1: java.util.List<com.facebook.litho.widget.RenderInfo>): void;
					public scrollToPosition(param0: number): void;
					public canMeasure(): boolean;
					public unbind(param0: androidx.recyclerview.widget.RecyclerView): void;
					public setAsyncInitRange(param0: boolean): void;
					public unbind(param0: any): void;
					public unmount(param0: androidx.recyclerview.widget.RecyclerView): void;
					public moveItemAsync(param0: number, param1: number): void;
					public updateRangeAt(param0: number, param1: java.util.List<com.facebook.litho.widget.RenderInfo>): void;
					public findFirstFullyVisibleItemPosition(): number;
					public notifyChangeSetCompleteAsync(param0: boolean, param1: com.facebook.litho.widget.ChangeSetCompleteCallback): void;
					public setCanMeasure(param0: boolean): void;
					public notifyItemRenderCompleteAt(param0: number, param1: number): void;
					public isSticky(param0: number): boolean;
					public findFirstVisibleItemPosition(): number;
					public insertRangeAtAsync(param0: number, param1: java.util.List<com.facebook.litho.widget.RenderInfo>): void;
					public removeItemAt(param0: number): void;
					public unmount(param0: any): void;
					public setSize(param0: number, param1: number): void;
					public replaceAll(param0: java.util.List<com.facebook.litho.widget.RenderInfo>): void;
					public setViewportChangedListener(param0: com.facebook.litho.widget.ViewportInfo.ViewportChanged): void;
					public updateRangeAtAsync(param0: number, param1: java.util.List<com.facebook.litho.widget.RenderInfo>): void;
					public insertItemAtAsync(param0: number, param1: com.facebook.litho.widget.RenderInfo): void;
					public updateItemAt(param0: number, param1: com.facebook.litho.widget.RenderInfo): void;
					public findLastVisibleItemPosition(): number;
					public notifyChangeSetComplete(param0: boolean, param1: com.facebook.litho.widget.ChangeSetCompleteCallback): void;
					public detach(): void;
					public bind(param0: any): void;
					public scrollSmoothToPosition(param0: number, param1: number, param2: com.facebook.litho.widget.SmoothScrollAlignmentType): void;
					public isValidPosition(param0: number): boolean;
					public removeItemAtAsync(param0: number): void;
					public getComponentAt(param0: number): com.facebook.litho.ComponentTree;
					public updateItemAt(param0: number, param1: com.facebook.litho.Component): void;
					public findLastFullyVisibleItemPosition(): number;
					public getRenderInfoAt(param0: number): com.facebook.litho.widget.RenderInfo;
					public appendItem(param0: com.facebook.litho.widget.RenderInfo): void;
					public bind(param0: androidx.recyclerview.widget.RecyclerView): void;
					public isWrapContent(): boolean;
					public appendItem(param0: com.facebook.litho.Component): void;
					public mount(param0: any): void;
					public getItemCount(): number;
					public moveItem(param0: number, param1: number): void;
					public mount(param0: androidx.recyclerview.widget.RecyclerView): void;
					public removeRangeAtAsync(param0: number, param1: number): void;
					public insertItemAt(param0: number, param1: com.facebook.litho.widget.RenderInfo): void;
				}
				export module RecyclerBinder {
					export class AsyncBatch extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.AsyncBatch>;
						public constructor(param0: number);
					}
					export class AsyncInsertOperation extends com.facebook.litho.widget.RecyclerBinder.AsyncOperation {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.AsyncInsertOperation>;
						public constructor(param0: number);
						public constructor(param0: number, param1: com.facebook.litho.widget.ComponentTreeHolder);
					}
					export class AsyncMoveOperation extends com.facebook.litho.widget.RecyclerBinder.AsyncOperation {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.AsyncMoveOperation>;
						public constructor(param0: number);
						public constructor(param0: number, param1: number);
					}
					export abstract class AsyncOperation extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.AsyncOperation>;
						public constructor(param0: number);
					}
					export class AsyncRemoveOperation extends com.facebook.litho.widget.RecyclerBinder.AsyncOperation {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.AsyncRemoveOperation>;
						public constructor(param0: number);
					}
					export class AsyncRemoveRangeOperation extends com.facebook.litho.widget.RecyclerBinder.AsyncOperation {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.AsyncRemoveRangeOperation>;
						public constructor(param0: number);
						public constructor(param0: number, param1: number);
					}
					export class AsyncUpdateOperation extends com.facebook.litho.widget.RecyclerBinder.AsyncOperation {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.AsyncUpdateOperation>;
						public constructor(param0: number);
						public constructor(param0: number, param1: com.facebook.litho.widget.RenderInfo);
					}
					export class AsyncUpdateRangeOperation extends com.facebook.litho.widget.RecyclerBinder.AsyncOperation {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.AsyncUpdateRangeOperation>;
						public constructor(param0: number);
						public constructor(param0: number, param1: java.util.List<com.facebook.litho.widget.RenderInfo>);
					}
					export class BaseViewHolder extends androidx.recyclerview.widget.RecyclerView.ViewHolder {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.BaseViewHolder>;
						public constructor(param0: globalAndroid.view.View, param1: boolean);
						public constructor(param0: globalAndroid.view.View);
					}
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.Builder>;
						public static DEFAULT_RANGE_RATIO: number;
						public wrapContent(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public stickyHeaderControllerFactory(param0: com.facebook.litho.widget.StickyHeaderControllerFactory): com.facebook.litho.widget.RecyclerBinder.Builder;
						public lithoViewFactory(param0: com.facebook.litho.widget.LithoViewFactory): com.facebook.litho.widget.RecyclerBinder.Builder;
						public enableDetach(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public canMeasure(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public componentTreeHolderFactory(param0: com.facebook.litho.widget.RecyclerBinder.ComponentTreeHolderFactory): com.facebook.litho.widget.RecyclerBinder.Builder;
						public recyclerRangeTraverser(param0: com.facebook.litho.widget.RecyclerRangeTraverser): com.facebook.litho.widget.RecyclerBinder.Builder;
						public incrementalMount(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public canInterruptAndMoveLayoutsBetweenThreads(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public invalidStateLogParamsList(param0: java.util.List<com.facebook.litho.ComponentLogParams>): com.facebook.litho.widget.RecyclerBinder.Builder;
						public threadPoolConfig(param0: com.facebook.litho.config.LayoutThreadPoolConfiguration): com.facebook.litho.widget.RecyclerBinder.Builder;
						public hasDynamicItemHeight(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public hscrollAsyncMode(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public constructor();
						public splitLayoutForMeasureAndRangeEstimation(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public build(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.RecyclerBinder;
						public singleThreadPool(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public rangeRatio(param0: number): com.facebook.litho.widget.RecyclerBinder.Builder;
						public isCircular(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public enableCustomViewType(param0: number): com.facebook.litho.widget.RecyclerBinder.Builder;
						public asyncInitRange(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public useCancelableLayoutFutures(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public layoutHandlerFactory(param0: com.facebook.litho.widget.LayoutHandlerFactory): com.facebook.litho.widget.RecyclerBinder.Builder;
						public layoutInfo(param0: com.facebook.litho.widget.LayoutInfo): com.facebook.litho.widget.RecyclerBinder.Builder;
						public enableStableIds(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
						public bgScheduleAllInitRange(param0: boolean): com.facebook.litho.widget.RecyclerBinder.Builder;
					}
					export class ComponentAsyncInitRangeIterator extends java.util.Iterator<com.facebook.litho.widget.ComponentTreeHolder> {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.ComponentAsyncInitRangeIterator>;
						public hasNext(): boolean;
						public next(): com.facebook.litho.widget.ComponentTreeHolder;
						public remove(): void;
					}
					export class ComponentTreeHolderFactory extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.ComponentTreeHolderFactory>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.RecyclerBinder$ComponentTreeHolderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(param0: com.facebook.litho.widget.RenderInfo, param1: com.facebook.litho.LithoHandler, param2: com.facebook.litho.widget.ComponentTreeHolder.ComponentTreeMeasureListenerFactory, param3: boolean, param4: boolean, param5: boolean): com.facebook.litho.widget.ComponentTreeHolder;
						});
						public constructor();
						public create(param0: com.facebook.litho.widget.RenderInfo, param1: com.facebook.litho.LithoHandler, param2: com.facebook.litho.widget.ComponentTreeHolder.ComponentTreeMeasureListenerFactory, param3: boolean, param4: boolean, param5: boolean): com.facebook.litho.widget.ComponentTreeHolder;
					}
					export class ComponentTreeHolderRangeInfo extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.ComponentTreeHolderRangeInfo>;
					}
					export class EstimateRangeSizeListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.EstimateRangeSizeListener>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.RecyclerBinder$EstimateRangeSizeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onFinish(): void;
						});
						public constructor();
						public onFinish(): void;
					}
					export class InternalAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.facebook.litho.widget.RecyclerBinder.BaseViewHolder> implements com.facebook.litho.widget.RecyclerBinderAdapter  {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.InternalAdapter>;
						public getRenderInfoAt(param0: number): com.facebook.litho.widget.RenderInfo;
						public getItemViewType(param0: number): number;
						public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): any;
						public onViewRecycled(param0: any): void;
						public findFirstVisibleItemPosition(): number;
						public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.facebook.litho.widget.RecyclerBinder.BaseViewHolder;
						public findLastVisibleItemPosition(): number;
						public onViewRecycled(param0: com.facebook.litho.widget.RecyclerBinder.BaseViewHolder): void;
						public onBindViewHolder(param0: any, param1: number, param2: java.util.List<any>): void;
						public getItemCount(): number;
						public getItemId(param0: number): number;
						public onBindViewHolder(param0: com.facebook.litho.widget.RecyclerBinder.BaseViewHolder, param1: number): void;
						public onBindViewHolder(param0: any, param1: number): void;
					}
					export class RangeCalculationResult extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.RangeCalculationResult>;
					}
					export class RecyclerViewLayoutManagerOverrideParams extends androidx.recyclerview.widget.RecyclerView.LayoutParams implements com.facebook.litho.LithoView.LayoutManagerOverrideParams {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.RecyclerViewLayoutManagerOverrideParams>;
						public getWidthMeasureSpec(): number;
						public isFullSpan(): boolean;
						public getHeightMeasureSpec(): number;
						public hasValidAdapterPosition(): boolean;
					}
					export class RenderCompleteRunnable extends java.lang.Object implements java.lang.Runnable {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinder.RenderCompleteRunnable>;
						public run(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class RecyclerBinderAdapter extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinderAdapter>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.RecyclerBinderAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						findFirstVisibleItemPosition(): number;
						findLastVisibleItemPosition(): number;
						getRenderInfoAt(param0: number): com.facebook.litho.widget.RenderInfo;
						getItemCount(): number;
					});
					public constructor();
					public findFirstVisibleItemPosition(): number;
					public findLastVisibleItemPosition(): number;
					public getItemCount(): number;
					public getRenderInfoAt(param0: number): com.facebook.litho.widget.RenderInfo;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class RecyclerBinderOperationExecutor extends java.lang.Object implements com.facebook.litho.widget.RecyclerBinderUpdateCallback.OperationExecutor {
					public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinderOperationExecutor>;
					public constructor(param0: com.facebook.litho.widget.RecyclerBinder);
					public executeOperations(param0: com.facebook.litho.ComponentContext, param1: java.util.List<com.facebook.litho.widget.RecyclerBinderUpdateCallback.Operation>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class RecyclerBinderUpdateCallback<T>  extends androidx.recyclerview.widget.ListUpdateCallback {
					public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinderUpdateCallback<any>>;
					public constructor(param0: java.util.List<any>, param1: java.util.List<any>, param2: com.facebook.litho.widget.RecyclerBinderUpdateCallback.ComponentRenderer<any>, param3: com.facebook.litho.widget.RecyclerBinder);
					public onRemoved(param0: number, param1: number): void;
					public applyChangeset(param0: com.facebook.litho.ComponentContext): void;
					public onInserted(param0: number, param1: number): void;
					public constructor(param0: java.util.List<any>, param1: java.util.List<any>, param2: com.facebook.litho.widget.RecyclerBinderUpdateCallback.ComponentRenderer<any>, param3: com.facebook.litho.widget.RecyclerBinderUpdateCallback.OperationExecutor);
					public onChanged(param0: number, param1: number, param2: any): void;
					public onMoved(param0: number, param1: number): void;
				}
				export module RecyclerBinderUpdateCallback {
					export class ComponentContainer extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinderUpdateCallback.ComponentContainer>;
						public constructor(param0: com.facebook.litho.widget.RenderInfo, param1: boolean);
						public getRenderInfo(): com.facebook.litho.widget.RenderInfo;
					}
					export class ComponentRenderer<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinderUpdateCallback.ComponentRenderer<any>>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.RecyclerBinderUpdateCallback$ComponentRenderer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							render(param0: T, param1: number): com.facebook.litho.widget.RenderInfo;
						});
						public constructor();
						public render(param0: T, param1: number): com.facebook.litho.widget.RenderInfo;
					}
					export class Operation extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinderUpdateCallback.Operation>;
						public static INSERT: number;
						public static UPDATE: number;
						public static DELETE: number;
						public static MOVE: number;
						public getToIndex(): number;
						public getComponentContainers(): java.util.List<com.facebook.litho.widget.RecyclerBinderUpdateCallback.ComponentContainer>;
						public getDataContainers(): java.util.List<com.facebook.litho.Diff<any>>;
						public getType(): number;
						public getIndex(): number;
					}
					export class OperationExecutor extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerBinderUpdateCallback.OperationExecutor>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.RecyclerBinderUpdateCallback$OperationExecutor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							executeOperations(param0: com.facebook.litho.ComponentContext, param1: java.util.List<com.facebook.litho.widget.RecyclerBinderUpdateCallback.Operation>): void;
						});
						public constructor();
						public executeOperations(param0: com.facebook.litho.ComponentContext, param1: java.util.List<com.facebook.litho.widget.RecyclerBinderUpdateCallback.Operation>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class RecyclerEventsController extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.RecyclerEventsController>;
					public showRefreshing(): void;
					public constructor();
					public requestScrollToPosition(param0: number, param1: boolean): void;
					public getRecyclerView(): androidx.recyclerview.widget.RecyclerView;
					public clearRefreshing(): void;
					public setOnRecyclerUpdateListener(param0: com.facebook.litho.widget.RecyclerEventsController.OnRecyclerUpdateListener): void;
					public requestScrollToTop(param0: boolean): void;
				}
				export module RecyclerEventsController {
					export class OnRecyclerUpdateListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerEventsController.OnRecyclerUpdateListener>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.RecyclerEventsController$OnRecyclerUpdateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onUpdate(param0: androidx.recyclerview.widget.RecyclerView): void;
						});
						public constructor();
						public onUpdate(param0: androidx.recyclerview.widget.RecyclerView): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class RecyclerRangeTraverser extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.RecyclerRangeTraverser>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.RecyclerRangeTraverser interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						traverse(param0: number, param1: number, param2: number, param3: number, param4: com.facebook.litho.widget.RecyclerRangeTraverser.Processor): void;
						<clinit>(): void;
					});
					public constructor();
					public static FORWARD_TRAVERSER: com.facebook.litho.widget.RecyclerRangeTraverser;
					public static BIDIRECTIONAL_TRAVERSER: com.facebook.litho.widget.RecyclerRangeTraverser;
					public static BACKWARD_TRAVERSER: com.facebook.litho.widget.RecyclerRangeTraverser;
					public traverse(param0: number, param1: number, param2: number, param3: number, param4: com.facebook.litho.widget.RecyclerRangeTraverser.Processor): void;
				}
				export module RecyclerRangeTraverser {
					export class Processor extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerRangeTraverser.Processor>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.RecyclerRangeTraverser$Processor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							process(param0: number): boolean;
						});
						public constructor();
						public process(param0: number): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class RecyclerSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.RecyclerSpec>;
					public static onRemeasure(param0: com.facebook.litho.ComponentContext, param1: number): void;
					public static shouldAlwaysRemeasure(param0: com.facebook.litho.widget.Binder<androidx.recyclerview.widget.RecyclerView>): boolean;
					public static onUpdateMeasure(param0: number, param1: com.facebook.litho.StateValue<java.lang.Integer>): void;
					public static onBind(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.widget.SectionsRecyclerView, param2: com.facebook.litho.widget.Binder<androidx.recyclerview.widget.RecyclerView>, param3: androidx.recyclerview.widget.RecyclerView.ItemAnimator, param4: com.facebook.litho.widget.RecyclerEventsController, param5: java.util.List<androidx.recyclerview.widget.RecyclerView.OnScrollListener>, param6: androidx.recyclerview.widget.SnapHelper, param7: boolean, param8: com.facebook.litho.widget.LithoRecylerView.TouchInterceptor, param9: androidx.swiperefreshlayout.widget.SwipeRefreshLayout.OnRefreshListener, param10: com.facebook.litho.Output<androidx.recyclerview.widget.RecyclerView.ItemAnimator>): void;
					public static shouldUpdate(param0: com.facebook.litho.Diff<com.facebook.litho.widget.Binder<androidx.recyclerview.widget.RecyclerView>>, param1: com.facebook.litho.Diff<java.lang.Boolean>, param2: com.facebook.litho.Diff<java.lang.Boolean>, param3: com.facebook.litho.Diff<java.lang.Integer>, param4: com.facebook.litho.Diff<java.lang.Integer>, param5: com.facebook.litho.Diff<java.lang.Integer>, param6: com.facebook.litho.Diff<java.lang.Integer>, param7: com.facebook.litho.Diff<java.lang.Integer>, param8: com.facebook.litho.Diff<java.lang.Integer>, param9: com.facebook.litho.Diff<java.lang.Boolean>, param10: com.facebook.litho.Diff<java.lang.Integer>, param11: com.facebook.litho.Diff<androidx.recyclerview.widget.RecyclerView.ItemDecoration>, param12: com.facebook.litho.Diff<java.lang.Boolean>, param13: com.facebook.litho.Diff<java.lang.Boolean>, param14: com.facebook.litho.Diff<java.lang.Integer>, param15: com.facebook.litho.Diff<java.lang.Integer>): boolean;
					public static onCreateInitialState(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.StateValue<java.lang.Integer>): void;
				}
				export module RecyclerSpec {
					export class NoUpdateItemAnimator extends androidx.recyclerview.widget.DefaultItemAnimator {
						public static class: java.lang.Class<com.facebook.litho.widget.RecyclerSpec.NoUpdateItemAnimator>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class RenderInfo extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.RenderInfo>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.RenderInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isSticky(): boolean;
						getSpanSize(): number;
						isFullSpan(): boolean;
						getCustomAttribute(param0: string): any;
						rendersComponent(): boolean;
						getComponent(): com.facebook.litho.Component;
						getRenderCompleteEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.RenderCompleteEvent>;
						rendersView(): boolean;
						getViewBinder(): com.facebook.litho.viewcompat.ViewBinder<any>;
						getViewCreator(): com.facebook.litho.viewcompat.ViewCreator<any>;
						hasCustomViewType(): boolean;
						getViewType(): number;
						addDebugInfo(param0: string, param1: any): void;
						getDebugInfo(param0: string): any;
						getName(): string;
						setViewType(param0: number): void;
					});
					public constructor();
					public getSpanSize(): number;
					public getCustomAttribute(param0: string): any;
					public getViewCreator(): com.facebook.litho.viewcompat.ViewCreator<any>;
					public hasCustomViewType(): boolean;
					public isSticky(): boolean;
					public getRenderCompleteEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.RenderCompleteEvent>;
					public isFullSpan(): boolean;
					public rendersComponent(): boolean;
					public getComponent(): com.facebook.litho.Component;
					public getViewBinder(): com.facebook.litho.viewcompat.ViewBinder<any>;
					public getName(): string;
					public addDebugInfo(param0: string, param1: any): void;
					public setViewType(param0: number): void;
					public getViewType(): number;
					public getDebugInfo(param0: string): any;
					public rendersView(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class RenderInfoDebugInfoRegistry extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.RenderInfoDebugInfoRegistry>;
					public static SONAR_SECTIONS_DEBUG_INFO_TAG: string;
					public static setRenderInfoToViewMapping(param0: globalAndroid.view.View, param1: any): void;
					public constructor();
					public static getRenderInfoSectionDebugInfo(param0: globalAndroid.view.View): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class RenderInfoViewCreatorController extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.RenderInfoViewCreatorController>;
					public static DEFAULT_COMPONENT_VIEW_TYPE: number;
					public getViewCreator(param0: number): com.facebook.litho.viewcompat.ViewCreator<any>;
					public constructor(param0: boolean, param1: number);
					public maybeTrackViewCreator(param0: com.facebook.litho.widget.RenderInfo): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class RequestFocusEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.RequestFocusEvent>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SectionsDebug extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.SectionsDebug>;
					public static ENABLED: boolean;
					public static TAG: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SectionsRecyclerView extends androidx.swiperefreshlayout.widget.SwipeRefreshLayout implements com.facebook.litho.HasLithoViewChildren {
					public static class: java.lang.Class<com.facebook.litho.widget.SectionsRecyclerView>;
					public focusSearch(param0: number): globalAndroid.view.View;
					public focusableViewAvailable(param0: globalAndroid.view.View): void;
					public getRecyclerView(): androidx.recyclerview.widget.RecyclerView;
					public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: androidx.recyclerview.widget.RecyclerView);
					public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
					public isLayoutRequested(): boolean;
					public isTextDirectionResolved(): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public isLayoutDirectionResolved(): boolean;
					public stopNestedScroll(): void;
					public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
					public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public addView(param0: globalAndroid.view.View): void;
					public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
					public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
					public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
					public recomputeViewAttributes(param0: globalAndroid.view.View): void;
					public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
					public clearChildFocus(param0: globalAndroid.view.View): void;
					public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
					public getLayoutDirection(): number;
					/** @deprecated */
					public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
					public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
					public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
					public getStickyHeader(): com.facebook.litho.LithoView;
					public isStickyHeaderHidden(): boolean;
					public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>): boolean;
					public bringChildToFront(param0: globalAndroid.view.View): void;
					public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
					public setStickyHeaderVerticalOffset(param0: number): void;
					public requestTransparentRegion(param0: globalAndroid.view.View): void;
					/** @deprecated */
					public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
					public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
					public childDrawableStateChanged(param0: globalAndroid.view.View): void;
					public getTextDirection(): number;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public requestFitSystemWindows(): void;
					public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
					public getParent(): globalAndroid.view.ViewParent;
					public isTextAlignmentResolved(): boolean;
					public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
					public canResolveTextAlignment(): boolean;
					public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
					/** @deprecated */
					public requestFitSystemWindows(): void;
					public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
					public canResolveTextDirection(): boolean;
					public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
					public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
					public showStickyHeader(): void;
					public hideStickyHeader(): void;
					public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
					public requestDisallowInterceptTouchEvent(param0: boolean): void;
					public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
					public addView(param0: globalAndroid.view.View, param1: number): void;
					public setNestedScrollingEnabled(param0: boolean): void;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
					public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
					public sendAccessibilityEvent(param0: number): void;
					public requestLayout(): void;
					public obtainLithoViewChildren(param0: java.util.List<com.facebook.litho.LithoView>): void;
					public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
					public getParentForAccessibility(): globalAndroid.view.ViewParent;
					public onDetachedFromWindow(): void;
					public onMeasure(param0: number, param1: number): void;
					public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public canResolveLayoutDirection(): boolean;
					public getTextAlignment(): number;
					public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
					public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					public removeView(param0: globalAndroid.view.View): void;
					public setStickyComponent(param0: com.facebook.litho.ComponentTree): void;
					public constructor(param0: globalAndroid.content.Context);
					public onStopNestedScroll(param0: globalAndroid.view.View): void;
					public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
					public isNestedScrollingEnabled(): boolean;
					public getNestedScrollAxes(): number;
					public dispatchNestedPreFling(param0: number, param1: number): boolean;
					public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
					public setOnTouchListener(param0: globalAndroid.view.View.OnTouchListener): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public startNestedScroll(param0: number): boolean;
					public hasNestedScrollingParent(): boolean;
					public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SelectionChangedEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.SelectionChangedEvent>;
					public start: number;
					public end: number;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SelectorComponent extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.SelectorComponent>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.SelectorComponent.Builder;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.SelectorComponent.Builder;
					public isEquivalentTo(param0: any): boolean;
					public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module SelectorComponent {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.SelectorComponent.Builder>;
						public constructor();
						public getThis(): any;
						public component(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.widget.SelectorComponent.Builder;
						public component(param0: com.facebook.litho.Component): com.facebook.litho.widget.SelectorComponent.Builder;
						public build(): com.facebook.litho.Component;
						public components(param0: java.util.List<com.facebook.litho.Component>): com.facebook.litho.widget.SelectorComponent.Builder;
						public build(): com.facebook.litho.widget.SelectorComponent;
						public getThis(): com.facebook.litho.widget.SelectorComponent.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SelectorComponentSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.SelectorComponentSpec>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SetSelectionEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.SetSelectionEvent>;
					public start: number;
					public end: number;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SetTextEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.SetTextEvent>;
					public text: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SmoothScrollAlignmentType {
					public static class: java.lang.Class<com.facebook.litho.widget.SmoothScrollAlignmentType>;
					public static DEFAULT: com.facebook.litho.widget.SmoothScrollAlignmentType;
					public static SNAP_TO_ANY: com.facebook.litho.widget.SmoothScrollAlignmentType;
					public static SNAP_TO_START: com.facebook.litho.widget.SmoothScrollAlignmentType;
					public static SNAP_TO_END: com.facebook.litho.widget.SmoothScrollAlignmentType;
					public static SNAP_TO_CENTER: com.facebook.litho.widget.SmoothScrollAlignmentType;
					public static valueOf(param0: string): com.facebook.litho.widget.SmoothScrollAlignmentType;
					public getValue(): number;
					public static values(): native.Array<com.facebook.litho.widget.SmoothScrollAlignmentType>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SnapUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.SnapUtil>;
					public static SNAP_NONE: number;
					public static SNAP_TO_END: number;
					public static SNAP_TO_START: number;
					public static SNAP_TO_CENTER: number;
					public static SNAP_TO_CENTER_CHILD: number;
					public static SNAP_TO_CENTER_CHILD_WITH_CUSTOM_SPEED: number;
					public constructor();
					public static getSnapHelper(param0: number, param1: number): androidx.recyclerview.widget.SnapHelper;
					public static getSmoothScrollerWithOffset(param0: globalAndroid.content.Context, param1: number, param2: com.facebook.litho.widget.SmoothScrollAlignmentType): androidx.recyclerview.widget.RecyclerView.SmoothScroller;
				}
				export module SnapUtil {
					export class SnapMode extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.litho.widget.SnapUtil.SnapMode>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.SnapUtil$SnapMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SolidColor extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.SolidColor>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.SolidColor.Builder;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.SolidColor.Builder;
					public isEquivalentTo(param0: any): boolean;
					public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module SolidColor {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.SolidColor.Builder>;
						public constructor();
						public color(param0: number): com.facebook.litho.widget.SolidColor.Builder;
						public getThis(): any;
						public build(): com.facebook.litho.Component;
						public alpha(param0: com.facebook.litho.DynamicValue<java.lang.Float>): any;
						public alpha(param0: number): com.facebook.litho.widget.SolidColor.Builder;
						public getThis(): com.facebook.litho.widget.SolidColor.Builder;
						public colorRes(param0: number): com.facebook.litho.widget.SolidColor.Builder;
						public build(): com.facebook.litho.widget.SolidColor;
						public colorAttr(param0: number, param1: number): com.facebook.litho.widget.SolidColor.Builder;
						public colorAttr(param0: number): com.facebook.litho.widget.SolidColor.Builder;
						public alpha(param0: number): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SolidColorSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.SolidColorSpec>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class Spinner extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.Spinner>;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.Spinner.Builder;
					public static onClick(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<com.facebook.litho.ClickEvent>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public static updateSelectionSync(param0: com.facebook.litho.ComponentContext, param1: string): void;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.Spinner.Builder;
					public static updateIsShowingDropDownAsync(param0: com.facebook.litho.ComponentContext, param1: boolean): void;
					public createInitialState(param0: com.facebook.litho.ComponentContext): void;
					public getStateContainer(): com.facebook.litho.StateContainer;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public hasState(): boolean;
					public static updateIsShowingDropDownSync(param0: com.facebook.litho.ComponentContext, param1: boolean): void;
					public isEquivalentTo(param0: any): boolean;
					public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
					public static updateSelection(param0: com.facebook.litho.ComponentContext, param1: string): void;
					public makeShallowCopy(): com.facebook.litho.Component;
					public static updateSelectionAsync(param0: com.facebook.litho.ComponentContext, param1: string): void;
					public makeShallowCopy(): com.facebook.litho.widget.Spinner;
					public static getItemSelectedEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public transferState(param0: com.facebook.litho.StateContainer, param1: com.facebook.litho.StateContainer): void;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public static updateIsShowingDropDown(param0: com.facebook.litho.ComponentContext, param1: boolean): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module Spinner {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.Spinner.Builder>;
						public selectedTextSizeRes(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public build(): com.facebook.litho.widget.Spinner;
						public itemLayout(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public options(param0: java.util.List<string>): com.facebook.litho.widget.Spinner.Builder;
						public selectedTextSizeAttr(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public selectedTextColor(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public selectedTextSizeSp(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public selectedTextColorRes(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public getThis(): com.facebook.litho.widget.Spinner.Builder;
						public constructor();
						public selectedTextColorAttr(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public caretRes(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public itemSelectedEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.Spinner.Builder;
						public caret(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.widget.Spinner.Builder;
						public itemLayoutAttr(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public caretAttr(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public selectedTextSizePx(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public getThis(): any;
						public caretAttr(param0: number, param1: number): com.facebook.litho.widget.Spinner.Builder;
						public selectedOption(param0: string): com.facebook.litho.widget.Spinner.Builder;
						public selectedTextSizeDip(param0: number): com.facebook.litho.widget.Spinner.Builder;
						public build(): com.facebook.litho.Component;
						public itemLayoutAttr(param0: number, param1: number): com.facebook.litho.widget.Spinner.Builder;
						public selectedTextSizeAttr(param0: number, param1: number): com.facebook.litho.widget.Spinner.Builder;
						public selectedTextColorAttr(param0: number, param1: number): com.facebook.litho.widget.Spinner.Builder;
						public itemLayoutRes(param0: number): com.facebook.litho.widget.Spinner.Builder;
					}
					export class SpinnerStateContainer extends com.facebook.litho.StateContainer {
						public static class: java.lang.Class<com.facebook.litho.widget.Spinner.SpinnerStateContainer>;
						public applyStateUpdate(param0: com.facebook.litho.StateContainer.StateUpdate): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SpinnerSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.SpinnerSpec>;
					public constructor();
				}
				export module SpinnerSpec {
					export class CaretDrawable extends globalAndroid.graphics.drawable.Drawable {
						public static class: java.lang.Class<com.facebook.litho.widget.SpinnerSpec.CaretDrawable>;
						public constructor();
						public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
						public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
						public draw(param0: globalAndroid.graphics.Canvas): void;
						public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
						public constructor(param0: globalAndroid.content.Context, param1: number);
						public getOpacity(): number;
						public setAlpha(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class StaggeredGridLayoutHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.StaggeredGridLayoutHelper>;
					public static findLastVisibleItemPosition(param0: androidx.recyclerview.widget.StaggeredGridLayoutManager): number;
					public constructor();
					public static findFirstFullyVisibleItemPosition(param0: androidx.recyclerview.widget.StaggeredGridLayoutManager): number;
					public static findLastFullyVisibleItemPosition(param0: androidx.recyclerview.widget.StaggeredGridLayoutManager): number;
					public static findFirstVisibleItemPosition(param0: androidx.recyclerview.widget.StaggeredGridLayoutManager): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class StaggeredGridLayoutInfo extends java.lang.Object implements com.facebook.litho.widget.LayoutInfo {
					public static class: java.lang.Class<com.facebook.litho.widget.StaggeredGridLayoutInfo>;
					public static OVERRIDE_SIZE: string;
					public findFirstFullyVisibleItemPosition(): number;
					public getScrollDirection(): number;
					public setRenderInfoCollection(param0: com.facebook.litho.widget.LayoutInfo.RenderInfoCollection): void;
					public findLastFullyVisibleItemPosition(): number;
					public approximateRangeSize(param0: number, param1: number, param2: number, param3: number): number;
					public findFirstVisibleItemPosition(): number;
					public createViewportFiller(param0: number, param1: number): com.facebook.litho.widget.StaggeredGridLayoutInfo.ViewportFiller;
					public findLastVisibleItemPosition(): number;
					public getLayoutManager(): androidx.recyclerview.widget.RecyclerView.LayoutManager;
					public computeWrappedHeight(param0: number, param1: java.util.List<com.facebook.litho.widget.ComponentTreeHolder>): number;
					public getChildHeightSpec(param0: number, param1: com.facebook.litho.widget.RenderInfo): number;
					public getItemCount(): number;
					public constructor(param0: number, param1: number, param2: boolean, param3: number);
					public getChildWidthSpec(param0: number, param1: com.facebook.litho.widget.RenderInfo): number;
					public createViewportFiller(param0: number, param1: number): com.facebook.litho.widget.LayoutInfo.ViewportFiller;
				}
				export module StaggeredGridLayoutInfo {
					export class LithoStaggeredGridLayoutManager extends androidx.recyclerview.widget.StaggeredGridLayoutManager {
						public static class: java.lang.Class<com.facebook.litho.widget.StaggeredGridLayoutInfo.LithoStaggeredGridLayoutManager>;
						public constructor();
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
						public computeScrollVectorForPosition(param0: number): globalAndroid.graphics.PointF;
						public generateLayoutParams(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): androidx.recyclerview.widget.RecyclerView.LayoutParams;
						public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): androidx.recyclerview.widget.RecyclerView.LayoutParams;
						public constructor(param0: number, param1: number);
					}
					export module LithoStaggeredGridLayoutManager {
						export class LayoutParams extends androidx.recyclerview.widget.StaggeredGridLayoutManager.LayoutParams implements com.facebook.litho.LithoView.LayoutManagerOverrideParams {
							public static class: java.lang.Class<com.facebook.litho.widget.StaggeredGridLayoutInfo.LithoStaggeredGridLayoutManager.LayoutParams>;
							public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
							public constructor(param0: number, param1: number);
							public constructor(param0: androidx.recyclerview.widget.RecyclerView.LayoutParams);
							public getHeightMeasureSpec(): number;
							public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public constructor(param0: com.facebook.litho.widget.RecyclerBinder.RecyclerViewLayoutManagerOverrideParams);
							public hasValidAdapterPosition(): boolean;
							public getWidthMeasureSpec(): number;
						}
					}
					export class ViewportFiller extends java.lang.Object implements com.facebook.litho.widget.LayoutInfo.ViewportFiller {
						public static class: java.lang.Class<com.facebook.litho.widget.StaggeredGridLayoutInfo.ViewportFiller>;
						public wantsMore(): boolean;
						public getFill(): number;
						public add(param0: com.facebook.litho.widget.RenderInfo, param1: number, param2: number): void;
						public constructor(param0: number, param1: number, param2: number, param3: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class StartSnapHelper extends androidx.recyclerview.widget.SnapHelper {
					public static class: java.lang.Class<com.facebook.litho.widget.StartSnapHelper>;
					/** @deprecated */
					public createSnapScroller(param0: androidx.recyclerview.widget.RecyclerView.LayoutManager): androidx.recyclerview.widget.LinearSmoothScroller;
					public constructor();
					public attachToRecyclerView(param0: androidx.recyclerview.widget.RecyclerView): void;
					public findTargetSnapPosition(param0: androidx.recyclerview.widget.RecyclerView.LayoutManager, param1: number, param2: number): number;
					public createSnapScroller(param0: androidx.recyclerview.widget.RecyclerView.LayoutManager): androidx.recyclerview.widget.LinearSmoothScroller;
					public findSnapView(param0: androidx.recyclerview.widget.RecyclerView.LayoutManager): globalAndroid.view.View;
					public calculateDistanceToFinalSnap(param0: androidx.recyclerview.widget.RecyclerView.LayoutManager, param1: globalAndroid.view.View): native.Array<number>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class StickyHeaderController extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.StickyHeaderController>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.StickyHeaderController interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onScrolled(param0: androidx.recyclerview.widget.RecyclerView, param1: number, param2: number): void;
						init(param0: com.facebook.litho.widget.SectionsRecyclerView): void;
						reset(): void;
					});
					public constructor();
					public init(param0: com.facebook.litho.widget.SectionsRecyclerView): void;
					public reset(): void;
					public onScrolled(param0: androidx.recyclerview.widget.RecyclerView, param1: number, param2: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class StickyHeaderControllerFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.StickyHeaderControllerFactory>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.StickyHeaderControllerFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getController(param0: com.facebook.litho.widget.HasStickyHeader): com.facebook.litho.widget.StickyHeaderController;
					});
					public constructor();
					public getController(param0: com.facebook.litho.widget.HasStickyHeader): com.facebook.litho.widget.StickyHeaderController;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class StickyHeaderControllerImpl extends androidx.recyclerview.widget.RecyclerView.OnScrollListener implements com.facebook.litho.widget.StickyHeaderController {
					public static class: java.lang.Class<com.facebook.litho.widget.StickyHeaderControllerImpl>;
					public init(param0: com.facebook.litho.widget.SectionsRecyclerView): void;
					public reset(): void;
					public onScrolled(param0: androidx.recyclerview.widget.RecyclerView, param1: number, param2: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class SynchronizedTypefaceHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.SynchronizedTypefaceHelper>;
					public static setupSynchronizedTypeface(): void;
					public constructor();
				}
				export module SynchronizedTypefaceHelper {
					export class SynchronizedLongSparseArray extends globalAndroid.util.LongSparseArray<globalAndroid.util.SparseArray<globalAndroid.graphics.Typeface>> {
						public static class: java.lang.Class<com.facebook.litho.widget.SynchronizedTypefaceHelper.SynchronizedLongSparseArray>;
						public get(param0: number, param1: any): any;
						public put(param0: number, param1: globalAndroid.util.SparseArray<globalAndroid.graphics.Typeface>): void;
						public get(param0: number): globalAndroid.util.SparseArray<globalAndroid.graphics.Typeface>;
						public put(param0: number, param1: any): void;
						public get(param0: number): any;
					}
					export class SynchronizedSparseArray extends globalAndroid.util.SparseArray<globalAndroid.util.SparseArray<globalAndroid.graphics.Typeface>> {
						public static class: java.lang.Class<com.facebook.litho.widget.SynchronizedTypefaceHelper.SynchronizedSparseArray>;
						public get(param0: number, param1: any): any;
						public put(param0: number, param1: globalAndroid.util.SparseArray<globalAndroid.graphics.Typeface>): void;
						public get(param0: number): globalAndroid.util.SparseArray<globalAndroid.graphics.Typeface>;
						public put(param0: number, param1: any): void;
						public get(param0: number): any;
					}
					export class SynchronizedTypefaceSparseArray extends globalAndroid.util.SparseArray<globalAndroid.graphics.Typeface> {
						public static class: java.lang.Class<com.facebook.litho.widget.SynchronizedTypefaceHelper.SynchronizedTypefaceSparseArray>;
						public get(param0: number, param1: any): any;
						public put(param0: number, param1: any): void;
						public put(param0: number, param1: globalAndroid.graphics.Typeface): void;
						public get(param0: number): any;
						public get(param0: number): globalAndroid.graphics.Typeface;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class Text extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.Text>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public copyInterStageImpl(param0: com.facebook.litho.Component): void;
					public isPureRender(): boolean;
					public onBoundsDefined(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout): void;
					public static getTextOffsetOnTouchEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public onPopulateAccessibilityNode(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
					public canPreallocate(): boolean;
					public shouldUseDisplayList(): boolean;
					public makeShallowCopy(): com.facebook.litho.Component;
					public getExtraAccessibilityNodesCount(): number;
					public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
					public canMeasure(): boolean;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public isMountSizeDependent(): boolean;
					public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public getExtraAccessibilityNodeAt(param0: number, param1: number): number;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.Text.Builder;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public isEquivalentTo(param0: any): boolean;
					public onLoadStyle(param0: com.facebook.litho.ComponentContext): void;
					public onCreateMountContent(param0: globalAndroid.content.Context): any;
					public poolSize(): number;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.Text.Builder;
					public implementsAccessibility(): boolean;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public onPopulateExtraAccessibilityNode(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: number, param2: number, param3: number): void;
					public implementsExtraAccessibilityNodes(): boolean;
					public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public makeShallowCopy(): com.facebook.litho.widget.Text;
					public onMeasure(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout, param2: number, param3: number, param4: com.facebook.litho.Size): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module Text {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.Text.Builder>;
						public clickableSpanExpandedOffsetSp(param0: number): com.facebook.litho.widget.Text.Builder;
						public textSizeDip(param0: number): com.facebook.litho.widget.Text.Builder;
						public textOffsetOnTouchEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.Text.Builder;
						public shadowRadiusDip(param0: number): com.facebook.litho.widget.Text.Builder;
						public isSingleLine(param0: boolean): com.facebook.litho.widget.Text.Builder;
						public maxEms(param0: number): com.facebook.litho.widget.Text.Builder;
						public linkColorAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public maxEmsAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public minEmsAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public highlightEndOffset(param0: number): com.facebook.litho.widget.Text.Builder;
						public build(): com.facebook.litho.widget.Text;
						public extraSpacingAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public minimallyWideThresholdDip(param0: number): com.facebook.litho.widget.Text.Builder;
						public constructor();
						public isSingleLineAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public letterSpacing(param0: number): com.facebook.litho.widget.Text.Builder;
						public lineHeightDip(param0: number): com.facebook.litho.widget.Text.Builder;
						public minimallyWide(param0: boolean): com.facebook.litho.widget.Text.Builder;
						public accessibleClickableSpans(param0: boolean): com.facebook.litho.widget.Text.Builder;
						public customEllipsisTextAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public minLinesAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public shadowDyPx(param0: number): com.facebook.litho.widget.Text.Builder;
						public highlightColorAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public hyphenationFrequency(param0: number): com.facebook.litho.widget.Text.Builder;
						public clickableSpanExpandedOffsetAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public minimallyWideThresholdPx(param0: number): com.facebook.litho.widget.Text.Builder;
						public textSizeAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public build(): com.facebook.litho.Component;
						public highlightStartOffset(param0: number): com.facebook.litho.widget.Text.Builder;
						public maxTextWidthDip(param0: number): com.facebook.litho.widget.Text.Builder;
						public highlightColorRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public clickableSpanExpandedOffsetAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public shouldIncludeFontPadding(param0: boolean): com.facebook.litho.widget.Text.Builder;
						public spanListener(param0: com.facebook.litho.widget.ClickableSpanListener): com.facebook.litho.widget.Text.Builder;
						public textSizeSp(param0: number): com.facebook.litho.widget.Text.Builder;
						public minLinesRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowDySp(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowRadiusSp(param0: number): com.facebook.litho.widget.Text.Builder;
						public clickableSpanExpandedOffsetRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowColorAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public extraSpacingAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public textSizePx(param0: number): com.facebook.litho.widget.Text.Builder;
						public textColor(param0: number): com.facebook.litho.widget.Text.Builder;
						public clipToBounds(param0: boolean): com.facebook.litho.widget.Text.Builder;
						public minTextWidthRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public extraSpacingPx(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowRadiusAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public shouldIncludeFontPaddingAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public textSizeAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public shadowRadiusPx(param0: number): com.facebook.litho.widget.Text.Builder;
						public lineHeightAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowDxDip(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowRadiusRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public getThis(): any;
						public accessibleClickableSpansAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public textSizeRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public maxTextWidthAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public minTextWidthAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public maxTextWidthRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public letterSpacingAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public maxTextWidthAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public highlightColorAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public minimallyWideThresholdRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public maxTextWidthPx(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowDxAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public spacingMultiplierAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public textStyle(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowColorAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public extraSpacingSp(param0: number): com.facebook.litho.widget.Text.Builder;
						public isSingleLineRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public breakStrategy(param0: number): com.facebook.litho.widget.Text.Builder;
						public maxLinesRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public clickableSpanExpandedOffsetPx(param0: number): com.facebook.litho.widget.Text.Builder;
						public letterSpacingAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public linkColor(param0: number): com.facebook.litho.widget.Text.Builder;
						public maxLines(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowDyDip(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowColorRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public text(param0: string): com.facebook.litho.widget.Text.Builder;
						public textColorRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public getThis(): com.facebook.litho.widget.Text.Builder;
						public textRes(param0: number, param1: native.Array<any>): com.facebook.litho.widget.Text.Builder;
						public shadowRadiusAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public minimallyWideThresholdAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public textRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public letterSpacingRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public minTextWidthPx(param0: number): com.facebook.litho.widget.Text.Builder;
						public minTextWidthDip(param0: number): com.facebook.litho.widget.Text.Builder;
						public textOffsetOnTouchHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.Text.Builder;
						public maxEmsRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public textColorStateList(param0: globalAndroid.content.res.ColorStateList): com.facebook.litho.widget.Text.Builder;
						public shadowColor(param0: number): com.facebook.litho.widget.Text.Builder;
						public minEmsRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public isSingleLineAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public customEllipsisTextRes(param0: number, param1: native.Array<any>): com.facebook.litho.widget.Text.Builder;
						public minLines(param0: number): com.facebook.litho.widget.Text.Builder;
						public maxLinesAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public extraSpacingRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public spacingMultiplierAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public textDirection(param0: androidx.core.text.TextDirectionHeuristicCompat): com.facebook.litho.widget.Text.Builder;
						public minTextWidthAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public minEmsAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowDxAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public shadowDxPx(param0: number): com.facebook.litho.widget.Text.Builder;
						public spacingMultiplier(param0: number): com.facebook.litho.widget.Text.Builder;
						public lineHeightPx(param0: number): com.facebook.litho.widget.Text.Builder;
						public maxLinesAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public textAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public typeface(param0: globalAndroid.graphics.Typeface): com.facebook.litho.widget.Text.Builder;
						public ellipsize(param0: globalAndroid.text.TextUtils.TruncateAt): com.facebook.litho.widget.Text.Builder;
						public lineHeightSp(param0: number): com.facebook.litho.widget.Text.Builder;
						public extraSpacingDip(param0: number): com.facebook.litho.widget.Text.Builder;
						public lineHeightAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public maxEmsAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public textColorAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public accessibleClickableSpansAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public shadowDyAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public verticalGravity(param0: com.facebook.litho.widget.VerticalGravity): com.facebook.litho.widget.Text.Builder;
						public linkColorAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public accessibleClickableSpansRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public minLinesAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public spacingMultiplierRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public textAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public linkColorRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowDxRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public minEms(param0: number): com.facebook.litho.widget.Text.Builder;
						public customEllipsisTextRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public glyphWarming(param0: boolean): com.facebook.litho.widget.Text.Builder;
						public shadowDyRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public customEllipsisText(param0: string): com.facebook.litho.widget.Text.Builder;
						public shouldIncludeFontPaddingRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public customEllipsisTextAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowDyAttr(param0: number): com.facebook.litho.widget.Text.Builder;
						public shadowDxSp(param0: number): com.facebook.litho.widget.Text.Builder;
						public textAlignment(param0: globalAndroid.text.Layout.Alignment): com.facebook.litho.widget.Text.Builder;
						public textColorAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public minimallyWideThresholdAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
						public justificationMode(param0: number): com.facebook.litho.widget.Text.Builder;
						public clickableSpanExpandedOffsetDip(param0: number): com.facebook.litho.widget.Text.Builder;
						public highlightColor(param0: number): com.facebook.litho.widget.Text.Builder;
						public lineHeightRes(param0: number): com.facebook.litho.widget.Text.Builder;
						public shouldIncludeFontPaddingAttr(param0: number, param1: number): com.facebook.litho.widget.Text.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TextChangedEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.TextChangedEvent>;
					public view: globalAndroid.widget.EditText;
					public text: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TextDrawable extends globalAndroid.graphics.drawable.Drawable implements com.facebook.litho.Touchable, com.facebook.litho.TextContent, globalAndroid.graphics.drawable.Drawable.Callback {
					public static class: java.lang.Class<com.facebook.litho.widget.TextDrawable>;
					public getTextItems(): java.util.List<string>;
					public getText(): string;
					public getColor(): number;
					public unmount(): void;
					public getClickableSpans(): native.Array<globalAndroid.text.style.ClickableSpan>;
					public onStateChange(param0: native.Array<number>): boolean;
					public shouldHandleTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public isStateful(): boolean;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public onTouchEvent(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.View): boolean;
					public setAlpha(param0: number): void;
					public mount(param0: string, param1: globalAndroid.text.Layout, param2: number, param3: native.Array<globalAndroid.text.style.ClickableSpan>): void;
					public mount(param0: string, param1: globalAndroid.text.Layout, param2: number, param3: boolean, param4: globalAndroid.content.res.ColorStateList, param5: number, param6: number, param7: native.Array<globalAndroid.text.style.ClickableSpan>, param8: native.Array<globalAndroid.text.style.ImageSpan>, param9: com.facebook.litho.widget.ClickableSpanListener, param10: com.facebook.litho.widget.TextDrawable.TextOffsetOnTouchListener, param11: number, param12: number, param13: number, param14: string): void;
					public mount(param0: string, param1: globalAndroid.text.Layout, param2: number, param3: number): void;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public constructor();
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public mount(param0: string, param1: globalAndroid.text.Layout, param2: number, param3: globalAndroid.content.res.ColorStateList, param4: number, param5: number, param6: native.Array<globalAndroid.text.style.ClickableSpan>): void;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public getOpacity(): number;
				}
				export module TextDrawable {
					export class LongClickRunnable extends java.lang.Object implements java.lang.Runnable {
						public static class: java.lang.Class<com.facebook.litho.widget.TextDrawable.LongClickRunnable>;
						public run(): void;
					}
					export class TextOffsetOnTouchListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.TextDrawable.TextOffsetOnTouchListener>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.TextDrawable$TextOffsetOnTouchListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							textOffsetOnTouch(param0: number): void;
						});
						public constructor();
						public textOffsetOnTouch(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TextInput extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.TextInput>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public static setText(param0: com.facebook.litho.ComponentContext, param1: string, param2: string): void;
					public getStateContainer(): com.facebook.litho.StateContainer;
					public static setTextTrigger(param0: com.facebook.litho.ComponentContext, param1: string): com.facebook.litho.EventTrigger<any>;
					public shouldUpdate(param0: com.facebook.litho.Component, param1: com.facebook.litho.Component): boolean;
					public static dispatchKeyTrigger(param0: com.facebook.litho.ComponentContext, param1: string): com.facebook.litho.EventTrigger<any>;
					public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
					public static getSetTextEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public canMeasure(): boolean;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.TextInput.Builder;
					public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public static getTextChangedEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public static remeasureForUpdatedTextAsync(param0: com.facebook.litho.ComponentContext): void;
					public static getEditorActionEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public static getText(param0: com.facebook.litho.ComponentContext, param1: string): string;
					public static clearFocus(param0: com.facebook.litho.EventTrigger<any>): void;
					public static remeasureForUpdatedText(param0: com.facebook.litho.ComponentContext): void;
					public static requestFocusTrigger(param0: com.facebook.litho.ComponentContext, param1: string): com.facebook.litho.EventTrigger<any>;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.TextInput.Builder;
					public static setSelectionTrigger(param0: com.facebook.litho.ComponentContext, param1: string): com.facebook.litho.EventTrigger<any>;
					public static dispatchKey(param0: com.facebook.litho.EventTrigger<any>, param1: globalAndroid.view.KeyEvent): void;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public onBind(param0: com.facebook.litho.ComponentContext, param1: any): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public static requestFocus(param0: com.facebook.litho.ComponentContext, param1: string): void;
					public static dispatchKey(param0: com.facebook.litho.ComponentContext, param1: string, param2: globalAndroid.view.KeyEvent): void;
					public isPureRender(): boolean;
					public createInitialState(param0: com.facebook.litho.ComponentContext): void;
					public static getSelectionChangedEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public hasState(): boolean;
					public canPreallocate(): boolean;
					public makeShallowCopy(): com.facebook.litho.Component;
					public transferState(param0: com.facebook.litho.StateContainer, param1: com.facebook.litho.StateContainer): void;
					public static setText(param0: com.facebook.litho.EventTrigger<any>, param1: string): void;
					public static remeasureForUpdatedTextSync(param0: com.facebook.litho.ComponentContext): void;
					public static requestFocus(param0: com.facebook.litho.EventTrigger<any>): void;
					public static clearFocusTrigger(param0: com.facebook.litho.ComponentContext, param1: string): com.facebook.litho.EventTrigger<any>;
					public static setSelection(param0: com.facebook.litho.EventTrigger<any>, param1: number, param2: number): void;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public static setSelection(param0: com.facebook.litho.ComponentContext, param1: string, param2: number, param3: number): void;
					public static getText(param0: com.facebook.litho.EventTrigger<any>): string;
					public isEquivalentTo(param0: any): boolean;
					public onCreateMountContent(param0: globalAndroid.content.Context): any;
					public static getTextTrigger(param0: com.facebook.litho.ComponentContext, param1: string): com.facebook.litho.EventTrigger<any>;
					public poolSize(): number;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public makeShallowCopy(): com.facebook.litho.widget.TextInput;
					public static getKeyUpEventHandler(param0: com.facebook.litho.ComponentContext): com.facebook.litho.EventHandler<any>;
					public static clearFocus(param0: com.facebook.litho.ComponentContext, param1: string): void;
					public onUnbind(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public onMeasure(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout, param2: number, param3: number, param4: com.facebook.litho.Size): void;
				}
				export module TextInput {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.TextInput.Builder>;
						public hintAttr(param0: number, param1: number): com.facebook.litho.widget.TextInput.Builder;
						public textWatchers(param0: java.util.List<globalAndroid.text.TextWatcher>): com.facebook.litho.widget.TextInput.Builder;
						public textSizeDip(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public cursorDrawableRes(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public shadowDxSp(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public setSelectionTrigger(param0: com.facebook.litho.EventTrigger<any>): com.facebook.litho.widget.TextInput.Builder;
						public gravity(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public shadowRadiusSp(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public inputBackgroundAttr(param0: number, param1: number): com.facebook.litho.widget.TextInput.Builder;
						public inputBackgroundAttr(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public initialTextRes(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public getTextTrigger(param0: com.facebook.litho.EventTrigger<any>): com.facebook.litho.widget.TextInput.Builder;
						public typeface(param0: globalAndroid.graphics.Typeface): com.facebook.litho.widget.TextInput.Builder;
						public key(param0: string): com.facebook.litho.widget.TextInput.Builder;
						public textColorStateList(param0: globalAndroid.content.res.ColorStateList): com.facebook.litho.widget.TextInput.Builder;
						public shadowColorAttr(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public hintRes(param0: number, param1: native.Array<any>): com.facebook.litho.widget.TextInput.Builder;
						public shadowDxAttr(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public initialTextRes(param0: number, param1: native.Array<any>): com.facebook.litho.widget.TextInput.Builder;
						public movementMethod(param0: globalAndroid.text.method.MovementMethod): com.facebook.litho.widget.TextInput.Builder;
						public shadowDyAttr(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public hintRes(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public hint(param0: string): com.facebook.litho.widget.TextInput.Builder;
						public textAlignment(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public constructor();
						public key(param0: string): any;
						public shadowDyPx(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public shadowDyRes(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public initialTextAttr(param0: number, param1: number): com.facebook.litho.widget.TextInput.Builder;
						public inputFilter(param0: globalAndroid.text.InputFilter): com.facebook.litho.widget.TextInput.Builder;
						public shadowDyAttr(param0: number, param1: number): com.facebook.litho.widget.TextInput.Builder;
						public highlightColorAttr(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public setTextEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.TextInput.Builder;
						public textSizePx(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public editable(param0: boolean): com.facebook.litho.widget.TextInput.Builder;
						public initialTextAttr(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public build(): com.facebook.litho.Component;
						public multiline(param0: boolean): com.facebook.litho.widget.TextInput.Builder;
						public keyUpEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.TextInput.Builder;
						public textChangedEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.TextInput.Builder;
						public ellipsize(param0: globalAndroid.text.TextUtils.TruncateAt): com.facebook.litho.widget.TextInput.Builder;
						public highlightColorRes(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public hintAttr(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public textSizeAttr(param0: number, param1: number): com.facebook.litho.widget.TextInput.Builder;
						public minLines(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public textSizeSp(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public textSizeRes(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public shadowRadiusDip(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public inputBackgroundRes(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public textWatcher(param0: globalAndroid.text.TextWatcher): com.facebook.litho.widget.TextInput.Builder;
						public shadowDySp(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public textSizeAttr(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public build(): com.facebook.litho.widget.TextInput;
						public shadowDxDip(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public selectionChangedEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.TextInput.Builder;
						public getThis(): com.facebook.litho.widget.TextInput.Builder;
						public shadowDxAttr(param0: number, param1: number): com.facebook.litho.widget.TextInput.Builder;
						public editorActionEventHandler(param0: com.facebook.litho.EventHandler<any>): com.facebook.litho.widget.TextInput.Builder;
						public clearFocusTrigger(param0: com.facebook.litho.EventTrigger<any>): com.facebook.litho.widget.TextInput.Builder;
						public shadowDyDip(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public shadowRadiusAttr(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public imeOptions(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public dispatchKeyTrigger(param0: com.facebook.litho.EventTrigger<any>): com.facebook.litho.widget.TextInput.Builder;
						public highlightColorAttr(param0: number, param1: number): com.facebook.litho.widget.TextInput.Builder;
						public inputFilters(param0: java.util.List<globalAndroid.text.InputFilter>): com.facebook.litho.widget.TextInput.Builder;
						public shadowDxPx(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public shadowColorAttr(param0: number, param1: number): com.facebook.litho.widget.TextInput.Builder;
						public shadowRadiusPx(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public shadowColorRes(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public inputType(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public hintColorStateList(param0: globalAndroid.content.res.ColorStateList): com.facebook.litho.widget.TextInput.Builder;
						public shadowRadiusAttr(param0: number, param1: number): com.facebook.litho.widget.TextInput.Builder;
						public inputBackground(param0: globalAndroid.graphics.drawable.Drawable): com.facebook.litho.widget.TextInput.Builder;
						public getThis(): any;
						public setTextTrigger(param0: com.facebook.litho.EventTrigger<any>): com.facebook.litho.widget.TextInput.Builder;
						public requestFocusTrigger(param0: com.facebook.litho.EventTrigger<any>): com.facebook.litho.widget.TextInput.Builder;
						public shadowDxRes(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public highlightColor(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public initialText(param0: string): com.facebook.litho.widget.TextInput.Builder;
						public maxLines(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public shadowColor(param0: number): com.facebook.litho.widget.TextInput.Builder;
						public shadowRadiusRes(param0: number): com.facebook.litho.widget.TextInput.Builder;
					}
					export class TextInputStateContainer extends com.facebook.litho.StateContainer {
						public static class: java.lang.Class<com.facebook.litho.widget.TextInput.TextInputStateContainer>;
						public applyStateUpdate(param0: com.facebook.litho.StateContainer.StateUpdate): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TextInputSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.TextInputSpec>;
					public static textColorStateList: globalAndroid.content.res.ColorStateList;
					public static hintColorStateList: globalAndroid.content.res.ColorStateList;
					public static shadowColor: number;
					public static textSize: number;
					public static inputBackground: globalAndroid.graphics.drawable.Drawable;
					public static typeface: globalAndroid.graphics.Typeface;
					public static textAlignment: number;
					public static gravity: number;
					public static editable: boolean;
					public static inputType: number;
					public static imeOptions: number;
					public static cursorDrawableRes: number;
					public static minLines: number;
					public static maxLines: number;
					public static movementMethod: globalAndroid.text.method.MovementMethod;
					public static onCreateMountContent(param0: globalAndroid.content.Context): com.facebook.litho.widget.TextInputSpec.EditTextWithEventHandlers;
				}
				export module TextInputSpec {
					export class EditTextWithEventHandlers extends globalAndroid.widget.EditText implements globalAndroid.widget.TextView.OnEditorActionListener {
						public static class: java.lang.Class<com.facebook.litho.widget.TextInputSpec.EditTextWithEventHandlers>;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
						public onSelectionChanged(param0: number, param1: number): void;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public onEditorAction(param0: number): void;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onPreDraw(): boolean;
						public onEditorAction(param0: globalAndroid.widget.TextView, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public onMeasure(param0: number, param1: number): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					}
					export module EditTextWithEventHandlers {
						export class CompositeTextWatcher extends java.lang.Object implements globalAndroid.text.TextWatcher {
							public static class: java.lang.Class<com.facebook.litho.widget.TextInputSpec.EditTextWithEventHandlers.CompositeTextWatcher>;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						}
					}
					export class ForMeasureEditText extends globalAndroid.widget.EditText {
						public static class: java.lang.Class<com.facebook.litho.widget.TextInputSpec.ForMeasureEditText>;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						/** @deprecated */
						public invalidate(param0: number, param1: number, param2: number, param3: number): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public invalidate(): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onPreDraw(): boolean;
						/** @deprecated */
						public invalidate(param0: globalAndroid.graphics.Rect): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TextOffsetOnTouchEvent extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.TextOffsetOnTouchEvent>;
					public text: string;
					public textOffset: number;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TextSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.TextSpec>;
					public static minLines: number;
					public static maxLines: number;
					public static minEms: number;
					public static maxEms: number;
					public static minTextWidth: number;
					public static maxTextWidth: number;
					public static shadowColor: number;
					public static textColor: number;
					public static linkColor: number;
					public static textColorStateList: globalAndroid.content.res.ColorStateList;
					public static textSize: number;
					public static textStyle: number;
					public static typeface: globalAndroid.graphics.Typeface;
					public static spacingMultiplier: number;
					public static verticalGravity: com.facebook.litho.widget.VerticalGravity;
					public static glyphWarming: boolean;
					public static shouldIncludeFontPadding: boolean;
					public static textAlignment: globalAndroid.text.Layout.Alignment;
					public static breakStrategy: number;
					public static hyphenationFrequency: number;
					public static justificationMode: number;
					public static highlightStartOffset: number;
					public static highlightEndOffset: number;
					public static clipToBounds: boolean;
					public static lineHeight: number;
					public static resolveWidth(param0: number, param1: globalAndroid.text.Layout, param2: boolean, param3: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TextStylesHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.TextStylesHelper>;
					public static DEFAULT_EMS: number;
					public static DEFAULT_MIN_WIDTH: number;
					public static DEFAULT_MAX_WIDTH: number;
					public static DEFAULT_BREAK_STRATEGY: number;
					public static DEFAULT_HYPHENATION_FREQUENCY: number;
					public static DEFAULT_JUSTIFICATION_MODE: number;
					public static textAlignmentDefault: globalAndroid.text.Layout.Alignment;
					public constructor();
					public static onLoadStyle(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.Output<globalAndroid.text.TextUtils.TruncateAt>, param2: com.facebook.litho.Output<java.lang.Float>, param3: com.facebook.litho.Output<java.lang.Boolean>, param4: com.facebook.litho.Output<java.lang.Float>, param5: com.facebook.litho.Output<java.lang.Integer>, param6: com.facebook.litho.Output<java.lang.Integer>, param7: com.facebook.litho.Output<java.lang.Integer>, param8: com.facebook.litho.Output<java.lang.Integer>, param9: com.facebook.litho.Output<java.lang.Integer>, param10: com.facebook.litho.Output<java.lang.Integer>, param11: com.facebook.litho.Output<java.lang.Boolean>, param12: com.facebook.litho.Output<string>, param13: com.facebook.litho.Output<globalAndroid.content.res.ColorStateList>, param14: com.facebook.litho.Output<java.lang.Integer>, param15: com.facebook.litho.Output<java.lang.Integer>, param16: com.facebook.litho.Output<java.lang.Integer>, param17: com.facebook.litho.Output<globalAndroid.text.Layout.Alignment>, param18: com.facebook.litho.Output<java.lang.Integer>, param19: com.facebook.litho.Output<java.lang.Integer>, param20: com.facebook.litho.Output<java.lang.Integer>, param21: com.facebook.litho.Output<java.lang.Integer>, param22: com.facebook.litho.Output<java.lang.Float>, param23: com.facebook.litho.Output<java.lang.Float>, param24: com.facebook.litho.Output<java.lang.Float>, param25: com.facebook.litho.Output<java.lang.Integer>, param26: com.facebook.litho.Output<com.facebook.litho.widget.VerticalGravity>, param27: com.facebook.litho.Output<globalAndroid.graphics.Typeface>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TextureWarmer extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.TextureWarmer>;
					public warmLayout(param0: globalAndroid.text.Layout): void;
					public static getInstance(): com.facebook.litho.widget.TextureWarmer;
					public warmDrawable(param0: com.facebook.litho.widget.TextureWarmer.WarmDrawable): void;
				}
				export module TextureWarmer {
					export class WarmDrawable extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.TextureWarmer.WarmDrawable>;
						public constructor(param0: globalAndroid.graphics.drawable.Drawable, param1: number, param2: number);
					}
					export class WarmerHandler extends globalAndroid.os.Handler {
						public static class: java.lang.Class<com.facebook.litho.widget.TextureWarmer.WarmerHandler>;
						public static WARM_LAYOUT: number;
						public static WARM_DRAWABLE: number;
						public handleMessage(param0: globalAndroid.os.Message): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TransparencyEnabledCard extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.TransparencyEnabledCard>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public isPureRender(): boolean;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public isEquivalentTo(param0: any): boolean;
					public onCreateLayout(param0: com.facebook.litho.ComponentContext): com.facebook.litho.Component;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
					public makeShallowCopy(): com.facebook.litho.Component;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public makeShallowCopy(): com.facebook.litho.widget.TransparencyEnabledCard;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module TransparencyEnabledCard {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.TransparencyEnabledCard.Builder>;
						public cornerRadiusAttr(param0: number, param1: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowBottomOverridePx(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public cardBackgroundColorAttr(param0: number, param1: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public clippingColorRes(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowStartColorAttr(param0: number, param1: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowBottomOverrideRes(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowStartColorRes(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public cornerRadiusSp(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public elevationSp(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public cornerRadiusPx(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public cardBackgroundColorRes(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public content(param0: com.facebook.litho.Component): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public content(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowEndColorAttr(param0: number, param1: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public elevationAttr(param0: number, param1: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowBottomOverrideSp(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public constructor();
						public clippingColor(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public elevationAttr(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public cornerRadiusRes(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowBottomOverrideAttr(param0: number, param1: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowEndColorAttr(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowStartColorAttr(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowEndColor(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public clippingColorAttr(param0: number, param1: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowBottomOverrideDip(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public cornerRadiusAttr(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public elevationDip(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public getThis(): any;
						public cardBackgroundColorAttr(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowStartColor(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public clippingColorAttr(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowBottomOverrideAttr(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public build(): com.facebook.litho.Component;
						public elevationPx(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public build(): com.facebook.litho.widget.TransparencyEnabledCard;
						public cardBackgroundColor(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public cornerRadiusDip(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public shadowEndColorRes(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public getThis(): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
						public elevationRes(param0: number): com.facebook.litho.widget.TransparencyEnabledCard.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TransparencyEnabledCardClip extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.TransparencyEnabledCardClip>;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public isPureRender(): boolean;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public isEquivalentTo(param0: any): boolean;
					public canPreallocate(): boolean;
					public onCreateMountContent(param0: globalAndroid.content.Context): any;
					public poolSize(): number;
					public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module TransparencyEnabledCardClip {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.TransparencyEnabledCardClip.Builder>;
						public cornerRadiusAttr(param0: number, param1: number): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
						public constructor();
						public build(): com.facebook.litho.widget.TransparencyEnabledCardClip;
						public cardBackgroundColor(param0: number): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
						public cardBackgroundColorRes(param0: number): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
						public cornerRadiusAttr(param0: number): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
						public getThis(): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
						public cornerRadiusRes(param0: number): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
						public cardBackgroundColorAttr(param0: number): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
						public cornerRadiusDip(param0: number): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
						public getThis(): any;
						public build(): com.facebook.litho.Component;
						public cornerRadiusPx(param0: number): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
						public cardBackgroundColorAttr(param0: number, param1: number): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
						public cornerRadiusSp(param0: number): com.facebook.litho.widget.TransparencyEnabledCardClip.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TransparencyEnabledCardClipDrawable extends globalAndroid.graphics.drawable.Drawable {
					public static class: java.lang.Class<com.facebook.litho.widget.TransparencyEnabledCardClipDrawable>;
					public draw(param0: globalAndroid.graphics.Canvas): void;
					public setColorFilter(param0: number, param1: globalAndroid.graphics.PorterDuff.Mode): void;
					public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
					public setAlpha(param0: number): void;
					public getOpacity(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TransparencyEnabledCardClipSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.TransparencyEnabledCardClipSpec>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TransparencyEnabledCardSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.TransparencyEnabledCardSpec>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class TreePropsWrappedRenderInfo extends java.lang.Object implements com.facebook.litho.widget.RenderInfo {
					public static class: java.lang.Class<com.facebook.litho.widget.TreePropsWrappedRenderInfo>;
					public getSpanSize(): number;
					public getCustomAttribute(param0: string): any;
					public getViewCreator(): com.facebook.litho.viewcompat.ViewCreator<any>;
					public hasCustomViewType(): boolean;
					public isSticky(): boolean;
					public constructor(param0: com.facebook.litho.widget.RenderInfo, param1: com.facebook.litho.TreeProps);
					public getRenderCompleteEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.RenderCompleteEvent>;
					public isFullSpan(): boolean;
					public rendersComponent(): boolean;
					public getComponent(): com.facebook.litho.Component;
					public getName(): string;
					public getViewBinder(): com.facebook.litho.viewcompat.ViewBinder<any>;
					public addDebugInfo(param0: string, param1: any): void;
					public setViewType(param0: number): void;
					public getViewType(): number;
					public getTreeProps(): com.facebook.litho.TreeProps;
					public getDebugInfo(param0: string): any;
					public rendersView(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class VerticalGravity {
					public static class: java.lang.Class<com.facebook.litho.widget.VerticalGravity>;
					public static TOP: com.facebook.litho.widget.VerticalGravity;
					public static CENTER: com.facebook.litho.widget.VerticalGravity;
					public static BOTTOM: com.facebook.litho.widget.VerticalGravity;
					public static values(): native.Array<com.facebook.litho.widget.VerticalGravity>;
					public static valueOf(param0: string): com.facebook.litho.widget.VerticalGravity;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class VerticalScroll extends com.facebook.litho.Component {
					public static class: java.lang.Class<com.facebook.litho.widget.VerticalScroll>;
					public dispatchOnEvent(param0: com.facebook.litho.EventHandler<any>, param1: any): any;
					public copyInterStageImpl(param0: com.facebook.litho.Component): void;
					public isPureRender(): boolean;
					public onBoundsDefined(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout): void;
					public createInitialState(param0: com.facebook.litho.ComponentContext): void;
					public getStateContainer(): com.facebook.litho.StateContainer;
					public shouldUpdate(param0: com.facebook.litho.Component, param1: com.facebook.litho.Component): boolean;
					public hasState(): boolean;
					public hasChildLithoViews(): boolean;
					public canPreallocate(): boolean;
					public static create(param0: com.facebook.litho.ComponentContext): com.facebook.litho.widget.VerticalScroll.Builder;
					public makeShallowCopy(): com.facebook.litho.Component;
					public getMountType(): com.facebook.litho.ComponentLifecycle.MountType;
					public canMeasure(): boolean;
					public recordEventTrigger(param0: com.facebook.litho.EventTriggersContainer): void;
					public transferState(param0: com.facebook.litho.StateContainer, param1: com.facebook.litho.StateContainer): void;
					public static create(param0: com.facebook.litho.ComponentContext, param1: number, param2: number): com.facebook.litho.widget.VerticalScroll.Builder;
					public onUnmount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
					public isEquivalentTo(param0: any): boolean;
					public onCreateMountContent(param0: globalAndroid.content.Context): any;
					public poolSize(): number;
					public acceptTriggerEvent(param0: com.facebook.litho.EventTrigger<any>, param1: any, param2: native.Array<any>): any;
					public makeShallowCopy(): com.facebook.litho.widget.VerticalScroll;
					public isEquivalentTo(param0: com.facebook.litho.Component): boolean;
					public callsShouldUpdateOnMount(): boolean;
					public onMount(param0: com.facebook.litho.ComponentContext, param1: any): void;
					public onMeasure(param0: com.facebook.litho.ComponentContext, param1: com.facebook.litho.ComponentLayout, param2: number, param3: number, param4: com.facebook.litho.Size): void;
					/** @deprecated */
					public getEventDispatcher(): com.facebook.litho.EventDispatcher;
				}
				export module VerticalScroll {
					export class Builder extends com.facebook.litho.Component.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.VerticalScroll.Builder>;
						public constructor();
						public fadingEdgeLengthRes(param0: number): com.facebook.litho.widget.VerticalScroll.Builder;
						public nestedScrollingEnabled(param0: boolean): com.facebook.litho.widget.VerticalScroll.Builder;
						public verticalFadingEdgeEnabled(param0: boolean): com.facebook.litho.widget.VerticalScroll.Builder;
						public childComponent(param0: com.facebook.litho.Component): com.facebook.litho.widget.VerticalScroll.Builder;
						public onScrollChangeListener(param0: androidx.core.widget.NestedScrollView.OnScrollChangeListener): com.facebook.litho.widget.VerticalScroll.Builder;
						public childComponent(param0: com.facebook.litho.Component.Builder<any>): com.facebook.litho.widget.VerticalScroll.Builder;
						public fillViewport(param0: boolean): com.facebook.litho.widget.VerticalScroll.Builder;
						public build(): com.facebook.litho.widget.VerticalScroll;
						public fadingEdgeLengthAttr(param0: number): com.facebook.litho.widget.VerticalScroll.Builder;
						public initialScrollOffsetPixels(param0: java.lang.Integer): com.facebook.litho.widget.VerticalScroll.Builder;
						public getThis(): any;
						public fadingEdgeLengthAttr(param0: number, param1: number): com.facebook.litho.widget.VerticalScroll.Builder;
						public build(): com.facebook.litho.Component;
						public onInterceptTouchListener(param0: com.facebook.litho.widget.VerticalScrollSpec.OnInterceptTouchListener): com.facebook.litho.widget.VerticalScroll.Builder;
						public scrollbarEnabled(param0: boolean): com.facebook.litho.widget.VerticalScroll.Builder;
						public fadingEdgeLengthPx(param0: number): com.facebook.litho.widget.VerticalScroll.Builder;
						public scrollbarFadingEnabled(param0: boolean): com.facebook.litho.widget.VerticalScroll.Builder;
						public getThis(): com.facebook.litho.widget.VerticalScroll.Builder;
						public fadingEdgeLengthDip(param0: number): com.facebook.litho.widget.VerticalScroll.Builder;
						public incrementalMountEnabled(param0: boolean): com.facebook.litho.widget.VerticalScroll.Builder;
					}
					export class VerticalScrollStateContainer extends com.facebook.litho.StateContainer {
						public static class: java.lang.Class<com.facebook.litho.widget.VerticalScroll.VerticalScrollStateContainer>;
						public applyStateUpdate(param0: com.facebook.litho.StateContainer.StateUpdate): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class VerticalScrollSpec extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.VerticalScrollSpec>;
					public constructor();
				}
				export module VerticalScrollSpec {
					export class LithoScrollView extends androidx.core.widget.NestedScrollView {
						public static class: java.lang.Class<com.facebook.litho.widget.VerticalScrollSpec.LithoScrollView>;
						public isLayoutRequested(): boolean;
						public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>): boolean;
						public canResolveLayoutDirection(): boolean;
						public stopNestedScroll(param0: number): void;
						public sendAccessibilityEvent(param0: number): void;
						public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
						public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						/** @deprecated */
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
						public computeHorizontalScrollOffset(): number;
						public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
						public isTextAlignmentResolved(): boolean;
						public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>): boolean;
						public setOnInterceptTouchListener(param0: com.facebook.litho.widget.VerticalScrollSpec.OnInterceptTouchListener): void;
						public hasNestedScrollingParent(param0: number): boolean;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public getTextDirection(): number;
						public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
						public computeVerticalScrollOffset(): number;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public hasNestedScrollingParent(): boolean;
						public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: native.Array<number>, param5: number): boolean;
						public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public removeView(param0: globalAndroid.view.View): void;
						public onStopNestedScroll(param0: globalAndroid.view.View, param1: number): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public dispatchNestedPreScroll(param0: number, param1: number, param2: native.Array<number>, param3: native.Array<number>, param4: number): boolean;
						public onScrollChanged(param0: number, param1: number, param2: number, param3: number): void;
						public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>): void;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public canResolveTextDirection(): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public isLayoutDirectionResolved(): boolean;
						public startNestedScroll(param0: number): boolean;
						public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: native.Array<number>, param4: number): void;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
						public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): boolean;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public computeHorizontalScrollExtent(): number;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
						public isTextDirectionResolved(): boolean;
						public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: number): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
						public computeVerticalScrollRange(): number;
						/** @deprecated */
						public requestFitSystemWindows(): void;
						public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): void;
						public dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public onStopNestedScroll(param0: globalAndroid.view.View): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public addView(param0: globalAndroid.view.View): void;
						public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public requestFitSystemWindows(): void;
						public stopNestedScroll(): void;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public startNestedScroll(param0: number, param1: number): boolean;
						public getTextAlignment(): number;
						public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
						public computeHorizontalScrollRange(): number;
						/** @deprecated */
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public computeVerticalScrollExtent(): number;
						public getParent(): globalAndroid.view.ViewParent;
						public getLayoutDirection(): number;
						public canResolveTextAlignment(): boolean;
					}
					export class OnInterceptTouchListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.VerticalScrollSpec.OnInterceptTouchListener>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.VerticalScrollSpec$OnInterceptTouchListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onInterceptTouch(param0: androidx.core.widget.NestedScrollView, param1: globalAndroid.view.MotionEvent): boolean;
						});
						public constructor();
						public onInterceptTouch(param0: androidx.core.widget.NestedScrollView, param1: globalAndroid.view.MotionEvent): boolean;
					}
					export class ScrollPosition extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.VerticalScrollSpec.ScrollPosition>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ViewRenderInfo extends com.facebook.litho.widget.BaseRenderInfo {
					public static class: java.lang.Class<com.facebook.litho.widget.ViewRenderInfo>;
					public getSpanSize(): number;
					public getCustomAttribute(param0: string): any;
					public getViewCreator(): com.facebook.litho.viewcompat.ViewCreator<any>;
					public hasCustomViewType(): boolean;
					public isSticky(): boolean;
					public getRenderCompleteEventHandler(): com.facebook.litho.EventHandler<com.facebook.litho.RenderCompleteEvent>;
					public isFullSpan(): boolean;
					public rendersComponent(): boolean;
					public static create(): com.facebook.litho.widget.ViewRenderInfo.Builder;
					public getComponent(): com.facebook.litho.Component;
					public getViewBinder(): com.facebook.litho.viewcompat.ViewBinder<any>;
					public getName(): string;
					public addDebugInfo(param0: string, param1: any): void;
					public setViewType(param0: number): void;
					public getViewType(): number;
					public getDebugInfo(param0: string): any;
					public rendersView(): boolean;
				}
				export module ViewRenderInfo {
					export class Builder extends com.facebook.litho.widget.BaseRenderInfo.Builder<any> {
						public static class: java.lang.Class<com.facebook.litho.widget.ViewRenderInfo.Builder>;
						public isFullSpan(param0: boolean): any;
						public constructor();
						public viewCreator(param0: com.facebook.litho.viewcompat.ViewCreator<any>): com.facebook.litho.widget.ViewRenderInfo.Builder;
						public isFullSpan(param0: boolean): com.facebook.litho.widget.ViewRenderInfo.Builder;
						public customViewType(param0: number): com.facebook.litho.widget.ViewRenderInfo.Builder;
						public viewBinder(param0: com.facebook.litho.viewcompat.ViewBinder<any>): com.facebook.litho.widget.ViewRenderInfo.Builder;
						public build(): com.facebook.litho.widget.ViewRenderInfo;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ViewportInfo extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.ViewportInfo>;
					/**
					 * Constructs a new instance of the com.facebook.litho.widget.ViewportInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						findFirstVisibleItemPosition(): number;
						findLastVisibleItemPosition(): number;
						findFirstFullyVisibleItemPosition(): number;
						findLastFullyVisibleItemPosition(): number;
						getItemCount(): number;
					});
					public constructor();
					public findFirstVisibleItemPosition(): number;
					public findLastVisibleItemPosition(): number;
					public findFirstFullyVisibleItemPosition(): number;
					public findLastFullyVisibleItemPosition(): number;
					public getItemCount(): number;
				}
				export module ViewportInfo {
					export class State extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.litho.widget.ViewportInfo.State>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.ViewportInfo$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public static SCROLLING: number;
						public static DATA_CHANGES: number;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class ViewportChanged extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.litho.widget.ViewportInfo.ViewportChanged>;
						/**
						 * Constructs a new instance of the com.facebook.litho.widget.ViewportInfo$ViewportChanged interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							viewportChanged(param0: number, param1: number, param2: number, param3: number, param4: number): void;
						});
						public constructor();
						public viewportChanged(param0: number, param1: number, param2: number, param3: number, param4: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module litho {
			export module widget {
				export class ViewportManager extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.litho.widget.ViewportManager>;
				}
				export module ViewportManager {
					export class ViewportScrollListener extends androidx.recyclerview.widget.RecyclerView.OnScrollListener {
						public static class: java.lang.Class<com.facebook.litho.widget.ViewportManager.ViewportScrollListener>;
						public onScrolled(param0: androidx.recyclerview.widget.RecyclerView, param1: number, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module nativefilters {
			export class BuildConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.nativefilters.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module nativeimagetranscoder {
			export class BuildConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.nativeimagetranscoder.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module proguard {
			export module annotations {
				export class DoNotStrip extends java.lang.Object implements java.lang.annotation.Annotation {
					public static class: java.lang.Class<com.facebook.proguard.annotations.DoNotStrip>;
					/**
					 * Constructs a new instance of the com.facebook.proguard.annotations.DoNotStrip interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						equals(param0: any): boolean;
						hashCode(): number;
						toString(): string;
						annotationType(): java.lang.Class<any>;
					});
					public constructor();
					public equals(param0: any): boolean;
					public toString(): string;
					public annotationType(): java.lang.Class<any>;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class Api18TraceUtils extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.Api18TraceUtils>;
				public static beginTraceSection(param0: string): void;
				public static endSection(): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class ApkSoSource extends com.facebook.soloader.ExtractFromZipSoSource {
				public static class: java.lang.Class<com.facebook.soloader.ApkSoSource>;
				public static PREFER_ANDROID_LIBS_DIRECTORY: number;
				public constructor(param0: globalAndroid.content.Context, param1: string, param2: java.io.File, param3: string);
				public constructor(param0: globalAndroid.content.Context, param1: string);
				public constructor(param0: globalAndroid.content.Context, param1: string, param2: number);
				public constructor(param0: globalAndroid.content.Context, param1: java.io.File);
				public makeUnpacker(): com.facebook.soloader.UnpackingSoSource.Unpacker;
				public constructor(param0: globalAndroid.content.Context, param1: java.io.File, param2: string, param3: number);
				public getDepsBlock(): native.Array<number>;
				public constructor(param0: java.io.File, param1: number);
				public constructor();
			}
			export module ApkSoSource {
				export class ApkUnpacker extends com.facebook.soloader.ExtractFromZipSoSource.ZipUnpacker {
					public static class: java.lang.Class<com.facebook.soloader.ApkSoSource.ApkUnpacker>;
					public close(): void;
					public shouldExtract(param0: java.util.zip.ZipEntry, param1: string): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class ApplicationSoSource extends com.facebook.soloader.SoSource {
				public static class: java.lang.Class<com.facebook.soloader.ApplicationSoSource>;
				public addToLdLibraryPath(param0: java.util.Collection<string>): void;
				public unpackLibrary(param0: string): java.io.File;
				public prepare(param0: number): void;
				public constructor(param0: globalAndroid.content.Context, param1: number);
				public loadLibrary(param0: string, param1: number, param2: globalAndroid.os.StrictMode.ThreadPolicy): number;
				public checkAndMaybeUpdate(): boolean;
				public toString(): string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class DirectorySoSource extends com.facebook.soloader.SoSource {
				public static class: java.lang.Class<com.facebook.soloader.DirectorySoSource>;
				public static RESOLVE_DEPENDENCIES: number;
				public static ON_LD_LIBRARY_PATH: number;
				public soDirectory: java.io.File;
				public flags: number;
				public addToLdLibraryPath(param0: java.util.Collection<string>): void;
				public unpackLibrary(param0: string): java.io.File;
				public loadLibrary(param0: string, param1: number, param2: globalAndroid.os.StrictMode.ThreadPolicy): number;
				public loadLibraryFrom(param0: string, param1: number, param2: java.io.File, param3: globalAndroid.os.StrictMode.ThreadPolicy): number;
				public toString(): string;
				public constructor();
				public constructor(param0: java.io.File, param1: number);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class DoNotOptimize extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<com.facebook.soloader.DoNotOptimize>;
				/**
				 * Constructs a new instance of the com.facebook.soloader.DoNotOptimize interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public hashCode(): number;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public toString(): string;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class Elf32_Dyn extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.Elf32_Dyn>;
				public static d_tag: number;
				public static d_un: number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class Elf32_Ehdr extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.Elf32_Ehdr>;
				public static e_ident: number;
				public static e_type: number;
				public static e_machine: number;
				public static e_version: number;
				public static e_entry: number;
				public static e_phoff: number;
				public static e_shoff: number;
				public static e_flags: number;
				public static e_ehsize: number;
				public static e_phentsize: number;
				public static e_phnum: number;
				public static e_shentsize: number;
				public static e_shnum: number;
				public static e_shstrndx: number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class Elf32_Phdr extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.Elf32_Phdr>;
				public static p_type: number;
				public static p_offset: number;
				public static p_vaddr: number;
				public static p_paddr: number;
				public static p_filesz: number;
				public static p_memsz: number;
				public static p_flags: number;
				public static p_align: number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class Elf32_Shdr extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.Elf32_Shdr>;
				public static sh_name: number;
				public static sh_type: number;
				public static sh_flags: number;
				public static sh_addr: number;
				public static sh_offset: number;
				public static sh_size: number;
				public static sh_link: number;
				public static sh_info: number;
				public static sh_addralign: number;
				public static sh_entsize: number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class Elf64_Dyn extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.Elf64_Dyn>;
				public static d_tag: number;
				public static d_un: number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class Elf64_Ehdr extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.Elf64_Ehdr>;
				public static e_ident: number;
				public static e_type: number;
				public static e_machine: number;
				public static e_version: number;
				public static e_entry: number;
				public static e_phoff: number;
				public static e_shoff: number;
				public static e_flags: number;
				public static e_ehsize: number;
				public static e_phentsize: number;
				public static e_phnum: number;
				public static e_shentsize: number;
				public static e_shnum: number;
				public static e_shstrndx: number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class Elf64_Phdr extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.Elf64_Phdr>;
				public static p_type: number;
				public static p_flags: number;
				public static p_offset: number;
				public static p_vaddr: number;
				public static p_paddr: number;
				public static p_filesz: number;
				public static p_memsz: number;
				public static p_align: number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class Elf64_Shdr extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.Elf64_Shdr>;
				public static sh_name: number;
				public static sh_type: number;
				public static sh_flags: number;
				public static sh_addr: number;
				public static sh_offset: number;
				public static sh_size: number;
				public static sh_link: number;
				public static sh_info: number;
				public static sh_addralign: number;
				public static sh_entsize: number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class ExoSoSource extends com.facebook.soloader.UnpackingSoSource {
				public static class: java.lang.Class<com.facebook.soloader.ExoSoSource>;
				public constructor(param0: globalAndroid.content.Context, param1: string);
				public constructor(param0: globalAndroid.content.Context, param1: java.io.File);
				public makeUnpacker(): com.facebook.soloader.UnpackingSoSource.Unpacker;
				public constructor(param0: java.io.File, param1: number);
				public constructor();
			}
			export module ExoSoSource {
				export class ExoUnpacker extends com.facebook.soloader.UnpackingSoSource.Unpacker {
					public static class: java.lang.Class<com.facebook.soloader.ExoSoSource.ExoUnpacker>;
					public openDsoIterator(): com.facebook.soloader.UnpackingSoSource.InputDsoIterator;
					public close(): void;
					public getDsoManifest(): com.facebook.soloader.UnpackingSoSource.DsoManifest;
				}
				export module ExoUnpacker {
					export class FileBackedInputDsoIterator extends com.facebook.soloader.UnpackingSoSource.InputDsoIterator {
						public static class: java.lang.Class<com.facebook.soloader.ExoSoSource.ExoUnpacker.FileBackedInputDsoIterator>;
						public next(): com.facebook.soloader.UnpackingSoSource.InputDso;
						public close(): void;
						public hasNext(): boolean;
					}
				}
				export class FileDso extends com.facebook.soloader.UnpackingSoSource.Dso {
					public static class: java.lang.Class<com.facebook.soloader.ExoSoSource.FileDso>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class ExtractFromZipSoSource extends com.facebook.soloader.UnpackingSoSource {
				public static class: java.lang.Class<com.facebook.soloader.ExtractFromZipSoSource>;
				public mZipFileName: java.io.File;
				public mZipSearchPattern: string;
				public constructor(param0: globalAndroid.content.Context, param1: string, param2: java.io.File, param3: string);
				public constructor(param0: globalAndroid.content.Context, param1: string);
				public constructor(param0: globalAndroid.content.Context, param1: java.io.File);
				public makeUnpacker(): com.facebook.soloader.UnpackingSoSource.Unpacker;
				public constructor(param0: java.io.File, param1: number);
				public constructor();
			}
			export module ExtractFromZipSoSource {
				export class ZipDso extends com.facebook.soloader.UnpackingSoSource.Dso {
					public static class: java.lang.Class<com.facebook.soloader.ExtractFromZipSoSource.ZipDso>;
					public compareTo(param0: any): number;
				}
				export class ZipUnpacker extends com.facebook.soloader.UnpackingSoSource.Unpacker {
					public static class: java.lang.Class<com.facebook.soloader.ExtractFromZipSoSource.ZipUnpacker>;
					public openDsoIterator(): com.facebook.soloader.UnpackingSoSource.InputDsoIterator;
					public close(): void;
					public getDsoManifest(): com.facebook.soloader.UnpackingSoSource.DsoManifest;
					public shouldExtract(param0: java.util.zip.ZipEntry, param1: string): boolean;
				}
				export module ZipUnpacker {
					export class ZipBackedInputDsoIterator extends com.facebook.soloader.UnpackingSoSource.InputDsoIterator {
						public static class: java.lang.Class<com.facebook.soloader.ExtractFromZipSoSource.ZipUnpacker.ZipBackedInputDsoIterator>;
						public next(): com.facebook.soloader.UnpackingSoSource.InputDso;
						public close(): void;
						public hasNext(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class FileLocker extends java.lang.Object implements java.io.Closeable {
				public static class: java.lang.Class<com.facebook.soloader.FileLocker>;
				public close(): void;
				public static lock(param0: java.io.File): com.facebook.soloader.FileLocker;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class MergedSoMapping extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.MergedSoMapping>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class MinElf extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.MinElf>;
				public static ELF_MAGIC: number;
				public static DT_NULL: number;
				public static DT_NEEDED: number;
				public static DT_STRTAB: number;
				public static PT_LOAD: number;
				public static PT_DYNAMIC: number;
				public static PN_XNUM: number;
				public static extract_DT_NEEDED(param0: java.io.File): native.Array<string>;
				public static extract_DT_NEEDED(param0: java.nio.channels.FileChannel): native.Array<string>;
				public constructor();
			}
			export module MinElf {
				export class ElfError extends java.lang.RuntimeException {
					public static class: java.lang.Class<com.facebook.soloader.MinElf.ElfError>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export abstract class NativeLibrary extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.NativeLibrary>;
				public getError(): java.lang.UnsatisfiedLinkError;
				public ensureLoaded(): void;
				public constructor(param0: java.util.List<string>);
				public initialNativeCheck(): void;
				public loadLibraries(): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class NoopSoSource extends com.facebook.soloader.SoSource {
				public static class: java.lang.Class<com.facebook.soloader.NoopSoSource>;
				public unpackLibrary(param0: string): java.io.File;
				public loadLibrary(param0: string, param1: number, param2: globalAndroid.os.StrictMode.ThreadPolicy): number;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class SoFileLoader extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.SoFileLoader>;
				/**
				 * Constructs a new instance of the com.facebook.soloader.SoFileLoader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					load(param0: string, param1: number): void;
				});
				public constructor();
				public load(param0: string, param1: number): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class SoLoader extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.SoLoader>;
				public static SOLOADER_ENABLE_EXOPACKAGE: number;
				public static SOLOADER_ALLOW_ASYNC_INIT: number;
				public static SOLOADER_LOOK_IN_ZIP: number;
				public static SOLOADER_DISABLE_BACKUP_SOSOURCE: number;
				public static loadLibrary(param0: string): boolean;
				public constructor();
				public static makeNonZipPath(param0: string): string;
				public static setInTestMode(): void;
				public static setSystemLoadLibraryWrapper(param0: com.facebook.soloader.SystemLoadLibraryWrapper): void;
				public static unpackLibraryAndDependencies(param0: string): java.io.File;
				public static makeLdLibraryPath(): string;
				public static loadLibrary(param0: string, param1: number): boolean;
				public static init(param0: globalAndroid.content.Context, param1: boolean): void;
				public static init(param0: globalAndroid.content.Context, param1: number): void;
				public static deinitForTest(): void;
				public static areSoSourcesAbisSupported(): boolean;
				public static prependSoSource(param0: com.facebook.soloader.SoSource): void;
			}
			export module SoLoader {
				export class Api14Utils extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.soloader.SoLoader.Api14Utils>;
					public static getClassLoaderLdLoadLibrary(): string;
				}
				export class WrongAbiError extends java.lang.UnsatisfiedLinkError {
					public static class: java.lang.Class<com.facebook.soloader.SoLoader.WrongAbiError>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export abstract class SoSource extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.SoSource>;
				public static LOAD_RESULT_NOT_FOUND: number;
				public static LOAD_RESULT_LOADED: number;
				public static LOAD_RESULT_IMPLICITLY_PROVIDED: number;
				public static LOAD_RESULT_CORRUPTED_LIB_FILE: number;
				public static LOAD_FLAG_ALLOW_IMPLICIT_PROVISION: number;
				public static LOAD_FLAG_ALLOW_SOURCE_CHANGE: number;
				public static LOAD_FLAG_MIN_CUSTOM_FLAG: number;
				public static PREPARE_FLAG_ALLOW_ASYNC_INIT: number;
				public static PREPARE_FLAG_FORCE_REFRESH: number;
				public addToLdLibraryPath(param0: java.util.Collection<string>): void;
				public unpackLibrary(param0: string): java.io.File;
				public getSoSourceAbis(): native.Array<string>;
				public prepare(param0: number): void;
				public loadLibrary(param0: string, param1: number, param2: globalAndroid.os.StrictMode.ThreadPolicy): number;
				public toString(): string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class SysUtil extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.SysUtil>;
				public static getSupportedAbis(): native.Array<string>;
				public static deleteOrThrow(param0: java.io.File): void;
				public static makeApkDepBlock(param0: java.io.File, param1: globalAndroid.content.Context): native.Array<number>;
				public static findAbiScore(param0: native.Array<string>, param1: string): number;
				public static dumbDeleteRecursive(param0: java.io.File): void;
				public static getAppVersionCode(param0: globalAndroid.content.Context): number;
				public static fallocateIfSupported(param0: java.io.FileDescriptor, param1: number): void;
				public constructor();
			}
			export module SysUtil {
				export class LollipopSysdeps extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.soloader.SysUtil.LollipopSysdeps>;
					public static fallocateIfSupported(param0: java.io.FileDescriptor, param1: number): void;
					public static getSupportedAbis(): native.Array<string>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export class SystemLoadLibraryWrapper extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.soloader.SystemLoadLibraryWrapper>;
				/**
				 * Constructs a new instance of the com.facebook.soloader.SystemLoadLibraryWrapper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					loadLibrary(param0: string): void;
				});
				public constructor();
				public loadLibrary(param0: string): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module soloader {
			export abstract class UnpackingSoSource extends com.facebook.soloader.DirectorySoSource {
				public static class: java.lang.Class<com.facebook.soloader.UnpackingSoSource>;
				public mContext: globalAndroid.content.Context;
				public mCorruptedLib: string;
				public constructor(param0: globalAndroid.content.Context, param1: string);
				public constructor(param0: globalAndroid.content.Context, param1: java.io.File);
				public getSoSourceAbis(): native.Array<string>;
				public makeUnpacker(): com.facebook.soloader.UnpackingSoSource.Unpacker;
				public prepare(param0: number): void;
				public loadLibrary(param0: string, param1: number, param2: globalAndroid.os.StrictMode.ThreadPolicy): number;
				public setSoSourceAbis(param0: native.Array<string>): void;
				public getDepsBlock(): native.Array<number>;
				public static getSoStorePath(param0: globalAndroid.content.Context, param1: string): java.io.File;
				public prepare(param0: string): void;
				public constructor(param0: java.io.File, param1: number);
				public constructor();
			}
			export module UnpackingSoSource {
				export class Dso extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.soloader.UnpackingSoSource.Dso>;
					public name: string;
					public hash: string;
					public constructor(param0: string, param1: string);
				}
				export class DsoManifest extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.soloader.UnpackingSoSource.DsoManifest>;
					public dsos: native.Array<com.facebook.soloader.UnpackingSoSource.Dso>;
					public write(param0: java.io.DataOutput): void;
					public constructor(param0: native.Array<com.facebook.soloader.UnpackingSoSource.Dso>);
				}
				export class InputDso extends java.lang.Object implements java.io.Closeable {
					public static class: java.lang.Class<com.facebook.soloader.UnpackingSoSource.InputDso>;
					public dso: com.facebook.soloader.UnpackingSoSource.Dso;
					public content: java.io.InputStream;
					public close(): void;
					public constructor(param0: com.facebook.soloader.UnpackingSoSource.Dso, param1: java.io.InputStream);
				}
				export abstract class InputDsoIterator extends java.lang.Object implements java.io.Closeable {
					public static class: java.lang.Class<com.facebook.soloader.UnpackingSoSource.InputDsoIterator>;
					public constructor();
					public close(): void;
					public next(): com.facebook.soloader.UnpackingSoSource.InputDso;
					public hasNext(): boolean;
				}
				export abstract class Unpacker extends java.lang.Object implements java.io.Closeable {
					public static class: java.lang.Class<com.facebook.soloader.UnpackingSoSource.Unpacker>;
					public constructor();
					public openDsoIterator(): com.facebook.soloader.UnpackingSoSource.InputDsoIterator;
					public close(): void;
					public getDsoManifest(): com.facebook.soloader.UnpackingSoSource.DsoManifest;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export class BuildConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.stetho.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export class DumperPluginsProvider extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.stetho.DumperPluginsProvider>;
				/**
				 * Constructs a new instance of the com.facebook.stetho.DumperPluginsProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					get(): java.lang.Iterable<com.facebook.stetho.dumpapp.DumperPlugin>;
				});
				public constructor();
				public get(): java.lang.Iterable<com.facebook.stetho.dumpapp.DumperPlugin>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export class InspectorModulesProvider extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.stetho.InspectorModulesProvider>;
				/**
				 * Constructs a new instance of the com.facebook.stetho.InspectorModulesProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					get(): java.lang.Iterable<com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain>;
				});
				public constructor();
				public get(): java.lang.Iterable<com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export class Stetho extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.stetho.Stetho>;
				public static initialize(param0: com.facebook.stetho.Stetho.Initializer): void;
				public static newInitializerBuilder(param0: globalAndroid.content.Context): com.facebook.stetho.Stetho.InitializerBuilder;
				public static defaultDumperPluginsProvider(param0: globalAndroid.content.Context): com.facebook.stetho.DumperPluginsProvider;
				public static initializeWithDefaults(param0: globalAndroid.content.Context): void;
				public static defaultInspectorModulesProvider(param0: globalAndroid.content.Context): com.facebook.stetho.InspectorModulesProvider;
			}
			export module Stetho {
				export class BuilderBasedInitializer extends com.facebook.stetho.Stetho.Initializer {
					public static class: java.lang.Class<com.facebook.stetho.Stetho.BuilderBasedInitializer>;
					public getInspectorModules(): java.lang.Iterable<com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain>;
					public getDumperPlugins(): java.lang.Iterable<com.facebook.stetho.dumpapp.DumperPlugin>;
				}
				export class DefaultDumperPluginsBuilder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.Stetho.DefaultDumperPluginsBuilder>;
					public constructor(param0: globalAndroid.content.Context);
					public remove(param0: string): com.facebook.stetho.Stetho.DefaultDumperPluginsBuilder;
					public finish(): java.lang.Iterable<com.facebook.stetho.dumpapp.DumperPlugin>;
					public provide(param0: com.facebook.stetho.dumpapp.DumperPlugin): com.facebook.stetho.Stetho.DefaultDumperPluginsBuilder;
				}
				export class DefaultInspectorModulesBuilder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.Stetho.DefaultInspectorModulesBuilder>;
					public constructor(param0: globalAndroid.content.Context);
					/** @deprecated */
					public provide(param0: com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain): com.facebook.stetho.Stetho.DefaultInspectorModulesBuilder;
					public finish(): java.lang.Iterable<com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain>;
					/** @deprecated */
					public databaseFiles(param0: com.facebook.stetho.inspector.database.DatabaseFilesProvider): com.facebook.stetho.Stetho.DefaultInspectorModulesBuilder;
					public provideDatabaseDriver(param0: com.facebook.stetho.inspector.protocol.module.DatabaseDriver2<any>): com.facebook.stetho.Stetho.DefaultInspectorModulesBuilder;
					public runtimeRepl(param0: com.facebook.stetho.inspector.console.RuntimeReplFactory): com.facebook.stetho.Stetho.DefaultInspectorModulesBuilder;
					/** @deprecated */
					public provideDatabaseDriver(param0: com.facebook.stetho.inspector.protocol.module.Database.DatabaseDriver): com.facebook.stetho.Stetho.DefaultInspectorModulesBuilder;
					public excludeSqliteDatabaseDriver(param0: boolean): com.facebook.stetho.Stetho.DefaultInspectorModulesBuilder;
					/** @deprecated */
					public remove(param0: string): com.facebook.stetho.Stetho.DefaultInspectorModulesBuilder;
					public documentProvider(param0: com.facebook.stetho.inspector.elements.DocumentProviderFactory): com.facebook.stetho.Stetho.DefaultInspectorModulesBuilder;
				}
				export abstract class Initializer extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.Stetho.Initializer>;
					public constructor(param0: globalAndroid.content.Context);
					public getInspectorModules(): java.lang.Iterable<com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain>;
					public getDumperPlugins(): java.lang.Iterable<com.facebook.stetho.dumpapp.DumperPlugin>;
				}
				export module Initializer {
					export class RealSocketHandlerFactory extends java.lang.Object implements com.facebook.stetho.server.SocketHandlerFactory {
						public static class: java.lang.Class<com.facebook.stetho.Stetho.Initializer.RealSocketHandlerFactory>;
						public create(): com.facebook.stetho.server.SocketHandler;
					}
				}
				export class InitializerBuilder extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.Stetho.InitializerBuilder>;
					public build(): com.facebook.stetho.Stetho.Initializer;
					public enableWebKitInspector(param0: com.facebook.stetho.InspectorModulesProvider): com.facebook.stetho.Stetho.InitializerBuilder;
					public enableDumpapp(param0: com.facebook.stetho.DumperPluginsProvider): com.facebook.stetho.Stetho.InitializerBuilder;
				}
				export class PluginBuilder<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.Stetho.PluginBuilder<any>>;
					public remove(param0: string): void;
					public finish(): java.lang.Iterable<T>;
					public provideIfDesired(param0: string, param1: T): void;
					public provide(param0: string, param1: T): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class Accumulator<E>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.Accumulator<any>>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.common.Accumulator<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						store(param0: E): void;
					});
					public constructor();
					public store(param0: E): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class ArrayListAccumulator<E>  extends java.util.ArrayList<any> implements com.facebook.stetho.common.Accumulator<any>  {
					public static class: java.lang.Class<com.facebook.stetho.common.ArrayListAccumulator<any>>;
					public addAll(param0: java.util.Collection<any>): boolean;
					public isEmpty(): boolean;
					public add(param0: any): boolean;
					public spliterator(): java.util.Spliterator<any>;
					public containsAll(param0: java.util.Collection<any>): boolean;
					public size(): number;
					public lastIndexOf(param0: any): number;
					public sort(param0: java.util.Comparator<any>): void;
					public remove(param0: number): any;
					public iterator(): java.util.Iterator<any>;
					public replaceAll(param0: any /* any*/): void;
					public toArray(param0: native.Array<any>): native.Array<any>;
					public constructor();
					public toArray(): native.Array<any>;
					public clear(): void;
					public get(param0: number): any;
					public subList(param0: number, param1: number): java.util.List<any>;
					public listIterator(param0: number): java.util.ListIterator<any>;
					public hashCode(): number;
					public constructor(param0: number);
					public contains(param0: any): boolean;
					public removeIf(param0: any /* any*/): boolean;
					public remove(param0: any): boolean;
					public removeAll(param0: java.util.Collection<any>): boolean;
					public add(param0: number, param1: any): void;
					public parallelStream(): java.util.stream.Stream<any>;
					public addAll(param0: number, param1: java.util.Collection<any>): boolean;
					public store(param0: any): void;
					public retainAll(param0: java.util.Collection<any>): boolean;
					public indexOf(param0: any): number;
					public equals(param0: any): boolean;
					public set(param0: number, param1: any): any;
					public constructor(param0: java.util.Collection<any>);
					public listIterator(): java.util.ListIterator<any>;
					public stream(): java.util.stream.Stream<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class ExceptionUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.ExceptionUtil>;
					public constructor();
					public static sneakyThrow(param0: java.lang.Throwable): void;
					public static propagate(param0: java.lang.Throwable): java.lang.RuntimeException;
					public static propagateIfInstanceOf(param0: java.lang.Throwable, param1: java.lang.Class<any>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class ListUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.ListUtil>;
					public static identityEquals(param0: java.util.List<any>, param1: java.util.List<any>): boolean;
					public static newImmutableList(param0: any): java.util.List<any>;
					public static copyToImmutableList(param0: java.util.List<any>): java.util.List<any>;
					public static newImmutableList(param0: any, param1: any): java.util.List<any>;
				}
				export module ListUtil {
					export class FiveItemImmutableList<E>  extends java.util.AbstractList<any> implements com.facebook.stetho.common.ListUtil.ImmutableList<any>  {
						public static class: java.lang.Class<com.facebook.stetho.common.ListUtil.FiveItemImmutableList<any>>;
						public forEach(param0: any /* any*/): void;
						public listIterator(): java.util.ListIterator<any>;
						public iterator(): java.util.Iterator<any>;
						public add(param0: any): boolean;
						public stream(): java.util.stream.Stream<any>;
						public replaceAll(param0: any /* any*/): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public listIterator(param0: number): java.util.ListIterator<any>;
						public toArray(param0: native.Array<any>): native.Array<any>;
						public addAll(param0: java.util.Collection<any>): boolean;
						public retainAll(param0: java.util.Collection<any>): boolean;
						public spliterator(): java.util.Spliterator<any>;
						public set(param0: number, param1: any): any;
						public get(param0: number): any;
						public isEmpty(): boolean;
						public size(): number;
						public constructor(param0: any, param1: any, param2: any, param3: any, param4: any);
						public removeAll(param0: java.util.Collection<any>): boolean;
						public constructor();
						public contains(param0: any): boolean;
						public lastIndexOf(param0: any): number;
						public subList(param0: number, param1: number): java.util.List<any>;
						public parallelStream(): java.util.stream.Stream<any>;
						public add(param0: number, param1: any): void;
						public remove(param0: any): boolean;
						public indexOf(param0: any): number;
						public removeIf(param0: any /* any*/): boolean;
						public remove(param0: number): any;
						public clear(): void;
						public addAll(param0: number, param1: java.util.Collection<any>): boolean;
						public sort(param0: java.util.Comparator<any>): void;
						public toArray(): native.Array<any>;
						public containsAll(param0: java.util.Collection<any>): boolean;
					}
					export class FourItemImmutableList<E>  extends java.util.AbstractList<any> implements com.facebook.stetho.common.ListUtil.ImmutableList<any>  {
						public static class: java.lang.Class<com.facebook.stetho.common.ListUtil.FourItemImmutableList<any>>;
						public forEach(param0: any /* any*/): void;
						public listIterator(): java.util.ListIterator<any>;
						public iterator(): java.util.Iterator<any>;
						public add(param0: any): boolean;
						public stream(): java.util.stream.Stream<any>;
						public replaceAll(param0: any /* any*/): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public listIterator(param0: number): java.util.ListIterator<any>;
						public toArray(param0: native.Array<any>): native.Array<any>;
						public addAll(param0: java.util.Collection<any>): boolean;
						public retainAll(param0: java.util.Collection<any>): boolean;
						public spliterator(): java.util.Spliterator<any>;
						public set(param0: number, param1: any): any;
						public get(param0: number): any;
						public isEmpty(): boolean;
						public size(): number;
						public removeAll(param0: java.util.Collection<any>): boolean;
						public constructor();
						public contains(param0: any): boolean;
						public lastIndexOf(param0: any): number;
						public subList(param0: number, param1: number): java.util.List<any>;
						public parallelStream(): java.util.stream.Stream<any>;
						public add(param0: number, param1: any): void;
						public remove(param0: any): boolean;
						public indexOf(param0: any): number;
						public removeIf(param0: any /* any*/): boolean;
						public remove(param0: number): any;
						public clear(): void;
						public constructor(param0: any, param1: any, param2: any, param3: any);
						public addAll(param0: number, param1: java.util.Collection<any>): boolean;
						public sort(param0: java.util.Comparator<any>): void;
						public toArray(): native.Array<any>;
						public containsAll(param0: java.util.Collection<any>): boolean;
					}
					export class ImmutableArrayList<E>  extends java.util.AbstractList<any> implements com.facebook.stetho.common.ListUtil.ImmutableList<any>  {
						public static class: java.lang.Class<com.facebook.stetho.common.ListUtil.ImmutableArrayList<any>>;
						public forEach(param0: any /* any*/): void;
						public listIterator(): java.util.ListIterator<any>;
						public iterator(): java.util.Iterator<any>;
						public add(param0: any): boolean;
						public stream(): java.util.stream.Stream<any>;
						public replaceAll(param0: any /* any*/): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public listIterator(param0: number): java.util.ListIterator<any>;
						public toArray(param0: native.Array<any>): native.Array<any>;
						public addAll(param0: java.util.Collection<any>): boolean;
						public retainAll(param0: java.util.Collection<any>): boolean;
						public spliterator(): java.util.Spliterator<any>;
						public set(param0: number, param1: any): any;
						public get(param0: number): any;
						public isEmpty(): boolean;
						public size(): number;
						public removeAll(param0: java.util.Collection<any>): boolean;
						public constructor();
						public contains(param0: any): boolean;
						public lastIndexOf(param0: any): number;
						public subList(param0: number, param1: number): java.util.List<any>;
						public parallelStream(): java.util.stream.Stream<any>;
						public add(param0: number, param1: any): void;
						public remove(param0: any): boolean;
						public indexOf(param0: any): number;
						public removeIf(param0: any /* any*/): boolean;
						public remove(param0: number): any;
						public clear(): void;
						public addAll(param0: number, param1: java.util.Collection<any>): boolean;
						public sort(param0: java.util.Comparator<any>): void;
						public constructor(param0: native.Array<any>);
						public toArray(): native.Array<any>;
						public containsAll(param0: java.util.Collection<any>): boolean;
					}
					export class ImmutableList<E>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.ListUtil.ImmutableList<any>>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.common.ListUtil$ImmutableList interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							size(): number;
							isEmpty(): boolean;
							contains(param0: any): boolean;
							iterator(): java.util.Iterator<E>;
							toArray(): native.Array<any>;
							toArray(param0: native.Array<any>): native.Array<any>;
							add(param0: E): boolean;
							remove(param0: any): boolean;
							containsAll(param0: java.util.Collection<any>): boolean;
							addAll(param0: java.util.Collection<any>): boolean;
							addAll(param0: number, param1: java.util.Collection<any>): boolean;
							removeAll(param0: java.util.Collection<any>): boolean;
							retainAll(param0: java.util.Collection<any>): boolean;
							replaceAll(param0: any /* any*/): void;
							sort(param0: java.util.Comparator<any>): void;
							clear(): void;
							equals(param0: any): boolean;
							hashCode(): number;
							get(param0: number): E;
							set(param0: number, param1: E): E;
							add(param0: number, param1: E): void;
							remove(param0: number): E;
							indexOf(param0: any): number;
							lastIndexOf(param0: any): number;
							listIterator(): java.util.ListIterator<E>;
							listIterator(param0: number): java.util.ListIterator<E>;
							subList(param0: number, param1: number): java.util.List<E>;
							spliterator(): java.util.Spliterator<E>;
							size(): number;
							isEmpty(): boolean;
							contains(param0: any): boolean;
							iterator(): java.util.Iterator<E>;
							toArray(): native.Array<any>;
							toArray(param0: native.Array<any>): native.Array<any>;
							add(param0: E): boolean;
							remove(param0: any): boolean;
							containsAll(param0: java.util.Collection<any>): boolean;
							addAll(param0: java.util.Collection<any>): boolean;
							removeAll(param0: java.util.Collection<any>): boolean;
							removeIf(param0: any /* any*/): boolean;
							retainAll(param0: java.util.Collection<any>): boolean;
							clear(): void;
							equals(param0: any): boolean;
							hashCode(): number;
							spliterator(): java.util.Spliterator<E>;
							stream(): java.util.stream.Stream<E>;
							parallelStream(): java.util.stream.Stream<E>;
							iterator(): java.util.Iterator<any>;
							forEach(param0: any /* any*/): void;
							spliterator(): java.util.Spliterator<any>;
						});
						public constructor();
						public forEach(param0: any /* any*/): void;
						public listIterator(): java.util.ListIterator<E>;
						public iterator(): java.util.Iterator<any>;
						public get(param0: number): E;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toArray(param0: native.Array<any>): native.Array<any>;
						public addAll(param0: java.util.Collection<any>): boolean;
						public retainAll(param0: java.util.Collection<any>): boolean;
						public spliterator(): java.util.Spliterator<any>;
						public isEmpty(): boolean;
						public size(): number;
						public removeAll(param0: java.util.Collection<any>): boolean;
						public spliterator(): java.util.Spliterator<E>;
						public add(param0: number, param1: E): void;
						public contains(param0: any): boolean;
						public lastIndexOf(param0: any): number;
						public subList(param0: number, param1: number): java.util.List<E>;
						public add(param0: E): boolean;
						public stream(): java.util.stream.Stream<E>;
						public remove(param0: any): boolean;
						public replaceAll(param0: any /* any*/): void;
						public indexOf(param0: any): number;
						public removeIf(param0: any /* any*/): boolean;
						public listIterator(param0: number): java.util.ListIterator<E>;
						public set(param0: number, param1: E): E;
						public iterator(): java.util.Iterator<E>;
						public clear(): void;
						public remove(param0: number): E;
						public addAll(param0: number, param1: java.util.Collection<any>): boolean;
						public sort(param0: java.util.Comparator<any>): void;
						public parallelStream(): java.util.stream.Stream<E>;
						public toArray(): native.Array<any>;
						public containsAll(param0: java.util.Collection<any>): boolean;
					}
					export class OneItemImmutableList<E>  extends java.util.AbstractList<any> implements com.facebook.stetho.common.ListUtil.ImmutableList<any>  {
						public static class: java.lang.Class<com.facebook.stetho.common.ListUtil.OneItemImmutableList<any>>;
						public forEach(param0: any /* any*/): void;
						public listIterator(): java.util.ListIterator<any>;
						public iterator(): java.util.Iterator<any>;
						public add(param0: any): boolean;
						public stream(): java.util.stream.Stream<any>;
						public replaceAll(param0: any /* any*/): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public constructor(param0: any);
						public listIterator(param0: number): java.util.ListIterator<any>;
						public toArray(param0: native.Array<any>): native.Array<any>;
						public addAll(param0: java.util.Collection<any>): boolean;
						public retainAll(param0: java.util.Collection<any>): boolean;
						public spliterator(): java.util.Spliterator<any>;
						public set(param0: number, param1: any): any;
						public get(param0: number): any;
						public isEmpty(): boolean;
						public size(): number;
						public removeAll(param0: java.util.Collection<any>): boolean;
						public constructor();
						public contains(param0: any): boolean;
						public lastIndexOf(param0: any): number;
						public subList(param0: number, param1: number): java.util.List<any>;
						public parallelStream(): java.util.stream.Stream<any>;
						public add(param0: number, param1: any): void;
						public remove(param0: any): boolean;
						public indexOf(param0: any): number;
						public removeIf(param0: any /* any*/): boolean;
						public remove(param0: number): any;
						public clear(): void;
						public addAll(param0: number, param1: java.util.Collection<any>): boolean;
						public sort(param0: java.util.Comparator<any>): void;
						public toArray(): native.Array<any>;
						public containsAll(param0: java.util.Collection<any>): boolean;
					}
					export class ThreeItemImmutableList<E>  extends java.util.AbstractList<any> implements com.facebook.stetho.common.ListUtil.ImmutableList<any>  {
						public static class: java.lang.Class<com.facebook.stetho.common.ListUtil.ThreeItemImmutableList<any>>;
						public forEach(param0: any /* any*/): void;
						public listIterator(): java.util.ListIterator<any>;
						public iterator(): java.util.Iterator<any>;
						public add(param0: any): boolean;
						public stream(): java.util.stream.Stream<any>;
						public replaceAll(param0: any /* any*/): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public listIterator(param0: number): java.util.ListIterator<any>;
						public toArray(param0: native.Array<any>): native.Array<any>;
						public addAll(param0: java.util.Collection<any>): boolean;
						public retainAll(param0: java.util.Collection<any>): boolean;
						public spliterator(): java.util.Spliterator<any>;
						public set(param0: number, param1: any): any;
						public get(param0: number): any;
						public isEmpty(): boolean;
						public size(): number;
						public removeAll(param0: java.util.Collection<any>): boolean;
						public constructor();
						public contains(param0: any): boolean;
						public lastIndexOf(param0: any): number;
						public subList(param0: number, param1: number): java.util.List<any>;
						public parallelStream(): java.util.stream.Stream<any>;
						public add(param0: number, param1: any): void;
						public remove(param0: any): boolean;
						public constructor(param0: any, param1: any, param2: any);
						public indexOf(param0: any): number;
						public removeIf(param0: any /* any*/): boolean;
						public remove(param0: number): any;
						public clear(): void;
						public addAll(param0: number, param1: java.util.Collection<any>): boolean;
						public sort(param0: java.util.Comparator<any>): void;
						public toArray(): native.Array<any>;
						public containsAll(param0: java.util.Collection<any>): boolean;
					}
					export class TwoItemImmutableList<E>  extends java.util.AbstractList<any> implements com.facebook.stetho.common.ListUtil.ImmutableList<any>  {
						public static class: java.lang.Class<com.facebook.stetho.common.ListUtil.TwoItemImmutableList<any>>;
						public forEach(param0: any /* any*/): void;
						public listIterator(): java.util.ListIterator<any>;
						public iterator(): java.util.Iterator<any>;
						public add(param0: any): boolean;
						public stream(): java.util.stream.Stream<any>;
						public replaceAll(param0: any /* any*/): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public listIterator(param0: number): java.util.ListIterator<any>;
						public constructor(param0: any, param1: any);
						public toArray(param0: native.Array<any>): native.Array<any>;
						public addAll(param0: java.util.Collection<any>): boolean;
						public retainAll(param0: java.util.Collection<any>): boolean;
						public spliterator(): java.util.Spliterator<any>;
						public set(param0: number, param1: any): any;
						public get(param0: number): any;
						public isEmpty(): boolean;
						public size(): number;
						public removeAll(param0: java.util.Collection<any>): boolean;
						public constructor();
						public contains(param0: any): boolean;
						public lastIndexOf(param0: any): number;
						public subList(param0: number, param1: number): java.util.List<any>;
						public parallelStream(): java.util.stream.Stream<any>;
						public add(param0: number, param1: any): void;
						public remove(param0: any): boolean;
						public indexOf(param0: any): number;
						public removeIf(param0: any /* any*/): boolean;
						public remove(param0: number): any;
						public clear(): void;
						public addAll(param0: number, param1: java.util.Collection<any>): boolean;
						public sort(param0: java.util.Comparator<any>): void;
						public toArray(): native.Array<any>;
						public containsAll(param0: java.util.Collection<any>): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class LogRedirector extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.LogRedirector>;
					public static i(param0: string, param1: string): void;
					public static d(param0: string, param1: string, param2: java.lang.Throwable): void;
					public static e(param0: string, param1: string): void;
					public static isLoggable(param0: string, param1: number): boolean;
					public static v(param0: string, param1: string, param2: java.lang.Throwable): void;
					public static setLogger(param0: com.facebook.stetho.common.LogRedirector.Logger): void;
					public static e(param0: string, param1: string, param2: java.lang.Throwable): void;
					public constructor();
					public static d(param0: string, param1: string): void;
					public static w(param0: string, param1: string, param2: java.lang.Throwable): void;
					public static v(param0: string, param1: string): void;
					public static w(param0: string, param1: string): void;
					public static i(param0: string, param1: string, param2: java.lang.Throwable): void;
				}
				export module LogRedirector {
					export class Logger extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.LogRedirector.Logger>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.common.LogRedirector$Logger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							isLoggable(param0: string, param1: number): boolean;
							log(param0: number, param1: string, param2: string): void;
						});
						public constructor();
						public log(param0: number, param1: string, param2: string): void;
						public isLoggable(param0: string, param1: number): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class LogUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.LogUtil>;
					public static w(param0: string, param1: native.Array<any>): void;
					public static d(param0: string, param1: native.Array<any>): void;
					public static d(param0: string): void;
					public static w(param0: java.lang.Throwable, param1: string, param2: native.Array<any>): void;
					public static e(param0: string): void;
					public static d(param0: java.lang.Throwable, param1: string, param2: native.Array<any>): void;
					public static v(param0: java.lang.Throwable, param1: string): void;
					public static e(param0: string, param1: native.Array<any>): void;
					public static e(param0: java.lang.Throwable, param1: string): void;
					public static i(param0: java.lang.Throwable, param1: string, param2: native.Array<any>): void;
					public static isLoggable(param0: number): boolean;
					public static w(param0: string): void;
					public static d(param0: java.lang.Throwable, param1: string): void;
					public static i(param0: string): void;
					public constructor();
					public static i(param0: string, param1: native.Array<any>): void;
					public static e(param0: java.lang.Throwable, param1: string, param2: native.Array<any>): void;
					public static v(param0: string, param1: native.Array<any>): void;
					public static w(param0: java.lang.Throwable, param1: string): void;
					public static v(param0: java.lang.Throwable, param1: string, param2: native.Array<any>): void;
					public static v(param0: string): void;
					public static i(param0: java.lang.Throwable, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class Predicate<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.Predicate<any>>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.common.Predicate<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						apply(param0: T): boolean;
					});
					public constructor();
					public apply(param0: T): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class ProcessUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.ProcessUtil>;
					public constructor();
					public static getProcessName(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class ReflectionUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.ReflectionUtil>;
					public static tryGetDeclaredField(param0: java.lang.Class<any>, param1: string): java.lang.reflect.Field;
					public static getFieldValue(param0: java.lang.reflect.Field, param1: any): any;
					public static tryGetClassForName(param0: string): java.lang.Class<any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class StringUtil extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.StringUtil>;
					public static removeAll(param0: string, param1: string): string;
					public static removePrefix(param0: string, param1: string, param2: string): string;
					public static removePrefix(param0: string, param1: string): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class ThreadBound extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.ThreadBound>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.common.ThreadBound interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						checkThreadAccess(): boolean;
						verifyThreadAccess(): void;
						postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
						postAndWait(param0: java.lang.Runnable): void;
						postDelayed(param0: java.lang.Runnable, param1: number): void;
						removeCallbacks(param0: java.lang.Runnable): void;
					});
					public constructor();
					public postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
					public removeCallbacks(param0: java.lang.Runnable): void;
					public verifyThreadAccess(): void;
					public postAndWait(param0: java.lang.Runnable): void;
					public postDelayed(param0: java.lang.Runnable, param1: number): void;
					public checkThreadAccess(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class UncheckedCallable<V>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.UncheckedCallable<any>>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.common.UncheckedCallable<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						call(): V;
					});
					public constructor();
					public call(): V;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class Utf8Charset extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.Utf8Charset>;
					public static NAME: string;
					public static INSTANCE: java.nio.charset.Charset;
					public static decodeUTF8(param0: native.Array<number>): string;
					public constructor();
					public static encodeUTF8(param0: string): native.Array<number>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export class Util extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.common.Util>;
					public static throwIfNull(param0: any): any;
					public static throwIfNot(param0: boolean, param1: string, param2: native.Array<any>): void;
					public static close(param0: java.io.Closeable, param1: boolean): void;
					public static getUninterruptibly(param0: java.util.concurrent.Future<any>): any;
					public static joinUninterruptibly(param0: java.lang.Thread): void;
					public static throwIfNull(param0: any, param1: any): void;
					public static copy(param0: java.io.InputStream, param1: java.io.OutputStream, param2: native.Array<number>): void;
					public static throwIfNull(param0: any, param1: any, param2: any): void;
					public static throwIfNotNull(param0: any): void;
					public static awaitUninterruptibly(param0: java.util.concurrent.CountDownLatch): void;
					public constructor();
					public static sleepUninterruptibly(param0: number): void;
					public static readAsUTF8(param0: java.io.InputStream): string;
					public static throwIfNot(param0: boolean): void;
					public static getUninterruptibly(param0: java.util.concurrent.Future<any>, param1: number, param2: java.util.concurrent.TimeUnit): any;
					public static throwIf(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class AccessibilityUtil extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.android.AccessibilityUtil>;
						public static isTopLevelScrollItem(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: globalAndroid.view.View): boolean;
						public static hasText(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): boolean;
						public static hasNonActionableSpeakingDescendants(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: globalAndroid.view.View): boolean;
						public static isActionableForAccessibility(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): boolean;
						public static isSpeakingNode(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: globalAndroid.view.View): boolean;
						public static hasFocusableAncestor(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: globalAndroid.view.View): boolean;
						public static isAccessibilityFocusable(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: globalAndroid.view.View): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class DialogFragmentAccessor<DIALOG_FRAGMENT, FRAGMENT, FRAGMENT_MANAGER>  extends com.facebook.stetho.common.android.FragmentAccessor<any,any> {
						public static class: java.lang.Class<com.facebook.stetho.common.android.DialogFragmentAccessor<any,any,any>>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.common.android.DialogFragmentAccessor<any,any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getDialog(param0: any): globalAndroid.app.Dialog;
							getFragmentManager(param0: any): any;
							getResources(param0: any): globalAndroid.content.res.Resources;
							getId(param0: any): number;
							getTag(param0: any): string;
							getView(param0: any): globalAndroid.view.View;
							getChildFragmentManager(param0: any): any;
						});
						public constructor();
						public static NO_ID: number;
						public getFragmentManager(param0: any): any;
						public getDialog(param0: any): globalAndroid.app.Dialog;
						public getView(param0: any): globalAndroid.view.View;
						public getTag(param0: any): string;
						public getResources(param0: any): globalAndroid.content.res.Resources;
						public getId(param0: any): number;
						public getChildFragmentManager(param0: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class FragmentAccessor<FRAGMENT, FRAGMENT_MANAGER>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentAccessor<any,any>>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.common.android.FragmentAccessor<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getFragmentManager(param0: FRAGMENT): FRAGMENT_MANAGER;
							getResources(param0: FRAGMENT): globalAndroid.content.res.Resources;
							getId(param0: FRAGMENT): number;
							getTag(param0: FRAGMENT): string;
							getView(param0: FRAGMENT): globalAndroid.view.View;
							getChildFragmentManager(param0: FRAGMENT): FRAGMENT_MANAGER;
						});
						public constructor();
						public static NO_ID: number;
						public getTag(param0: FRAGMENT): string;
						public getId(param0: FRAGMENT): number;
						public getResources(param0: FRAGMENT): globalAndroid.content.res.Resources;
						public getView(param0: FRAGMENT): globalAndroid.view.View;
						public getChildFragmentManager(param0: FRAGMENT): FRAGMENT_MANAGER;
						public getFragmentManager(param0: FRAGMENT): FRAGMENT_MANAGER;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class FragmentActivityAccessor<FRAGMENT_ACTIVITY, FRAGMENT_MANAGER>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentActivityAccessor<any,any>>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.common.android.FragmentActivityAccessor<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getFragmentManager(param0: FRAGMENT_ACTIVITY): FRAGMENT_MANAGER;
						});
						public constructor();
						public getFragmentManager(param0: FRAGMENT_ACTIVITY): FRAGMENT_MANAGER;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export abstract class FragmentCompat<FRAGMENT, DIALOG_FRAGMENT, FRAGMENT_MANAGER, FRAGMENT_ACTIVITY>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompat<any,any,any,any>>;
						public forDialogFragment(): com.facebook.stetho.common.android.DialogFragmentAccessor<DIALOG_FRAGMENT,FRAGMENT,FRAGMENT_MANAGER>;
						public static getSupportLibInstance(): com.facebook.stetho.common.android.FragmentCompat<any,any,any,any>;
						public forFragmentManager(): com.facebook.stetho.common.android.FragmentManagerAccessor<FRAGMENT_MANAGER,FRAGMENT>;
						public getFragmentActivityClass(): java.lang.Class<FRAGMENT_ACTIVITY>;
						public getDialogFragmentClass(): java.lang.Class<DIALOG_FRAGMENT>;
						public forFragmentActivity(): com.facebook.stetho.common.android.FragmentActivityAccessor<FRAGMENT_ACTIVITY,FRAGMENT_MANAGER>;
						public getFragmentClass(): java.lang.Class<FRAGMENT>;
						public forFragment(): com.facebook.stetho.common.android.FragmentAccessor<FRAGMENT,FRAGMENT_MANAGER>;
						public static getFrameworkInstance(): com.facebook.stetho.common.android.FragmentCompat<any,any,any,any>;
					}
					export module FragmentCompat {
						export class FragmentManagerAccessorViaReflection<FRAGMENT_MANAGER, FRAGMENT>  extends com.facebook.stetho.common.android.FragmentManagerAccessor<any,any> {
							public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompat.FragmentManagerAccessorViaReflection<any,any>>;
							public getAddedFragments(param0: any): java.util.List<any>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class FragmentCompatFramework extends com.facebook.stetho.common.android.FragmentCompat<globalAndroid.app.Fragment,globalAndroid.app.DialogFragment,globalAndroid.app.FragmentManager,globalAndroid.app.Activity> {
						public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompatFramework>;
						public getFragmentActivityClass(): java.lang.Class<globalAndroid.app.Activity>;
						public forDialogFragment(): com.facebook.stetho.common.android.FragmentCompatFramework.DialogFragmentAccessorFramework;
						public forFragmentActivity(): com.facebook.stetho.common.android.FragmentCompatFramework.FragmentActivityAccessorFramework;
						public forFragmentManager(): com.facebook.stetho.common.android.FragmentCompat.FragmentManagerAccessorViaReflection<globalAndroid.app.FragmentManager,globalAndroid.app.Fragment>;
						public getFragmentActivityClass(): java.lang.Class<any>;
						public forDialogFragment(): com.facebook.stetho.common.android.DialogFragmentAccessor<any,any,any>;
						public forFragmentActivity(): com.facebook.stetho.common.android.FragmentActivityAccessor<any,any>;
						public forFragmentManager(): com.facebook.stetho.common.android.FragmentManagerAccessor<any,any>;
						public getFragmentClass(): java.lang.Class<globalAndroid.app.Fragment>;
						public forFragment(): com.facebook.stetho.common.android.FragmentAccessor<any,any>;
						public forFragment(): com.facebook.stetho.common.android.FragmentCompatFramework.FragmentAccessorFrameworkHoneycomb;
						public getDialogFragmentClass(): java.lang.Class<globalAndroid.app.DialogFragment>;
						public getDialogFragmentClass(): java.lang.Class<any>;
						public getFragmentClass(): java.lang.Class<any>;
					}
					export module FragmentCompatFramework {
						export class DialogFragmentAccessorFramework extends com.facebook.stetho.common.android.DialogFragmentAccessor<globalAndroid.app.DialogFragment,globalAndroid.app.Fragment,globalAndroid.app.FragmentManager> {
							public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompatFramework.DialogFragmentAccessorFramework>;
							public getFragmentManager(param0: globalAndroid.app.Fragment): globalAndroid.app.FragmentManager;
							public getDialog(param0: globalAndroid.app.DialogFragment): globalAndroid.app.Dialog;
							public getTag(param0: globalAndroid.app.Fragment): string;
							public getResources(param0: any): globalAndroid.content.res.Resources;
							public getTag(param0: any): string;
							public getChildFragmentManager(param0: globalAndroid.app.Fragment): globalAndroid.app.FragmentManager;
							public getChildFragmentManager(param0: any): any;
							public constructor(param0: com.facebook.stetho.common.android.FragmentAccessor<globalAndroid.app.Fragment,globalAndroid.app.FragmentManager>);
							public getDialog(param0: any): globalAndroid.app.Dialog;
							public getFragmentManager(param0: any): any;
							public getId(param0: any): number;
							public getResources(param0: globalAndroid.app.Fragment): globalAndroid.content.res.Resources;
							public getId(param0: globalAndroid.app.Fragment): number;
							public getView(param0: any): globalAndroid.view.View;
							public getView(param0: globalAndroid.app.Fragment): globalAndroid.view.View;
						}
						export class FragmentAccessorFrameworkHoneycomb extends com.facebook.stetho.common.android.FragmentAccessor<globalAndroid.app.Fragment,globalAndroid.app.FragmentManager> {
							public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompatFramework.FragmentAccessorFrameworkHoneycomb>;
							public getFragmentManager(param0: globalAndroid.app.Fragment): globalAndroid.app.FragmentManager;
							public getTag(param0: globalAndroid.app.Fragment): string;
							public getFragmentManager(param0: any): any;
							public getResources(param0: any): globalAndroid.content.res.Resources;
							public getId(param0: any): number;
							public getResources(param0: globalAndroid.app.Fragment): globalAndroid.content.res.Resources;
							public getId(param0: globalAndroid.app.Fragment): number;
							public getTag(param0: any): string;
							public getView(param0: any): globalAndroid.view.View;
							public getView(param0: globalAndroid.app.Fragment): globalAndroid.view.View;
							public getChildFragmentManager(param0: globalAndroid.app.Fragment): globalAndroid.app.FragmentManager;
							public getChildFragmentManager(param0: any): any;
						}
						export class FragmentAccessorFrameworkJellyBean extends com.facebook.stetho.common.android.FragmentCompatFramework.FragmentAccessorFrameworkHoneycomb {
							public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompatFramework.FragmentAccessorFrameworkJellyBean>;
							public getFragmentManager(param0: globalAndroid.app.Fragment): globalAndroid.app.FragmentManager;
							public getTag(param0: globalAndroid.app.Fragment): string;
							public getFragmentManager(param0: any): any;
							public getResources(param0: any): globalAndroid.content.res.Resources;
							public getId(param0: any): number;
							public getResources(param0: globalAndroid.app.Fragment): globalAndroid.content.res.Resources;
							public getId(param0: globalAndroid.app.Fragment): number;
							public getTag(param0: any): string;
							public getView(param0: any): globalAndroid.view.View;
							public getChildFragmentManager(param0: globalAndroid.app.Fragment): globalAndroid.app.FragmentManager;
							public getView(param0: globalAndroid.app.Fragment): globalAndroid.view.View;
							public getChildFragmentManager(param0: any): any;
						}
						export class FragmentActivityAccessorFramework extends com.facebook.stetho.common.android.FragmentActivityAccessor<globalAndroid.app.Activity,globalAndroid.app.FragmentManager> {
							public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompatFramework.FragmentActivityAccessorFramework>;
							public getFragmentManager(param0: any): any;
							public getFragmentManager(param0: globalAndroid.app.Activity): globalAndroid.app.FragmentManager;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class FragmentCompatSupportLib extends com.facebook.stetho.common.android.FragmentCompat<androidx.fragment.app.Fragment,androidx.fragment.app.DialogFragment,androidx.fragment.app.FragmentManager,androidx.fragment.app.FragmentActivity> {
						public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompatSupportLib>;
						public forFragmentActivity(): com.facebook.stetho.common.android.FragmentCompatSupportLib.FragmentActivityAccessorSupportLib;
						public getDialogFragmentClass(): java.lang.Class<androidx.fragment.app.DialogFragment>;
						public getFragmentActivityClass(): java.lang.Class<any>;
						public getFragmentClass(): java.lang.Class<androidx.fragment.app.Fragment>;
						public forDialogFragment(): com.facebook.stetho.common.android.DialogFragmentAccessor<any,any,any>;
						public forFragment(): com.facebook.stetho.common.android.FragmentCompatSupportLib.FragmentAccessorSupportLib;
						public forFragmentActivity(): com.facebook.stetho.common.android.FragmentActivityAccessor<any,any>;
						public forDialogFragment(): com.facebook.stetho.common.android.FragmentCompatSupportLib.DialogFragmentAccessorSupportLib;
						public forFragmentManager(): com.facebook.stetho.common.android.FragmentManagerAccessor<any,any>;
						public forFragment(): com.facebook.stetho.common.android.FragmentAccessor<any,any>;
						public getFragmentActivityClass(): java.lang.Class<androidx.fragment.app.FragmentActivity>;
						public forFragmentManager(): com.facebook.stetho.common.android.FragmentManagerAccessor<androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment>;
						public getDialogFragmentClass(): java.lang.Class<any>;
						public getFragmentClass(): java.lang.Class<any>;
					}
					export module FragmentCompatSupportLib {
						export class DialogFragmentAccessorSupportLib extends com.facebook.stetho.common.android.FragmentCompatSupportLib.FragmentAccessorSupportLib implements com.facebook.stetho.common.android.DialogFragmentAccessor<androidx.fragment.app.DialogFragment,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManager>  {
							public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompatSupportLib.DialogFragmentAccessorSupportLib>;
							public getResources(param0: any): globalAndroid.content.res.Resources;
							public getTag(param0: androidx.fragment.app.Fragment): string;
							public getTag(param0: any): string;
							public getChildFragmentManager(param0: any): any;
							public getDialog(param0: any): globalAndroid.app.Dialog;
							public getDialog(param0: androidx.fragment.app.DialogFragment): globalAndroid.app.Dialog;
							public getFragmentManager(param0: any): any;
							public getView(param0: androidx.fragment.app.Fragment): globalAndroid.view.View;
							public getId(param0: any): number;
							public getResources(param0: androidx.fragment.app.Fragment): globalAndroid.content.res.Resources;
							public getView(param0: any): globalAndroid.view.View;
							public getFragmentManager(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentManager;
							public getChildFragmentManager(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentManager;
							public getId(param0: androidx.fragment.app.Fragment): number;
						}
						export class FragmentAccessorSupportLib extends com.facebook.stetho.common.android.FragmentAccessor<androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManager> {
							public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompatSupportLib.FragmentAccessorSupportLib>;
							public getFragmentManager(param0: any): any;
							public getResources(param0: any): globalAndroid.content.res.Resources;
							public getView(param0: androidx.fragment.app.Fragment): globalAndroid.view.View;
							public getId(param0: any): number;
							public getResources(param0: androidx.fragment.app.Fragment): globalAndroid.content.res.Resources;
							public getTag(param0: androidx.fragment.app.Fragment): string;
							public getTag(param0: any): string;
							public getView(param0: any): globalAndroid.view.View;
							public getFragmentManager(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentManager;
							public getChildFragmentManager(param0: any): any;
							public getChildFragmentManager(param0: androidx.fragment.app.Fragment): androidx.fragment.app.FragmentManager;
							public getId(param0: androidx.fragment.app.Fragment): number;
						}
						export class FragmentActivityAccessorSupportLib extends com.facebook.stetho.common.android.FragmentActivityAccessor<androidx.fragment.app.FragmentActivity,androidx.fragment.app.FragmentManager> {
							public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompatSupportLib.FragmentActivityAccessorSupportLib>;
							public getFragmentManager(param0: any): any;
							public getFragmentManager(param0: androidx.fragment.app.FragmentActivity): androidx.fragment.app.FragmentManager;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class FragmentCompatUtil extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentCompatUtil>;
						public static isDialogFragment(param0: any): boolean;
						public static findFragmentForView(param0: globalAndroid.view.View): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class FragmentManagerAccessor<FRAGMENT_MANAGER, FRAGMENT>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.android.FragmentManagerAccessor<any,any>>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.common.android.FragmentManagerAccessor<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getAddedFragments(param0: FRAGMENT_MANAGER): java.util.List<FRAGMENT>;
						});
						public constructor();
						public getAddedFragments(param0: FRAGMENT_MANAGER): java.util.List<FRAGMENT>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class HandlerUtil extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.android.HandlerUtil>;
						public static postAndWait(param0: globalAndroid.os.Handler, param1: java.lang.Runnable): void;
						public static postAndWait(param0: globalAndroid.os.Handler, param1: com.facebook.stetho.common.UncheckedCallable<any>): any;
						public static verifyThreadAccess(param0: globalAndroid.os.Handler): void;
						public static checkThreadAccess(param0: globalAndroid.os.Handler): boolean;
					}
					export module HandlerUtil {
						export abstract class WaitableRunnable<V>  extends java.lang.Runnable {
							public static class: java.lang.Class<com.facebook.stetho.common.android.HandlerUtil.WaitableRunnable<any>>;
							public constructor();
							public invoke(param0: globalAndroid.os.Handler): any;
							public onRun(): any;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class ResourcesUtil extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.android.ResourcesUtil>;
						public static getIdStringQuietly(param0: any, param1: globalAndroid.content.res.Resources, param2: number): string;
						public static getIdString(param0: globalAndroid.content.res.Resources, param1: number): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class ViewGroupUtil extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.android.ViewGroupUtil>;
						public static findChildIndex(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.View): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module common {
				export module android {
					export class ViewUtil extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.common.android.ViewUtil>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class ArgsHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.ArgsHelper>;
					public constructor();
					public static nextOptionalArg(param0: java.util.Iterator<string>, param1: string): string;
					public static nextArg(param0: java.util.Iterator<string>, param1: string): string;
					public static drainToArray(param0: java.util.Iterator<string>): native.Array<string>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class DumpException extends java.lang.Exception {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.DumpException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class DumpUsageException extends com.facebook.stetho.dumpapp.DumpException {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.DumpUsageException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class DumpappFramingException extends java.io.IOException {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.DumpappFramingException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class DumpappHttpSocketLikeHandler extends java.lang.Object implements com.facebook.stetho.server.SocketLikeHandler {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.DumpappHttpSocketLikeHandler>;
					public onAccepted(param0: com.facebook.stetho.server.SocketLike): void;
					public constructor(param0: com.facebook.stetho.dumpapp.Dumper);
				}
				export module DumpappHttpSocketLikeHandler {
					export class DumpappLegacyHttpHandler extends java.lang.Object implements com.facebook.stetho.server.http.HttpHandler {
						public static class: java.lang.Class<com.facebook.stetho.dumpapp.DumpappHttpSocketLikeHandler.DumpappLegacyHttpHandler>;
						public constructor(param0: com.facebook.stetho.dumpapp.Dumper);
						public handleRequest(param0: com.facebook.stetho.server.SocketLike, param1: com.facebook.stetho.server.http.LightHttpRequest, param2: com.facebook.stetho.server.http.LightHttpResponse): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class DumpappOutputBrokenException extends java.lang.RuntimeException {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.DumpappOutputBrokenException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class DumpappSocketLikeHandler extends java.lang.Object implements com.facebook.stetho.server.SocketLikeHandler {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.DumpappSocketLikeHandler>;
					public static PROTOCOL_MAGIC: native.Array<number>;
					public static PROTOCOL_VERSION: number;
					public onAccepted(param0: com.facebook.stetho.server.SocketLike): void;
					public constructor(param0: com.facebook.stetho.dumpapp.Dumper);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class Dumper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.Dumper>;
					public constructor(param0: java.lang.Iterable<com.facebook.stetho.dumpapp.DumperPlugin>);
					public constructor(param0: java.lang.Iterable<com.facebook.stetho.dumpapp.DumperPlugin>, param1: org.apache.commons.cli.CommandLineParser);
					public dump(param0: java.io.InputStream, param1: java.io.PrintStream, param2: java.io.PrintStream, param3: native.Array<string>): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class DumperContext extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.DumperContext>;
					public constructor(param0: com.facebook.stetho.dumpapp.DumperContext, param1: java.util.List<string>);
					public constructor(param0: java.io.InputStream, param1: java.io.PrintStream, param2: java.io.PrintStream, param3: org.apache.commons.cli.CommandLineParser, param4: java.util.List<string>);
					public getStderr(): java.io.PrintStream;
					public getStdout(): java.io.PrintStream;
					public getArgsAsList(): java.util.List<string>;
					public getStdin(): java.io.InputStream;
					public getParser(): org.apache.commons.cli.CommandLineParser;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class DumperPlugin extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.DumperPlugin>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.dumpapp.DumperPlugin interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getName(): string;
						dump(param0: com.facebook.stetho.dumpapp.DumperContext): void;
					});
					public constructor();
					public dump(param0: com.facebook.stetho.dumpapp.DumperContext): void;
					public getName(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class Framer extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.Framer>;
					public static STDIN_FRAME_PREFIX: number;
					public static STDIN_REQUEST_FRAME_PREFIX: number;
					public static STDOUT_FRAME_PREFIX: number;
					public static STDERR_FRAME_PREFIX: number;
					public static ENTER_FRAME_PREFIX: number;
					public static EXIT_FRAME_PREFIX: number;
					public getStderr(): java.io.PrintStream;
					public getStdout(): java.io.PrintStream;
					public getStdin(): java.io.InputStream;
					public constructor(param0: java.io.InputStream, param1: java.io.OutputStream);
					public writeExitCode(param0: number): void;
					public writeBlob(param0: native.Array<number>, param1: number, param2: number): void;
					public readFrameType(): number;
					public readInt(): number;
					public readString(): string;
					public writeIntFrame(param0: number, param1: number): void;
				}
				export module Framer {
					export class ClosedHelper extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.dumpapp.Framer.ClosedHelper>;
						public close(): void;
						public throwIfClosed(): void;
					}
					export class FramingInputStream extends java.io.InputStream {
						public static class: java.lang.Class<com.facebook.stetho.dumpapp.Framer.FramingInputStream>;
						public read(): number;
						public skip(param0: number): number;
						public read(param0: native.Array<number>): number;
						public close(): void;
						public read(param0: native.Array<number>, param1: number, param2: number): number;
					}
					export class FramingOutputStream extends java.io.OutputStream {
						public static class: java.lang.Class<com.facebook.stetho.dumpapp.Framer.FramingOutputStream>;
						public constructor();
						public close(): void;
						public write(param0: number): void;
						public write(param0: native.Array<number>, param1: number, param2: number): void;
						public flush(): void;
						public constructor(param0: com.facebook.stetho.dumpapp.Framer, param1: number);
						public write(param0: native.Array<number>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class GlobalOptions extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.GlobalOptions>;
					public optionHelp: org.apache.commons.cli.Option;
					public optionListPlugins: org.apache.commons.cli.Option;
					public optionProcess: org.apache.commons.cli.Option;
					public options: org.apache.commons.cli.Options;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export class UnexpectedFrameException extends com.facebook.stetho.dumpapp.DumpappFramingException {
					public static class: java.lang.Class<com.facebook.stetho.dumpapp.UnexpectedFrameException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export module plugins {
					export class CrashDumperPlugin extends java.lang.Object implements com.facebook.stetho.dumpapp.DumperPlugin {
						public static class: java.lang.Class<com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin>;
						public constructor();
						public dump(param0: com.facebook.stetho.dumpapp.DumperContext): void;
						public getName(): string;
					}
					export module CrashDumperPlugin {
						export class ThrowRunnable extends java.lang.Object implements java.lang.Runnable {
							public static class: java.lang.Class<com.facebook.stetho.dumpapp.plugins.CrashDumperPlugin.ThrowRunnable>;
							public constructor(param0: java.lang.Throwable);
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export module plugins {
					export class FilesDumperPlugin extends java.lang.Object implements com.facebook.stetho.dumpapp.DumperPlugin {
						public static class: java.lang.Class<com.facebook.stetho.dumpapp.plugins.FilesDumperPlugin>;
						public constructor(param0: globalAndroid.content.Context);
						public dump(param0: com.facebook.stetho.dumpapp.DumperContext): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export module plugins {
					export class HprofDumperPlugin extends java.lang.Object implements com.facebook.stetho.dumpapp.DumperPlugin {
						public static class: java.lang.Class<com.facebook.stetho.dumpapp.plugins.HprofDumperPlugin>;
						public constructor(param0: globalAndroid.content.Context);
						public dump(param0: com.facebook.stetho.dumpapp.DumperContext): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module dumpapp {
				export module plugins {
					export class SharedPreferencesDumperPlugin extends java.lang.Object implements com.facebook.stetho.dumpapp.DumperPlugin {
						public static class: java.lang.Class<com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin>;
						public constructor(param0: globalAndroid.content.Context);
						public dump(param0: com.facebook.stetho.dumpapp.DumperContext): void;
						public getName(): string;
					}
					export module SharedPreferencesDumperPlugin {
						export class Type {
							public static class: java.lang.Class<com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin.Type>;
							public static BOOLEAN: com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin.Type;
							public static INT: com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin.Type;
							public static LONG: com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin.Type;
							public static FLOAT: com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin.Type;
							public static STRING: com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin.Type;
							public static SET: com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin.Type;
							public static appendNamesList(param0: java.lang.StringBuilder, param1: string): java.lang.StringBuilder;
							public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
							public static valueOf(param0: string): com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin.Type;
							public static of(param0: string): com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin.Type;
							public static values(): native.Array<com.facebook.stetho.dumpapp.plugins.SharedPreferencesDumperPlugin.Type>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export class ChromeDevtoolsServer extends java.lang.Object implements com.facebook.stetho.websocket.SimpleEndpoint {
					public static class: java.lang.Class<com.facebook.stetho.inspector.ChromeDevtoolsServer>;
					public static PATH: string;
					public constructor(param0: java.lang.Iterable<com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain>);
					public onMessage(param0: com.facebook.stetho.websocket.SimpleSession, param1: string): void;
					public onOpen(param0: com.facebook.stetho.websocket.SimpleSession): void;
					public onClose(param0: com.facebook.stetho.websocket.SimpleSession, param1: number, param2: string): void;
					public onMessage(param0: com.facebook.stetho.websocket.SimpleSession, param1: native.Array<number>, param2: number): void;
					public onError(param0: com.facebook.stetho.websocket.SimpleSession, param1: java.lang.Throwable): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export class ChromeDiscoveryHandler extends java.lang.Object implements com.facebook.stetho.server.http.HttpHandler {
					public static class: java.lang.Class<com.facebook.stetho.inspector.ChromeDiscoveryHandler>;
					public register(param0: com.facebook.stetho.server.http.HandlerRegistry): void;
					public constructor(param0: globalAndroid.content.Context, param1: string);
					public handleRequest(param0: com.facebook.stetho.server.SocketLike, param1: com.facebook.stetho.server.http.LightHttpRequest, param2: com.facebook.stetho.server.http.LightHttpResponse): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export class DevtoolsSocketHandler extends java.lang.Object implements com.facebook.stetho.server.SocketLikeHandler {
					public static class: java.lang.Class<com.facebook.stetho.inspector.DevtoolsSocketHandler>;
					public onAccepted(param0: com.facebook.stetho.server.SocketLike): void;
					public constructor(param0: globalAndroid.content.Context, param1: java.lang.Iterable<com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain>);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export class MessageHandlingException extends java.lang.Exception {
					public static class: java.lang.Class<com.facebook.stetho.inspector.MessageHandlingException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export class MethodDispatcher extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.inspector.MethodDispatcher>;
					public dispatch(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: string, param2: org.json.JSONObject): org.json.JSONObject;
					public constructor(param0: com.facebook.stetho.json.ObjectMapper, param1: java.lang.Iterable<com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain>);
				}
				export module MethodDispatcher {
					export class MethodDispatchHelper extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.MethodDispatcher.MethodDispatchHelper>;
						public invoke(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): org.json.JSONObject;
						public constructor(param0: com.facebook.stetho.json.ObjectMapper, param1: com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain, param2: java.lang.reflect.Method);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export class MismatchedResponseException extends com.facebook.stetho.inspector.MessageHandlingException {
					public static class: java.lang.Class<com.facebook.stetho.inspector.MismatchedResponseException>;
					public mRequestId: number;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: java.lang.Throwable);
					public constructor(param0: string);
					public constructor();
					public getRequestId(): number;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module console {
					export class CLog extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.console.CLog>;
						public constructor();
						public static writeToConsole(param0: com.facebook.stetho.inspector.protocol.module.Console.MessageLevel, param1: com.facebook.stetho.inspector.protocol.module.Console.MessageSource, param2: string): void;
						public static writeToConsole(param0: com.facebook.stetho.inspector.helper.ChromePeerManager, param1: com.facebook.stetho.inspector.protocol.module.Console.MessageLevel, param2: com.facebook.stetho.inspector.protocol.module.Console.MessageSource, param3: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module console {
					export class ConsolePeerManager extends com.facebook.stetho.inspector.helper.ChromePeerManager {
						public static class: java.lang.Class<com.facebook.stetho.inspector.console.ConsolePeerManager>;
						public static getInstanceOrNull(): com.facebook.stetho.inspector.console.ConsolePeerManager;
						public static getOrCreateInstance(): com.facebook.stetho.inspector.console.ConsolePeerManager;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module console {
					export class RuntimeRepl extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.console.RuntimeRepl>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.console.RuntimeRepl interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							evaluate(param0: string): any;
						});
						public constructor();
						public evaluate(param0: string): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module console {
					export class RuntimeReplFactory extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.console.RuntimeReplFactory>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.console.RuntimeReplFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							newInstance(): com.facebook.stetho.inspector.console.RuntimeRepl;
						});
						public constructor();
						public newInstance(): com.facebook.stetho.inspector.console.RuntimeRepl;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module database {
					export class ContentProviderDatabaseDriver extends com.facebook.stetho.inspector.protocol.module.DatabaseDriver2<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver.ContentProviderDatabaseDescriptor> {
						public static class: java.lang.Class<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver>;
						public getDatabaseNames(): java.util.List<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver.ContentProviderDatabaseDescriptor>;
						public getDatabaseNames(): java.util.List<any>;
						public executeSQL(param0: com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver.ContentProviderDatabaseDescriptor, param1: string, param2: com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver.ExecuteResultHandler<com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse>): com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse;
						public constructor(param0: globalAndroid.content.Context);
						public getTableNames(param0: com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver.ContentProviderDatabaseDescriptor): java.util.List<string>;
						public constructor(param0: globalAndroid.content.Context, param1: native.Array<com.facebook.stetho.inspector.database.ContentProviderSchema>);
						public executeSQL(param0: any, param1: string, param2: com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver.ExecuteResultHandler<com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse>): com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse;
						public getTableNames(param0: any): java.util.List<string>;
					}
					export module ContentProviderDatabaseDriver {
						export class ContentProviderDatabaseDescriptor extends java.lang.Object implements com.facebook.stetho.inspector.protocol.module.DatabaseDescriptor {
							public static class: java.lang.Class<com.facebook.stetho.inspector.database.ContentProviderDatabaseDriver.ContentProviderDatabaseDescriptor>;
							public constructor();
							public name(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module database {
					export class ContentProviderSchema extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.database.ContentProviderSchema>;
						public getProjection(): native.Array<string>;
						public getTableName(): string;
						public getUri(): globalAndroid.net.Uri;
					}
					export module ContentProviderSchema {
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.database.ContentProviderSchema.Builder>;
							public constructor();
							public table(param0: com.facebook.stetho.inspector.database.ContentProviderSchema.Table): com.facebook.stetho.inspector.database.ContentProviderSchema.Builder;
							public build(): com.facebook.stetho.inspector.database.ContentProviderSchema;
						}
						export class Table extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.database.ContentProviderSchema.Table>;
						}
						export module Table {
							export class Builder extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.database.ContentProviderSchema.Table.Builder>;
								public projection(param0: native.Array<string>): com.facebook.stetho.inspector.database.ContentProviderSchema.Table.Builder;
								public uri(param0: globalAndroid.net.Uri): com.facebook.stetho.inspector.database.ContentProviderSchema.Table.Builder;
								public constructor();
								public build(): com.facebook.stetho.inspector.database.ContentProviderSchema.Table;
								public name(param0: string): com.facebook.stetho.inspector.database.ContentProviderSchema.Table.Builder;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module database {
					export class DatabaseConnectionProvider extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.database.DatabaseConnectionProvider>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.database.DatabaseConnectionProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							openDatabase(param0: java.io.File): globalAndroid.database.sqlite.SQLiteDatabase;
						});
						public constructor();
						public openDatabase(param0: java.io.File): globalAndroid.database.sqlite.SQLiteDatabase;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module database {
					export class DatabaseDriver2Adapter extends com.facebook.stetho.inspector.protocol.module.DatabaseDriver2<com.facebook.stetho.inspector.database.DatabaseDriver2Adapter.StringDatabaseDescriptor> {
						public static class: java.lang.Class<com.facebook.stetho.inspector.database.DatabaseDriver2Adapter>;
						public constructor(param0: com.facebook.stetho.inspector.protocol.module.Database.DatabaseDriver);
						public getDatabaseNames(): java.util.List<any>;
						public constructor(param0: globalAndroid.content.Context);
						public executeSQL(param0: any, param1: string, param2: com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver.ExecuteResultHandler<com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse>): com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse;
						public getTableNames(param0: com.facebook.stetho.inspector.database.DatabaseDriver2Adapter.StringDatabaseDescriptor): java.util.List<string>;
						public executeSQL(param0: com.facebook.stetho.inspector.database.DatabaseDriver2Adapter.StringDatabaseDescriptor, param1: string, param2: com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver.ExecuteResultHandler<any>): com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse;
						public getDatabaseNames(): java.util.List<com.facebook.stetho.inspector.database.DatabaseDriver2Adapter.StringDatabaseDescriptor>;
						public getTableNames(param0: any): java.util.List<string>;
					}
					export module DatabaseDriver2Adapter {
						export class StringDatabaseDescriptor extends java.lang.Object implements com.facebook.stetho.inspector.protocol.module.DatabaseDescriptor {
							public static class: java.lang.Class<com.facebook.stetho.inspector.database.DatabaseDriver2Adapter.StringDatabaseDescriptor>;
							public constructor(param0: string);
							public name(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module database {
					export class DatabaseFilesProvider extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.database.DatabaseFilesProvider>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.database.DatabaseFilesProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getDatabaseFiles(): java.util.List<java.io.File>;
						});
						public constructor();
						public getDatabaseFiles(): java.util.List<java.io.File>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module database {
					export class DefaultDatabaseConnectionProvider extends java.lang.Object implements com.facebook.stetho.inspector.database.DatabaseConnectionProvider {
						public static class: java.lang.Class<com.facebook.stetho.inspector.database.DefaultDatabaseConnectionProvider>;
						public performOpen(param0: java.io.File, param1: number): globalAndroid.database.sqlite.SQLiteDatabase;
						public constructor();
						public openDatabase(param0: java.io.File): globalAndroid.database.sqlite.SQLiteDatabase;
						public determineOpenOptions(param0: java.io.File): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module database {
					export class DefaultDatabaseFilesProvider extends java.lang.Object implements com.facebook.stetho.inspector.database.DatabaseFilesProvider {
						public static class: java.lang.Class<com.facebook.stetho.inspector.database.DefaultDatabaseFilesProvider>;
						public constructor(param0: globalAndroid.content.Context);
						public getDatabaseFiles(): java.util.List<java.io.File>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module database {
					export abstract class SQLiteDatabaseCompat extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.database.SQLiteDatabaseCompat>;
						public static ENABLE_WRITE_AHEAD_LOGGING: number;
						public static ENABLE_FOREIGN_KEY_CONSTRAINTS: number;
						public static getInstance(): com.facebook.stetho.inspector.database.SQLiteDatabaseCompat;
						public constructor();
						public enableFeatures(param0: number, param1: globalAndroid.database.sqlite.SQLiteDatabase): void;
						public provideOpenFlags(param0: number): number;
					}
					export module SQLiteDatabaseCompat {
						export class HoneycombImpl extends com.facebook.stetho.inspector.database.SQLiteDatabaseCompat {
							public static class: java.lang.Class<com.facebook.stetho.inspector.database.SQLiteDatabaseCompat.HoneycombImpl>;
							public enableFeatures(param0: number, param1: globalAndroid.database.sqlite.SQLiteDatabase): void;
							public provideOpenFlags(param0: number): number;
						}
						export class JellyBeanAndBeyondImpl extends com.facebook.stetho.inspector.database.SQLiteDatabaseCompat {
							public static class: java.lang.Class<com.facebook.stetho.inspector.database.SQLiteDatabaseCompat.JellyBeanAndBeyondImpl>;
							public enableFeatures(param0: number, param1: globalAndroid.database.sqlite.SQLiteDatabase): void;
							public provideOpenFlags(param0: number): number;
						}
						export class NoopImpl extends com.facebook.stetho.inspector.database.SQLiteDatabaseCompat {
							public static class: java.lang.Class<com.facebook.stetho.inspector.database.SQLiteDatabaseCompat.NoopImpl>;
							public enableFeatures(param0: number, param1: globalAndroid.database.sqlite.SQLiteDatabase): void;
							public provideOpenFlags(param0: number): number;
						}
						export class SQLiteOpenOptions extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.facebook.stetho.inspector.database.SQLiteDatabaseCompat.SQLiteOpenOptions>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.database.SQLiteDatabaseCompat$SQLiteOpenOptions interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(param0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module database {
					export class SqliteDatabaseDriver extends com.facebook.stetho.inspector.protocol.module.DatabaseDriver2<com.facebook.stetho.inspector.database.SqliteDatabaseDriver.SqliteDatabaseDescriptor> {
						public static class: java.lang.Class<com.facebook.stetho.inspector.database.SqliteDatabaseDriver>;
						public executeSQL(param0: com.facebook.stetho.inspector.database.SqliteDatabaseDriver.SqliteDatabaseDescriptor, param1: string, param2: com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver.ExecuteResultHandler<com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse>): com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse;
						public getDatabaseNames(): java.util.List<any>;
						public constructor(param0: globalAndroid.content.Context);
						/** @deprecated */
						public constructor(param0: globalAndroid.content.Context, param1: com.facebook.stetho.inspector.database.DatabaseFilesProvider);
						public constructor(param0: globalAndroid.content.Context, param1: com.facebook.stetho.inspector.database.DatabaseFilesProvider, param2: com.facebook.stetho.inspector.database.DatabaseConnectionProvider);
						public getTableNames(param0: com.facebook.stetho.inspector.database.SqliteDatabaseDriver.SqliteDatabaseDescriptor): java.util.List<string>;
						public executeSQL(param0: any, param1: string, param2: com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver.ExecuteResultHandler<com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse>): com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse;
						/** @deprecated */
						public constructor(param0: globalAndroid.content.Context);
						public getDatabaseNames(): java.util.List<com.facebook.stetho.inspector.database.SqliteDatabaseDriver.SqliteDatabaseDescriptor>;
						public getTableNames(param0: any): java.util.List<string>;
					}
					export module SqliteDatabaseDriver {
						export class SqliteDatabaseDescriptor extends java.lang.Object implements com.facebook.stetho.inspector.protocol.module.DatabaseDescriptor {
							public static class: java.lang.Class<com.facebook.stetho.inspector.database.SqliteDatabaseDriver.SqliteDatabaseDescriptor>;
							public file: java.io.File;
							public constructor(param0: java.io.File);
							public name(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module domstorage {
					export class DOMStoragePeerManager extends com.facebook.stetho.inspector.helper.ChromePeerManager {
						public static class: java.lang.Class<com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager>;
						public signalItemAdded(param0: com.facebook.stetho.inspector.protocol.module.DOMStorage.StorageId, param1: string, param2: string): void;
						public constructor();
						public signalItemUpdated(param0: com.facebook.stetho.inspector.protocol.module.DOMStorage.StorageId, param1: string, param2: string, param3: string): void;
						public constructor(param0: globalAndroid.content.Context);
						public signalItemRemoved(param0: com.facebook.stetho.inspector.protocol.module.DOMStorage.StorageId, param1: string): void;
					}
					export module DOMStoragePeerManager {
						export class DevToolsSharedPreferencesListener extends java.lang.Object implements globalAndroid.content.SharedPreferences.OnSharedPreferenceChangeListener {
							public static class: java.lang.Class<com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager.DevToolsSharedPreferencesListener>;
							public constructor(param0: com.facebook.stetho.inspector.domstorage.DOMStoragePeerManager, param1: globalAndroid.content.SharedPreferences, param2: string);
							public unregister(): void;
							public onSharedPreferenceChanged(param0: globalAndroid.content.SharedPreferences, param1: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module domstorage {
					export class SharedPreferencesHelper extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.domstorage.SharedPreferencesHelper>;
						public static getSharedPreferenceEntriesSorted(param0: globalAndroid.content.SharedPreferences): java.util.Set<java.util.Map.Entry<string,any>>;
						public static valueFromString(param0: string, param1: any): any;
						public static valueToString(param0: any): string;
						public static getSharedPreferenceTags(param0: globalAndroid.content.Context): java.util.List<string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export abstract class AbstractChainedDescriptor<E>  extends com.facebook.stetho.inspector.elements.Descriptor<any> implements com.facebook.stetho.inspector.elements.ChainedDescriptor<any>  {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.AbstractChainedDescriptor<any>>;
						public getLocalName(param0: any): string;
						public onGetNodeName(param0: any): string;
						public hook(param0: any): void;
						public onGetStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						public onGetNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
						public onGetLocalName(param0: any): string;
						public onHook(param0: any): void;
						public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
						public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
						public onUnhook(param0: any): void;
						public onGetAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
						public onSetAttributesAsText(param0: any, param1: string): void;
						public onGetComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
						public setAttributesAsText(param0: any, param1: string): void;
						public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
						public onSetStyle(param0: any, param1: string, param2: string, param3: string): void;
						public constructor();
						public setStyle(param0: any, param1: string, param2: string, param3: string): void;
						public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
						public onGetChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
						public getNodeName(param0: any): string;
						public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
						public onGetNodeValue(param0: any): string;
						public onGetStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
						public unhook(param0: any): void;
						public getNodeValue(param0: any): string;
						public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class AttributeAccumulator extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.AttributeAccumulator>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.AttributeAccumulator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							store(param0: string, param1: string): void;
						});
						public constructor();
						public store(param0: string, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class ChainedDescriptor<E>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.ChainedDescriptor<any>>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.ChainedDescriptor<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
						});
						public constructor();
						public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class ComputedStyleAccumulator extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.ComputedStyleAccumulator>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.ComputedStyleAccumulator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							store(param0: string, param1: string): void;
						});
						public constructor();
						public store(param0: string, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export abstract class Descriptor<E>  extends com.facebook.stetho.inspector.elements.NodeDescriptor<any> {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.Descriptor<any>>;
						public getLocalName(param0: any): string;
						public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
						public constructor();
						public static parseSetAttributesAsTextArg(param0: string): java.util.Map<string,string>;
						public setStyle(param0: any, param1: string, param2: string, param3: string): void;
						public postDelayed(param0: java.lang.Runnable, param1: number): void;
						public hook(param0: any): void;
						public postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
						public getNodeName(param0: any): string;
						public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
						public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
						public postAndWait(param0: java.lang.Runnable): void;
						public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
						public checkThreadAccess(): boolean;
						public removeCallbacks(param0: java.lang.Runnable): void;
						public unhook(param0: any): void;
						public getNodeValue(param0: any): string;
						public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						public verifyThreadAccess(): void;
						public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
						public setAttributesAsText(param0: any, param1: string): void;
						public getHost(): com.facebook.stetho.inspector.elements.Descriptor.Host;
					}
					export module Descriptor {
						export class Host extends java.lang.Object implements com.facebook.stetho.common.ThreadBound {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.Descriptor.Host>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.elements.Descriptor$Host interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getDescriptor(param0: any): com.facebook.stetho.inspector.elements.Descriptor<any>;
								onAttributeModified(param0: any, param1: string, param2: string): void;
								onAttributeRemoved(param0: any, param1: string): void;
								checkThreadAccess(): boolean;
								verifyThreadAccess(): void;
								postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
								postAndWait(param0: java.lang.Runnable): void;
								postDelayed(param0: java.lang.Runnable, param1: number): void;
								removeCallbacks(param0: java.lang.Runnable): void;
							});
							public constructor();
							public postAndWait(param0: java.lang.Runnable): void;
							public onAttributeModified(param0: any, param1: string, param2: string): void;
							public removeCallbacks(param0: java.lang.Runnable): void;
							public checkThreadAccess(): boolean;
							public postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
							public getDescriptor(param0: any): com.facebook.stetho.inspector.elements.Descriptor<any>;
							public onAttributeRemoved(param0: any, param1: string): void;
							public verifyThreadAccess(): void;
							public postDelayed(param0: java.lang.Runnable, param1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class DescriptorMap extends java.lang.Object implements com.facebook.stetho.inspector.elements.DescriptorRegistrar {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.DescriptorMap>;
						public endInit(): com.facebook.stetho.inspector.elements.DescriptorMap;
						public constructor();
						public beginInit(): com.facebook.stetho.inspector.elements.DescriptorMap;
						public get(param0: java.lang.Class<any>): com.facebook.stetho.inspector.elements.Descriptor<any>;
						public setHost(param0: com.facebook.stetho.inspector.elements.Descriptor.Host): com.facebook.stetho.inspector.elements.DescriptorMap;
						public registerDescriptor(param0: java.lang.Class<any>, param1: com.facebook.stetho.inspector.elements.Descriptor<any>): com.facebook.stetho.inspector.elements.DescriptorMap;
						public registerDescriptor(param0: java.lang.Class<any>, param1: com.facebook.stetho.inspector.elements.Descriptor<any>): com.facebook.stetho.inspector.elements.DescriptorRegistrar;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class DescriptorProvider extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.DescriptorProvider>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.DescriptorProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							registerDescriptor(param0: com.facebook.stetho.inspector.elements.DescriptorRegistrar): void;
						});
						public constructor();
						public registerDescriptor(param0: com.facebook.stetho.inspector.elements.DescriptorRegistrar): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class DescriptorRegistrar extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.DescriptorRegistrar>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.DescriptorRegistrar interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							registerDescriptor(param0: java.lang.Class<any>, param1: com.facebook.stetho.inspector.elements.Descriptor<any>): com.facebook.stetho.inspector.elements.DescriptorRegistrar;
						});
						public constructor();
						public registerDescriptor(param0: java.lang.Class<any>, param1: com.facebook.stetho.inspector.elements.Descriptor<any>): com.facebook.stetho.inspector.elements.DescriptorRegistrar;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class Document extends com.facebook.stetho.inspector.helper.ThreadBoundProxy {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.Document>;
						public highlightElement(param0: any, param1: number): void;
						public getRootElement(): any;
						public constructor(param0: com.facebook.stetho.inspector.elements.DocumentProviderFactory);
						public hideHighlight(): void;
						public postAndWait(param0: java.lang.Runnable): void;
						public setInspectModeEnabled(param0: boolean): void;
						public getElementStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
						public addUpdateListener(param0: com.facebook.stetho.inspector.elements.Document.UpdateListener): void;
						public setElementStyle(param0: any, param1: string, param2: string, param3: string): void;
						public removeCallbacks(param0: java.lang.Runnable): void;
						public verifyThreadAccess(): void;
						public setAttributesAsText(param0: any, param1: string): void;
						public postDelayed(param0: java.lang.Runnable, param1: number): void;
						public getElementStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						public getNodeIdForElement(param0: any): java.lang.Integer;
						public getElementForNodeId(param0: number): any;
						public postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
						public findMatchingElements(param0: string, param1: com.facebook.stetho.common.Accumulator<java.lang.Integer>): void;
						public release(): void;
						public getElementComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
						public getDocumentView(): com.facebook.stetho.inspector.elements.DocumentView;
						public checkThreadAccess(): boolean;
						public getNodeDescriptor(param0: any): com.facebook.stetho.inspector.elements.NodeDescriptor<any>;
						public addRef(): void;
						public constructor(param0: com.facebook.stetho.common.ThreadBound);
						public removeUpdateListener(param0: com.facebook.stetho.inspector.elements.Document.UpdateListener): void;
					}
					export module Document {
						export class AttributeListAccumulator extends java.util.ArrayList<string> implements com.facebook.stetho.inspector.elements.AttributeAccumulator  {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.Document.AttributeListAccumulator>;
							public subList(param0: number, param1: number): java.util.List<any>;
							public contains(param0: any): boolean;
							public remove(param0: number): any;
							public size(): number;
							public hashCode(): number;
							public spliterator(): java.util.Spliterator<any>;
							public toArray(): native.Array<any>;
							public listIterator(): java.util.ListIterator<any>;
							public stream(): java.util.stream.Stream<any>;
							public addAll(param0: java.util.Collection<any>): boolean;
							public set(param0: number, param1: any): any;
							public constructor(param0: java.util.Collection<any>);
							public add(param0: any): boolean;
							public listIterator(param0: number): java.util.ListIterator<any>;
							public removeAll(param0: java.util.Collection<any>): boolean;
							public add(param0: number, param1: any): void;
							public toArray(param0: native.Array<any>): native.Array<any>;
							public retainAll(param0: java.util.Collection<any>): boolean;
							public replaceAll(param0: any /* any*/): void;
							public constructor();
							public sort(param0: java.util.Comparator<any>): void;
							public store(param0: string, param1: string): void;
							public iterator(): java.util.Iterator<any>;
							public containsAll(param0: java.util.Collection<any>): boolean;
							public lastIndexOf(param0: any): number;
							public remove(param0: any): boolean;
							public clear(): void;
							public get(param0: number): any;
							public indexOf(param0: any): number;
							public removeIf(param0: any /* any*/): boolean;
							public constructor(param0: number);
							public addAll(param0: number, param1: java.util.Collection<any>): boolean;
							public isEmpty(): boolean;
							public equals(param0: any): boolean;
							public parallelStream(): java.util.stream.Stream<any>;
						}
						export class ChildEventingList extends java.util.ArrayList<any> {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.Document.ChildEventingList>;
							public subList(param0: number, param1: number): java.util.List<any>;
							public contains(param0: any): boolean;
							public remove(param0: number): any;
							public size(): number;
							public hashCode(): number;
							public spliterator(): java.util.Spliterator<any>;
							public toArray(): native.Array<any>;
							public listIterator(): java.util.ListIterator<any>;
							public stream(): java.util.stream.Stream<any>;
							public addAll(param0: java.util.Collection<any>): boolean;
							public set(param0: number, param1: any): any;
							public add(param0: any): boolean;
							public listIterator(param0: number): java.util.ListIterator<any>;
							public removeAll(param0: java.util.Collection<any>): boolean;
							public add(param0: number, param1: any): void;
							public toArray(param0: native.Array<any>): native.Array<any>;
							public acquire(param0: any, param1: com.facebook.stetho.inspector.elements.DocumentView): void;
							public retainAll(param0: java.util.Collection<any>): boolean;
							public replaceAll(param0: any /* any*/): void;
							public sort(param0: java.util.Comparator<any>): void;
							public iterator(): java.util.Iterator<any>;
							public containsAll(param0: java.util.Collection<any>): boolean;
							public lastIndexOf(param0: any): number;
							public removeWithEvent(param0: number): void;
							public remove(param0: any): boolean;
							public clear(): void;
							public get(param0: number): any;
							public indexOf(param0: any): number;
							public removeIf(param0: any /* any*/): boolean;
							public release(): void;
							public addWithEvent(param0: number, param1: any, param2: com.facebook.stetho.common.Accumulator<any>): void;
							public addAll(param0: number, param1: java.util.Collection<any>): boolean;
							public isEmpty(): boolean;
							public equals(param0: any): boolean;
							public parallelStream(): java.util.stream.Stream<any>;
						}
						export class DocumentObjectIdMapper extends com.facebook.stetho.inspector.helper.ObjectIdMapper {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.Document.DocumentObjectIdMapper>;
							public onUnmapped(param0: any, param1: number): void;
							public onMapped(param0: any, param1: number): void;
						}
						export class ProviderListener extends java.lang.Object implements com.facebook.stetho.inspector.elements.DocumentProviderListener {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.Document.ProviderListener>;
							public onAttributeModified(param0: any, param1: string, param2: string): void;
							public onAttributeRemoved(param0: any, param1: string): void;
							public onInspectRequested(param0: any): void;
							public onPossiblyChanged(): void;
						}
						export class UpdateListener extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.Document.UpdateListener>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.elements.Document$UpdateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onAttributeModified(param0: any, param1: string, param2: string): void;
								onAttributeRemoved(param0: any, param1: string): void;
								onInspectRequested(param0: any): void;
								onChildNodeRemoved(param0: number, param1: number): void;
								onChildNodeInserted(param0: com.facebook.stetho.inspector.elements.DocumentView, param1: any, param2: number, param3: number, param4: com.facebook.stetho.common.Accumulator<any>): void;
							});
							public constructor();
							public onAttributeModified(param0: any, param1: string, param2: string): void;
							public onChildNodeInserted(param0: com.facebook.stetho.inspector.elements.DocumentView, param1: any, param2: number, param3: number, param4: com.facebook.stetho.common.Accumulator<any>): void;
							public onAttributeRemoved(param0: any, param1: string): void;
							public onInspectRequested(param0: any): void;
							public onChildNodeRemoved(param0: number, param1: number): void;
						}
						export class UpdateListenerCollection extends java.lang.Object implements com.facebook.stetho.inspector.elements.Document.UpdateListener {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.Document.UpdateListenerCollection>;
							public add(param0: com.facebook.stetho.inspector.elements.Document.UpdateListener): void;
							public constructor(param0: com.facebook.stetho.inspector.elements.Document);
							public onAttributeModified(param0: any, param1: string, param2: string): void;
							public remove(param0: com.facebook.stetho.inspector.elements.Document.UpdateListener): void;
							public clear(): void;
							public onChildNodeInserted(param0: com.facebook.stetho.inspector.elements.DocumentView, param1: any, param2: number, param3: number, param4: com.facebook.stetho.common.Accumulator<any>): void;
							public onAttributeRemoved(param0: any, param1: string): void;
							public onInspectRequested(param0: any): void;
							public onChildNodeRemoved(param0: number, param1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class DocumentProvider extends java.lang.Object implements com.facebook.stetho.common.ThreadBound {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.DocumentProvider>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.DocumentProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setListener(param0: com.facebook.stetho.inspector.elements.DocumentProviderListener): void;
							dispose(): void;
							getRootElement(): any;
							getNodeDescriptor(param0: any): com.facebook.stetho.inspector.elements.NodeDescriptor<any>;
							highlightElement(param0: any, param1: number): void;
							hideHighlight(): void;
							setInspectModeEnabled(param0: boolean): void;
							setAttributesAsText(param0: any, param1: string): void;
							checkThreadAccess(): boolean;
							verifyThreadAccess(): void;
							postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
							postAndWait(param0: java.lang.Runnable): void;
							postDelayed(param0: java.lang.Runnable, param1: number): void;
							removeCallbacks(param0: java.lang.Runnable): void;
						});
						public constructor();
						public highlightElement(param0: any, param1: number): void;
						public getRootElement(): any;
						public postDelayed(param0: java.lang.Runnable, param1: number): void;
						public postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
						public hideHighlight(): void;
						public postAndWait(param0: java.lang.Runnable): void;
						public dispose(): void;
						public setInspectModeEnabled(param0: boolean): void;
						public checkThreadAccess(): boolean;
						public removeCallbacks(param0: java.lang.Runnable): void;
						public setListener(param0: com.facebook.stetho.inspector.elements.DocumentProviderListener): void;
						public getNodeDescriptor(param0: any): com.facebook.stetho.inspector.elements.NodeDescriptor<any>;
						public verifyThreadAccess(): void;
						public setAttributesAsText(param0: any, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class DocumentProviderFactory extends java.lang.Object implements com.facebook.stetho.common.ThreadBound {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.DocumentProviderFactory>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.DocumentProviderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(): com.facebook.stetho.inspector.elements.DocumentProvider;
							checkThreadAccess(): boolean;
							verifyThreadAccess(): void;
							postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
							postAndWait(param0: java.lang.Runnable): void;
							postDelayed(param0: java.lang.Runnable, param1: number): void;
							removeCallbacks(param0: java.lang.Runnable): void;
						});
						public constructor();
						public postDelayed(param0: java.lang.Runnable, param1: number): void;
						public create(): com.facebook.stetho.inspector.elements.DocumentProvider;
						public checkThreadAccess(): boolean;
						public postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
						public removeCallbacks(param0: java.lang.Runnable): void;
						public verifyThreadAccess(): void;
						public postAndWait(param0: java.lang.Runnable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class DocumentProviderListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.DocumentProviderListener>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.DocumentProviderListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPossiblyChanged(): void;
							onAttributeModified(param0: any, param1: string, param2: string): void;
							onAttributeRemoved(param0: any, param1: string): void;
							onInspectRequested(param0: any): void;
						});
						public constructor();
						public onPossiblyChanged(): void;
						public onAttributeRemoved(param0: any, param1: string): void;
						public onInspectRequested(param0: any): void;
						public onAttributeModified(param0: any, param1: string, param2: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class DocumentView extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.DocumentView>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.DocumentView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getRootElement(): any;
							getElementInfo(param0: any): com.facebook.stetho.inspector.elements.ElementInfo;
						});
						public constructor();
						public getRootElement(): any;
						public getElementInfo(param0: any): com.facebook.stetho.inspector.elements.ElementInfo;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class ElementInfo extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.ElementInfo>;
						public element: any;
						public parentElement: any;
						public children: java.util.List<any>;
						public equals(param0: any): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class NodeDescriptor<E>  extends com.facebook.stetho.common.ThreadBound {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.NodeDescriptor<any>>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.NodeDescriptor<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							hook(param0: any): void;
							unhook(param0: any): void;
							getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							getNodeName(param0: any): string;
							getLocalName(param0: any): string;
							getNodeValue(param0: any): string;
							getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							setAttributesAsText(param0: any, param1: string): void;
							getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
							setStyle(param0: any, param1: string, param2: string, param3: string): void;
							getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							checkThreadAccess(): boolean;
							verifyThreadAccess(): void;
							postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
							postAndWait(param0: java.lang.Runnable): void;
							postDelayed(param0: java.lang.Runnable, param1: number): void;
							removeCallbacks(param0: java.lang.Runnable): void;
						});
						public constructor();
						public getLocalName(param0: any): string;
						public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
						public setStyle(param0: any, param1: string, param2: string, param3: string): void;
						public hook(param0: any): void;
						public postDelayed(param0: java.lang.Runnable, param1: number): void;
						public getNodeName(param0: any): string;
						public postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
						public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
						public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
						public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
						public postAndWait(param0: java.lang.Runnable): void;
						public checkThreadAccess(): boolean;
						public unhook(param0: any): void;
						public removeCallbacks(param0: java.lang.Runnable): void;
						public getNodeValue(param0: any): string;
						public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						public verifyThreadAccess(): void;
						public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
						public setAttributesAsText(param0: any, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class NodeType {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.NodeType>;
						public static ELEMENT_NODE: com.facebook.stetho.inspector.elements.NodeType;
						public static TEXT_NODE: com.facebook.stetho.inspector.elements.NodeType;
						public static PROCESSING_INSTRUCTION_NODE: com.facebook.stetho.inspector.elements.NodeType;
						public static COMMENT_NODE: com.facebook.stetho.inspector.elements.NodeType;
						public static DOCUMENT_NODE: com.facebook.stetho.inspector.elements.NodeType;
						public static DOCUMENT_TYPE_NODE: com.facebook.stetho.inspector.elements.NodeType;
						public static DOCUMENT_FRAGMENT_NODE: com.facebook.stetho.inspector.elements.NodeType;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static valueOf(param0: string): com.facebook.stetho.inspector.elements.NodeType;
						public static values(): native.Array<com.facebook.stetho.inspector.elements.NodeType>;
						public getProtocolValue(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class ObjectDescriptor extends com.facebook.stetho.inspector.elements.Descriptor<any> {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.ObjectDescriptor>;
						public getLocalName(param0: any): string;
						public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
						public constructor();
						public setStyle(param0: any, param1: string, param2: string, param3: string): void;
						public hook(param0: any): void;
						public getNodeName(param0: any): string;
						public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
						public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
						public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
						public unhook(param0: any): void;
						public getNodeValue(param0: any): string;
						public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
						public setAttributesAsText(param0: any, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class Origin {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.Origin>;
						public static INJECTED: com.facebook.stetho.inspector.elements.Origin;
						public static USER_AGENT: com.facebook.stetho.inspector.elements.Origin;
						public static INSPECTOR: com.facebook.stetho.inspector.elements.Origin;
						public static REGULAR: com.facebook.stetho.inspector.elements.Origin;
						public static valueOf(param0: string): com.facebook.stetho.inspector.elements.Origin;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static values(): native.Array<com.facebook.stetho.inspector.elements.Origin>;
						public getProtocolValue(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class ShadowDocument extends java.lang.Object implements com.facebook.stetho.inspector.elements.DocumentView {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.ShadowDocument>;
						public getRootElement(): any;
						public beginUpdate(): com.facebook.stetho.inspector.elements.ShadowDocument.UpdateBuilder;
						public getElementInfo(param0: any): com.facebook.stetho.inspector.elements.ElementInfo;
						public constructor(param0: any);
					}
					export module ShadowDocument {
						export class Update extends java.lang.Object implements com.facebook.stetho.inspector.elements.DocumentView {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.ShadowDocument.Update>;
							public isElementChanged(param0: any): boolean;
							public getGarbageElements(param0: com.facebook.stetho.common.Accumulator<any>): void;
							public constructor(param0: java.util.Map<any,com.facebook.stetho.inspector.elements.ElementInfo>, param1: java.util.Set<any>);
							public getRootElement(): any;
							public getElementInfo(param0: any): com.facebook.stetho.inspector.elements.ElementInfo;
							public getChangedElements(param0: com.facebook.stetho.common.Accumulator<any>): void;
							public isEmpty(): boolean;
							public commit(): void;
							public abandon(): void;
						}
						export class UpdateBuilder extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.ShadowDocument.UpdateBuilder>;
							public setElementChildren(param0: any, param1: java.util.List<any>): void;
							public build(): com.facebook.stetho.inspector.elements.ShadowDocument.Update;
							public constructor(param0: com.facebook.stetho.inspector.elements.ShadowDocument);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class StyleAccumulator extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.StyleAccumulator>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.StyleAccumulator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							store(param0: string, param1: string, param2: boolean): void;
						});
						public constructor();
						public store(param0: string, param1: string, param2: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export class StyleRuleNameAccumulator extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							store(param0: string, param1: boolean): void;
						});
						public constructor();
						public store(param0: string, param1: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class AccessibilityNodeInfoWrapper extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.AccessibilityNodeInfoWrapper>;
							public constructor();
							public static getIgnored(param0: globalAndroid.view.View): boolean;
							public static getIgnoredReasons(param0: globalAndroid.view.View): string;
							public static getIsAccessibilityFocused(param0: globalAndroid.view.View): boolean;
							public static createNodeInfoFromView(param0: globalAndroid.view.View): androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
							public static getDescription(param0: globalAndroid.view.View): string;
							public static getActions(param0: globalAndroid.view.View): string;
							public static getFocusableReasons(param0: globalAndroid.view.View): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class ActivityDescriptor extends com.facebook.stetho.inspector.elements.AbstractChainedDescriptor<globalAndroid.app.Activity> implements com.facebook.stetho.inspector.elements.android.HighlightableDescriptor<globalAndroid.app.Activity>  {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ActivityDescriptor>;
							public onGetChildren(param0: globalAndroid.app.Activity, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getViewAndBoundsForHighlighting(param0: any, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getNodeValue(param0: any): string;
							public unhook(param0: any): void;
							public setStyle(param0: any, param1: string, param2: string, param3: string): void;
							public getNodeName(param0: any): string;
							public onGetNodeName(param0: globalAndroid.app.Activity): string;
							public getViewAndBoundsForHighlighting(param0: globalAndroid.app.Activity, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public getElementToHighlightAtPosition(param0: globalAndroid.app.Activity, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public getLocalName(param0: any): string;
							public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
							public getElementToHighlightAtPosition(param0: any, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public setAttributesAsText(param0: any, param1: string): void;
							public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public hook(param0: any): void;
							public onGetNodeName(param0: any): string;
							public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public onGetChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class ActivityTracker extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ActivityTracker>;
							public constructor();
							public static get(): com.facebook.stetho.inspector.elements.android.ActivityTracker;
							public beginTrackingIfPossible(param0: globalAndroid.app.Application): boolean;
							public unregisterListener(param0: com.facebook.stetho.inspector.elements.android.ActivityTracker.Listener): void;
							public remove(param0: globalAndroid.app.Activity): void;
							public getActivitiesView(): java.util.List<java.lang.ref.WeakReference<globalAndroid.app.Activity>>;
							public add(param0: globalAndroid.app.Activity): void;
							public tryGetTopActivity(): globalAndroid.app.Activity;
							public endTracking(): boolean;
							public registerListener(param0: com.facebook.stetho.inspector.elements.android.ActivityTracker.Listener): void;
						}
						export module ActivityTracker {
							export abstract class AutomaticTracker extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ActivityTracker.AutomaticTracker>;
								public register(): void;
								public static newInstanceIfPossible(param0: globalAndroid.app.Application, param1: com.facebook.stetho.inspector.elements.android.ActivityTracker): com.facebook.stetho.inspector.elements.android.ActivityTracker.AutomaticTracker;
								public unregister(): void;
							}
							export module AutomaticTracker {
								export class AutomaticTrackerICSAndBeyond extends com.facebook.stetho.inspector.elements.android.ActivityTracker.AutomaticTracker {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ActivityTracker.AutomaticTracker.AutomaticTrackerICSAndBeyond>;
									public constructor(param0: globalAndroid.app.Application, param1: com.facebook.stetho.inspector.elements.android.ActivityTracker);
									public unregister(): void;
									public register(): void;
								}
							}
							export class Listener extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ActivityTracker.Listener>;
								/**
								 * Constructs a new instance of the com.facebook.stetho.inspector.elements.android.ActivityTracker$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onActivityAdded(param0: globalAndroid.app.Activity): void;
									onActivityRemoved(param0: globalAndroid.app.Activity): void;
								});
								public constructor();
								public onActivityAdded(param0: globalAndroid.app.Activity): void;
								public onActivityRemoved(param0: globalAndroid.app.Activity): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class AndroidDescriptorHost extends java.lang.Object implements com.facebook.stetho.inspector.elements.Descriptor.Host {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.AndroidDescriptorHost>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.elements.android.AndroidDescriptorHost interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getHighlightableDescriptor(param0: any): com.facebook.stetho.inspector.elements.android.HighlightableDescriptor<any>;
								getDescriptor(param0: any): com.facebook.stetho.inspector.elements.Descriptor<any>;
								onAttributeModified(param0: any, param1: string, param2: string): void;
								onAttributeRemoved(param0: any, param1: string): void;
								checkThreadAccess(): boolean;
								verifyThreadAccess(): void;
								postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
								postAndWait(param0: java.lang.Runnable): void;
								postDelayed(param0: java.lang.Runnable, param1: number): void;
								removeCallbacks(param0: java.lang.Runnable): void;
							});
							public constructor();
							public postAndWait(param0: java.lang.Runnable): void;
							public onAttributeModified(param0: any, param1: string, param2: string): void;
							public removeCallbacks(param0: java.lang.Runnable): void;
							public getHighlightableDescriptor(param0: any): com.facebook.stetho.inspector.elements.android.HighlightableDescriptor<any>;
							public checkThreadAccess(): boolean;
							public postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
							public getDescriptor(param0: any): com.facebook.stetho.inspector.elements.Descriptor<any>;
							public onAttributeRemoved(param0: any, param1: string): void;
							public verifyThreadAccess(): void;
							public postDelayed(param0: java.lang.Runnable, param1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class AndroidDocumentConstants extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.AndroidDocumentConstants>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.elements.android.AndroidDocumentConstants interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
							public static MIN_API_LEVEL: number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class AndroidDocumentProvider extends com.facebook.stetho.inspector.helper.ThreadBoundProxy implements com.facebook.stetho.inspector.elements.DocumentProvider, com.facebook.stetho.inspector.elements.android.AndroidDescriptorHost {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.AndroidDocumentProvider>;
							public getNodeDescriptor(param0: any): com.facebook.stetho.inspector.elements.NodeDescriptor<any>;
							public setInspectModeEnabled(param0: boolean): void;
							public setListener(param0: com.facebook.stetho.inspector.elements.DocumentProviderListener): void;
							public getRootElement(): any;
							public onAttributeModified(param0: any, param1: string, param2: string): void;
							public removeCallbacks(param0: java.lang.Runnable): void;
							public dispose(): void;
							public getHighlightableDescriptor(param0: any): com.facebook.stetho.inspector.elements.android.HighlightableDescriptor<any>;
							public onAttributeRemoved(param0: any, param1: string): void;
							public verifyThreadAccess(): void;
							public postDelayed(param0: java.lang.Runnable, param1: number): void;
							public getDescriptor(param0: any): com.facebook.stetho.inspector.elements.Descriptor<any>;
							public constructor(param0: com.facebook.stetho.common.ThreadBound);
							public setAttributesAsText(param0: any, param1: string): void;
							public postAndWait(param0: java.lang.Runnable): void;
							public highlightElement(param0: any, param1: number): void;
							public hideHighlight(): void;
							public checkThreadAccess(): boolean;
							public postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
							public getDescriptor(param0: any): com.facebook.stetho.inspector.elements.Descriptor<any>;
							public constructor(param0: globalAndroid.app.Application, param1: java.util.List<com.facebook.stetho.inspector.elements.DescriptorProvider>, param2: com.facebook.stetho.common.ThreadBound);
						}
						export module AndroidDocumentProvider {
							export class InspectModeHandler extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.AndroidDocumentProvider.InspectModeHandler>;
								public disable(): void;
								public enable(): void;
							}
							export module InspectModeHandler {
								export class OverlayView extends com.facebook.stetho.inspector.elements.android.DocumentHiddenView {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.AndroidDocumentProvider.InspectModeHandler.OverlayView>;
									public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
									public constructor(param0: com.facebook.stetho.inspector.elements.android.AndroidDocumentProvider.InspectModeHandler, param1: globalAndroid.content.Context);
									public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
									public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
									public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
									public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
									public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
									public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
									public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
									public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
									public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
									public onDraw(param0: globalAndroid.graphics.Canvas): void;
									public constructor(param0: globalAndroid.content.Context);
									public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
									public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
									public sendAccessibilityEvent(param0: number): void;
									public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class AndroidDocumentProviderFactory extends java.lang.Object implements com.facebook.stetho.inspector.elements.DocumentProviderFactory, com.facebook.stetho.common.ThreadBound {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.AndroidDocumentProviderFactory>;
							public postAndWait(param0: java.lang.Runnable): void;
							public removeCallbacks(param0: java.lang.Runnable): void;
							public constructor(param0: globalAndroid.app.Application, param1: java.util.List<com.facebook.stetho.inspector.elements.DescriptorProvider>);
							public checkThreadAccess(): boolean;
							public postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
							public verifyThreadAccess(): void;
							public postDelayed(param0: java.lang.Runnable, param1: number): void;
							public create(): com.facebook.stetho.inspector.elements.DocumentProvider;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class AndroidDocumentRoot extends com.facebook.stetho.inspector.elements.AbstractChainedDescriptor<com.facebook.stetho.inspector.elements.android.AndroidDocumentRoot> {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.AndroidDocumentRoot>;
							public constructor();
							public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getNodeValue(param0: any): string;
							public unhook(param0: any): void;
							public setStyle(param0: any, param1: string, param2: string, param3: string): void;
							public getNodeName(param0: any): string;
							public onGetNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public getLocalName(param0: any): string;
							public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
							public onGetChildren(param0: com.facebook.stetho.inspector.elements.android.AndroidDocumentRoot, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public setAttributesAsText(param0: any, param1: string): void;
							public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public hook(param0: any): void;
							public onGetNodeName(param0: any): string;
							public onGetNodeType(param0: com.facebook.stetho.inspector.elements.android.AndroidDocumentRoot): com.facebook.stetho.inspector.elements.NodeType;
							public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public constructor(param0: globalAndroid.app.Application);
							public onGetChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public onGetNodeName(param0: com.facebook.stetho.inspector.elements.android.AndroidDocumentRoot): string;
							public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class ApplicationDescriptor extends com.facebook.stetho.inspector.elements.AbstractChainedDescriptor<globalAndroid.app.Application> {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor>;
							public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getNodeValue(param0: any): string;
							public unhook(param0: any): void;
							public setStyle(param0: any, param1: string, param2: string, param3: string): void;
							public getNodeName(param0: any): string;
							public onGetNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public getLocalName(param0: any): string;
							public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
							public onHook(param0: globalAndroid.app.Application): void;
							public onUnhook(param0: globalAndroid.app.Application): void;
							public onGetChildren(param0: globalAndroid.app.Application, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public setAttributesAsText(param0: any, param1: string): void;
							public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public onGetNodeType(param0: globalAndroid.app.Application): com.facebook.stetho.inspector.elements.NodeType;
							public hook(param0: any): void;
							public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public onHook(param0: any): void;
							public onUnhook(param0: any): void;
							public onGetChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						}
						export module ApplicationDescriptor {
							export class ElementContext extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ApplicationDescriptor.ElementContext>;
								public hook(param0: globalAndroid.app.Application): void;
								public getActivitiesList(): java.util.List<java.lang.ref.WeakReference<globalAndroid.app.Activity>>;
								public constructor(param0: com.facebook.stetho.inspector.elements.android.ApplicationDescriptor);
								public unhook(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class DialogDescriptor extends com.facebook.stetho.inspector.elements.AbstractChainedDescriptor<globalAndroid.app.Dialog> implements com.facebook.stetho.inspector.elements.android.HighlightableDescriptor<globalAndroid.app.Dialog>  {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.DialogDescriptor>;
							public onGetChildren(param0: globalAndroid.app.Dialog, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getViewAndBoundsForHighlighting(param0: any, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getViewAndBoundsForHighlighting(param0: globalAndroid.app.Dialog, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public getNodeValue(param0: any): string;
							public unhook(param0: any): void;
							public setStyle(param0: any, param1: string, param2: string, param3: string): void;
							public getElementToHighlightAtPosition(param0: globalAndroid.app.Dialog, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public getNodeName(param0: any): string;
							public getLocalName(param0: any): string;
							public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
							public getElementToHighlightAtPosition(param0: any, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public setAttributesAsText(param0: any, param1: string): void;
							public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public hook(param0: any): void;
							public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public onGetChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class DialogFragmentDescriptor extends com.facebook.stetho.inspector.elements.Descriptor<any> {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.DialogFragmentDescriptor>;
							public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getViewAndBoundsForHighlighting(param0: any, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public getNodeValue(param0: any): string;
							public unhook(param0: any): void;
							public setStyle(param0: any, param1: string, param2: string, param3: string): void;
							public getNodeName(param0: any): string;
							public getLocalName(param0: any): string;
							public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
							public getElementToHighlightAtPosition(param0: any, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public setAttributesAsText(param0: any, param1: string): void;
							public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public hook(param0: any): void;
							public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
							public static register(param0: com.facebook.stetho.inspector.elements.DescriptorMap): com.facebook.stetho.inspector.elements.DescriptorMap;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class DocumentHiddenView extends globalAndroid.view.View {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.DocumentHiddenView>;
							public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
							public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
							public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
							public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
							public sendAccessibilityEvent(param0: number): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
							public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class FragmentDescriptor extends com.facebook.stetho.inspector.elements.AbstractChainedDescriptor<any> implements com.facebook.stetho.inspector.elements.android.HighlightableDescriptor<any>  {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.FragmentDescriptor>;
							public getViewAndBoundsForHighlighting(param0: any, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getNodeValue(param0: any): string;
							public unhook(param0: any): void;
							public setStyle(param0: any, param1: string, param2: string, param3: string): void;
							public getNodeName(param0: any): string;
							public getLocalName(param0: any): string;
							public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
							public getElementToHighlightAtPosition(param0: any, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public setAttributesAsText(param0: any, param1: string): void;
							public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public hook(param0: any): void;
							public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public onGetAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public onGetChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
							public static register(param0: com.facebook.stetho.inspector.elements.DescriptorMap): com.facebook.stetho.inspector.elements.DescriptorMap;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class HighlightableDescriptor<E>  extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.HighlightableDescriptor<any>>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.elements.android.HighlightableDescriptor<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getViewAndBoundsForHighlighting(param0: E, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
								getElementToHighlightAtPosition(param0: E, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							});
							public constructor();
							public getElementToHighlightAtPosition(param0: E, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public getViewAndBoundsForHighlighting(param0: E, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class MethodInvoker extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.MethodInvoker>;
							public constructor();
							public invoke(param0: any, param1: string, param2: string): void;
						}
						export module MethodInvoker {
							export class BooleanMethodInvoker extends com.facebook.stetho.inspector.elements.android.MethodInvoker.TypedMethodInvoker<java.lang.Boolean> {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.MethodInvoker.BooleanMethodInvoker>;
							}
							export class CharSequenceMethodInvoker extends com.facebook.stetho.inspector.elements.android.MethodInvoker.TypedMethodInvoker<string> {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.MethodInvoker.CharSequenceMethodInvoker>;
							}
							export class FloatMethodInvoker extends com.facebook.stetho.inspector.elements.android.MethodInvoker.TypedMethodInvoker<java.lang.Float> {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.MethodInvoker.FloatMethodInvoker>;
							}
							export class IntegerMethodInvoker extends com.facebook.stetho.inspector.elements.android.MethodInvoker.TypedMethodInvoker<java.lang.Integer> {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.MethodInvoker.IntegerMethodInvoker>;
							}
							export class StringMethodInvoker extends com.facebook.stetho.inspector.elements.android.MethodInvoker.TypedMethodInvoker<string> {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.MethodInvoker.StringMethodInvoker>;
							}
							export abstract class TypedMethodInvoker<T>  extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.MethodInvoker.TypedMethodInvoker<any>>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class TextViewDescriptor extends com.facebook.stetho.inspector.elements.AbstractChainedDescriptor<globalAndroid.widget.TextView> {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.TextViewDescriptor>;
							public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getNodeValue(param0: any): string;
							public unhook(param0: any): void;
							public setStyle(param0: any, param1: string, param2: string, param3: string): void;
							public getNodeName(param0: any): string;
							public getLocalName(param0: any): string;
							public onGetAttributes(param0: globalAndroid.widget.TextView, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
							public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public setAttributesAsText(param0: any, param1: string): void;
							public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public hook(param0: any): void;
							public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public onHook(param0: any): void;
							public onUnhook(param0: any): void;
							public onGetAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public onHook(param0: globalAndroid.widget.TextView): void;
							public onUnhook(param0: globalAndroid.widget.TextView): void;
							public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						}
						export module TextViewDescriptor {
							export class ElementContext extends java.lang.Object implements globalAndroid.text.TextWatcher {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.TextViewDescriptor.ElementContext>;
								public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
								public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
								public afterTextChanged(param0: globalAndroid.text.Editable): void;
								public hook(param0: globalAndroid.widget.TextView): void;
								public unhook(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class ViewDescriptor extends com.facebook.stetho.inspector.elements.AbstractChainedDescriptor<globalAndroid.view.View> implements com.facebook.stetho.inspector.elements.android.HighlightableDescriptor<globalAndroid.view.View>  {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewDescriptor>;
							public getNodeValue(param0: any): string;
							public getElementToHighlightAtPosition(param0: globalAndroid.view.View, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public setStyle(param0: any, param1: string, param2: string, param3: string): void;
							public onSetAttributesAsText(param0: globalAndroid.view.View, param1: string): void;
							public getLocalName(param0: any): string;
							public onGetStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public getElementToHighlightAtPosition(param0: any, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public onGetComputedStyles(param0: globalAndroid.view.View, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public onGetStyleRuleNames(param0: globalAndroid.view.View, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public onSetAttributesAsText(param0: any, param1: string): void;
							public hook(param0: any): void;
							public onGetNodeName(param0: any): string;
							public getViewAndBoundsForHighlighting(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public onGetStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
							public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
							public constructor();
							public onGetAttributes(param0: globalAndroid.view.View, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public getViewAndBoundsForHighlighting(param0: any, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public unhook(param0: any): void;
							public getNodeName(param0: any): string;
							public onGetNodeName(param0: globalAndroid.view.View): string;
							public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
							public onGetComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public onGetStyles(param0: globalAndroid.view.View, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
							public setAttributesAsText(param0: any, param1: string): void;
							public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public constructor(param0: com.facebook.stetho.inspector.elements.android.MethodInvoker);
							public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public onGetAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
						}
						export module ViewDescriptor {
							export class FieldBackedCSSProperty extends com.facebook.stetho.inspector.elements.android.ViewDescriptor.ViewCSSProperty {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewDescriptor.FieldBackedCSSProperty>;
								public getValue(param0: globalAndroid.view.View): any;
								public constructor(param0: com.facebook.stetho.inspector.elements.android.ViewDescriptor, param1: string, param2: globalAndroid.view.ViewDebug.ExportedProperty);
								public constructor(param0: com.facebook.stetho.inspector.elements.android.ViewDescriptor, param1: java.lang.reflect.Field, param2: string, param3: globalAndroid.view.ViewDebug.ExportedProperty);
							}
							export class MethodBackedCSSProperty extends com.facebook.stetho.inspector.elements.android.ViewDescriptor.ViewCSSProperty {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewDescriptor.MethodBackedCSSProperty>;
								public getValue(param0: globalAndroid.view.View): any;
								public constructor(param0: com.facebook.stetho.inspector.elements.android.ViewDescriptor, param1: string, param2: globalAndroid.view.ViewDebug.ExportedProperty);
								public constructor(param0: com.facebook.stetho.inspector.elements.android.ViewDescriptor, param1: java.lang.reflect.Method, param2: string, param3: globalAndroid.view.ViewDebug.ExportedProperty);
							}
							export abstract class ViewCSSProperty extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewDescriptor.ViewCSSProperty>;
								public getValue(param0: globalAndroid.view.View): any;
								public constructor(param0: com.facebook.stetho.inspector.elements.android.ViewDescriptor, param1: string, param2: globalAndroid.view.ViewDebug.ExportedProperty);
								public getCSSName(): string;
								public getAnnotation(): globalAndroid.view.ViewDebug.ExportedProperty;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class ViewGroupDescriptor extends com.facebook.stetho.inspector.elements.AbstractChainedDescriptor<globalAndroid.view.ViewGroup> implements com.facebook.stetho.inspector.elements.android.HighlightableDescriptor<globalAndroid.view.ViewGroup>  {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewGroupDescriptor>;
							public constructor();
							public getViewAndBoundsForHighlighting(param0: any, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getNodeValue(param0: any): string;
							public unhook(param0: any): void;
							public setStyle(param0: any, param1: string, param2: string, param3: string): void;
							public getNodeName(param0: any): string;
							public onGetChildren(param0: globalAndroid.view.ViewGroup, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getLocalName(param0: any): string;
							public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
							public getElementToHighlightAtPosition(param0: globalAndroid.view.ViewGroup, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public getElementToHighlightAtPosition(param0: any, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public getViewAndBoundsForHighlighting(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public setAttributesAsText(param0: any, param1: string): void;
							public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public hook(param0: any): void;
							public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public onGetChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export abstract class ViewHighlightOverlays extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays>;
						}
						export module ViewHighlightOverlays {
							export class NoOpViewHighlightOverlays extends com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.NoOpViewHighlightOverlays>;
							}
							export class ViewHighlightOverlaysJellybeanMR2 extends com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2>;
							}
							export module ViewHighlightOverlaysJellybeanMR2 {
								export abstract class HighlightDrawable extends globalAndroid.graphics.drawable.ColorDrawable {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.HighlightDrawable>;
									public mMargins: globalAndroid.graphics.Rect;
									public mPaddings: globalAndroid.graphics.Rect;
									public constructor();
									public constructor(param0: number);
								}
								export class MainHighlightDrawable extends com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.HighlightDrawable {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.MainHighlightDrawable>;
									public draw(param0: globalAndroid.graphics.Canvas): void;
								}
								export class MarginBottomHighlightDrawable extends com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.HighlightDrawable {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.MarginBottomHighlightDrawable>;
									public draw(param0: globalAndroid.graphics.Canvas): void;
								}
								export class MarginLeftHighlightDrawable extends com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.HighlightDrawable {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.MarginLeftHighlightDrawable>;
									public draw(param0: globalAndroid.graphics.Canvas): void;
								}
								export class MarginRightHighlightDrawable extends com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.HighlightDrawable {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.MarginRightHighlightDrawable>;
									public draw(param0: globalAndroid.graphics.Canvas): void;
								}
								export class MarginTopHighlightDrawable extends com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.HighlightDrawable {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.MarginTopHighlightDrawable>;
									public draw(param0: globalAndroid.graphics.Canvas): void;
								}
								export class PaddingBottomHighlightDrawable extends com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.HighlightDrawable {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.PaddingBottomHighlightDrawable>;
								}
								export class PaddingLeftHighlightDrawable extends com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.HighlightDrawable {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.PaddingLeftHighlightDrawable>;
								}
								export class PaddingRightHighlightDrawable extends com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.HighlightDrawable {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.PaddingRightHighlightDrawable>;
								}
								export class PaddingTopHighlightDrawable extends com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.HighlightDrawable {
									public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays.ViewHighlightOverlaysJellybeanMR2.PaddingTopHighlightDrawable>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export abstract class ViewHighlighter extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlighter>;
							public constructor();
							public static newInstance(): com.facebook.stetho.inspector.elements.android.ViewHighlighter;
							public setHighlightedView(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: number): void;
							public clearHighlight(): void;
						}
						export module ViewHighlighter {
							export class NoopHighlighter extends com.facebook.stetho.inspector.elements.android.ViewHighlighter {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlighter.NoopHighlighter>;
								public clearHighlight(): void;
								public setHighlightedView(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: number): void;
							}
							export class OverlayHighlighter extends com.facebook.stetho.inspector.elements.android.ViewHighlighter {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.ViewHighlighter.OverlayHighlighter>;
								public constructor();
								public clearHighlight(): void;
								public setHighlightedView(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export class WindowDescriptor extends com.facebook.stetho.inspector.elements.AbstractChainedDescriptor<globalAndroid.view.Window> implements com.facebook.stetho.inspector.elements.android.HighlightableDescriptor<globalAndroid.view.Window>  {
							public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.WindowDescriptor>;
							public getViewAndBoundsForHighlighting(param0: any, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public getChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getNodeValue(param0: any): string;
							public unhook(param0: any): void;
							public setStyle(param0: any, param1: string, param2: string, param3: string): void;
							public getNodeName(param0: any): string;
							public getLocalName(param0: any): string;
							public setSuper(param0: com.facebook.stetho.inspector.elements.Descriptor<any>): void;
							public getViewAndBoundsForHighlighting(param0: globalAndroid.view.Window, param1: globalAndroid.graphics.Rect): globalAndroid.view.View;
							public getElementToHighlightAtPosition(param0: globalAndroid.view.Window, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public getElementToHighlightAtPosition(param0: any, param1: number, param2: number, param3: globalAndroid.graphics.Rect): any;
							public onGetChildren(param0: globalAndroid.view.Window, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getAttributes(param0: any, param1: com.facebook.stetho.inspector.elements.AttributeAccumulator): void;
							public setAttributesAsText(param0: any, param1: string): void;
							public getStyleRuleNames(param0: any, param1: com.facebook.stetho.inspector.elements.StyleRuleNameAccumulator): void;
							public getComputedStyles(param0: any, param1: com.facebook.stetho.inspector.elements.ComputedStyleAccumulator): void;
							public hook(param0: any): void;
							public getNodeType(param0: any): com.facebook.stetho.inspector.elements.NodeType;
							public onGetChildren(param0: any, param1: com.facebook.stetho.common.Accumulator<any>): void;
							public getStyles(param0: any, param1: string, param2: com.facebook.stetho.inspector.elements.StyleAccumulator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export module window {
							export class WindowRootViewCompactV16Impl extends com.facebook.stetho.inspector.elements.android.window.WindowRootViewCompat {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.window.WindowRootViewCompactV16Impl>;
								public getRootViews(): java.util.List<globalAndroid.view.View>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export module window {
							export class WindowRootViewCompactV18Impl extends com.facebook.stetho.inspector.elements.android.window.WindowRootViewCompat {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.window.WindowRootViewCompactV18Impl>;
								public getRootViews(): java.util.List<globalAndroid.view.View>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export module window {
							export class WindowRootViewCompactV19Impl extends com.facebook.stetho.inspector.elements.android.window.WindowRootViewCompat {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.window.WindowRootViewCompactV19Impl>;
								public getRootViews(): java.util.List<globalAndroid.view.View>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module elements {
					export module android {
						export module window {
							export abstract class WindowRootViewCompat extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.elements.android.window.WindowRootViewCompat>;
								public static get(param0: globalAndroid.content.Context): com.facebook.stetho.inspector.elements.android.window.WindowRootViewCompat;
								public getRootViews(): java.util.List<globalAndroid.view.View>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module helper {
					export class ChromePeerManager extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.helper.ChromePeerManager>;
						public constructor();
						public setListener(param0: com.facebook.stetho.inspector.helper.PeerRegistrationListener): void;
						public sendNotificationToPeers(param0: string, param1: any): void;
						public addPeer(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): boolean;
						public invokeMethodOnPeers(param0: string, param1: any, param2: com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback): void;
						public removePeer(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
						public hasRegisteredPeers(): boolean;
					}
					export module ChromePeerManager {
						export class UnregisterOnDisconnect extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver {
							public static class: java.lang.Class<com.facebook.stetho.inspector.helper.ChromePeerManager.UnregisterOnDisconnect>;
							public constructor(param0: com.facebook.stetho.inspector.helper.ChromePeerManager, param1: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer);
							public onDisconnect(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module helper {
					export class IntegerFormatter extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.helper.IntegerFormatter>;
						public static getInstance(): com.facebook.stetho.inspector.helper.IntegerFormatter;
						public format(param0: java.lang.Integer, param1: globalAndroid.view.ViewDebug.ExportedProperty): string;
					}
					export module IntegerFormatter {
						export class IntegerFormatterWithHex extends com.facebook.stetho.inspector.helper.IntegerFormatter {
							public static class: java.lang.Class<com.facebook.stetho.inspector.helper.IntegerFormatter.IntegerFormatterWithHex>;
							public format(param0: java.lang.Integer, param1: globalAndroid.view.ViewDebug.ExportedProperty): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module helper {
					export class ObjectIdMapper extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.helper.ObjectIdMapper>;
						public mSync: any;
						public containsObject(param0: any): boolean;
						public onMapped(param0: any, param1: number): void;
						public constructor();
						public getIdForObject(param0: any): java.lang.Integer;
						public getObjectForId(param0: number): any;
						public containsId(param0: number): boolean;
						public clear(): void;
						public putObject(param0: any): number;
						public size(): number;
						public removeObject(param0: any): java.lang.Integer;
						public onUnmapped(param0: any, param1: number): void;
						public removeObjectById(param0: number): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module helper {
					export class PeerRegistrationListener extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.helper.PeerRegistrationListener>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.helper.PeerRegistrationListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPeerRegistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
							onPeerUnregistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
						});
						public constructor();
						public onPeerRegistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
						public onPeerUnregistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module helper {
					export abstract class PeersRegisteredListener extends java.lang.Object implements com.facebook.stetho.inspector.helper.PeerRegistrationListener {
						public static class: java.lang.Class<com.facebook.stetho.inspector.helper.PeersRegisteredListener>;
						public onPeerRemoved(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
						public constructor();
						public onPeerAdded(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
						public onPeerRegistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
						public onLastPeerUnregistered(): void;
						public onPeerUnregistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
						public onFirstPeerRegistered(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module helper {
					export abstract class ThreadBoundProxy extends java.lang.Object implements com.facebook.stetho.common.ThreadBound {
						public static class: java.lang.Class<com.facebook.stetho.inspector.helper.ThreadBoundProxy>;
						public postDelayed(param0: java.lang.Runnable, param1: number): void;
						public checkThreadAccess(): boolean;
						public postAndWait(param0: com.facebook.stetho.common.UncheckedCallable<any>): any;
						public removeCallbacks(param0: java.lang.Runnable): void;
						public verifyThreadAccess(): void;
						public postAndWait(param0: java.lang.Runnable): void;
						public constructor(param0: com.facebook.stetho.common.ThreadBound);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module jsonrpc {
					export class DisconnectReceiver extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onDisconnect(): void;
						});
						public constructor();
						public onDisconnect(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module jsonrpc {
					export class JsonRpcException extends java.lang.Exception {
						public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.JsonRpcException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError);
						public getErrorMessage(): com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError;
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module jsonrpc {
					export class JsonRpcPeer extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer>;
						public unregisterDisconnectReceiver(param0: com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver): void;
						public getAndRemovePendingRequest(param0: number): com.facebook.stetho.inspector.jsonrpc.PendingRequest;
						public constructor(param0: com.facebook.stetho.json.ObjectMapper, param1: com.facebook.stetho.websocket.SimpleSession);
						public getWebSocket(): com.facebook.stetho.websocket.SimpleSession;
						public registerDisconnectReceiver(param0: com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver): void;
						public invokeMethod(param0: string, param1: any, param2: com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback): void;
						public invokeDisconnectReceivers(): void;
					}
					export module JsonRpcPeer {
						export class DisconnectObservable extends globalAndroid.database.Observable<com.facebook.stetho.inspector.jsonrpc.DisconnectReceiver> {
							public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer.DisconnectObservable>;
							public onDisconnect(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module jsonrpc {
					export class JsonRpcResult extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.JsonRpcResult>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.jsonrpc.JsonRpcResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module jsonrpc {
					export class PendingRequest extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.PendingRequest>;
						public requestId: number;
						public callback: com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback;
						public constructor(param0: number, param1: com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module jsonrpc {
					export class PendingRequestCallback extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.jsonrpc.PendingRequestCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onResponse(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcResponse): void;
						});
						public constructor();
						public onResponse(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcResponse): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module jsonrpc {
					export module protocol {
						export class EmptyResult extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
							public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.protocol.EmptyResult>;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module jsonrpc {
					export module protocol {
						export class JsonRpcError extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError>;
							public code: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError.ErrorCode;
							public message: string;
							public data: org.json.JSONObject;
							public constructor();
							public constructor(param0: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError.ErrorCode, param1: string, param2: org.json.JSONObject);
						}
						export module JsonRpcError {
							export class ErrorCode {
								public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError.ErrorCode>;
								public static PARSER_ERROR: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError.ErrorCode;
								public static INVALID_REQUEST: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError.ErrorCode;
								public static METHOD_NOT_FOUND: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError.ErrorCode;
								public static INVALID_PARAMS: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError.ErrorCode;
								public static INTERNAL_ERROR: com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError.ErrorCode;
								public static values(): native.Array<com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError.ErrorCode>;
								public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
								public static valueOf(param0: string): com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcError.ErrorCode;
								public getProtocolValue(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module jsonrpc {
					export module protocol {
						export class JsonRpcEvent extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcEvent>;
							public method: string;
							public params: org.json.JSONObject;
							public constructor();
							public constructor(param0: string, param1: org.json.JSONObject);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module jsonrpc {
					export module protocol {
						export class JsonRpcRequest extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcRequest>;
							public id: java.lang.Long;
							public method: string;
							public params: org.json.JSONObject;
							public constructor();
							public constructor(param0: java.lang.Long, param1: string, param2: org.json.JSONObject);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module jsonrpc {
					export module protocol {
						export class JsonRpcResponse extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.jsonrpc.protocol.JsonRpcResponse>;
							public id: number;
							public result: org.json.JSONObject;
							public error: org.json.JSONObject;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class AsyncPrettyPrinter extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.AsyncPrettyPrinter>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.network.AsyncPrettyPrinter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							printTo(param0: java.io.PrintWriter, param1: java.io.InputStream): void;
							getPrettifiedType(): com.facebook.stetho.inspector.network.PrettyPrinterDisplayType;
						});
						public constructor();
						public printTo(param0: java.io.PrintWriter, param1: java.io.InputStream): void;
						public getPrettifiedType(): com.facebook.stetho.inspector.network.PrettyPrinterDisplayType;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class AsyncPrettyPrinterExecutorHolder extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.AsyncPrettyPrinterExecutorHolder>;
						public static getExecutorService(): java.util.concurrent.ExecutorService;
						public static shutdown(): void;
						public static ensureInitialized(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class AsyncPrettyPrinterFactory extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.AsyncPrettyPrinterFactory>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.network.AsyncPrettyPrinterFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getInstance(param0: string, param1: string): com.facebook.stetho.inspector.network.AsyncPrettyPrinter;
						});
						public constructor();
						public getInstance(param0: string, param1: string): com.facebook.stetho.inspector.network.AsyncPrettyPrinter;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class AsyncPrettyPrinterInitializer extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.AsyncPrettyPrinterInitializer>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.network.AsyncPrettyPrinterInitializer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							populatePrettyPrinters(param0: com.facebook.stetho.inspector.network.AsyncPrettyPrinterRegistry): void;
						});
						public constructor();
						public populatePrettyPrinters(param0: com.facebook.stetho.inspector.network.AsyncPrettyPrinterRegistry): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class AsyncPrettyPrinterRegistry extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.AsyncPrettyPrinterRegistry>;
						public unregister(param0: string): boolean;
						public constructor();
						public lookup(param0: string): com.facebook.stetho.inspector.network.AsyncPrettyPrinterFactory;
						public register(param0: string, param1: com.facebook.stetho.inspector.network.AsyncPrettyPrinterFactory): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class CountingOutputStream extends java.io.FilterOutputStream {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.CountingOutputStream>;
						public constructor(param0: java.io.OutputStream);
						public constructor();
						public close(): void;
						public write(param0: number): void;
						public write(param0: native.Array<number>, param1: number, param2: number): void;
						public getCount(): number;
						public flush(): void;
						public write(param0: native.Array<number>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class DecompressionHelper extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.DecompressionHelper>;
						public constructor();
						public static teeInputWithDecompression(param0: com.facebook.stetho.inspector.network.NetworkPeerManager, param1: string, param2: java.io.InputStream, param3: java.io.OutputStream, param4: string, param5: com.facebook.stetho.inspector.network.ResponseHandler): java.io.InputStream;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class DefaultResponseHandler extends java.lang.Object implements com.facebook.stetho.inspector.network.ResponseHandler {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.DefaultResponseHandler>;
						public constructor(param0: com.facebook.stetho.inspector.network.NetworkEventReporter, param1: string);
						public onRead(param0: number): void;
						public onReadDecoded(param0: number): void;
						public onEOF(): void;
						public onError(param0: java.io.IOException): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export abstract class DownloadingAsyncPrettyPrinterFactory extends java.lang.Object implements com.facebook.stetho.inspector.network.AsyncPrettyPrinterFactory {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.DownloadingAsyncPrettyPrinterFactory>;
						public matchAndParseHeader(param0: string, param1: string): com.facebook.stetho.inspector.network.DownloadingAsyncPrettyPrinterFactory.MatchResult;
						public doPrint(param0: java.io.PrintWriter, param1: java.io.InputStream, param2: string): void;
						public constructor();
						public getInstance(param0: string, param1: string): com.facebook.stetho.inspector.network.AsyncPrettyPrinter;
					}
					export module DownloadingAsyncPrettyPrinterFactory {
						export class MatchResult extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.DownloadingAsyncPrettyPrinterFactory.MatchResult>;
							public getDisplayType(): com.facebook.stetho.inspector.network.PrettyPrinterDisplayType;
							public getSchemaUri(): string;
							public constructor(param0: com.facebook.stetho.inspector.network.DownloadingAsyncPrettyPrinterFactory, param1: string, param2: com.facebook.stetho.inspector.network.PrettyPrinterDisplayType);
						}
						export class Request extends java.util.concurrent.Callable<string> {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.DownloadingAsyncPrettyPrinterFactory.Request>;
							public call(): any;
							public constructor(param0: java.net.URL);
							public call(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class GunzippingOutputStream extends java.io.FilterOutputStream {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.GunzippingOutputStream>;
						public close(): void;
						public static create(param0: java.io.OutputStream): com.facebook.stetho.inspector.network.GunzippingOutputStream;
						public flush(): void;
					}
					export module GunzippingOutputStream {
						export class GunzippingCallable extends java.util.concurrent.Callable<java.lang.Void> {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.GunzippingOutputStream.GunzippingCallable>;
							public call(): any;
							public call(): java.lang.Void;
							public constructor(param0: java.io.InputStream, param1: java.io.OutputStream);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class MimeMatcher<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.MimeMatcher<any>>;
						public match(param0: string): T;
						public constructor();
						public addRule(param0: string, param1: T): void;
						public clear(): void;
					}
					export module MimeMatcher {
						export class MimeMatcherRule extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.MimeMatcher.MimeMatcherRule>;
							public constructor(param0: string, param1: any);
							public match(param0: string): boolean;
							public getResultIfMatched(): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class NetworkEventReporter extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.NetworkEventReporter>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.network.NetworkEventReporter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							isEnabled(): boolean;
							requestWillBeSent(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorRequest): void;
							responseHeadersReceived(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorResponse): void;
							httpExchangeFailed(param0: string, param1: string): void;
							interpretResponseStream(param0: string, param1: string, param2: string, param3: java.io.InputStream, param4: com.facebook.stetho.inspector.network.ResponseHandler): java.io.InputStream;
							responseReadFailed(param0: string, param1: string): void;
							responseReadFinished(param0: string): void;
							dataSent(param0: string, param1: number, param2: number): void;
							dataReceived(param0: string, param1: number, param2: number): void;
							nextRequestId(): string;
							webSocketCreated(param0: string, param1: string): void;
							webSocketClosed(param0: string): void;
							webSocketWillSendHandshakeRequest(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketRequest): void;
							webSocketHandshakeResponseReceived(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketResponse): void;
							webSocketFrameSent(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketFrame): void;
							webSocketFrameReceived(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketFrame): void;
							webSocketFrameError(param0: string, param1: string): void;
						});
						public constructor();
						public responseHeadersReceived(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorResponse): void;
						public dataSent(param0: string, param1: number, param2: number): void;
						public requestWillBeSent(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorRequest): void;
						public responseReadFailed(param0: string, param1: string): void;
						public nextRequestId(): string;
						public webSocketClosed(param0: string): void;
						public webSocketWillSendHandshakeRequest(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketRequest): void;
						public webSocketCreated(param0: string, param1: string): void;
						public isEnabled(): boolean;
						public webSocketHandshakeResponseReceived(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketResponse): void;
						public webSocketFrameError(param0: string, param1: string): void;
						public webSocketFrameSent(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketFrame): void;
						public webSocketFrameReceived(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketFrame): void;
						public dataReceived(param0: string, param1: number, param2: number): void;
						public interpretResponseStream(param0: string, param1: string, param2: string, param3: java.io.InputStream, param4: com.facebook.stetho.inspector.network.ResponseHandler): java.io.InputStream;
						public responseReadFinished(param0: string): void;
						public httpExchangeFailed(param0: string, param1: string): void;
					}
					export module NetworkEventReporter {
						export class InspectorHeaders extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorHeaders>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorHeaders interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								headerCount(): number;
								headerName(param0: number): string;
								headerValue(param0: number): string;
								firstHeaderValue(param0: string): string;
							});
							public constructor();
							public headerName(param0: number): string;
							public firstHeaderValue(param0: string): string;
							public headerCount(): number;
							public headerValue(param0: number): string;
						}
						export class InspectorRequest extends java.lang.Object implements com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorRequestCommon {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorRequest>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequest interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								friendlyNameExtra(): java.lang.Integer;
								url(): string;
								method(): string;
								body(): native.Array<number>;
								id(): string;
								friendlyName(): string;
								headerCount(): number;
								headerName(param0: number): string;
								headerValue(param0: number): string;
								firstHeaderValue(param0: string): string;
							});
							public constructor();
							public method(): string;
							public headerName(param0: number): string;
							public body(): native.Array<number>;
							public firstHeaderValue(param0: string): string;
							public url(): string;
							public headerCount(): number;
							public friendlyNameExtra(): java.lang.Integer;
							public headerValue(param0: number): string;
							public id(): string;
							public friendlyName(): string;
						}
						export class InspectorRequestCommon extends java.lang.Object implements com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorHeaders {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorRequestCommon>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorRequestCommon interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								id(): string;
								friendlyName(): string;
								headerCount(): number;
								headerName(param0: number): string;
								headerValue(param0: number): string;
								firstHeaderValue(param0: string): string;
							});
							public constructor();
							public headerName(param0: number): string;
							public firstHeaderValue(param0: string): string;
							public headerCount(): number;
							public headerValue(param0: number): string;
							public id(): string;
							public friendlyName(): string;
						}
						export class InspectorResponse extends java.lang.Object implements com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorResponseCommon {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorResponse>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponse interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								url(): string;
								connectionReused(): boolean;
								connectionId(): number;
								fromDiskCache(): boolean;
								requestId(): string;
								statusCode(): number;
								reasonPhrase(): string;
								headerCount(): number;
								headerName(param0: number): string;
								headerValue(param0: number): string;
								firstHeaderValue(param0: string): string;
							});
							public constructor();
							public headerName(param0: number): string;
							public connectionReused(): boolean;
							public firstHeaderValue(param0: string): string;
							public url(): string;
							public connectionId(): number;
							public headerCount(): number;
							public reasonPhrase(): string;
							public fromDiskCache(): boolean;
							public statusCode(): number;
							public headerValue(param0: number): string;
							public requestId(): string;
						}
						export class InspectorResponseCommon extends java.lang.Object implements com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorHeaders {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorResponseCommon>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorResponseCommon interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								requestId(): string;
								statusCode(): number;
								reasonPhrase(): string;
								headerCount(): number;
								headerName(param0: number): string;
								headerValue(param0: number): string;
								firstHeaderValue(param0: string): string;
							});
							public constructor();
							public headerName(param0: number): string;
							public firstHeaderValue(param0: string): string;
							public headerCount(): number;
							public reasonPhrase(): string;
							public statusCode(): number;
							public headerValue(param0: number): string;
							public requestId(): string;
						}
						export class InspectorWebSocketFrame extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketFrame>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorWebSocketFrame interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								requestId(): string;
								opcode(): number;
								mask(): boolean;
								payloadData(): string;
							});
							public constructor();
							public static OPCODE_PONG: number;
							public static OPCODE_TEXT: number;
							public static OPCODE_BINARY: number;
							public static OPCODE_PING: number;
							public static OPCODE_CONTINUATION: number;
							public static OPCODE_CONNECTION_CLOSE: number;
							public payloadData(): string;
							public mask(): boolean;
							public opcode(): number;
							public requestId(): string;
						}
						export class InspectorWebSocketRequest extends java.lang.Object implements com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorRequestCommon {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketRequest>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorWebSocketRequest interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								id(): string;
								friendlyName(): string;
								headerCount(): number;
								headerName(param0: number): string;
								headerValue(param0: number): string;
								firstHeaderValue(param0: string): string;
							});
							public constructor();
							public headerName(param0: number): string;
							public firstHeaderValue(param0: string): string;
							public headerCount(): number;
							public headerValue(param0: number): string;
							public id(): string;
							public friendlyName(): string;
						}
						export class InspectorWebSocketResponse extends java.lang.Object implements com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorResponseCommon {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketResponse>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.network.NetworkEventReporter$InspectorWebSocketResponse interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								requestHeaders(): com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorHeaders;
								requestId(): string;
								statusCode(): number;
								reasonPhrase(): string;
								headerCount(): number;
								headerName(param0: number): string;
								headerValue(param0: number): string;
								firstHeaderValue(param0: string): string;
							});
							public constructor();
							public headerName(param0: number): string;
							public requestHeaders(): com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorHeaders;
							public firstHeaderValue(param0: string): string;
							public headerCount(): number;
							public reasonPhrase(): string;
							public statusCode(): number;
							public headerValue(param0: number): string;
							public requestId(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class NetworkEventReporterImpl extends java.lang.Object implements com.facebook.stetho.inspector.network.NetworkEventReporter {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.NetworkEventReporterImpl>;
						public responseHeadersReceived(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorResponse): void;
						public dataSent(param0: string, param1: number, param2: number): void;
						public requestWillBeSent(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorRequest): void;
						public responseReadFailed(param0: string, param1: string): void;
						public nextRequestId(): string;
						public webSocketClosed(param0: string): void;
						public webSocketWillSendHandshakeRequest(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketRequest): void;
						public webSocketCreated(param0: string, param1: string): void;
						public isEnabled(): boolean;
						public webSocketHandshakeResponseReceived(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketResponse): void;
						public webSocketFrameError(param0: string, param1: string): void;
						public webSocketFrameSent(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketFrame): void;
						public webSocketFrameReceived(param0: com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketFrame): void;
						public dataReceived(param0: string, param1: number, param2: number): void;
						public static get(): com.facebook.stetho.inspector.network.NetworkEventReporter;
						public interpretResponseStream(param0: string, param1: string, param2: string, param3: java.io.InputStream, param4: com.facebook.stetho.inspector.network.ResponseHandler): java.io.InputStream;
						public responseReadFinished(param0: string): void;
						public httpExchangeFailed(param0: string, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class NetworkPeerManager extends com.facebook.stetho.inspector.helper.ChromePeerManager {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.NetworkPeerManager>;
						public static getOrCreateInstance(param0: globalAndroid.content.Context): com.facebook.stetho.inspector.network.NetworkPeerManager;
						public constructor();
						public constructor(param0: com.facebook.stetho.inspector.network.ResponseBodyFileManager);
						public static getInstanceOrNull(): com.facebook.stetho.inspector.network.NetworkPeerManager;
						public getAsyncPrettyPrinterRegistry(): com.facebook.stetho.inspector.network.AsyncPrettyPrinterRegistry;
						public getResponseBodyFileManager(): com.facebook.stetho.inspector.network.ResponseBodyFileManager;
						public setPrettyPrinterInitializer(param0: com.facebook.stetho.inspector.network.AsyncPrettyPrinterInitializer): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class PrettyPrinterDisplayType {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.PrettyPrinterDisplayType>;
						public static JSON: com.facebook.stetho.inspector.network.PrettyPrinterDisplayType;
						public static HTML: com.facebook.stetho.inspector.network.PrettyPrinterDisplayType;
						public static TEXT: com.facebook.stetho.inspector.network.PrettyPrinterDisplayType;
						public static values(): native.Array<com.facebook.stetho.inspector.network.PrettyPrinterDisplayType>;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static valueOf(param0: string): com.facebook.stetho.inspector.network.PrettyPrinterDisplayType;
						public getResourceType(): com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class RequestBodyHelper extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.RequestBodyHelper>;
						public constructor(param0: com.facebook.stetho.inspector.network.NetworkEventReporter, param1: string);
						public hasBody(): boolean;
						public createBodySink(param0: string): java.io.OutputStream;
						public getDisplayBody(): native.Array<number>;
						public reportDataSent(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class ResourceTypeHelper extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.ResourceTypeHelper>;
						public constructor();
						public determineResourceType(param0: string): com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
						public stripContentExtras(param0: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class ResponseBodyData extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.ResponseBodyData>;
						public data: string;
						public base64Encoded: boolean;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class ResponseBodyFileManager extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.ResponseBodyFileManager>;
						public constructor(param0: globalAndroid.content.Context);
						public openResponseBodyFile(param0: string, param1: boolean): java.io.OutputStream;
						public readFile(param0: string): com.facebook.stetho.inspector.network.ResponseBodyData;
						public associateAsyncPrettyPrinterWithId(param0: string, param1: com.facebook.stetho.inspector.network.AsyncPrettyPrinter): void;
						public cleanupFiles(): void;
					}
					export module ResponseBodyFileManager {
						export class AsyncPrettyPrintingCallable extends java.util.concurrent.Callable<string> {
							public static class: java.lang.Class<com.facebook.stetho.inspector.network.ResponseBodyFileManager.AsyncPrettyPrintingCallable>;
							public call(): any;
							public constructor(param0: com.facebook.stetho.inspector.network.ResponseBodyFileManager, param1: java.io.InputStream, param2: com.facebook.stetho.inspector.network.AsyncPrettyPrinter);
							public call(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class ResponseHandler extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.ResponseHandler>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.network.ResponseHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onRead(param0: number): void;
							onReadDecoded(param0: number): void;
							onEOF(): void;
							onError(param0: java.io.IOException): void;
						});
						public constructor();
						public onRead(param0: number): void;
						public onReadDecoded(param0: number): void;
						public onEOF(): void;
						public onError(param0: java.io.IOException): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class ResponseHandlingInputStream extends java.io.FilterInputStream {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.ResponseHandlingInputStream>;
						public static TAG: string;
						public read(): number;
						public skip(param0: number): number;
						public constructor();
						public constructor(param0: java.io.InputStream);
						public read(param0: native.Array<number>): number;
						public close(): void;
						public constructor(param0: java.io.InputStream, param1: string, param2: java.io.OutputStream, param3: com.facebook.stetho.inspector.network.CountingOutputStream, param4: com.facebook.stetho.inspector.helper.ChromePeerManager, param5: com.facebook.stetho.inspector.network.ResponseHandler);
						public markSupported(): boolean;
						public mark(param0: number): void;
						public read(param0: native.Array<number>, param1: number, param2: number): number;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class SimpleBinaryInspectorWebSocketFrame extends java.lang.Object implements com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketFrame {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.SimpleBinaryInspectorWebSocketFrame>;
						public payloadData(): string;
						public mask(): boolean;
						public constructor(param0: string, param1: native.Array<number>);
						public requestId(): string;
						public opcode(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module network {
					export class SimpleTextInspectorWebSocketFrame extends java.lang.Object implements com.facebook.stetho.inspector.network.NetworkEventReporter.InspectorWebSocketFrame {
						public static class: java.lang.Class<com.facebook.stetho.inspector.network.SimpleTextInspectorWebSocketFrame>;
						public payloadData(): string;
						public mask(): boolean;
						public requestId(): string;
						public constructor(param0: string, param1: string);
						public opcode(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export class ChromeDevtoolsDomain extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export class ChromeDevtoolsMethod extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.ChromeDevtoolsMethod>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.inspector.protocol.ChromeDevtoolsMethod interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export abstract class BaseDatabaseDriver<DESC>  extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver<any>>;
							public mContext: globalAndroid.content.Context;
							public getContext(): globalAndroid.content.Context;
							public getTableNames(param0: DESC): java.util.List<string>;
							public executeSQL(param0: DESC, param1: string, param2: com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver.ExecuteResultHandler<com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse>): com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse;
							public getDatabaseNames(): java.util.List<DESC>;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module BaseDatabaseDriver {
							export class ExecuteResultHandler<RESULT>  extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver.ExecuteResultHandler<any>>;
								/**
								 * Constructs a new instance of the com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver$ExecuteResultHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									handleRawQuery(): RESULT;
									handleSelect(param0: globalAndroid.database.Cursor): RESULT;
									handleInsert(param0: number): RESULT;
									handleUpdateDelete(param0: number): RESULT;
								});
								public constructor();
								public handleRawQuery(): RESULT;
								public handleInsert(param0: number): RESULT;
								public handleUpdateDelete(param0: number): RESULT;
								public handleSelect(param0: globalAndroid.database.Cursor): RESULT;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class CSS extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS>;
							public getComputedStyleForNode(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public constructor(param0: com.facebook.stetho.inspector.elements.Document);
							public getMatchedStylesForNode(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public enable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public disable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public setPropertyText(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.protocol.module.CSS.SetPropertyTextResult;
						}
						export module CSS {
							export class CSSComputedStyleProperty extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.CSSComputedStyleProperty>;
								public name: string;
								public value: string;
							}
							export class CSSProperty extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.CSSProperty>;
								public name: string;
								public value: string;
								public important: java.lang.Boolean;
								public implicit: java.lang.Boolean;
								public text: string;
								public parsedOk: java.lang.Boolean;
								public disabled: java.lang.Boolean;
								public range: com.facebook.stetho.inspector.protocol.module.CSS.SourceRange;
							}
							export class CSSRule extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.CSSRule>;
								public styleSheetId: string;
								public selectorList: com.facebook.stetho.inspector.protocol.module.CSS.SelectorList;
								public origin: com.facebook.stetho.inspector.elements.Origin;
								public style: com.facebook.stetho.inspector.protocol.module.CSS.CSSStyle;
							}
							export class CSSStyle extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.CSSStyle>;
								public styleSheetId: string;
								public cssProperties: java.util.List<com.facebook.stetho.inspector.protocol.module.CSS.CSSProperty>;
								public shorthandEntries: java.util.List<com.facebook.stetho.inspector.protocol.module.CSS.ShorthandEntry>;
								public cssText: string;
								public range: com.facebook.stetho.inspector.protocol.module.CSS.SourceRange;
							}
							export class GetComputedStyleForNodeRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.GetComputedStyleForNodeRequest>;
								public nodeId: number;
							}
							export class GetComputedStyleForNodeResult extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.GetComputedStyleForNodeResult>;
								public computedStyle: java.util.List<com.facebook.stetho.inspector.protocol.module.CSS.CSSComputedStyleProperty>;
							}
							export class GetMatchedStylesForNodeRequest extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.GetMatchedStylesForNodeRequest>;
								public nodeId: number;
								public excludePseudo: java.lang.Boolean;
								public excludeInherited: java.lang.Boolean;
							}
							export class GetMatchedStylesForNodeResult extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.GetMatchedStylesForNodeResult>;
								public matchedCSSRules: java.util.List<com.facebook.stetho.inspector.protocol.module.CSS.RuleMatch>;
								public pseudoElements: java.util.List<com.facebook.stetho.inspector.protocol.module.CSS.PseudoIdMatches>;
								public inherited: java.util.List<com.facebook.stetho.inspector.protocol.module.CSS.InheritedStyleEntry>;
							}
							export class InheritedStyleEntry extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.InheritedStyleEntry>;
								public inlineStyle: com.facebook.stetho.inspector.protocol.module.CSS.CSSStyle;
								public matchedCSSRules: java.util.List<com.facebook.stetho.inspector.protocol.module.CSS.RuleMatch>;
							}
							export class PeerManagerListener extends com.facebook.stetho.inspector.helper.PeersRegisteredListener {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.PeerManagerListener>;
								public onPeerUnregistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
								public onFirstPeerRegistered(): void;
								public onPeerRegistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
								public onLastPeerUnregistered(): void;
							}
							export class PseudoIdMatches extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.PseudoIdMatches>;
								public pseudoId: number;
								public matches: java.util.List<com.facebook.stetho.inspector.protocol.module.CSS.RuleMatch>;
								public constructor();
							}
							export class RuleMatch extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.RuleMatch>;
								public rule: com.facebook.stetho.inspector.protocol.module.CSS.CSSRule;
								public matchingSelectors: java.util.List<java.lang.Integer>;
							}
							export class Selector extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.Selector>;
								public value: string;
								public range: com.facebook.stetho.inspector.protocol.module.CSS.SourceRange;
							}
							export class SelectorList extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.SelectorList>;
								public selectors: java.util.List<com.facebook.stetho.inspector.protocol.module.CSS.Selector>;
								public text: string;
							}
							export class SetPropertyTextRequest extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.SetPropertyTextRequest>;
								public styleSheetId: string;
								public text: string;
							}
							export class SetPropertyTextResult extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.SetPropertyTextResult>;
								public style: com.facebook.stetho.inspector.protocol.module.CSS.CSSStyle;
							}
							export class ShorthandEntry extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.ShorthandEntry>;
								public name: string;
								public value: string;
								public important: java.lang.Boolean;
							}
							export class SourceRange extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.CSS.SourceRange>;
								public startLine: number;
								public startColumn: number;
								public endLine: number;
								public endColumn: number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class Console extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Console>;
							public constructor();
							public enable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public disable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
						}
						export module Console {
							export class CallFrame extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Console.CallFrame>;
								public functionName: string;
								public url: string;
								public lineNumber: number;
								public columnNumber: number;
								public constructor(param0: string, param1: string, param2: number, param3: number);
								public constructor();
							}
							export class ConsoleMessage extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Console.ConsoleMessage>;
								public source: com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public level: com.facebook.stetho.inspector.protocol.module.Console.MessageLevel;
								public text: string;
								public constructor();
							}
							export class MessageAddedRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Console.MessageAddedRequest>;
								public message: com.facebook.stetho.inspector.protocol.module.Console.ConsoleMessage;
								public constructor();
							}
							export class MessageLevel {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Console.MessageLevel>;
								public static LOG: com.facebook.stetho.inspector.protocol.module.Console.MessageLevel;
								public static WARNING: com.facebook.stetho.inspector.protocol.module.Console.MessageLevel;
								public static ERROR: com.facebook.stetho.inspector.protocol.module.Console.MessageLevel;
								public static DEBUG: com.facebook.stetho.inspector.protocol.module.Console.MessageLevel;
								public static valueOf(param0: string): com.facebook.stetho.inspector.protocol.module.Console.MessageLevel;
								public static values(): native.Array<com.facebook.stetho.inspector.protocol.module.Console.MessageLevel>;
								public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
								public getProtocolValue(): string;
							}
							export class MessageSource {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Console.MessageSource>;
								public static XML: com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public static JAVASCRIPT: com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public static NETWORK: com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public static CONSOLE_API: com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public static STORAGE: com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public static APPCACHE: com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public static RENDERING: com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public static CSS: com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public static SECURITY: com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public static OTHER: com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public static valueOf(param0: string): com.facebook.stetho.inspector.protocol.module.Console.MessageSource;
								public static values(): native.Array<com.facebook.stetho.inspector.protocol.module.Console.MessageSource>;
								public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
								public getProtocolValue(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class DOM extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM>;
							public performSearch(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.protocol.module.DOM.PerformSearchResponse;
							public getSearchResults(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.protocol.module.DOM.GetSearchResultsResponse;
							public highlightNode(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public constructor(param0: com.facebook.stetho.inspector.elements.Document);
							public discardSearchResults(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public setInspectModeEnabled(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public enable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public getDocument(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public disable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public resolveNode(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.protocol.module.DOM.ResolveNodeResponse;
							public setAttributesAsText(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public hideHighlight(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
						}
						export module DOM {
							export class AttributeModifiedEvent extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.AttributeModifiedEvent>;
								public nodeId: number;
								public name: string;
								public value: string;
							}
							export class AttributeRemovedEvent extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.AttributeRemovedEvent>;
								public nodeId: number;
								public name: string;
							}
							export class ChildNodeInsertedEvent extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.ChildNodeInsertedEvent>;
								public parentNodeId: number;
								public previousNodeId: number;
								public node: com.facebook.stetho.inspector.protocol.module.DOM.Node;
							}
							export class ChildNodeRemovedEvent extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.ChildNodeRemovedEvent>;
								public parentNodeId: number;
								public nodeId: number;
							}
							export class DiscardSearchResultsRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.DiscardSearchResultsRequest>;
								public searchId: string;
							}
							export class DocumentUpdateListener extends java.lang.Object implements com.facebook.stetho.inspector.elements.Document.UpdateListener {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.DocumentUpdateListener>;
								public onChildNodeRemoved(param0: number, param1: number): void;
								public onAttributeModified(param0: any, param1: string, param2: string): void;
								public onAttributeRemoved(param0: any, param1: string): void;
								public onInspectRequested(param0: any): void;
								public onChildNodeInserted(param0: com.facebook.stetho.inspector.elements.DocumentView, param1: any, param2: number, param3: number, param4: com.facebook.stetho.common.Accumulator<any>): void;
							}
							export class GetDocumentResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.GetDocumentResponse>;
								public root: com.facebook.stetho.inspector.protocol.module.DOM.Node;
							}
							export class GetSearchResultsRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.GetSearchResultsRequest>;
								public searchId: string;
								public fromIndex: number;
								public toIndex: number;
							}
							export class GetSearchResultsResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.GetSearchResultsResponse>;
								public nodeIds: java.util.List<java.lang.Integer>;
							}
							export class HighlightConfig extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.HighlightConfig>;
								public contentColor: com.facebook.stetho.inspector.protocol.module.DOM.RGBAColor;
							}
							export class HighlightNodeRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.HighlightNodeRequest>;
								public highlightConfig: com.facebook.stetho.inspector.protocol.module.DOM.HighlightConfig;
								public nodeId: java.lang.Integer;
								public objectId: string;
							}
							export class InspectNodeRequestedEvent extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.InspectNodeRequestedEvent>;
								public nodeId: number;
							}
							export class Node extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.Node>;
								public nodeId: number;
								public nodeType: com.facebook.stetho.inspector.elements.NodeType;
								public nodeName: string;
								public localName: string;
								public nodeValue: string;
								public childNodeCount: java.lang.Integer;
								public children: java.util.List<com.facebook.stetho.inspector.protocol.module.DOM.Node>;
								public attributes: java.util.List<string>;
							}
							export class PeerManagerListener extends com.facebook.stetho.inspector.helper.PeersRegisteredListener {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.PeerManagerListener>;
								public onPeerUnregistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
								public onFirstPeerRegistered(): void;
								public onPeerRegistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
								public onLastPeerUnregistered(): void;
							}
							export class PerformSearchRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.PerformSearchRequest>;
								public query: string;
								public includeUserAgentShadowDOM: java.lang.Boolean;
							}
							export class PerformSearchResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.PerformSearchResponse>;
								public searchId: string;
								public resultCount: number;
							}
							export class RGBAColor extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.RGBAColor>;
								public r: number;
								public g: number;
								public b: number;
								public a: java.lang.Double;
								public getColor(): number;
							}
							export class ResolveNodeRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.ResolveNodeRequest>;
								public nodeId: number;
								public objectGroup: string;
							}
							export class ResolveNodeResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.ResolveNodeResponse>;
								public object: com.facebook.stetho.inspector.protocol.module.Runtime.RemoteObject;
							}
							export class SetAttributesAsTextRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.SetAttributesAsTextRequest>;
								public nodeId: number;
								public text: string;
							}
							export class SetInspectModeEnabledRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOM.SetInspectModeEnabledRequest>;
								public enabled: boolean;
								public inspectShadowDOM: java.lang.Boolean;
								public highlightConfig: com.facebook.stetho.inspector.protocol.module.DOM.HighlightConfig;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class DOMStorage extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOMStorage>;
							public getDOMStorageItems(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public removeDOMStorageItem(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public enable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public disable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public setDOMStorageItem(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module DOMStorage {
							export class DOMStorageAssignmentException extends java.lang.Exception {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOMStorage.DOMStorageAssignmentException>;
								public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
								public constructor(param0: java.lang.Throwable);
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor();
								public constructor(param0: string);
							}
							export class DomStorageItemAddedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOMStorage.DomStorageItemAddedParams>;
								public storageId: com.facebook.stetho.inspector.protocol.module.DOMStorage.StorageId;
								public key: string;
								public newValue: string;
								public constructor();
							}
							export class DomStorageItemRemovedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOMStorage.DomStorageItemRemovedParams>;
								public storageId: com.facebook.stetho.inspector.protocol.module.DOMStorage.StorageId;
								public key: string;
								public constructor();
							}
							export class DomStorageItemUpdatedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOMStorage.DomStorageItemUpdatedParams>;
								public storageId: com.facebook.stetho.inspector.protocol.module.DOMStorage.StorageId;
								public key: string;
								public oldValue: string;
								public newValue: string;
								public constructor();
							}
							export class DomStorageItemsClearedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOMStorage.DomStorageItemsClearedParams>;
								public storageId: com.facebook.stetho.inspector.protocol.module.DOMStorage.StorageId;
								public constructor();
							}
							export class GetDOMStorageItemsResult extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOMStorage.GetDOMStorageItemsResult>;
								public entries: java.util.List<java.util.List<string>>;
							}
							export class StorageId extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DOMStorage.StorageId>;
								public securityOrigin: string;
								public isLocalStorage: boolean;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class Database extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Database>;
							public constructor();
							public enable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public getDatabaseTableNames(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public disable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public add(param0: com.facebook.stetho.inspector.protocol.module.DatabaseDriver2<any>): void;
							public executeSQL(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
						}
						export module Database {
							export class AddDatabaseEvent extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Database.AddDatabaseEvent>;
								public database: com.facebook.stetho.inspector.protocol.module.Database.DatabaseObject;
								public constructor();
							}
							export class DatabaseDescriptorHolder extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Database.DatabaseDescriptorHolder>;
								public driver: com.facebook.stetho.inspector.protocol.module.DatabaseDriver2<any>;
								public descriptor: com.facebook.stetho.inspector.protocol.module.DatabaseDescriptor;
								public constructor(param0: com.facebook.stetho.inspector.protocol.module.DatabaseDriver2<any>, param1: com.facebook.stetho.inspector.protocol.module.DatabaseDescriptor);
							}
							export abstract class DatabaseDriver extends com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver<string> {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Database.DatabaseDriver>;
								public constructor(param0: globalAndroid.content.Context);
							}
							export class DatabaseObject extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Database.DatabaseObject>;
								public id: string;
								public domain: string;
								public name: string;
								public version: string;
								public constructor();
							}
							export class DatabasePeerRegistrationListener extends com.facebook.stetho.inspector.helper.PeersRegisteredListener {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Database.DatabasePeerRegistrationListener>;
								public onPeerUnregistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
								public onFirstPeerRegistered(): void;
								public onPeerAdded(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
								public onPeerRemoved(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
								public onPeerRegistered(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer): void;
								public getDatabaseDescriptorHolder(param0: string): com.facebook.stetho.inspector.protocol.module.Database.DatabaseDescriptorHolder;
								public onLastPeerUnregistered(): void;
							}
							export class Error extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Database.Error>;
								public message: string;
								public code: number;
								public constructor();
							}
							export class ExecuteSQLRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLRequest>;
								public databaseId: string;
								public query: string;
								public constructor();
							}
							export class ExecuteSQLResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Database.ExecuteSQLResponse>;
								public columnNames: java.util.List<string>;
								public values: java.util.List<string>;
								public sqlError: com.facebook.stetho.inspector.protocol.module.Database.Error;
								public constructor();
							}
							export class GetDatabaseTableNamesRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Database.GetDatabaseTableNamesRequest>;
								public databaseId: string;
							}
							export class GetDatabaseTableNamesResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Database.GetDatabaseTableNamesResponse>;
								public tableNames: java.util.List<string>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class DatabaseConstants extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DatabaseConstants>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.protocol.module.DatabaseConstants interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
							public static MIN_API_LEVEL: number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class DatabaseDescriptor extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DatabaseDescriptor>;
							/**
							 * Constructs a new instance of the com.facebook.stetho.inspector.protocol.module.DatabaseDescriptor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								name(): string;
							});
							public constructor();
							public name(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export abstract class DatabaseDriver2<DESC>  extends com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver<any> {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.DatabaseDriver2<any>>;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class Debugger extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Debugger>;
							public constructor();
							public setPauseOnExceptions(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public enable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public canSetScriptSource(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public disable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class HeapProfiler extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.HeapProfiler>;
							public constructor();
							public getProfileHeaders(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
						}
						export module HeapProfiler {
							export class ProfileHeader extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.HeapProfiler.ProfileHeader>;
								public title: string;
								public uid: number;
							}
							export class ProfileHeaderResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.HeapProfiler.ProfileHeaderResponse>;
								public headers: java.util.List<com.facebook.stetho.inspector.protocol.module.HeapProfiler.ProfileHeader>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class Inspector extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Inspector>;
							public constructor();
							public enable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public disable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class Network extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network>;
							public setPrettyPrinterInitializer(param0: com.facebook.stetho.inspector.network.AsyncPrettyPrinterInitializer): void;
							public getResponseBody(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public enable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public setUserAgentOverride(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public disable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public constructor(param0: globalAndroid.content.Context);
						}
						export module Network {
							export class DataReceivedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.DataReceivedParams>;
								public requestId: string;
								public timestamp: number;
								public dataLength: number;
								public encodedDataLength: number;
								public constructor();
							}
							export class GetResponseBodyResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.GetResponseBodyResponse>;
								public body: string;
								public base64Encoded: boolean;
							}
							export class Initiator extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.Initiator>;
								public type: com.facebook.stetho.inspector.protocol.module.Network.InitiatorType;
								public stackTrace: java.util.List<com.facebook.stetho.inspector.protocol.module.Console.CallFrame>;
								public constructor();
							}
							export class InitiatorType {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.InitiatorType>;
								public static PARSER: com.facebook.stetho.inspector.protocol.module.Network.InitiatorType;
								public static SCRIPT: com.facebook.stetho.inspector.protocol.module.Network.InitiatorType;
								public static OTHER: com.facebook.stetho.inspector.protocol.module.Network.InitiatorType;
								public static valueOf(param0: string): com.facebook.stetho.inspector.protocol.module.Network.InitiatorType;
								public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
								public getProtocolValue(): string;
								public static values(): native.Array<com.facebook.stetho.inspector.protocol.module.Network.InitiatorType>;
							}
							export class LoadingFailedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.LoadingFailedParams>;
								public requestId: string;
								public timestamp: number;
								public errorText: string;
								public type: com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public constructor();
							}
							export class LoadingFinishedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.LoadingFinishedParams>;
								public requestId: string;
								public timestamp: number;
								public constructor();
							}
							export class Request extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.Request>;
								public url: string;
								public method: string;
								public headers: org.json.JSONObject;
								public postData: string;
								public constructor();
							}
							export class RequestWillBeSentParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.RequestWillBeSentParams>;
								public requestId: string;
								public frameId: string;
								public loaderId: string;
								public documentURL: string;
								public request: com.facebook.stetho.inspector.protocol.module.Network.Request;
								public timestamp: number;
								public initiator: com.facebook.stetho.inspector.protocol.module.Network.Initiator;
								public redirectResponse: com.facebook.stetho.inspector.protocol.module.Network.Response;
								public type: com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public constructor();
							}
							export class ResourceTiming extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.ResourceTiming>;
								public requestTime: number;
								public proxyStart: number;
								public proxyEnd: number;
								public dnsStart: number;
								public dnsEnd: number;
								public connectionStart: number;
								public connectionEnd: number;
								public sslStart: number;
								public sslEnd: number;
								public sendStart: number;
								public sendEnd: number;
								public receivedHeadersEnd: number;
								public constructor();
							}
							export class Response extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.Response>;
								public url: string;
								public status: number;
								public statusText: string;
								public headers: org.json.JSONObject;
								public headersText: string;
								public mimeType: string;
								public requestHeaders: org.json.JSONObject;
								public requestHeadersTest: string;
								public connectionReused: boolean;
								public connectionId: number;
								public fromDiskCache: java.lang.Boolean;
								public timing: com.facebook.stetho.inspector.protocol.module.Network.ResourceTiming;
								public constructor();
							}
							export class ResponseReceivedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.ResponseReceivedParams>;
								public requestId: string;
								public frameId: string;
								public loaderId: string;
								public timestamp: number;
								public type: com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public response: com.facebook.stetho.inspector.protocol.module.Network.Response;
								public constructor();
							}
							export class WebSocketClosedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.WebSocketClosedParams>;
								public requestId: string;
								public timestamp: number;
								public constructor();
							}
							export class WebSocketCreatedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.WebSocketCreatedParams>;
								public requestId: string;
								public url: string;
								public constructor();
							}
							export class WebSocketFrame extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.WebSocketFrame>;
								public opcode: number;
								public mask: boolean;
								public payloadData: string;
								public constructor();
							}
							export class WebSocketFrameErrorParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.WebSocketFrameErrorParams>;
								public requestId: string;
								public timestamp: number;
								public errorMessage: string;
								public constructor();
							}
							export class WebSocketFrameReceivedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.WebSocketFrameReceivedParams>;
								public requestId: string;
								public timestamp: number;
								public response: com.facebook.stetho.inspector.protocol.module.Network.WebSocketFrame;
								public constructor();
							}
							export class WebSocketFrameSentParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.WebSocketFrameSentParams>;
								public requestId: string;
								public timestamp: number;
								public response: com.facebook.stetho.inspector.protocol.module.Network.WebSocketFrame;
								public constructor();
							}
							export class WebSocketHandshakeResponseReceivedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.WebSocketHandshakeResponseReceivedParams>;
								public requestId: string;
								public timestamp: number;
								public response: com.facebook.stetho.inspector.protocol.module.Network.WebSocketResponse;
								public constructor();
							}
							export class WebSocketRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.WebSocketRequest>;
								public headers: org.json.JSONObject;
								public constructor();
							}
							export class WebSocketResponse extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.WebSocketResponse>;
								public status: number;
								public statusText: string;
								public headers: org.json.JSONObject;
								public headersText: string;
								public requestHeaders: org.json.JSONObject;
								public requestHeadersText: string;
								public constructor();
							}
							export class WebSocketWillSendHandshakeRequestParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Network.WebSocketWillSendHandshakeRequestParams>;
								public requestId: string;
								public timestamp: number;
								public wallTime: number;
								public request: com.facebook.stetho.inspector.protocol.module.Network.WebSocketRequest;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class Page extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Page>;
							public static BANNER: string;
							public setTouchEmulationEnabled(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public screencastFrameAck(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public enable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public setDeviceMetricsOverride(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public clearDeviceOrientationOverride(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public setShowViewportSizeOnResize(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public stopScreencast(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public canScreencast(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public clearGeolocationOverride(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public disable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public getResourceTree(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public setEmulatedMedia(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public hasTouchInputs(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public startScreencast(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public constructor(param0: globalAndroid.content.Context);
							public constructor(param0: globalAndroid.content.Context, param1: string);
						}
						export module Page {
							export class ExecutionContextCreatedParams extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Page.ExecutionContextCreatedParams>;
								public context: com.facebook.stetho.inspector.protocol.module.Page.ExecutionContextDescription;
							}
							export class ExecutionContextDescription extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Page.ExecutionContextDescription>;
								public frameId: string;
								public id: number;
							}
							export class Frame extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Page.Frame>;
								public id: string;
								public parentId: string;
								public loaderId: string;
								public name: string;
								public url: string;
								public securityOrigin: string;
								public mimeType: string;
							}
							export class FrameResourceTree extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Page.FrameResourceTree>;
								public frame: com.facebook.stetho.inspector.protocol.module.Page.Frame;
								public childFrames: java.util.List<com.facebook.stetho.inspector.protocol.module.Page.FrameResourceTree>;
								public resources: java.util.List<com.facebook.stetho.inspector.protocol.module.Page.Resource>;
							}
							export class GetResourceTreeParams extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Page.GetResourceTreeParams>;
								public frameTree: com.facebook.stetho.inspector.protocol.module.Page.FrameResourceTree;
							}
							export class Resource extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Page.Resource>;
							}
							export class ResourceType {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Page.ResourceType>;
								public static DOCUMENT: com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public static STYLESHEET: com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public static IMAGE: com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public static FONT: com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public static SCRIPT: com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public static XHR: com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public static WEBSOCKET: com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public static OTHER: com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public static valueOf(param0: string): com.facebook.stetho.inspector.protocol.module.Page.ResourceType;
								public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
								public getProtocolValue(): string;
								public static values(): native.Array<com.facebook.stetho.inspector.protocol.module.Page.ResourceType>;
							}
							export class ScreencastFrameEvent extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Page.ScreencastFrameEvent>;
								public data: string;
								public metadata: com.facebook.stetho.inspector.protocol.module.Page.ScreencastFrameEventMetadata;
								public constructor();
							}
							export class ScreencastFrameEventMetadata extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Page.ScreencastFrameEventMetadata>;
								public pageScaleFactor: number;
								public offsetTop: number;
								public deviceWidth: number;
								public deviceHeight: number;
								public scrollOffsetX: number;
								public scrollOffsetY: number;
								public constructor();
							}
							export class StartScreencastRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Page.StartScreencastRequest>;
								public format: string;
								public quality: number;
								public maxWidth: number;
								public maxHeight: number;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class Profiler extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Profiler>;
							public constructor();
							public enable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public disable(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public setSamplingInterval(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public getProfileHeaders(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
						}
						export module Profiler {
							export class ProfileHeader extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Profiler.ProfileHeader>;
							}
							export class ProfileHeaderResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Profiler.ProfileHeaderResponse>;
								public headers: java.util.List<com.facebook.stetho.inspector.protocol.module.Profiler.ProfileHeader>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class Runtime extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime>;
							/** @deprecated */
							public constructor();
							public evaluate(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public releaseObject(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							public releaseObjectGroup(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): void;
							/** @deprecated */
							public constructor(param0: globalAndroid.content.Context);
							public getProperties(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public callFunctionOn(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
							public static mapObject(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: any): number;
							public static releaseObject(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: java.lang.Integer): void;
							public constructor(param0: com.facebook.stetho.inspector.console.RuntimeReplFactory);
						}
						export module Runtime {
							export class CallArgument extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.CallArgument>;
								public value: any;
								public objectId: string;
								public type: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType;
							}
							export class CallFunctionOnRequest extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.CallFunctionOnRequest>;
								public objectId: string;
								public functionDeclaration: string;
								public arguments: java.util.List<com.facebook.stetho.inspector.protocol.module.Runtime.CallArgument>;
								public doNotPauseOnExceptionsAndMuteConsole: java.lang.Boolean;
								public returnByValue: java.lang.Boolean;
								public generatePreview: java.lang.Boolean;
							}
							export class CallFunctionOnResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.CallFunctionOnResponse>;
								public result: com.facebook.stetho.inspector.protocol.module.Runtime.RemoteObject;
								public wasThrown: java.lang.Boolean;
							}
							export class EvaluateRequest extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.EvaluateRequest>;
								public objectGroup: string;
								public expression: string;
							}
							export class EvaluateResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.EvaluateResponse>;
								public result: com.facebook.stetho.inspector.protocol.module.Runtime.RemoteObject;
								public wasThrown: boolean;
								public exceptionDetails: com.facebook.stetho.inspector.protocol.module.Runtime.ExceptionDetails;
							}
							export class ExceptionDetails extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.ExceptionDetails>;
								public text: string;
							}
							export class GetPropertiesRequest extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.GetPropertiesRequest>;
								public ownProperties: boolean;
								public objectId: string;
							}
							export class GetPropertiesResponse extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.GetPropertiesResponse>;
								public result: java.util.List<com.facebook.stetho.inspector.protocol.module.Runtime.PropertyDescriptor>;
							}
							export class ObjectProtoContainer extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.ObjectProtoContainer>;
								public object: any;
								public constructor(param0: any);
							}
							export class ObjectSubType {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType>;
								public static ARRAY: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
								public static NULL: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
								public static NODE: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
								public static REGEXP: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
								public static DATE: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
								public static MAP: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
								public static SET: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
								public static ITERATOR: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
								public static GENERATOR: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
								public static ERROR: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
								public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
								public static values(): native.Array<com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType>;
								public getProtocolValue(): string;
								public static valueOf(param0: string): com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
							}
							export class ObjectType {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType>;
								public static OBJECT: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType;
								public static FUNCTION: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType;
								public static UNDEFINED: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType;
								public static STRING: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType;
								public static NUMBER: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType;
								public static BOOLEAN: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType;
								public static SYMBOL: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType;
								public static values(): native.Array<com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType>;
								public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
								public getProtocolValue(): string;
								public static valueOf(param0: string): com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType;
							}
							export class PropertyDescriptor extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.PropertyDescriptor>;
								public name: string;
								public value: com.facebook.stetho.inspector.protocol.module.Runtime.RemoteObject;
								public isOwn: boolean;
								public configurable: boolean;
								public enumerable: boolean;
								public writable: boolean;
							}
							export class RemoteObject extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.RemoteObject>;
								public type: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectType;
								public subtype: com.facebook.stetho.inspector.protocol.module.Runtime.ObjectSubType;
								public value: any;
								public className: string;
								public description: string;
								public objectId: string;
								public constructor();
							}
							export class Session extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Runtime.Session>;
								public getObjects(): com.facebook.stetho.inspector.helper.ObjectIdMapper;
								public getProperties(param0: org.json.JSONObject): com.facebook.stetho.inspector.protocol.module.Runtime.GetPropertiesResponse;
								public getObjectOrThrow(param0: string): any;
								public objectForRemote(param0: any): com.facebook.stetho.inspector.protocol.module.Runtime.RemoteObject;
								public evaluate(param0: com.facebook.stetho.inspector.console.RuntimeReplFactory, param1: org.json.JSONObject): com.facebook.stetho.inspector.protocol.module.Runtime.EvaluateResponse;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class SimpleBooleanResult extends java.lang.Object implements com.facebook.stetho.inspector.jsonrpc.JsonRpcResult {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.SimpleBooleanResult>;
							public result: boolean;
							public constructor();
							public constructor(param0: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module protocol {
					export module module {
						export class Worker extends java.lang.Object implements com.facebook.stetho.inspector.protocol.ChromeDevtoolsDomain {
							public static class: java.lang.Class<com.facebook.stetho.inspector.protocol.module.Worker>;
							public constructor();
							public canInspectWorkers(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: org.json.JSONObject): com.facebook.stetho.inspector.jsonrpc.JsonRpcResult;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module runtime {
					export class RhinoDetectingRuntimeReplFactory extends java.lang.Object implements com.facebook.stetho.inspector.console.RuntimeReplFactory {
						public static class: java.lang.Class<com.facebook.stetho.inspector.runtime.RhinoDetectingRuntimeReplFactory>;
						public newInstance(): com.facebook.stetho.inspector.console.RuntimeRepl;
						public constructor(param0: globalAndroid.content.Context);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module inspector {
				export module screencast {
					export class ScreencastDispatcher extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.inspector.screencast.ScreencastDispatcher>;
						public constructor();
						public startScreencast(param0: com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer, param1: com.facebook.stetho.inspector.protocol.module.Page.StartScreencastRequest): void;
						public stopScreencast(): void;
					}
					export module ScreencastDispatcher {
						export class BitmapFetchRunnable extends java.lang.Object implements java.lang.Runnable {
							public static class: java.lang.Class<com.facebook.stetho.inspector.screencast.ScreencastDispatcher.BitmapFetchRunnable>;
							public run(): void;
						}
						export class CancellationRunnable extends java.lang.Object implements java.lang.Runnable {
							public static class: java.lang.Class<com.facebook.stetho.inspector.screencast.ScreencastDispatcher.CancellationRunnable>;
							public run(): void;
						}
						export class EventDispatchRunnable extends java.lang.Object implements java.lang.Runnable {
							public static class: java.lang.Class<com.facebook.stetho.inspector.screencast.ScreencastDispatcher.EventDispatchRunnable>;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module json {
				export class ObjectMapper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.json.ObjectMapper>;
					public convertValue(param0: any, param1: java.lang.Class<any>): any;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module json {
				export module annotation {
					export class JsonProperty extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.stetho.json.annotation.JsonProperty>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.json.annotation.JsonProperty interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							required(): boolean;
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(param0: any): boolean;
						public hashCode(): number;
						public required(): boolean;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module json {
				export module annotation {
					export class JsonValue extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.facebook.stetho.json.annotation.JsonValue>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.json.annotation.JsonValue interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(param0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class AddressNameHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.server.AddressNameHelper>;
					public static createCustomAddress(param0: string): string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class CompositeInputStream extends java.io.InputStream {
					public static class: java.lang.Class<com.facebook.stetho.server.CompositeInputStream>;
					public available(): number;
					public constructor(param0: native.Array<java.io.InputStream>);
					public read(): number;
					public read(param0: native.Array<number>, param1: number, param2: number): number;
					public reset(): void;
					public constructor();
					public markSupported(): boolean;
					public read(param0: native.Array<number>): number;
					public close(): void;
					public skip(param0: number): number;
					public mark(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class LazySocketHandler extends java.lang.Object implements com.facebook.stetho.server.SocketHandler {
					public static class: java.lang.Class<com.facebook.stetho.server.LazySocketHandler>;
					public constructor(param0: com.facebook.stetho.server.SocketHandlerFactory);
					public onAccepted(param0: globalAndroid.net.LocalSocket): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class LeakyBufferedInputStream extends java.io.BufferedInputStream {
					public static class: java.lang.Class<com.facebook.stetho.server.LeakyBufferedInputStream>;
					public reset(): void;
					public constructor(param0: java.io.InputStream);
					public constructor();
					public markSupported(): boolean;
					public close(): void;
					public constructor(param0: java.io.InputStream, param1: number);
					public leakBufferAndStream(): java.io.InputStream;
					public mark(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class LocalSocketServer extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.server.LocalSocketServer>;
					public constructor(param0: string, param1: string, param2: com.facebook.stetho.server.SocketHandler);
					public getName(): string;
					public run(): void;
					public stop(): void;
				}
				export module LocalSocketServer {
					export class WorkerThread extends java.lang.Thread {
						public static class: java.lang.Class<com.facebook.stetho.server.LocalSocketServer.WorkerThread>;
						public constructor(param0: java.lang.ThreadGroup, param1: java.lang.Runnable, param2: string, param3: number);
						public constructor(param0: java.lang.ThreadGroup, param1: java.lang.Runnable, param2: string);
						public constructor();
						public run(): void;
						public constructor(param0: java.lang.ThreadGroup, param1: java.lang.Runnable);
						public constructor(param0: java.lang.ThreadGroup, param1: string);
						public constructor(param0: java.lang.Runnable);
						public constructor(param0: java.lang.Runnable, param1: string);
						public constructor(param0: string);
						public constructor(param0: globalAndroid.net.LocalSocket, param1: com.facebook.stetho.server.SocketHandler);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class PeerAuthorizationException extends java.lang.Exception {
					public static class: java.lang.Class<com.facebook.stetho.server.PeerAuthorizationException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class ProtocolDetectingSocketHandler extends com.facebook.stetho.server.SecureSocketHandler {
					public static class: java.lang.Class<com.facebook.stetho.server.ProtocolDetectingSocketHandler>;
					public constructor(param0: globalAndroid.content.Context);
					public onSecured(param0: globalAndroid.net.LocalSocket): void;
					public addHandler(param0: com.facebook.stetho.server.ProtocolDetectingSocketHandler.MagicMatcher, param1: com.facebook.stetho.server.SocketLikeHandler): void;
					public onAccepted(param0: globalAndroid.net.LocalSocket): void;
				}
				export module ProtocolDetectingSocketHandler {
					export class AlwaysMatchMatcher extends java.lang.Object implements com.facebook.stetho.server.ProtocolDetectingSocketHandler.MagicMatcher {
						public static class: java.lang.Class<com.facebook.stetho.server.ProtocolDetectingSocketHandler.AlwaysMatchMatcher>;
						public constructor();
						public matches(param0: java.io.InputStream): boolean;
					}
					export class ExactMagicMatcher extends java.lang.Object implements com.facebook.stetho.server.ProtocolDetectingSocketHandler.MagicMatcher {
						public static class: java.lang.Class<com.facebook.stetho.server.ProtocolDetectingSocketHandler.ExactMagicMatcher>;
						public constructor(param0: native.Array<number>);
						public matches(param0: java.io.InputStream): boolean;
					}
					export class HandlerInfo extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.server.ProtocolDetectingSocketHandler.HandlerInfo>;
						public magicMatcher: com.facebook.stetho.server.ProtocolDetectingSocketHandler.MagicMatcher;
						public handler: com.facebook.stetho.server.SocketLikeHandler;
					}
					export class MagicMatcher extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.server.ProtocolDetectingSocketHandler.MagicMatcher>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.server.ProtocolDetectingSocketHandler$MagicMatcher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							matches(param0: java.io.InputStream): boolean;
						});
						public constructor();
						public matches(param0: java.io.InputStream): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export abstract class SecureSocketHandler extends java.lang.Object implements com.facebook.stetho.server.SocketHandler {
					public static class: java.lang.Class<com.facebook.stetho.server.SecureSocketHandler>;
					public constructor(param0: globalAndroid.content.Context);
					public onSecured(param0: globalAndroid.net.LocalSocket): void;
					public onAccepted(param0: globalAndroid.net.LocalSocket): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class ServerManager extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.server.ServerManager>;
					public start(): void;
					public constructor(param0: com.facebook.stetho.server.LocalSocketServer);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class SocketHandler extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.server.SocketHandler>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.server.SocketHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onAccepted(param0: globalAndroid.net.LocalSocket): void;
					});
					public constructor();
					public onAccepted(param0: globalAndroid.net.LocalSocket): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class SocketHandlerFactory extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.server.SocketHandlerFactory>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.server.SocketHandlerFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(): com.facebook.stetho.server.SocketHandler;
					});
					public constructor();
					public create(): com.facebook.stetho.server.SocketHandler;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class SocketLike extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.server.SocketLike>;
					public constructor(param0: com.facebook.stetho.server.SocketLike, param1: com.facebook.stetho.server.LeakyBufferedInputStream);
					public getOutput(): java.io.OutputStream;
					public getInput(): java.io.InputStream;
					public constructor(param0: globalAndroid.net.LocalSocket, param1: com.facebook.stetho.server.LeakyBufferedInputStream);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export class SocketLikeHandler extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.server.SocketLikeHandler>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.server.SocketLikeHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onAccepted(param0: com.facebook.stetho.server.SocketLike): void;
					});
					public constructor();
					public onAccepted(param0: com.facebook.stetho.server.SocketLike): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export class ExactPathMatcher extends java.lang.Object implements com.facebook.stetho.server.http.PathMatcher {
						public static class: java.lang.Class<com.facebook.stetho.server.http.ExactPathMatcher>;
						public match(param0: string): boolean;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export class HandlerRegistry extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.server.http.HandlerRegistry>;
						public constructor();
						public unregister(param0: com.facebook.stetho.server.http.PathMatcher, param1: com.facebook.stetho.server.http.HttpHandler): boolean;
						public lookup(param0: string): com.facebook.stetho.server.http.HttpHandler;
						public register(param0: com.facebook.stetho.server.http.PathMatcher, param1: com.facebook.stetho.server.http.HttpHandler): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export class HttpHandler extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.server.http.HttpHandler>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.server.http.HttpHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							handleRequest(param0: com.facebook.stetho.server.SocketLike, param1: com.facebook.stetho.server.http.LightHttpRequest, param2: com.facebook.stetho.server.http.LightHttpResponse): boolean;
						});
						public constructor();
						public handleRequest(param0: com.facebook.stetho.server.SocketLike, param1: com.facebook.stetho.server.http.LightHttpRequest, param2: com.facebook.stetho.server.http.LightHttpResponse): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export class HttpHeaders extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.server.http.HttpHeaders>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.server.http.HttpHeaders interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
						public static CONTENT_LENGTH: string;
						public static CONTENT_TYPE: string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export class HttpStatus extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.server.http.HttpStatus>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.server.http.HttpStatus interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
						public static HTTP_SWITCHING_PROTOCOLS: number;
						public static HTTP_NOT_IMPLEMENTED: number;
						public static HTTP_INTERNAL_SERVER_ERROR: number;
						public static HTTP_NOT_FOUND: number;
						public static HTTP_OK: number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export abstract class LightHttpBody extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.server.http.LightHttpBody>;
						public constructor();
						public contentLength(): number;
						public static create(param0: string, param1: string): com.facebook.stetho.server.http.LightHttpBody;
						public contentType(): string;
						public static create(param0: native.Array<number>, param1: string): com.facebook.stetho.server.http.LightHttpBody;
						public writeTo(param0: java.io.OutputStream): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export class LightHttpMessage extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.server.http.LightHttpMessage>;
						public headerNames: java.util.ArrayList<string>;
						public headerValues: java.util.ArrayList<string>;
						public constructor();
						public addHeader(param0: string, param1: string): void;
						public getFirstHeaderValue(param0: string): string;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export class LightHttpRequest extends com.facebook.stetho.server.http.LightHttpMessage {
						public static class: java.lang.Class<com.facebook.stetho.server.http.LightHttpRequest>;
						public method: string;
						public uri: globalAndroid.net.Uri;
						public protocol: string;
						public constructor();
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export class LightHttpResponse extends com.facebook.stetho.server.http.LightHttpMessage {
						public static class: java.lang.Class<com.facebook.stetho.server.http.LightHttpResponse>;
						public code: number;
						public reasonPhrase: string;
						public body: com.facebook.stetho.server.http.LightHttpBody;
						public constructor();
						public prepare(): void;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export class LightHttpServer extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.server.http.LightHttpServer>;
						public serve(param0: com.facebook.stetho.server.SocketLike): void;
						public constructor(param0: com.facebook.stetho.server.http.HandlerRegistry);
						public static writeResponseMessage(param0: com.facebook.stetho.server.http.LightHttpResponse, param1: com.facebook.stetho.server.http.LightHttpServer.HttpMessageWriter): void;
					}
					export module LightHttpServer {
						export class HttpMessageReader extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.server.http.LightHttpServer.HttpMessageReader>;
							public constructor(param0: java.io.BufferedInputStream);
							public readLine(): string;
						}
						export module HttpMessageReader {
							export class NewLineDetector extends java.lang.Object {
								public static class: java.lang.Class<com.facebook.stetho.server.http.LightHttpServer.HttpMessageReader.NewLineDetector>;
								public accept(param0: string): void;
								public state(): number;
							}
						}
						export class HttpMessageWriter extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.stetho.server.http.LightHttpServer.HttpMessageWriter>;
							public constructor(param0: java.io.BufferedOutputStream);
							public flush(): void;
							public writeLine(): void;
							public writeLine(param0: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export class PathMatcher extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.stetho.server.http.PathMatcher>;
						/**
						 * Constructs a new instance of the com.facebook.stetho.server.http.PathMatcher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							match(param0: string): boolean;
						});
						public constructor();
						public match(param0: string): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module server {
				export module http {
					export class RegexpPathMatcher extends java.lang.Object implements com.facebook.stetho.server.http.PathMatcher {
						public static class: java.lang.Class<com.facebook.stetho.server.http.RegexpPathMatcher>;
						public match(param0: string): boolean;
						public constructor(param0: java.util.regex.Pattern);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class CloseCodes extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.websocket.CloseCodes>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.websocket.CloseCodes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
					});
					public constructor();
					public static NORMAL_CLOSURE: number;
					public static PROTOCOL_ERROR: number;
					public static UNEXPECTED_CONDITION: number;
					public static CLOSED_ABNORMALLY: number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class Frame extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.websocket.Frame>;
					public static OPCODE_TEXT_FRAME: number;
					public static OPCODE_BINARY_FRAME: number;
					public static OPCODE_CONNECTION_CLOSE: number;
					public static OPCODE_CONNECTION_PING: number;
					public static OPCODE_CONNECTION_PONG: number;
					public fin: boolean;
					public rsv1: boolean;
					public rsv2: boolean;
					public rsv3: boolean;
					public opcode: number;
					public hasMask: boolean;
					public payloadLen: number;
					public maskingKey: native.Array<number>;
					public payloadData: native.Array<number>;
					public writeTo(param0: java.io.BufferedOutputStream): void;
					public readFrom(param0: java.io.BufferedInputStream): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class FrameHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.websocket.FrameHelper>;
					public static createTextFrame(param0: string): com.facebook.stetho.websocket.Frame;
					public static createPongFrame(param0: native.Array<number>, param1: number): com.facebook.stetho.websocket.Frame;
					public static createPingFrame(param0: native.Array<number>, param1: number): com.facebook.stetho.websocket.Frame;
					public static createCloseFrame(param0: number, param1: string): com.facebook.stetho.websocket.Frame;
					public static createBinaryFrame(param0: native.Array<number>): com.facebook.stetho.websocket.Frame;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class MaskingHelper extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.websocket.MaskingHelper>;
					public static unmask(param0: native.Array<number>, param1: native.Array<number>, param2: number, param3: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class ReadCallback extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.websocket.ReadCallback>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.websocket.ReadCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onCompleteFrame(param0: number, param1: native.Array<number>, param2: number): void;
					});
					public constructor();
					public onCompleteFrame(param0: number, param1: native.Array<number>, param2: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class ReadHandler extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.websocket.ReadHandler>;
					public readLoop(param0: com.facebook.stetho.websocket.ReadCallback): void;
					public constructor(param0: java.io.InputStream, param1: com.facebook.stetho.websocket.SimpleEndpoint);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class SimpleEndpoint extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.websocket.SimpleEndpoint>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.websocket.SimpleEndpoint interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onOpen(param0: com.facebook.stetho.websocket.SimpleSession): void;
						onMessage(param0: com.facebook.stetho.websocket.SimpleSession, param1: string): void;
						onMessage(param0: com.facebook.stetho.websocket.SimpleSession, param1: native.Array<number>, param2: number): void;
						onClose(param0: com.facebook.stetho.websocket.SimpleSession, param1: number, param2: string): void;
						onError(param0: com.facebook.stetho.websocket.SimpleSession, param1: java.lang.Throwable): void;
					});
					public constructor();
					public onMessage(param0: com.facebook.stetho.websocket.SimpleSession, param1: string): void;
					public onOpen(param0: com.facebook.stetho.websocket.SimpleSession): void;
					public onMessage(param0: com.facebook.stetho.websocket.SimpleSession, param1: native.Array<number>, param2: number): void;
					public onClose(param0: com.facebook.stetho.websocket.SimpleSession, param1: number, param2: string): void;
					public onError(param0: com.facebook.stetho.websocket.SimpleSession, param1: java.lang.Throwable): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class SimpleSession extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.websocket.SimpleSession>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.websocket.SimpleSession interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						sendText(param0: string): void;
						sendBinary(param0: native.Array<number>): void;
						close(param0: number, param1: string): void;
						isOpen(): boolean;
					});
					public constructor();
					public isOpen(): boolean;
					public sendBinary(param0: native.Array<number>): void;
					public sendText(param0: string): void;
					public close(param0: number, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class WebSocketHandler extends java.lang.Object implements com.facebook.stetho.server.http.HttpHandler {
					public static class: java.lang.Class<com.facebook.stetho.websocket.WebSocketHandler>;
					public handleRequest(param0: com.facebook.stetho.server.SocketLike, param1: com.facebook.stetho.server.http.LightHttpRequest, param2: com.facebook.stetho.server.http.LightHttpResponse): boolean;
					public constructor(param0: com.facebook.stetho.websocket.SimpleEndpoint);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class WebSocketSession extends java.lang.Object implements com.facebook.stetho.websocket.SimpleSession {
					public static class: java.lang.Class<com.facebook.stetho.websocket.WebSocketSession>;
					public handle(): void;
					public isOpen(): boolean;
					public sendBinary(param0: native.Array<number>): void;
					public constructor(param0: java.io.InputStream, param1: java.io.OutputStream, param2: com.facebook.stetho.websocket.SimpleEndpoint);
					public sendText(param0: string): void;
					public close(param0: number, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class WriteCallback extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.websocket.WriteCallback>;
					/**
					 * Constructs a new instance of the com.facebook.stetho.websocket.WriteCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onFailure(param0: java.io.IOException): void;
						onSuccess(): void;
					});
					public constructor();
					public onFailure(param0: java.io.IOException): void;
					public onSuccess(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module stetho {
			export module websocket {
				export class WriteHandler extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.stetho.websocket.WriteHandler>;
					public write(param0: com.facebook.stetho.websocket.Frame, param1: com.facebook.stetho.websocket.WriteCallback): void;
					public constructor(param0: java.io.OutputStream);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module widget {
			export module accessibility {
				export module delegates {
					export abstract class AccessibleClickableSpan extends globalAndroid.text.style.ClickableSpan {
						public static class: java.lang.Class<com.facebook.widget.accessibility.delegates.AccessibleClickableSpan>;
						public getAccessibilityDescription(): string;
						public getAccessibilityRole(): string;
						public constructor();
						public setAccessibilityDescription(param0: string): void;
						public constructor(param0: string, param1: string);
						public setAccessibilityRole(param0: string): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module widget {
			export module text {
				export module span {
					export class BetterImageSpan extends globalAndroid.text.style.ReplacementSpan {
						public static class: java.lang.Class<com.facebook.widget.text.span.BetterImageSpan>;
						public static ALIGN_BOTTOM: number;
						public static ALIGN_BASELINE: number;
						public static ALIGN_CENTER: number;
						public constructor();
						public draw(param0: globalAndroid.graphics.Canvas, param1: string, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: globalAndroid.graphics.Paint): void;
						public constructor(param0: globalAndroid.graphics.drawable.Drawable, param1: number);
						public getDrawable(): globalAndroid.graphics.drawable.Drawable;
						public static normalizeAlignment(param0: number): number;
						public constructor(param0: globalAndroid.graphics.drawable.Drawable);
						public updateBounds(): void;
						public getSize(param0: globalAndroid.graphics.Paint, param1: string, param2: number, param3: number, param4: globalAndroid.graphics.Paint.FontMetricsInt): number;
					}
					export module BetterImageSpan {
						export class BetterImageSpanAlignment extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.facebook.widget.text.span.BetterImageSpan.BetterImageSpanAlignment>;
							/**
							 * Constructs a new instance of the com.facebook.widget.text.span.BetterImageSpan$BetterImageSpanAlignment interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(param0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class BuildConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.BuildConfig>;
				public static DEBUG: boolean;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaAlign {
				public static class: java.lang.Class<com.facebook.yoga.YogaAlign>;
				public static AUTO: com.facebook.yoga.YogaAlign;
				public static FLEX_START: com.facebook.yoga.YogaAlign;
				public static CENTER: com.facebook.yoga.YogaAlign;
				public static FLEX_END: com.facebook.yoga.YogaAlign;
				public static STRETCH: com.facebook.yoga.YogaAlign;
				public static BASELINE: com.facebook.yoga.YogaAlign;
				public static SPACE_BETWEEN: com.facebook.yoga.YogaAlign;
				public static SPACE_AROUND: com.facebook.yoga.YogaAlign;
				public static valueOf(param0: string): com.facebook.yoga.YogaAlign;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaAlign>;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				public static fromInt(param0: number): com.facebook.yoga.YogaAlign;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaBaselineFunction extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.YogaBaselineFunction>;
				/**
				 * Constructs a new instance of the com.facebook.yoga.YogaBaselineFunction interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					baseline(param0: com.facebook.yoga.YogaNode, param1: number, param2: number): number;
				});
				public constructor();
				public baseline(param0: com.facebook.yoga.YogaNode, param1: number, param2: number): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaConfig extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.YogaConfig>;
				public static SPACING_TYPE: number;
				public static useBatchingForLayoutOutputs: boolean;
				public setExperimentalFeatureEnabled(param0: com.facebook.yoga.YogaExperimentalFeature, param1: boolean): void;
				public setPointScaleFactor(param0: number): void;
				public setUseWebDefaults(param0: boolean): void;
				public setPrintTreeFlag(param0: boolean): void;
				public setUseLegacyStretchBehaviour(param0: boolean): void;
				public setShouldDiffLayoutWithoutLegacyStretchBehaviour(param0: boolean): void;
				public finalize(): void;
				public getLogger(): com.facebook.yoga.YogaLogger;
				public constructor();
				public setLogger(param0: com.facebook.yoga.YogaLogger): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaConstants extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.YogaConstants>;
				public static UNDEFINED: number;
				public static getUndefined(): number;
				public static isUndefined(param0: number): boolean;
				public static isUndefined(param0: com.facebook.yoga.YogaValue): boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaDimension {
				public static class: java.lang.Class<com.facebook.yoga.YogaDimension>;
				public static WIDTH: com.facebook.yoga.YogaDimension;
				public static HEIGHT: com.facebook.yoga.YogaDimension;
				public intValue(): number;
				public static fromInt(param0: number): com.facebook.yoga.YogaDimension;
				public static values(): native.Array<com.facebook.yoga.YogaDimension>;
				public static valueOf(param0: string): com.facebook.yoga.YogaDimension;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaDirection {
				public static class: java.lang.Class<com.facebook.yoga.YogaDirection>;
				public static INHERIT: com.facebook.yoga.YogaDirection;
				public static LTR: com.facebook.yoga.YogaDirection;
				public static RTL: com.facebook.yoga.YogaDirection;
				public static valueOf(param0: string): com.facebook.yoga.YogaDirection;
				public static fromInt(param0: number): com.facebook.yoga.YogaDirection;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaDirection>;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaDisplay {
				public static class: java.lang.Class<com.facebook.yoga.YogaDisplay>;
				public static FLEX: com.facebook.yoga.YogaDisplay;
				public static NONE: com.facebook.yoga.YogaDisplay;
				public static values(): native.Array<com.facebook.yoga.YogaDisplay>;
				public intValue(): number;
				public static fromInt(param0: number): com.facebook.yoga.YogaDisplay;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				public static valueOf(param0: string): com.facebook.yoga.YogaDisplay;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaEdge {
				public static class: java.lang.Class<com.facebook.yoga.YogaEdge>;
				public static LEFT: com.facebook.yoga.YogaEdge;
				public static TOP: com.facebook.yoga.YogaEdge;
				public static RIGHT: com.facebook.yoga.YogaEdge;
				public static BOTTOM: com.facebook.yoga.YogaEdge;
				public static START: com.facebook.yoga.YogaEdge;
				public static END: com.facebook.yoga.YogaEdge;
				public static HORIZONTAL: com.facebook.yoga.YogaEdge;
				public static VERTICAL: com.facebook.yoga.YogaEdge;
				public static ALL: com.facebook.yoga.YogaEdge;
				public static fromInt(param0: number): com.facebook.yoga.YogaEdge;
				public static values(): native.Array<com.facebook.yoga.YogaEdge>;
				public intValue(): number;
				public static valueOf(param0: string): com.facebook.yoga.YogaEdge;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaExperimentalFeature {
				public static class: java.lang.Class<com.facebook.yoga.YogaExperimentalFeature>;
				public static WEB_FLEX_BASIS: com.facebook.yoga.YogaExperimentalFeature;
				public static values(): native.Array<com.facebook.yoga.YogaExperimentalFeature>;
				public static valueOf(param0: string): com.facebook.yoga.YogaExperimentalFeature;
				public intValue(): number;
				public static fromInt(param0: number): com.facebook.yoga.YogaExperimentalFeature;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaFlexDirection {
				public static class: java.lang.Class<com.facebook.yoga.YogaFlexDirection>;
				public static COLUMN: com.facebook.yoga.YogaFlexDirection;
				public static COLUMN_REVERSE: com.facebook.yoga.YogaFlexDirection;
				public static ROW: com.facebook.yoga.YogaFlexDirection;
				public static ROW_REVERSE: com.facebook.yoga.YogaFlexDirection;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaFlexDirection>;
				public static valueOf(param0: string): com.facebook.yoga.YogaFlexDirection;
				public static fromInt(param0: number): com.facebook.yoga.YogaFlexDirection;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaJustify {
				public static class: java.lang.Class<com.facebook.yoga.YogaJustify>;
				public static FLEX_START: com.facebook.yoga.YogaJustify;
				public static CENTER: com.facebook.yoga.YogaJustify;
				public static FLEX_END: com.facebook.yoga.YogaJustify;
				public static SPACE_BETWEEN: com.facebook.yoga.YogaJustify;
				public static SPACE_AROUND: com.facebook.yoga.YogaJustify;
				public static SPACE_EVENLY: com.facebook.yoga.YogaJustify;
				public static values(): native.Array<com.facebook.yoga.YogaJustify>;
				public intValue(): number;
				public static valueOf(param0: string): com.facebook.yoga.YogaJustify;
				public static fromInt(param0: number): com.facebook.yoga.YogaJustify;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaLogLevel {
				public static class: java.lang.Class<com.facebook.yoga.YogaLogLevel>;
				public static ERROR: com.facebook.yoga.YogaLogLevel;
				public static WARN: com.facebook.yoga.YogaLogLevel;
				public static INFO: com.facebook.yoga.YogaLogLevel;
				public static DEBUG: com.facebook.yoga.YogaLogLevel;
				public static VERBOSE: com.facebook.yoga.YogaLogLevel;
				public static FATAL: com.facebook.yoga.YogaLogLevel;
				public static values(): native.Array<com.facebook.yoga.YogaLogLevel>;
				public static valueOf(param0: string): com.facebook.yoga.YogaLogLevel;
				public intValue(): number;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				public static fromInt(param0: number): com.facebook.yoga.YogaLogLevel;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaLogger extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.YogaLogger>;
				/**
				 * Constructs a new instance of the com.facebook.yoga.YogaLogger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					log(param0: com.facebook.yoga.YogaNode, param1: com.facebook.yoga.YogaLogLevel, param2: string): void;
				});
				public constructor();
				public log(param0: com.facebook.yoga.YogaNode, param1: com.facebook.yoga.YogaLogLevel, param2: string): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaMeasureFunction extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.YogaMeasureFunction>;
				/**
				 * Constructs a new instance of the com.facebook.yoga.YogaMeasureFunction interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					measure(param0: com.facebook.yoga.YogaNode, param1: number, param2: com.facebook.yoga.YogaMeasureMode, param3: number, param4: com.facebook.yoga.YogaMeasureMode): number;
				});
				public constructor();
				public measure(param0: com.facebook.yoga.YogaNode, param1: number, param2: com.facebook.yoga.YogaMeasureMode, param3: number, param4: com.facebook.yoga.YogaMeasureMode): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaMeasureMode {
				public static class: java.lang.Class<com.facebook.yoga.YogaMeasureMode>;
				public static UNDEFINED: com.facebook.yoga.YogaMeasureMode;
				public static EXACTLY: com.facebook.yoga.YogaMeasureMode;
				public static AT_MOST: com.facebook.yoga.YogaMeasureMode;
				public static valueOf(param0: string): com.facebook.yoga.YogaMeasureMode;
				public intValue(): number;
				public static fromInt(param0: number): com.facebook.yoga.YogaMeasureMode;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				public static values(): native.Array<com.facebook.yoga.YogaMeasureMode>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaMeasureOutput extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.YogaMeasureOutput>;
				public static getWidth(param0: number): number;
				public static getHeight(param0: number): number;
				public static make(param0: number, param1: number): number;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaNative extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.YogaNative>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export abstract class YogaNode extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.YogaNode>;
				public setHeight(param0: number): void;
				public getFlexGrow(): number;
				public dirty(): void;
				public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
				public isBaselineDefined(): boolean;
				public setMaxHeightPercent(param0: number): void;
				public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
				public setFlexBasisPercent(param0: number): void;
				public getChildAt(param0: number): com.facebook.yoga.YogaNode;
				public setDirection(param0: com.facebook.yoga.YogaDirection): void;
				public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
				public getLayoutBorder(param0: com.facebook.yoga.YogaEdge): number;
				public setFlexShrink(param0: number): void;
				public getMaxHeight(): com.facebook.yoga.YogaValue;
				public getLayoutY(): number;
				public setMaxWidthPercent(param0: number): void;
				public setWidth(param0: number): void;
				public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
				public setPosition(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getStyleDirection(): com.facebook.yoga.YogaDirection;
				public setAspectRatio(param0: number): void;
				public setMaxHeight(param0: number): void;
				public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
				public getHeight(): com.facebook.yoga.YogaValue;
				public setMinWidth(param0: number): void;
				public setFlexGrow(param0: number): void;
				public setMaxWidth(param0: number): void;
				public setPadding(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getAlignItems(): com.facebook.yoga.YogaAlign;
				public isReferenceBaseline(): boolean;
				public setData(param0: any): void;
				public getFlexShrink(): number;
				public getWidth(): com.facebook.yoga.YogaValue;
				public getChildCount(): number;
				public getWrap(): com.facebook.yoga.YogaWrap;
				public isDirty(): boolean;
				public getLayoutHeight(): number;
				public setMarginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				/** @deprecated */
				public getParent(): com.facebook.yoga.YogaNode;
				public getMaxWidth(): com.facebook.yoga.YogaValue;
				public setFlexBasis(param0: number): void;
				public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
				public setWidthAuto(): void;
				public setBorder(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getDisplay(): com.facebook.yoga.YogaDisplay;
				public setMarginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public copyStyle(param0: com.facebook.yoga.YogaNode): void;
				public getPadding(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public getData(): any;
				public constructor();
				public getFlex(): number;
				public setIsReferenceBaseline(param0: boolean): void;
				public setMinWidthPercent(param0: number): void;
				public removeChildAt(param0: number): com.facebook.yoga.YogaNode;
				public getJustifyContent(): com.facebook.yoga.YogaJustify;
				public getPosition(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public addChildAt(param0: com.facebook.yoga.YogaNode, param1: number): void;
				public getLayoutMargin(param0: com.facebook.yoga.YogaEdge): number;
				public getMargin(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public getFlexBasis(): com.facebook.yoga.YogaValue;
				public getLayoutPadding(param0: com.facebook.yoga.YogaEdge): number;
				public isMeasureDefined(): boolean;
				public hasNewLayout(): boolean;
				public indexOf(param0: com.facebook.yoga.YogaNode): number;
				public getOwner(): com.facebook.yoga.YogaNode;
				public getAspectRatio(): number;
				public setFlexBasisAuto(): void;
				public setStyleInputs(param0: native.Array<number>, param1: number): void;
				public setHeightPercent(param0: number): void;
				public getLayoutX(): number;
				public cloneWithoutChildren(): com.facebook.yoga.YogaNode;
				public print(): void;
				public getOverflow(): com.facebook.yoga.YogaOverflow;
				public getLayoutWidth(): number;
				public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
				public setHeightAuto(): void;
				public static create(): com.facebook.yoga.YogaNode;
				public setMinHeight(param0: number): void;
				public reset(): void;
				public setFlex(param0: number): void;
				public calculateLayout(param0: number, param1: number): void;
				public getAlignContent(): com.facebook.yoga.YogaAlign;
				public markLayoutSeen(): void;
				public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
				public getPositionType(): com.facebook.yoga.YogaPositionType;
				public getMinHeight(): com.facebook.yoga.YogaValue;
				public setPaddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
				public getAlignSelf(): com.facebook.yoga.YogaAlign;
				public getMinWidth(): com.facebook.yoga.YogaValue;
				public getBorder(param0: com.facebook.yoga.YogaEdge): number;
				public setMinHeightPercent(param0: number): void;
				public getLayoutDirection(): com.facebook.yoga.YogaDirection;
				public static create(param0: com.facebook.yoga.YogaConfig): com.facebook.yoga.YogaNode;
				public setWrap(param0: com.facebook.yoga.YogaWrap): void;
				public setPositionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public setWidthPercent(param0: number): void;
				public getFlexDirection(): com.facebook.yoga.YogaFlexDirection;
				public setMargin(param0: com.facebook.yoga.YogaEdge, param1: number): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaNodeCloneFunction extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.YogaNodeCloneFunction>;
				/**
				 * Constructs a new instance of the com.facebook.yoga.YogaNodeCloneFunction interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					cloneNode(param0: com.facebook.yoga.YogaNode, param1: com.facebook.yoga.YogaNode, param2: number): com.facebook.yoga.YogaNode;
				});
				public constructor();
				public cloneNode(param0: com.facebook.yoga.YogaNode, param1: com.facebook.yoga.YogaNode, param2: number): com.facebook.yoga.YogaNode;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaNodeJNI extends com.facebook.yoga.YogaNodeJNIBase {
				public static class: java.lang.Class<com.facebook.yoga.YogaNodeJNI>;
				public getLayoutMargin(param0: com.facebook.yoga.YogaEdge): number;
				public getLayoutY(): number;
				public getDoesLegacyStretchFlagAffectsLayout(): boolean;
				public getLayoutPadding(param0: com.facebook.yoga.YogaEdge): number;
				public hasNewLayout(): boolean;
				public getLayoutHeight(): number;
				public constructor();
				public getLayoutX(): number;
				public reset(): void;
				public getLayoutDirection(): com.facebook.yoga.YogaDirection;
				public constructor(param0: com.facebook.yoga.YogaConfig);
				public getLayoutBorder(param0: com.facebook.yoga.YogaEdge): number;
				public getLayoutWidth(): number;
				public markLayoutSeen(): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export abstract class YogaNodeJNIBase extends com.facebook.yoga.YogaNode implements java.lang.Cloneable {
				public static class: java.lang.Class<com.facebook.yoga.YogaNodeJNIBase>;
				public setHeight(param0: number): void;
				public getFlexGrow(): number;
				public dirty(): void;
				public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
				public isBaselineDefined(): boolean;
				public getChildAt(param0: number): com.facebook.yoga.YogaNodeJNIBase;
				public setMaxHeightPercent(param0: number): void;
				public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
				public setFlexBasisPercent(param0: number): void;
				public getChildAt(param0: number): com.facebook.yoga.YogaNode;
				public setDirection(param0: com.facebook.yoga.YogaDirection): void;
				public freeNatives(): void;
				public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
				public setFlexShrink(param0: number): void;
				public getMaxHeight(): com.facebook.yoga.YogaValue;
				public setMaxWidthPercent(param0: number): void;
				public setWidth(param0: number): void;
				public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
				public setPosition(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getStyleDirection(): com.facebook.yoga.YogaDirection;
				public setAspectRatio(param0: number): void;
				public setMaxHeight(param0: number): void;
				public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
				public getHeight(): com.facebook.yoga.YogaValue;
				public setMinWidth(param0: number): void;
				public setFlexGrow(param0: number): void;
				public setMaxWidth(param0: number): void;
				public setPadding(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getAlignItems(): com.facebook.yoga.YogaAlign;
				public isReferenceBaseline(): boolean;
				public setData(param0: any): void;
				public dirtyAllDescendants(): void;
				public getFlexShrink(): number;
				public getWidth(): com.facebook.yoga.YogaValue;
				public getChildCount(): number;
				public getWrap(): com.facebook.yoga.YogaWrap;
				public isDirty(): boolean;
				public setMarginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				/** @deprecated */
				public getParent(): com.facebook.yoga.YogaNode;
				public getMaxWidth(): com.facebook.yoga.YogaValue;
				public setFlexBasis(param0: number): void;
				public constructor(param0: com.facebook.yoga.YogaConfig);
				public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
				public setWidthAuto(): void;
				public setBorder(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getDisplay(): com.facebook.yoga.YogaDisplay;
				public baseline(param0: number, param1: number): number;
				public getOwner(): com.facebook.yoga.YogaNodeJNIBase;
				public setMarginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public copyStyle(param0: com.facebook.yoga.YogaNode): void;
				public getPadding(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public getData(): any;
				public constructor();
				public getFlex(): number;
				public setIsReferenceBaseline(param0: boolean): void;
				public setMinWidthPercent(param0: number): void;
				public removeChildAt(param0: number): com.facebook.yoga.YogaNode;
				public getJustifyContent(): com.facebook.yoga.YogaJustify;
				public getPosition(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public addChildAt(param0: com.facebook.yoga.YogaNode, param1: number): void;
				public getMargin(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public getFlexBasis(): com.facebook.yoga.YogaValue;
				public isMeasureDefined(): boolean;
				public indexOf(param0: com.facebook.yoga.YogaNode): number;
				public getOwner(): com.facebook.yoga.YogaNode;
				public getAspectRatio(): number;
				public setFlexBasisAuto(): void;
				public setStyleInputs(param0: native.Array<number>, param1: number): void;
				public setHeightPercent(param0: number): void;
				public cloneWithoutChildren(): com.facebook.yoga.YogaNode;
				public print(): void;
				public getOverflow(): com.facebook.yoga.YogaOverflow;
				public removeChildAt(param0: number): com.facebook.yoga.YogaNodeJNIBase;
				public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
				public setHeightAuto(): void;
				public getDoesLegacyStretchFlagAffectsLayout(): boolean;
				public finalize(): void;
				/** @deprecated */
				public getParent(): com.facebook.yoga.YogaNodeJNIBase;
				public setMinHeight(param0: number): void;
				public reset(): void;
				public setFlex(param0: number): void;
				public cloneWithoutChildren(): com.facebook.yoga.YogaNodeJNIBase;
				public calculateLayout(param0: number, param1: number): void;
				public getAlignContent(): com.facebook.yoga.YogaAlign;
				public measure(param0: number, param1: number, param2: number, param3: number): number;
				public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
				public getPositionType(): com.facebook.yoga.YogaPositionType;
				public getMinHeight(): com.facebook.yoga.YogaValue;
				public setPaddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
				public getAlignSelf(): com.facebook.yoga.YogaAlign;
				public getMinWidth(): com.facebook.yoga.YogaValue;
				public getBorder(param0: com.facebook.yoga.YogaEdge): number;
				public setMinHeightPercent(param0: number): void;
				public setWrap(param0: com.facebook.yoga.YogaWrap): void;
				public setPositionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public setWidthPercent(param0: number): void;
				public getFlexDirection(): com.facebook.yoga.YogaFlexDirection;
				public setMargin(param0: com.facebook.yoga.YogaEdge, param1: number): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaNodeJNIBatching extends com.facebook.yoga.YogaNodeJNIBase {
				public static class: java.lang.Class<com.facebook.yoga.YogaNodeJNIBatching>;
				public getLayoutMargin(param0: com.facebook.yoga.YogaEdge): number;
				public getLayoutY(): number;
				public getDoesLegacyStretchFlagAffectsLayout(): boolean;
				public getLayoutPadding(param0: com.facebook.yoga.YogaEdge): number;
				public hasNewLayout(): boolean;
				public getLayoutHeight(): number;
				public constructor();
				public getLayoutX(): number;
				public reset(): void;
				public getLayoutDirection(): com.facebook.yoga.YogaDirection;
				public constructor(param0: com.facebook.yoga.YogaConfig);
				public getLayoutBorder(param0: com.facebook.yoga.YogaEdge): number;
				public getLayoutWidth(): number;
				public markLayoutSeen(): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaNodeType {
				public static class: java.lang.Class<com.facebook.yoga.YogaNodeType>;
				public static DEFAULT: com.facebook.yoga.YogaNodeType;
				public static TEXT: com.facebook.yoga.YogaNodeType;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaNodeType>;
				public static valueOf(param0: string): com.facebook.yoga.YogaNodeType;
				public static fromInt(param0: number): com.facebook.yoga.YogaNodeType;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaOverflow {
				public static class: java.lang.Class<com.facebook.yoga.YogaOverflow>;
				public static VISIBLE: com.facebook.yoga.YogaOverflow;
				public static HIDDEN: com.facebook.yoga.YogaOverflow;
				public static SCROLL: com.facebook.yoga.YogaOverflow;
				public static fromInt(param0: number): com.facebook.yoga.YogaOverflow;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaOverflow>;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				public static valueOf(param0: string): com.facebook.yoga.YogaOverflow;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaPositionType {
				public static class: java.lang.Class<com.facebook.yoga.YogaPositionType>;
				public static RELATIVE: com.facebook.yoga.YogaPositionType;
				public static ABSOLUTE: com.facebook.yoga.YogaPositionType;
				public static fromInt(param0: number): com.facebook.yoga.YogaPositionType;
				public static valueOf(param0: string): com.facebook.yoga.YogaPositionType;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaPositionType>;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaPrintOptions {
				public static class: java.lang.Class<com.facebook.yoga.YogaPrintOptions>;
				public static LAYOUT: com.facebook.yoga.YogaPrintOptions;
				public static STYLE: com.facebook.yoga.YogaPrintOptions;
				public static CHILDREN: com.facebook.yoga.YogaPrintOptions;
				public static valueOf(param0: string): com.facebook.yoga.YogaPrintOptions;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaPrintOptions>;
				public static fromInt(param0: number): com.facebook.yoga.YogaPrintOptions;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaStyleInputs extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.YogaStyleInputs>;
				public static LAYOUT_DIRECTION: number;
				public static FLEX_DIRECTION: number;
				public static FLEX: number;
				public static FLEX_GROW: number;
				public static FLEX_SHRINK: number;
				public static FLEX_BASIS: number;
				public static FLEX_BASIS_PERCENT: number;
				public static FLEX_BASIS_AUTO: number;
				public static FLEX_WRAP: number;
				public static WIDTH: number;
				public static WIDTH_PERCENT: number;
				public static WIDTH_AUTO: number;
				public static MIN_WIDTH: number;
				public static MIN_WIDTH_PERCENT: number;
				public static MAX_WIDTH: number;
				public static MAX_WIDTH_PERCENT: number;
				public static HEIGHT: number;
				public static HEIGHT_PERCENT: number;
				public static HEIGHT_AUTO: number;
				public static MIN_HEIGHT: number;
				public static MIN_HEIGHT_PERCENT: number;
				public static MAX_HEIGHT: number;
				public static MAX_HEIGHT_PERCENT: number;
				public static JUSTIFY_CONTENT: number;
				public static ALIGN_ITEMS: number;
				public static ALIGN_SELF: number;
				public static ALIGN_CONTENT: number;
				public static POSITION_TYPE: number;
				public static ASPECT_RATIO: number;
				public static OVERFLOW: number;
				public static DISPLAY: number;
				public static MARGIN: number;
				public static MARGIN_PERCENT: number;
				public static MARGIN_AUTO: number;
				public static PADDING: number;
				public static PADDING_PERCENT: number;
				public static BORDER: number;
				public static POSITION: number;
				public static POSITION_PERCENT: number;
				public static IS_REFERENCE_BASELINE: number;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaUnit {
				public static class: java.lang.Class<com.facebook.yoga.YogaUnit>;
				public static UNDEFINED: com.facebook.yoga.YogaUnit;
				public static POINT: com.facebook.yoga.YogaUnit;
				public static PERCENT: com.facebook.yoga.YogaUnit;
				public static AUTO: com.facebook.yoga.YogaUnit;
				public static fromInt(param0: number): com.facebook.yoga.YogaUnit;
				public static values(): native.Array<com.facebook.yoga.YogaUnit>;
				public intValue(): number;
				public static valueOf(param0: string): com.facebook.yoga.YogaUnit;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaValue extends java.lang.Object {
				public static class: java.lang.Class<com.facebook.yoga.YogaValue>;
				public value: number;
				public unit: com.facebook.yoga.YogaUnit;
				public hashCode(): number;
				public constructor(param0: number, param1: com.facebook.yoga.YogaUnit);
				public equals(param0: any): boolean;
				public static parse(param0: string): com.facebook.yoga.YogaValue;
				public toString(): string;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaWrap {
				public static class: java.lang.Class<com.facebook.yoga.YogaWrap>;
				public static NO_WRAP: com.facebook.yoga.YogaWrap;
				public static WRAP: com.facebook.yoga.YogaWrap;
				public static WRAP_REVERSE: com.facebook.yoga.YogaWrap;
				public static values(): native.Array<com.facebook.yoga.YogaWrap>;
				public intValue(): number;
				public static valueOf(param0: string): com.facebook.yoga.YogaWrap;
				public static fromInt(param0: number): com.facebook.yoga.YogaWrap;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module javax {
	export module annotation {
		export class CheckForNull extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.CheckForNull>;
			/**
			 * Constructs a new instance of the javax.annotation.CheckForNull interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class CheckForSigned extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.CheckForSigned>;
			/**
			 * Constructs a new instance of the javax.annotation.CheckForSigned interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class CheckReturnValue extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.CheckReturnValue>;
			/**
			 * Constructs a new instance of the javax.annotation.CheckReturnValue interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				when(): javax.annotation.meta.When;
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public when(): javax.annotation.meta.When;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class Detainted extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.Detainted>;
			/**
			 * Constructs a new instance of the javax.annotation.Detainted interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class MatchesPattern extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.MatchesPattern>;
			/**
			 * Constructs a new instance of the javax.annotation.MatchesPattern interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				value(): string;
				flags(): number;
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public value(): string;
			public flags(): number;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
		export module MatchesPattern {
			export class Checker extends javax.annotation.meta.TypeQualifierValidator<javax.annotation.MatchesPattern> {
				public static class: java.lang.Class<javax.annotation.MatchesPattern.Checker>;
				public forConstantValue(param0: any, param1: any): javax.annotation.meta.When;
				public forConstantValue(param0: javax.annotation.MatchesPattern, param1: any): javax.annotation.meta.When;
				public constructor();
			}
		}
	}
}

declare module javax {
	export module annotation {
		export class Nonnegative extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.Nonnegative>;
			/**
			 * Constructs a new instance of the javax.annotation.Nonnegative interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				when(): javax.annotation.meta.When;
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public when(): javax.annotation.meta.When;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
		export module Nonnegative {
			export class Checker extends javax.annotation.meta.TypeQualifierValidator<javax.annotation.Nonnegative> {
				public static class: java.lang.Class<javax.annotation.Nonnegative.Checker>;
				public forConstantValue(param0: any, param1: any): javax.annotation.meta.When;
				public forConstantValue(param0: javax.annotation.Nonnegative, param1: any): javax.annotation.meta.When;
				public constructor();
			}
		}
	}
}

declare module javax {
	export module annotation {
		export class Nonnull extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.Nonnull>;
			/**
			 * Constructs a new instance of the javax.annotation.Nonnull interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				when(): javax.annotation.meta.When;
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public when(): javax.annotation.meta.When;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
		export module Nonnull {
			export class Checker extends javax.annotation.meta.TypeQualifierValidator<javax.annotation.Nonnull> {
				public static class: java.lang.Class<javax.annotation.Nonnull.Checker>;
				public forConstantValue(param0: any, param1: any): javax.annotation.meta.When;
				public forConstantValue(param0: javax.annotation.Nonnull, param1: any): javax.annotation.meta.When;
				public constructor();
			}
		}
	}
}

declare module javax {
	export module annotation {
		export class Nullable extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.Nullable>;
			/**
			 * Constructs a new instance of the javax.annotation.Nullable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class OverridingMethodsMustInvokeSuper extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.OverridingMethodsMustInvokeSuper>;
			/**
			 * Constructs a new instance of the javax.annotation.OverridingMethodsMustInvokeSuper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class ParametersAreNonnullByDefault extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.ParametersAreNonnullByDefault>;
			/**
			 * Constructs a new instance of the javax.annotation.ParametersAreNonnullByDefault interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class ParametersAreNullableByDefault extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.ParametersAreNullableByDefault>;
			/**
			 * Constructs a new instance of the javax.annotation.ParametersAreNullableByDefault interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class PropertyKey extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.PropertyKey>;
			/**
			 * Constructs a new instance of the javax.annotation.PropertyKey interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				when(): javax.annotation.meta.When;
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public when(): javax.annotation.meta.When;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class RegEx extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.RegEx>;
			/**
			 * Constructs a new instance of the javax.annotation.RegEx interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				when(): javax.annotation.meta.When;
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public when(): javax.annotation.meta.When;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
		export module RegEx {
			export class Checker extends javax.annotation.meta.TypeQualifierValidator<javax.annotation.RegEx> {
				public static class: java.lang.Class<javax.annotation.RegEx.Checker>;
				public forConstantValue(param0: any, param1: any): javax.annotation.meta.When;
				public forConstantValue(param0: javax.annotation.RegEx, param1: any): javax.annotation.meta.When;
				public constructor();
			}
		}
	}
}

declare module javax {
	export module annotation {
		export class Signed extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.Signed>;
			/**
			 * Constructs a new instance of the javax.annotation.Signed interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class Syntax extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.Syntax>;
			/**
			 * Constructs a new instance of the javax.annotation.Syntax interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				value(): string;
				when(): javax.annotation.meta.When;
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public when(): javax.annotation.meta.When;
			public toString(): string;
			public value(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class Tainted extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.Tainted>;
			/**
			 * Constructs a new instance of the javax.annotation.Tainted interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class Untainted extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.Untainted>;
			/**
			 * Constructs a new instance of the javax.annotation.Untainted interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				when(): javax.annotation.meta.When;
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public when(): javax.annotation.meta.When;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class WillClose extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.WillClose>;
			/**
			 * Constructs a new instance of the javax.annotation.WillClose interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class WillCloseWhenClosed extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.WillCloseWhenClosed>;
			/**
			 * Constructs a new instance of the javax.annotation.WillCloseWhenClosed interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export class WillNotClose extends java.lang.Object implements java.lang.annotation.Annotation {
			public static class: java.lang.Class<javax.annotation.WillNotClose>;
			/**
			 * Constructs a new instance of the javax.annotation.WillNotClose interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				equals(param0: any): boolean;
				hashCode(): number;
				toString(): string;
				annotationType(): java.lang.Class<any>;
			});
			public constructor();
			public equals(param0: any): boolean;
			public toString(): string;
			public annotationType(): java.lang.Class<any>;
			public hashCode(): number;
		}
	}
}

declare module javax {
	export module annotation {
		export module concurrent {
			export class GuardedBy extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<javax.annotation.concurrent.GuardedBy>;
				/**
				 * Constructs a new instance of the javax.annotation.concurrent.GuardedBy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					value(): string;
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public hashCode(): number;
				public value(): string;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public toString(): string;
			}
		}
	}
}

declare module javax {
	export module annotation {
		export module concurrent {
			export class Immutable extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<javax.annotation.concurrent.Immutable>;
				/**
				 * Constructs a new instance of the javax.annotation.concurrent.Immutable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public hashCode(): number;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public toString(): string;
			}
		}
	}
}

declare module javax {
	export module annotation {
		export module concurrent {
			export class NotThreadSafe extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<javax.annotation.concurrent.NotThreadSafe>;
				/**
				 * Constructs a new instance of the javax.annotation.concurrent.NotThreadSafe interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public hashCode(): number;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public toString(): string;
			}
		}
	}
}

declare module javax {
	export module annotation {
		export module concurrent {
			export class ThreadSafe extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<javax.annotation.concurrent.ThreadSafe>;
				/**
				 * Constructs a new instance of the javax.annotation.concurrent.ThreadSafe interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public hashCode(): number;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public toString(): string;
			}
		}
	}
}

declare module javax {
	export module annotation {
		export module meta {
			export class Exclusive extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<javax.annotation.meta.Exclusive>;
				/**
				 * Constructs a new instance of the javax.annotation.meta.Exclusive interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public hashCode(): number;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public toString(): string;
			}
		}
	}
}

declare module javax {
	export module annotation {
		export module meta {
			export class Exhaustive extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<javax.annotation.meta.Exhaustive>;
				/**
				 * Constructs a new instance of the javax.annotation.meta.Exhaustive interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public hashCode(): number;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public toString(): string;
			}
		}
	}
}

declare module javax {
	export module annotation {
		export module meta {
			export class TypeQualifier extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<javax.annotation.meta.TypeQualifier>;
				/**
				 * Constructs a new instance of the javax.annotation.meta.TypeQualifier interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					applicableTo(): java.lang.Class<any>;
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public hashCode(): number;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public toString(): string;
				public applicableTo(): java.lang.Class<any>;
			}
		}
	}
}

declare module javax {
	export module annotation {
		export module meta {
			export class TypeQualifierDefault extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<javax.annotation.meta.TypeQualifierDefault>;
				/**
				 * Constructs a new instance of the javax.annotation.meta.TypeQualifierDefault interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					value(): native.Array<java.lang.annotation.ElementType>;
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public hashCode(): number;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public value(): native.Array<java.lang.annotation.ElementType>;
				public toString(): string;
			}
		}
	}
}

declare module javax {
	export module annotation {
		export module meta {
			export class TypeQualifierNickname extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<javax.annotation.meta.TypeQualifierNickname>;
				/**
				 * Constructs a new instance of the javax.annotation.meta.TypeQualifierNickname interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public hashCode(): number;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public toString(): string;
			}
		}
	}
}

declare module javax {
	export module annotation {
		export module meta {
			export class TypeQualifierValidator<A>  extends java.lang.Object {
				public static class: java.lang.Class<javax.annotation.meta.TypeQualifierValidator<any>>;
				/**
				 * Constructs a new instance of the javax.annotation.meta.TypeQualifierValidator<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					forConstantValue(param0: A, param1: any): javax.annotation.meta.When;
				});
				public constructor();
				public forConstantValue(param0: A, param1: any): javax.annotation.meta.When;
			}
		}
	}
}

declare module javax {
	export module annotation {
		export module meta {
			export class When {
				public static class: java.lang.Class<javax.annotation.meta.When>;
				public static ALWAYS: javax.annotation.meta.When;
				public static UNKNOWN: javax.annotation.meta.When;
				public static MAYBE: javax.annotation.meta.When;
				public static NEVER: javax.annotation.meta.When;
				public static valueOf(param0: string): javax.annotation.meta.When;
				public static values(): native.Array<javax.annotation.meta.When>;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module okhttp3 {
	export class Address extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Address>;
		public proxy(): java.net.Proxy;
		public equals(param0: any): boolean;
		public constructor(param0: string, param1: number, param2: okhttp3.Dns, param3: javax.net.SocketFactory, param4: javax.net.ssl.SSLSocketFactory, param5: javax.net.ssl.HostnameVerifier, param6: okhttp3.CertificatePinner, param7: okhttp3.Authenticator, param8: java.net.Proxy, param9: java.util.List<okhttp3.Protocol>, param10: java.util.List<okhttp3.ConnectionSpec>, param11: java.net.ProxySelector);
		public proxySelector(): java.net.ProxySelector;
		public sslSocketFactory(): javax.net.ssl.SSLSocketFactory;
		public url(): okhttp3.HttpUrl;
		public certificatePinner(): okhttp3.CertificatePinner;
		public toString(): string;
		public protocols(): java.util.List<okhttp3.Protocol>;
		public socketFactory(): javax.net.SocketFactory;
		public dns(): okhttp3.Dns;
		public proxyAuthenticator(): okhttp3.Authenticator;
		public hostnameVerifier(): javax.net.ssl.HostnameVerifier;
		public hashCode(): number;
		public connectionSpecs(): java.util.List<okhttp3.ConnectionSpec>;
	}
}

declare module okhttp3 {
	export class Authenticator extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Authenticator>;
		/**
		 * Constructs a new instance of the okhttp3.Authenticator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			authenticate(param0: okhttp3.Route, param1: okhttp3.Response): okhttp3.Request;
			lambda$static$0(param0: okhttp3.Route, param1: okhttp3.Response): okhttp3.Request;
			<clinit>(): void;
		});
		public constructor();
		public static NONE: okhttp3.Authenticator;
		public authenticate(param0: okhttp3.Route, param1: okhttp3.Response): okhttp3.Request;
	}
}

declare module okhttp3 {
	export class Cache extends java.lang.Object implements java.io.Closeable, java.io.Flushable {
		public static class: java.lang.Class<okhttp3.Cache>;
		public close(): void;
		public directory(): java.io.File;
		public constructor(param0: java.io.File, param1: number);
		public static key(param0: okhttp3.HttpUrl): string;
		public writeAbortCount(): number;
		public evictAll(): void;
		public delete(): void;
		public isClosed(): boolean;
		public networkCount(): number;
		public requestCount(): number;
		public flush(): void;
		public initialize(): void;
		public size(): number;
		public writeSuccessCount(): number;
		public hitCount(): number;
		public urls(): java.util.Iterator<string>;
		public maxSize(): number;
	}
	export module Cache {
		export class CacheRequestImpl extends java.lang.Object implements okhttp3.internal.cache.CacheRequest {
			public static class: java.lang.Class<okhttp3.Cache.CacheRequestImpl>;
			public body(): okio.Sink;
			public abort(): void;
		}
		export class CacheResponseBody extends okhttp3.ResponseBody {
			public static class: java.lang.Class<okhttp3.Cache.CacheResponseBody>;
			public contentLength(): number;
			public source(): okio.BufferedSource;
			public contentType(): okhttp3.MediaType;
			public close(): void;
		}
		export class Entry extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.Cache.Entry>;
			public matches(param0: okhttp3.Request, param1: okhttp3.Response): boolean;
			public response(param0: okhttp3.internal.cache.DiskLruCache.Snapshot): okhttp3.Response;
			public writeTo(param0: okhttp3.internal.cache.DiskLruCache.Editor): void;
		}
	}
}

declare module okhttp3 {
	export class CacheControl extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.CacheControl>;
		public static FORCE_NETWORK: okhttp3.CacheControl;
		public static FORCE_CACHE: okhttp3.CacheControl;
		public maxStaleSeconds(): number;
		public mustRevalidate(): boolean;
		public static parse(param0: okhttp3.Headers): okhttp3.CacheControl;
		public toString(): string;
		public minFreshSeconds(): number;
		public onlyIfCached(): boolean;
		public noCache(): boolean;
		public noTransform(): boolean;
		public isPrivate(): boolean;
		public immutable(): boolean;
		public sMaxAgeSeconds(): number;
		public noStore(): boolean;
		public maxAgeSeconds(): number;
		public isPublic(): boolean;
	}
	export module CacheControl {
		export class Builder extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.CacheControl.Builder>;
			public noCache(): okhttp3.CacheControl.Builder;
			public maxStale(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.CacheControl.Builder;
			public immutable(): okhttp3.CacheControl.Builder;
			public onlyIfCached(): okhttp3.CacheControl.Builder;
			public minFresh(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.CacheControl.Builder;
			public maxAge(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.CacheControl.Builder;
			public constructor();
			public build(): okhttp3.CacheControl;
			public noStore(): okhttp3.CacheControl.Builder;
			public noTransform(): okhttp3.CacheControl.Builder;
		}
	}
}

declare module okhttp3 {
	export class Call extends java.lang.Object implements java.lang.Cloneable {
		public static class: java.lang.Class<okhttp3.Call>;
		/**
		 * Constructs a new instance of the okhttp3.Call interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			request(): okhttp3.Request;
			execute(): okhttp3.Response;
			enqueue(param0: okhttp3.Callback): void;
			cancel(): void;
			isExecuted(): boolean;
			isCanceled(): boolean;
			timeout(): okio.Timeout;
			clone(): okhttp3.Call;
		});
		public constructor();
		public isExecuted(): boolean;
		public clone(): okhttp3.Call;
		public request(): okhttp3.Request;
		public execute(): okhttp3.Response;
		public isCanceled(): boolean;
		public clone(): any;
		public enqueue(param0: okhttp3.Callback): void;
		public cancel(): void;
		public timeout(): okio.Timeout;
	}
	export module Call {
		export class Factory extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.Call.Factory>;
			/**
			 * Constructs a new instance of the okhttp3.Call$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				newCall(param0: okhttp3.Request): okhttp3.Call;
			});
			public constructor();
			public newCall(param0: okhttp3.Request): okhttp3.Call;
		}
	}
}

declare module okhttp3 {
	export class Callback extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Callback>;
		/**
		 * Constructs a new instance of the okhttp3.Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			onFailure(param0: okhttp3.Call, param1: java.io.IOException): void;
			onResponse(param0: okhttp3.Call, param1: okhttp3.Response): void;
		});
		public constructor();
		public onResponse(param0: okhttp3.Call, param1: okhttp3.Response): void;
		public onFailure(param0: okhttp3.Call, param1: java.io.IOException): void;
	}
}

declare module okhttp3 {
	export class CertificatePinner extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.CertificatePinner>;
		public static DEFAULT: okhttp3.CertificatePinner;
		public equals(param0: any): boolean;
		public static pin(param0: java.security.cert.Certificate): string;
		public hashCode(): number;
		/** @deprecated */
		public check(param0: string, param1: native.Array<java.security.cert.Certificate>): void;
		public check(param0: string, param1: java.util.List<java.security.cert.Certificate>): void;
	}
	export module CertificatePinner {
		export class Builder extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.CertificatePinner.Builder>;
			public build(): okhttp3.CertificatePinner;
			public add(param0: string, param1: native.Array<string>): okhttp3.CertificatePinner.Builder;
			public constructor();
		}
		export class Pin extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.CertificatePinner.Pin>;
			public equals(param0: any): boolean;
			public toString(): string;
			public hashCode(): number;
		}
	}
}

declare module okhttp3 {
	export class Challenge extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Challenge>;
		public authParams(): java.util.Map<string,string>;
		public charset(): java.nio.charset.Charset;
		public equals(param0: any): boolean;
		public scheme(): string;
		public hashCode(): number;
		public toString(): string;
		public constructor(param0: string, param1: java.util.Map<string,string>);
		public withCharset(param0: java.nio.charset.Charset): okhttp3.Challenge;
		public constructor(param0: string, param1: string);
		public realm(): string;
	}
}

declare module okhttp3 {
	export class CipherSuite extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.CipherSuite>;
		public static TLS_RSA_WITH_NULL_MD5: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_NULL_SHA: okhttp3.CipherSuite;
		public static TLS_RSA_EXPORT_WITH_RC4_40_MD5: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_RC4_128_MD5: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_RC4_128_SHA: okhttp3.CipherSuite;
		public static TLS_RSA_EXPORT_WITH_DES40_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_DES_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_3DES_EDE_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_DSS_WITH_DES_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_WITH_DES_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DH_anon_EXPORT_WITH_RC4_40_MD5: okhttp3.CipherSuite;
		public static TLS_DH_anon_WITH_RC4_128_MD5: okhttp3.CipherSuite;
		public static TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DH_anon_WITH_DES_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DH_anon_WITH_3DES_EDE_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_KRB5_WITH_DES_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_KRB5_WITH_3DES_EDE_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_KRB5_WITH_RC4_128_SHA: okhttp3.CipherSuite;
		public static TLS_KRB5_WITH_DES_CBC_MD5: okhttp3.CipherSuite;
		public static TLS_KRB5_WITH_3DES_EDE_CBC_MD5: okhttp3.CipherSuite;
		public static TLS_KRB5_WITH_RC4_128_MD5: okhttp3.CipherSuite;
		public static TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA: okhttp3.CipherSuite;
		public static TLS_KRB5_EXPORT_WITH_RC4_40_SHA: okhttp3.CipherSuite;
		public static TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5: okhttp3.CipherSuite;
		public static TLS_KRB5_EXPORT_WITH_RC4_40_MD5: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_AES_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_DSS_WITH_AES_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_WITH_AES_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DH_anon_WITH_AES_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_AES_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_DSS_WITH_AES_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_WITH_AES_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DH_anon_WITH_AES_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_NULL_SHA256: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_AES_128_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_AES_256_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_DHE_DSS_WITH_AES_128_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_CAMELLIA_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_WITH_AES_128_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_DHE_DSS_WITH_AES_256_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_WITH_AES_256_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_DH_anon_WITH_AES_128_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_DH_anon_WITH_AES_256_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_CAMELLIA_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_PSK_WITH_RC4_128_SHA: okhttp3.CipherSuite;
		public static TLS_PSK_WITH_3DES_EDE_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_PSK_WITH_AES_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_PSK_WITH_AES_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_SEED_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_AES_128_GCM_SHA256: okhttp3.CipherSuite;
		public static TLS_RSA_WITH_AES_256_GCM_SHA384: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_WITH_AES_128_GCM_SHA256: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_WITH_AES_256_GCM_SHA384: okhttp3.CipherSuite;
		public static TLS_DHE_DSS_WITH_AES_128_GCM_SHA256: okhttp3.CipherSuite;
		public static TLS_DHE_DSS_WITH_AES_256_GCM_SHA384: okhttp3.CipherSuite;
		public static TLS_DH_anon_WITH_AES_128_GCM_SHA256: okhttp3.CipherSuite;
		public static TLS_DH_anon_WITH_AES_256_GCM_SHA384: okhttp3.CipherSuite;
		public static TLS_EMPTY_RENEGOTIATION_INFO_SCSV: okhttp3.CipherSuite;
		public static TLS_FALLBACK_SCSV: okhttp3.CipherSuite;
		public static TLS_ECDH_ECDSA_WITH_NULL_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_ECDSA_WITH_RC4_128_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_ECDSA_WITH_NULL_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_ECDSA_WITH_RC4_128_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_RSA_WITH_NULL_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_RSA_WITH_RC4_128_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_RSA_WITH_AES_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_RSA_WITH_AES_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_RSA_WITH_NULL_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_RSA_WITH_RC4_128_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_anon_WITH_NULL_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_anon_WITH_RC4_128_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_anon_WITH_AES_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDH_anon_WITH_AES_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384: okhttp3.CipherSuite;
		public static TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384: okhttp3.CipherSuite;
		public static TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384: okhttp3.CipherSuite;
		public static TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256: okhttp3.CipherSuite;
		public static TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384: okhttp3.CipherSuite;
		public static TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: okhttp3.CipherSuite;
		public static TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: okhttp3.CipherSuite;
		public static TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256: okhttp3.CipherSuite;
		public static TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384: okhttp3.CipherSuite;
		public static TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256: okhttp3.CipherSuite;
		public static TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384: okhttp3.CipherSuite;
		public static TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256: okhttp3.CipherSuite;
		public static TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384: okhttp3.CipherSuite;
		public static TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA: okhttp3.CipherSuite;
		public static TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256: okhttp3.CipherSuite;
		public static TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256: okhttp3.CipherSuite;
		public static TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256: okhttp3.CipherSuite;
		public static TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256: okhttp3.CipherSuite;
		public static TLS_AES_128_GCM_SHA256: okhttp3.CipherSuite;
		public static TLS_AES_256_GCM_SHA384: okhttp3.CipherSuite;
		public static TLS_CHACHA20_POLY1305_SHA256: okhttp3.CipherSuite;
		public static TLS_AES_128_CCM_SHA256: okhttp3.CipherSuite;
		public static TLS_AES_128_CCM_8_SHA256: okhttp3.CipherSuite;
		public javaName(): string;
		public static forJavaName(param0: string): okhttp3.CipherSuite;
		public toString(): string;
	}
}

declare module okhttp3 {
	export class Connection extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Connection>;
		/**
		 * Constructs a new instance of the okhttp3.Connection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			route(): okhttp3.Route;
			socket(): java.net.Socket;
			handshake(): okhttp3.Handshake;
			protocol(): okhttp3.Protocol;
		});
		public constructor();
		public route(): okhttp3.Route;
		public protocol(): okhttp3.Protocol;
		public handshake(): okhttp3.Handshake;
		public socket(): java.net.Socket;
	}
}

declare module okhttp3 {
	export class ConnectionPool extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.ConnectionPool>;
		public constructor();
		public connectionCount(): number;
		public evictAll(): void;
		public idleConnectionCount(): number;
		public constructor(param0: number, param1: number, param2: java.util.concurrent.TimeUnit);
	}
}

declare module okhttp3 {
	export class ConnectionSpec extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.ConnectionSpec>;
		public static RESTRICTED_TLS: okhttp3.ConnectionSpec;
		public static MODERN_TLS: okhttp3.ConnectionSpec;
		public static COMPATIBLE_TLS: okhttp3.ConnectionSpec;
		public static CLEARTEXT: okhttp3.ConnectionSpec;
		public cipherSuites(): java.util.List<okhttp3.CipherSuite>;
		public equals(param0: any): boolean;
		public tlsVersions(): java.util.List<okhttp3.TlsVersion>;
		public supportsTlsExtensions(): boolean;
		public hashCode(): number;
		public isCompatible(param0: javax.net.ssl.SSLSocket): boolean;
		public isTls(): boolean;
		public toString(): string;
	}
	export module ConnectionSpec {
		export class Builder extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.ConnectionSpec.Builder>;
			public tlsVersions(param0: native.Array<string>): okhttp3.ConnectionSpec.Builder;
			public cipherSuites(param0: native.Array<string>): okhttp3.ConnectionSpec.Builder;
			public build(): okhttp3.ConnectionSpec;
			public constructor(param0: okhttp3.ConnectionSpec);
			public cipherSuites(param0: native.Array<okhttp3.CipherSuite>): okhttp3.ConnectionSpec.Builder;
			public allEnabledCipherSuites(): okhttp3.ConnectionSpec.Builder;
			public tlsVersions(param0: native.Array<okhttp3.TlsVersion>): okhttp3.ConnectionSpec.Builder;
			public allEnabledTlsVersions(): okhttp3.ConnectionSpec.Builder;
			/** @deprecated */
			public supportsTlsExtensions(param0: boolean): okhttp3.ConnectionSpec.Builder;
		}
	}
}

declare module okhttp3 {
	export class Cookie extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Cookie>;
		public domain(): string;
		public equals(param0: any): boolean;
		public matches(param0: okhttp3.HttpUrl): boolean;
		public static parseAll(param0: okhttp3.HttpUrl, param1: okhttp3.Headers): java.util.List<okhttp3.Cookie>;
		public toString(): string;
		public persistent(): boolean;
		public httpOnly(): boolean;
		public static parse(param0: okhttp3.HttpUrl, param1: string): okhttp3.Cookie;
		public hostOnly(): boolean;
		public expiresAt(): number;
		public hashCode(): number;
		public name(): string;
		public path(): string;
		public secure(): boolean;
		public value(): string;
	}
	export module Cookie {
		export class Builder extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.Cookie.Builder>;
			public domain(param0: string): okhttp3.Cookie.Builder;
			public hostOnlyDomain(param0: string): okhttp3.Cookie.Builder;
			public value(param0: string): okhttp3.Cookie.Builder;
			public httpOnly(): okhttp3.Cookie.Builder;
			public secure(): okhttp3.Cookie.Builder;
			public expiresAt(param0: number): okhttp3.Cookie.Builder;
			public build(): okhttp3.Cookie;
			public name(param0: string): okhttp3.Cookie.Builder;
			public constructor();
			public path(param0: string): okhttp3.Cookie.Builder;
		}
	}
}

declare module okhttp3 {
	export class CookieJar extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.CookieJar>;
		/**
		 * Constructs a new instance of the okhttp3.CookieJar interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			saveFromResponse(param0: okhttp3.HttpUrl, param1: java.util.List<okhttp3.Cookie>): void;
			loadForRequest(param0: okhttp3.HttpUrl): java.util.List<okhttp3.Cookie>;
			<clinit>(): void;
		});
		public constructor();
		public static NO_COOKIES: okhttp3.CookieJar;
		public loadForRequest(param0: okhttp3.HttpUrl): java.util.List<okhttp3.Cookie>;
		public saveFromResponse(param0: okhttp3.HttpUrl, param1: java.util.List<okhttp3.Cookie>): void;
	}
}

declare module okhttp3 {
	export class Credentials extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Credentials>;
		public static basic(param0: string, param1: string, param2: java.nio.charset.Charset): string;
		public static basic(param0: string, param1: string): string;
	}
}

declare module okhttp3 {
	export class Dispatcher extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Dispatcher>;
		public constructor();
		public setMaxRequestsPerHost(param0: number): void;
		public constructor(param0: java.util.concurrent.ExecutorService);
		public queuedCallsCount(): number;
		public runningCallsCount(): number;
		public runningCalls(): java.util.List<okhttp3.Call>;
		public cancelAll(): void;
		public queuedCalls(): java.util.List<okhttp3.Call>;
		public setMaxRequests(param0: number): void;
		public getMaxRequestsPerHost(): number;
		public executorService(): java.util.concurrent.ExecutorService;
		public setIdleCallback(param0: java.lang.Runnable): void;
		public getMaxRequests(): number;
	}
}

declare module okhttp3 {
	export class Dns extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Dns>;
		/**
		 * Constructs a new instance of the okhttp3.Dns interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			lookup(param0: string): java.util.List<java.net.InetAddress>;
			lambda$static$0(param0: string): java.util.List<any>;
			<clinit>(): void;
		});
		public constructor();
		public static SYSTEM: okhttp3.Dns;
		public lookup(param0: string): java.util.List<java.net.InetAddress>;
	}
}

declare module okhttp3 {
	export abstract class EventListener extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.EventListener>;
		public static NONE: okhttp3.EventListener;
		public constructor();
		public connectFailed(param0: okhttp3.Call, param1: java.net.InetSocketAddress, param2: java.net.Proxy, param3: okhttp3.Protocol, param4: java.io.IOException): void;
		public callStart(param0: okhttp3.Call): void;
		public connectionReleased(param0: okhttp3.Call, param1: okhttp3.Connection): void;
		public dnsEnd(param0: okhttp3.Call, param1: string, param2: java.util.List<java.net.InetAddress>): void;
		public responseBodyEnd(param0: okhttp3.Call, param1: number): void;
		public responseFailed(param0: okhttp3.Call, param1: java.io.IOException): void;
		public callEnd(param0: okhttp3.Call): void;
		public secureConnectStart(param0: okhttp3.Call): void;
		public responseHeadersEnd(param0: okhttp3.Call, param1: okhttp3.Response): void;
		public secureConnectEnd(param0: okhttp3.Call, param1: okhttp3.Handshake): void;
		public dnsStart(param0: okhttp3.Call, param1: string): void;
		public connectionAcquired(param0: okhttp3.Call, param1: okhttp3.Connection): void;
		public connectEnd(param0: okhttp3.Call, param1: java.net.InetSocketAddress, param2: java.net.Proxy, param3: okhttp3.Protocol): void;
		public requestHeadersEnd(param0: okhttp3.Call, param1: okhttp3.Request): void;
		public responseBodyStart(param0: okhttp3.Call): void;
		public connectStart(param0: okhttp3.Call, param1: java.net.InetSocketAddress, param2: java.net.Proxy): void;
		public requestBodyEnd(param0: okhttp3.Call, param1: number): void;
		public requestFailed(param0: okhttp3.Call, param1: java.io.IOException): void;
		public callFailed(param0: okhttp3.Call, param1: java.io.IOException): void;
		public requestHeadersStart(param0: okhttp3.Call): void;
		public requestBodyStart(param0: okhttp3.Call): void;
		public responseHeadersStart(param0: okhttp3.Call): void;
	}
	export module EventListener {
		export class Factory extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.EventListener.Factory>;
			/**
			 * Constructs a new instance of the okhttp3.EventListener$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				create(param0: okhttp3.Call): okhttp3.EventListener;
			});
			public constructor();
			public create(param0: okhttp3.Call): okhttp3.EventListener;
		}
	}
}

declare module okhttp3 {
	export class FormBody extends okhttp3.RequestBody {
		public static class: java.lang.Class<okhttp3.FormBody>;
		public value(param0: number): string;
		public encodedValue(param0: number): string;
		public name(param0: number): string;
		public size(): number;
		public encodedName(param0: number): string;
		public contentType(): okhttp3.MediaType;
		public writeTo(param0: okio.BufferedSink): void;
		public contentLength(): number;
	}
	export module FormBody {
		export class Builder extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.FormBody.Builder>;
			public constructor(param0: java.nio.charset.Charset);
			public addEncoded(param0: string, param1: string): okhttp3.FormBody.Builder;
			public constructor();
			public add(param0: string, param1: string): okhttp3.FormBody.Builder;
			public build(): okhttp3.FormBody;
		}
	}
}

declare module okhttp3 {
	export class Handshake extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Handshake>;
		public equals(param0: any): boolean;
		public static get(param0: javax.net.ssl.SSLSession): okhttp3.Handshake;
		public static get(param0: okhttp3.TlsVersion, param1: okhttp3.CipherSuite, param2: java.util.List<java.security.cert.Certificate>, param3: java.util.List<java.security.cert.Certificate>): okhttp3.Handshake;
		public hashCode(): number;
		public localCertificates(): java.util.List<java.security.cert.Certificate>;
		public localPrincipal(): java.security.Principal;
		public tlsVersion(): okhttp3.TlsVersion;
		public peerCertificates(): java.util.List<java.security.cert.Certificate>;
		public toString(): string;
		public peerPrincipal(): java.security.Principal;
		public cipherSuite(): okhttp3.CipherSuite;
	}
}

declare module okhttp3 {
	export class Headers extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Headers>;
		public value(param0: number): string;
		public equals(param0: any): boolean;
		public newBuilder(): okhttp3.Headers.Builder;
		public getInstant(param0: string): java.time.Instant;
		public toString(): string;
		public get(param0: string): string;
		public values(param0: string): java.util.List<string>;
		public names(): java.util.Set<string>;
		public static of(param0: java.util.Map<string,string>): okhttp3.Headers;
		public name(param0: number): string;
		public size(): number;
		public hashCode(): number;
		public toMultimap(): java.util.Map<string,java.util.List<string>>;
		public getDate(param0: string): java.util.Date;
		public byteCount(): number;
		public static of(param0: native.Array<string>): okhttp3.Headers;
	}
	export module Headers {
		export class Builder extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.Headers.Builder>;
			public get(param0: string): string;
			public build(): okhttp3.Headers;
			public set(param0: string, param1: java.time.Instant): okhttp3.Headers.Builder;
			public set(param0: string, param1: string): okhttp3.Headers.Builder;
			public constructor();
			public addAll(param0: okhttp3.Headers): okhttp3.Headers.Builder;
			public add(param0: string, param1: string): okhttp3.Headers.Builder;
			public removeAll(param0: string): okhttp3.Headers.Builder;
			public add(param0: string, param1: java.time.Instant): okhttp3.Headers.Builder;
			public set(param0: string, param1: java.util.Date): okhttp3.Headers.Builder;
			public add(param0: string): okhttp3.Headers.Builder;
			public addUnsafeNonAscii(param0: string, param1: string): okhttp3.Headers.Builder;
			public add(param0: string, param1: java.util.Date): okhttp3.Headers.Builder;
		}
	}
}

declare module okhttp3 {
	export class HttpUrl extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.HttpUrl>;
		public static get(param0: java.net.URI): okhttp3.HttpUrl;
		public equals(param0: any): boolean;
		public topPrivateDomain(): string;
		public queryParameterName(param0: number): string;
		public static defaultPort(param0: string): number;
		public scheme(): string;
		public queryParameterNames(): java.util.Set<string>;
		public encodedPassword(): string;
		public queryParameter(param0: string): string;
		public query(): string;
		public password(): string;
		public hashCode(): number;
		public static get(param0: string): okhttp3.HttpUrl;
		public resolve(param0: string): okhttp3.HttpUrl;
		public pathSize(): number;
		public isHttps(): boolean;
		public encodedPathSegments(): java.util.List<string>;
		public newBuilder(): okhttp3.HttpUrl.Builder;
		public port(): number;
		public encodedQuery(): string;
		public encodedPath(): string;
		public encodedFragment(): string;
		public redact(): string;
		public fragment(): string;
		public toString(): string;
		public uri(): java.net.URI;
		public queryParameterValue(param0: number): string;
		public encodedUsername(): string;
		public queryParameterValues(param0: string): java.util.List<string>;
		public newBuilder(param0: string): okhttp3.HttpUrl.Builder;
		public host(): string;
		public static get(param0: java.net.URL): okhttp3.HttpUrl;
		public pathSegments(): java.util.List<string>;
		public static parse(param0: string): okhttp3.HttpUrl;
		public url(): java.net.URL;
		public querySize(): number;
		public username(): string;
	}
	export module HttpUrl {
		export class Builder extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.HttpUrl.Builder>;
			public addPathSegment(param0: string): okhttp3.HttpUrl.Builder;
			public addEncodedPathSegment(param0: string): okhttp3.HttpUrl.Builder;
			public setEncodedQueryParameter(param0: string, param1: string): okhttp3.HttpUrl.Builder;
			public setQueryParameter(param0: string, param1: string): okhttp3.HttpUrl.Builder;
			public encodedFragment(param0: string): okhttp3.HttpUrl.Builder;
			public username(param0: string): okhttp3.HttpUrl.Builder;
			public addPathSegments(param0: string): okhttp3.HttpUrl.Builder;
			public encodedPath(param0: string): okhttp3.HttpUrl.Builder;
			public encodedPassword(param0: string): okhttp3.HttpUrl.Builder;
			public addEncodedPathSegments(param0: string): okhttp3.HttpUrl.Builder;
			public encodedQuery(param0: string): okhttp3.HttpUrl.Builder;
			public host(param0: string): okhttp3.HttpUrl.Builder;
			public removeAllEncodedQueryParameters(param0: string): okhttp3.HttpUrl.Builder;
			public setEncodedPathSegment(param0: number, param1: string): okhttp3.HttpUrl.Builder;
			public constructor();
			public encodedUsername(param0: string): okhttp3.HttpUrl.Builder;
			public password(param0: string): okhttp3.HttpUrl.Builder;
			public port(param0: number): okhttp3.HttpUrl.Builder;
			public toString(): string;
			public addQueryParameter(param0: string, param1: string): okhttp3.HttpUrl.Builder;
			public addEncodedQueryParameter(param0: string, param1: string): okhttp3.HttpUrl.Builder;
			public query(param0: string): okhttp3.HttpUrl.Builder;
			public setPathSegment(param0: number, param1: string): okhttp3.HttpUrl.Builder;
			public removeAllQueryParameters(param0: string): okhttp3.HttpUrl.Builder;
			public scheme(param0: string): okhttp3.HttpUrl.Builder;
			public removePathSegment(param0: number): okhttp3.HttpUrl.Builder;
			public fragment(param0: string): okhttp3.HttpUrl.Builder;
			public build(): okhttp3.HttpUrl;
		}
	}
}

declare module okhttp3 {
	export class Interceptor extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Interceptor>;
		/**
		 * Constructs a new instance of the okhttp3.Interceptor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			intercept(param0: okhttp3.Interceptor.Chain): okhttp3.Response;
		});
		public constructor();
		public intercept(param0: okhttp3.Interceptor.Chain): okhttp3.Response;
	}
	export module Interceptor {
		export class Chain extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.Interceptor.Chain>;
			/**
			 * Constructs a new instance of the okhttp3.Interceptor$Chain interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				request(): okhttp3.Request;
				proceed(param0: okhttp3.Request): okhttp3.Response;
				connection(): okhttp3.Connection;
				call(): okhttp3.Call;
				connectTimeoutMillis(): number;
				withConnectTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.Interceptor.Chain;
				readTimeoutMillis(): number;
				withReadTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.Interceptor.Chain;
				writeTimeoutMillis(): number;
				withWriteTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.Interceptor.Chain;
			});
			public constructor();
			public request(): okhttp3.Request;
			public withConnectTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.Interceptor.Chain;
			public call(): okhttp3.Call;
			public withWriteTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.Interceptor.Chain;
			public readTimeoutMillis(): number;
			public withReadTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.Interceptor.Chain;
			public proceed(param0: okhttp3.Request): okhttp3.Response;
			public connection(): okhttp3.Connection;
			public connectTimeoutMillis(): number;
			public writeTimeoutMillis(): number;
		}
	}
}

declare module okhttp3 {
	export class MediaType extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.MediaType>;
		public type(): string;
		public charset(): java.nio.charset.Charset;
		public equals(param0: any): boolean;
		public subtype(): string;
		public static get(param0: string): okhttp3.MediaType;
		public charset(param0: java.nio.charset.Charset): java.nio.charset.Charset;
		public hashCode(): number;
		public static parse(param0: string): okhttp3.MediaType;
		public toString(): string;
	}
}

declare module okhttp3 {
	export class MultipartBody extends okhttp3.RequestBody {
		public static class: java.lang.Class<okhttp3.MultipartBody>;
		public static MIXED: okhttp3.MediaType;
		public static ALTERNATIVE: okhttp3.MediaType;
		public static DIGEST: okhttp3.MediaType;
		public static PARALLEL: okhttp3.MediaType;
		public static FORM: okhttp3.MediaType;
		public boundary(): string;
		public size(): number;
		public parts(): java.util.List<okhttp3.MultipartBody.Part>;
		public type(): okhttp3.MediaType;
		public contentType(): okhttp3.MediaType;
		public writeTo(param0: okio.BufferedSink): void;
		public part(param0: number): okhttp3.MultipartBody.Part;
		public contentLength(): number;
	}
	export module MultipartBody {
		export class Builder extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.MultipartBody.Builder>;
			public setType(param0: okhttp3.MediaType): okhttp3.MultipartBody.Builder;
			public addPart(param0: okhttp3.MultipartBody.Part): okhttp3.MultipartBody.Builder;
			public build(): okhttp3.MultipartBody;
			public addPart(param0: okhttp3.Headers, param1: okhttp3.RequestBody): okhttp3.MultipartBody.Builder;
			public addPart(param0: okhttp3.RequestBody): okhttp3.MultipartBody.Builder;
			public constructor();
			public addFormDataPart(param0: string, param1: string): okhttp3.MultipartBody.Builder;
			public addFormDataPart(param0: string, param1: string, param2: okhttp3.RequestBody): okhttp3.MultipartBody.Builder;
			public constructor(param0: string);
		}
		export class Part extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.MultipartBody.Part>;
			public headers(): okhttp3.Headers;
			public static create(param0: okhttp3.Headers, param1: okhttp3.RequestBody): okhttp3.MultipartBody.Part;
			public static createFormData(param0: string, param1: string, param2: okhttp3.RequestBody): okhttp3.MultipartBody.Part;
			public static create(param0: okhttp3.RequestBody): okhttp3.MultipartBody.Part;
			public static createFormData(param0: string, param1: string): okhttp3.MultipartBody.Part;
			public body(): okhttp3.RequestBody;
		}
	}
}

declare module okhttp3 {
	export class OkHttpClient extends java.lang.Object implements java.lang.Cloneable, okhttp3.Call.Factory, okhttp3.WebSocket.Factory {
		public static class: java.lang.Class<okhttp3.OkHttpClient>;
		public proxy(): java.net.Proxy;
		public sslSocketFactory(): javax.net.ssl.SSLSocketFactory;
		public connectionPool(): okhttp3.ConnectionPool;
		public cache(): okhttp3.Cache;
		public certificatePinner(): okhttp3.CertificatePinner;
		public dispatcher(): okhttp3.Dispatcher;
		public protocols(): java.util.List<okhttp3.Protocol>;
		public dns(): okhttp3.Dns;
		public proxyAuthenticator(): okhttp3.Authenticator;
		public callTimeoutMillis(): number;
		public hostnameVerifier(): javax.net.ssl.HostnameVerifier;
		public connectTimeoutMillis(): number;
		public pingIntervalMillis(): number;
		public cookieJar(): okhttp3.CookieJar;
		public connectionSpecs(): java.util.List<okhttp3.ConnectionSpec>;
		public newBuilder(): okhttp3.OkHttpClient.Builder;
		public constructor();
		public proxySelector(): java.net.ProxySelector;
		public readTimeoutMillis(): number;
		public authenticator(): okhttp3.Authenticator;
		public followRedirects(): boolean;
		public interceptors(): java.util.List<okhttp3.Interceptor>;
		public writeTimeoutMillis(): number;
		public newWebSocket(param0: okhttp3.Request, param1: okhttp3.WebSocketListener): okhttp3.WebSocket;
		public followSslRedirects(): boolean;
		public socketFactory(): javax.net.SocketFactory;
		public retryOnConnectionFailure(): boolean;
		public networkInterceptors(): java.util.List<okhttp3.Interceptor>;
		public eventListenerFactory(): okhttp3.EventListener.Factory;
		public newCall(param0: okhttp3.Request): okhttp3.Call;
	}
	export module OkHttpClient {
		export class Builder extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.OkHttpClient.Builder>;
			public protocols(param0: java.util.List<okhttp3.Protocol>): okhttp3.OkHttpClient.Builder;
			public addInterceptor(param0: okhttp3.Interceptor): okhttp3.OkHttpClient.Builder;
			public connectionPool(param0: okhttp3.ConnectionPool): okhttp3.OkHttpClient.Builder;
			public interceptors(): java.util.List<okhttp3.Interceptor>;
			public readTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.OkHttpClient.Builder;
			public callTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.OkHttpClient.Builder;
			public dns(param0: okhttp3.Dns): okhttp3.OkHttpClient.Builder;
			public writeTimeout(param0: java.time.Duration): okhttp3.OkHttpClient.Builder;
			public readTimeout(param0: java.time.Duration): okhttp3.OkHttpClient.Builder;
			public pingInterval(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.OkHttpClient.Builder;
			public eventListenerFactory(param0: okhttp3.EventListener.Factory): okhttp3.OkHttpClient.Builder;
			public connectionSpecs(param0: java.util.List<okhttp3.ConnectionSpec>): okhttp3.OkHttpClient.Builder;
			public build(): okhttp3.OkHttpClient;
			public eventListener(param0: okhttp3.EventListener): okhttp3.OkHttpClient.Builder;
			public proxyAuthenticator(param0: okhttp3.Authenticator): okhttp3.OkHttpClient.Builder;
			public followRedirects(param0: boolean): okhttp3.OkHttpClient.Builder;
			public networkInterceptors(): java.util.List<okhttp3.Interceptor>;
			public cache(param0: okhttp3.Cache): okhttp3.OkHttpClient.Builder;
			public sslSocketFactory(param0: javax.net.ssl.SSLSocketFactory, param1: javax.net.ssl.X509TrustManager): okhttp3.OkHttpClient.Builder;
			public callTimeout(param0: java.time.Duration): okhttp3.OkHttpClient.Builder;
			public cookieJar(param0: okhttp3.CookieJar): okhttp3.OkHttpClient.Builder;
			public connectTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.OkHttpClient.Builder;
			public pingInterval(param0: java.time.Duration): okhttp3.OkHttpClient.Builder;
			public followSslRedirects(param0: boolean): okhttp3.OkHttpClient.Builder;
			public constructor();
			public connectTimeout(param0: java.time.Duration): okhttp3.OkHttpClient.Builder;
			public dispatcher(param0: okhttp3.Dispatcher): okhttp3.OkHttpClient.Builder;
			public proxySelector(param0: java.net.ProxySelector): okhttp3.OkHttpClient.Builder;
			public socketFactory(param0: javax.net.SocketFactory): okhttp3.OkHttpClient.Builder;
			public retryOnConnectionFailure(param0: boolean): okhttp3.OkHttpClient.Builder;
			public writeTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.OkHttpClient.Builder;
			public addNetworkInterceptor(param0: okhttp3.Interceptor): okhttp3.OkHttpClient.Builder;
			public hostnameVerifier(param0: javax.net.ssl.HostnameVerifier): okhttp3.OkHttpClient.Builder;
			public authenticator(param0: okhttp3.Authenticator): okhttp3.OkHttpClient.Builder;
			public proxy(param0: java.net.Proxy): okhttp3.OkHttpClient.Builder;
			/** @deprecated */
			public sslSocketFactory(param0: javax.net.ssl.SSLSocketFactory): okhttp3.OkHttpClient.Builder;
			public certificatePinner(param0: okhttp3.CertificatePinner): okhttp3.OkHttpClient.Builder;
		}
	}
}

declare module okhttp3 {
	export class Protocol {
		public static class: java.lang.Class<okhttp3.Protocol>;
		public static HTTP_1_0: okhttp3.Protocol;
		public static HTTP_1_1: okhttp3.Protocol;
		public static SPDY_3: okhttp3.Protocol;
		public static HTTP_2: okhttp3.Protocol;
		public static H2_PRIOR_KNOWLEDGE: okhttp3.Protocol;
		public static QUIC: okhttp3.Protocol;
		public static valueOf(param0: string): okhttp3.Protocol;
		public static get(param0: string): okhttp3.Protocol;
		public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
		public static values(): native.Array<okhttp3.Protocol>;
		public toString(): string;
	}
}

declare module okhttp3 {
	export class RealCall extends java.lang.Object implements okhttp3.Call {
		public static class: java.lang.Class<okhttp3.RealCall>;
		public clone(): okhttp3.RealCall;
		public isExecuted(): boolean;
		public clone(): okhttp3.Call;
		public request(): okhttp3.Request;
		public execute(): okhttp3.Response;
		public isCanceled(): boolean;
		public clone(): any;
		public enqueue(param0: okhttp3.Callback): void;
		public cancel(): void;
		public timeout(): okio.Timeout;
	}
	export module RealCall {
		export class AsyncCall extends okhttp3.internal.NamedRunnable {
			public static class: java.lang.Class<okhttp3.RealCall.AsyncCall>;
			public execute(): void;
			public run(): void;
		}
	}
}

declare module okhttp3 {
	export class Request extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Request>;
		public header(param0: string): string;
		public headers(): okhttp3.Headers;
		public tag(): any;
		public newBuilder(): okhttp3.Request.Builder;
		public headers(param0: string): java.util.List<string>;
		public url(): okhttp3.HttpUrl;
		public tag(param0: java.lang.Class<any>): any;
		public cacheControl(): okhttp3.CacheControl;
		public method(): string;
		public toString(): string;
		public body(): okhttp3.RequestBody;
		public isHttps(): boolean;
	}
	export module Request {
		export class Builder extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.Request.Builder>;
			public tag(param0: java.lang.Class<any>, param1: any): okhttp3.Request.Builder;
			public url(param0: okhttp3.HttpUrl): okhttp3.Request.Builder;
			public tag(param0: any): okhttp3.Request.Builder;
			public url(param0: java.net.URL): okhttp3.Request.Builder;
			public header(param0: string, param1: string): okhttp3.Request.Builder;
			public headers(param0: okhttp3.Headers): okhttp3.Request.Builder;
			public put(param0: okhttp3.RequestBody): okhttp3.Request.Builder;
			public delete(): okhttp3.Request.Builder;
			public get(): okhttp3.Request.Builder;
			public constructor();
			public addHeader(param0: string, param1: string): okhttp3.Request.Builder;
			public post(param0: okhttp3.RequestBody): okhttp3.Request.Builder;
			public delete(param0: okhttp3.RequestBody): okhttp3.Request.Builder;
			public patch(param0: okhttp3.RequestBody): okhttp3.Request.Builder;
			public build(): okhttp3.Request;
			public method(param0: string, param1: okhttp3.RequestBody): okhttp3.Request.Builder;
			public url(param0: string): okhttp3.Request.Builder;
			public removeHeader(param0: string): okhttp3.Request.Builder;
			public cacheControl(param0: okhttp3.CacheControl): okhttp3.Request.Builder;
			public head(): okhttp3.Request.Builder;
		}
	}
}

declare module okhttp3 {
	export abstract class RequestBody extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.RequestBody>;
		public constructor();
		public static create(param0: okhttp3.MediaType, param1: okio.ByteString): okhttp3.RequestBody;
		public static create(param0: okhttp3.MediaType, param1: java.io.File): okhttp3.RequestBody;
		public isOneShot(): boolean;
		public static create(param0: okhttp3.MediaType, param1: string): okhttp3.RequestBody;
		public contentType(): okhttp3.MediaType;
		public writeTo(param0: okio.BufferedSink): void;
		public static create(param0: okhttp3.MediaType, param1: native.Array<number>): okhttp3.RequestBody;
		public contentLength(): number;
		public isDuplex(): boolean;
		public static create(param0: okhttp3.MediaType, param1: native.Array<number>, param2: number, param3: number): okhttp3.RequestBody;
	}
}

declare module okhttp3 {
	export class Response extends java.lang.Object implements java.io.Closeable {
		public static class: java.lang.Class<okhttp3.Response>;
		public headers(): okhttp3.Headers;
		public priorResponse(): okhttp3.Response;
		public close(): void;
		public cacheResponse(): okhttp3.Response;
		public sentRequestAtMillis(): number;
		public cacheControl(): okhttp3.CacheControl;
		public toString(): string;
		public handshake(): okhttp3.Handshake;
		public peekBody(param0: number): okhttp3.ResponseBody;
		public isSuccessful(): boolean;
		public header(param0: string): string;
		public header(param0: string, param1: string): string;
		public body(): okhttp3.ResponseBody;
		public networkResponse(): okhttp3.Response;
		public trailers(): okhttp3.Headers;
		public headers(param0: string): java.util.List<string>;
		public newBuilder(): okhttp3.Response.Builder;
		public request(): okhttp3.Request;
		public code(): number;
		public protocol(): okhttp3.Protocol;
		public message(): string;
		public challenges(): java.util.List<okhttp3.Challenge>;
		public receivedResponseAtMillis(): number;
		public isRedirect(): boolean;
	}
	export module Response {
		export class Builder extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.Response.Builder>;
			public cacheResponse(param0: okhttp3.Response): okhttp3.Response.Builder;
			public body(param0: okhttp3.ResponseBody): okhttp3.Response.Builder;
			public message(param0: string): okhttp3.Response.Builder;
			public request(param0: okhttp3.Request): okhttp3.Response.Builder;
			public header(param0: string, param1: string): okhttp3.Response.Builder;
			public headers(param0: okhttp3.Headers): okhttp3.Response.Builder;
			public sentRequestAtMillis(param0: number): okhttp3.Response.Builder;
			public priorResponse(param0: okhttp3.Response): okhttp3.Response.Builder;
			public networkResponse(param0: okhttp3.Response): okhttp3.Response.Builder;
			public constructor();
			public removeHeader(param0: string): okhttp3.Response.Builder;
			public handshake(param0: okhttp3.Handshake): okhttp3.Response.Builder;
			public addHeader(param0: string, param1: string): okhttp3.Response.Builder;
			public code(param0: number): okhttp3.Response.Builder;
			public build(): okhttp3.Response;
			public protocol(param0: okhttp3.Protocol): okhttp3.Response.Builder;
			public receivedResponseAtMillis(param0: number): okhttp3.Response.Builder;
		}
	}
}

declare module okhttp3 {
	export abstract class ResponseBody extends java.lang.Object implements java.io.Closeable {
		public static class: java.lang.Class<okhttp3.ResponseBody>;
		public constructor();
		public byteStream(): java.io.InputStream;
		public bytes(): native.Array<number>;
		public static create(param0: okhttp3.MediaType, param1: native.Array<number>): okhttp3.ResponseBody;
		public static create(param0: okhttp3.MediaType, param1: number, param2: okio.BufferedSource): okhttp3.ResponseBody;
		public close(): void;
		public source(): okio.BufferedSource;
		public static create(param0: okhttp3.MediaType, param1: okio.ByteString): okhttp3.ResponseBody;
		public static create(param0: okhttp3.MediaType, param1: string): okhttp3.ResponseBody;
		public charStream(): java.io.Reader;
		public contentType(): okhttp3.MediaType;
		public string(): string;
		public contentLength(): number;
	}
	export module ResponseBody {
		export class BomAwareReader extends java.io.Reader {
			public static class: java.lang.Class<okhttp3.ResponseBody.BomAwareReader>;
			public read(param0: native.Array<string>): number;
			public read(param0: java.nio.CharBuffer): number;
			public read(param0: native.Array<string>, param1: number, param2: number): number;
			public close(): void;
			public read(): number;
		}
	}
}

declare module okhttp3 {
	export class Route extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.Route>;
		public proxy(): java.net.Proxy;
		public constructor(param0: okhttp3.Address, param1: java.net.Proxy, param2: java.net.InetSocketAddress);
		public equals(param0: any): boolean;
		public address(): okhttp3.Address;
		public hashCode(): number;
		public toString(): string;
		public requiresTunnel(): boolean;
		public socketAddress(): java.net.InetSocketAddress;
	}
}

declare module okhttp3 {
	export class TlsVersion {
		public static class: java.lang.Class<okhttp3.TlsVersion>;
		public static TLS_1_3: okhttp3.TlsVersion;
		public static TLS_1_2: okhttp3.TlsVersion;
		public static TLS_1_1: okhttp3.TlsVersion;
		public static TLS_1_0: okhttp3.TlsVersion;
		public static SSL_3_0: okhttp3.TlsVersion;
		public javaName(): string;
		public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
		public static values(): native.Array<okhttp3.TlsVersion>;
		public static valueOf(param0: string): okhttp3.TlsVersion;
		public static forJavaName(param0: string): okhttp3.TlsVersion;
	}
}

declare module okhttp3 {
	export class WebSocket extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.WebSocket>;
		/**
		 * Constructs a new instance of the okhttp3.WebSocket interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			request(): okhttp3.Request;
			queueSize(): number;
			send(param0: string): boolean;
			send(param0: okio.ByteString): boolean;
			close(param0: number, param1: string): boolean;
			cancel(): void;
		});
		public constructor();
		public send(param0: string): boolean;
		public send(param0: okio.ByteString): boolean;
		public close(param0: number, param1: string): boolean;
		public request(): okhttp3.Request;
		public queueSize(): number;
		public cancel(): void;
	}
	export module WebSocket {
		export class Factory extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.WebSocket.Factory>;
			/**
			 * Constructs a new instance of the okhttp3.WebSocket$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
			 */
			public constructor(implementation: {
				newWebSocket(param0: okhttp3.Request, param1: okhttp3.WebSocketListener): okhttp3.WebSocket;
			});
			public constructor();
			public newWebSocket(param0: okhttp3.Request, param1: okhttp3.WebSocketListener): okhttp3.WebSocket;
		}
	}
}

declare module okhttp3 {
	export abstract class WebSocketListener extends java.lang.Object {
		public static class: java.lang.Class<okhttp3.WebSocketListener>;
		public constructor();
		public onClosed(param0: okhttp3.WebSocket, param1: number, param2: string): void;
		public onMessage(param0: okhttp3.WebSocket, param1: okio.ByteString): void;
		public onFailure(param0: okhttp3.WebSocket, param1: java.lang.Throwable, param2: okhttp3.Response): void;
		public onOpen(param0: okhttp3.WebSocket, param1: okhttp3.Response): void;
		public onClosing(param0: okhttp3.WebSocket, param1: number, param2: string): void;
		public onMessage(param0: okhttp3.WebSocket, param1: string): void;
	}
}

declare module okhttp3 {
	export module internal {
		export abstract class Internal extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.internal.Internal>;
			public static instance: okhttp3.internal.Internal;
			public code(param0: okhttp3.Response.Builder): number;
			public addLenient(param0: okhttp3.Headers.Builder, param1: string): void;
			public initExchange(param0: okhttp3.Response.Builder, param1: okhttp3.internal.connection.Exchange): void;
			public static initializeInstanceForTests(): void;
			public addLenient(param0: okhttp3.Headers.Builder, param1: string, param2: string): void;
			public realConnectionPool(param0: okhttp3.ConnectionPool): okhttp3.internal.connection.RealConnectionPool;
			public equalsNonHost(param0: okhttp3.Address, param1: okhttp3.Address): boolean;
			public exchange(param0: okhttp3.Response): okhttp3.internal.connection.Exchange;
			public newWebSocketCall(param0: okhttp3.OkHttpClient, param1: okhttp3.Request): okhttp3.Call;
			public constructor();
			public apply(param0: okhttp3.ConnectionSpec, param1: javax.net.ssl.SSLSocket, param2: boolean): void;
		}
	}
}

declare module okhttp3 {
	export module internal {
		export abstract class NamedRunnable extends java.lang.Object implements java.lang.Runnable {
			public static class: java.lang.Class<okhttp3.internal.NamedRunnable>;
			public name: string;
			public execute(): void;
			public constructor(param0: string, param1: native.Array<any>);
			public run(): void;
		}
	}
}

declare module okhttp3 {
	export module internal {
		export class Util extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.internal.Util>;
			public static EMPTY_BYTE_ARRAY: native.Array<number>;
			public static EMPTY_STRING_ARRAY: native.Array<string>;
			public static EMPTY_HEADERS: okhttp3.Headers;
			public static EMPTY_RESPONSE: okhttp3.ResponseBody;
			public static EMPTY_REQUEST: okhttp3.RequestBody;
			public static UTC: java.util.TimeZone;
			public static NATURAL_ORDER: java.util.Comparator<string>;
			public static checkOffsetAndCount(param0: number, param1: number, param2: number): void;
			public static verifyAsIpAddress(param0: string): boolean;
			public static bomAwareCharset(param0: okio.BufferedSource, param1: java.nio.charset.Charset): java.nio.charset.Charset;
			public static platformTrustManager(): javax.net.ssl.X509TrustManager;
			public static immutableMap(param0: java.util.Map<any, any>): java.util.Map<any, any>;
			public static indexOf(param0: java.util.Comparator<string>, param1: native.Array<string>, param2: string): number;
			public static format(param0: string, param1: native.Array<any>): string;
			public static decodeHexDigit(param0: string): number;
			public static indexOfControlOrNonAscii(param0: string): number;
			public static toHeaderBlock(param0: okhttp3.Headers): java.util.List<okhttp3.internal.http2.Header>;
			public static immutableList(param0: native.Array<any>): java.util.List<any>;
			public static delimiterOffset(param0: string, param1: number, param2: number, param3: string): number;
			public static closeQuietly(param0: java.io.Closeable): void;
			public static hostHeader(param0: okhttp3.HttpUrl, param1: boolean): string;
			public static trimSubstring(param0: string, param1: number, param2: number): string;
			public static closeQuietly(param0: java.net.Socket): void;
			public static skipTrailingAsciiWhitespace(param0: string, param1: number, param2: number): number;
			public static checkDuration(param0: string, param1: number, param2: java.util.concurrent.TimeUnit): number;
			public static intersect(param0: java.util.Comparator<any>, param1: native.Array<string>, param2: native.Array<string>): native.Array<string>;
			public static sameConnection(param0: okhttp3.HttpUrl, param1: okhttp3.HttpUrl): boolean;
			public static canonicalizeHost(param0: string): string;
			public static toHeaders(param0: java.util.List<okhttp3.internal.http2.Header>): okhttp3.Headers;
			public static getSystemProperty(param0: string, param1: string): string;
			public static concat(param0: native.Array<string>, param1: string): native.Array<string>;
			public static addSuppressedIfPossible(param0: java.lang.Throwable, param1: java.lang.Throwable): void;
			public static nonEmptyIntersection(param0: java.util.Comparator<string>, param1: native.Array<string>, param2: native.Array<string>): boolean;
			public static closeQuietly(param0: java.net.ServerSocket): void;
			public static discard(param0: okio.Source, param1: number, param2: java.util.concurrent.TimeUnit): boolean;
			public static threadFactory(param0: string, param1: boolean): java.util.concurrent.ThreadFactory;
			public static skipLeadingAsciiWhitespace(param0: string, param1: number, param2: number): number;
			public static isAndroidGetsocknameError(param0: java.lang.AssertionError): boolean;
			public static skipAll(param0: okio.Source, param1: number, param2: java.util.concurrent.TimeUnit): boolean;
			public static immutableList(param0: java.util.List<any>): java.util.List<any>;
		}
	}
}

declare module okhttp3 {
	export module internal {
		export class Version extends java.lang.Object {
			public static class: java.lang.Class<okhttp3.internal.Version>;
			public static userAgent(): string;
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module annotations {
			export class EverythingIsNonNull extends java.lang.Object implements java.lang.annotation.Annotation {
				public static class: java.lang.Class<okhttp3.internal.annotations.EverythingIsNonNull>;
				/**
				 * Constructs a new instance of the okhttp3.internal.annotations.EverythingIsNonNull interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					equals(param0: any): boolean;
					hashCode(): number;
					toString(): string;
					annotationType(): java.lang.Class<any>;
				});
				public constructor();
				public hashCode(): number;
				public equals(param0: any): boolean;
				public annotationType(): java.lang.Class<any>;
				public toString(): string;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module cache {
			export class CacheInterceptor extends java.lang.Object implements okhttp3.Interceptor {
				public static class: java.lang.Class<okhttp3.internal.cache.CacheInterceptor>;
				public intercept(param0: okhttp3.Interceptor.Chain): okhttp3.Response;
				public constructor(param0: okhttp3.internal.cache.InternalCache);
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module cache {
			export class CacheRequest extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.cache.CacheRequest>;
				/**
				 * Constructs a new instance of the okhttp3.internal.cache.CacheRequest interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					body(): okio.Sink;
					abort(): void;
				});
				public constructor();
				public abort(): void;
				public body(): okio.Sink;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module cache {
			export class CacheStrategy extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.cache.CacheStrategy>;
				public networkRequest: okhttp3.Request;
				public cacheResponse: okhttp3.Response;
				public static isCacheable(param0: okhttp3.Response, param1: okhttp3.Request): boolean;
			}
			export module CacheStrategy {
				export class Factory extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.cache.CacheStrategy.Factory>;
					public constructor(param0: number, param1: okhttp3.Request, param2: okhttp3.Response);
					public get(): okhttp3.internal.cache.CacheStrategy;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module cache {
			export class DiskLruCache extends java.lang.Object implements java.io.Closeable, java.io.Flushable {
				public static class: java.lang.Class<okhttp3.internal.cache.DiskLruCache>;
				public remove(param0: string): boolean;
				public close(): void;
				public snapshots(): java.util.Iterator<okhttp3.internal.cache.DiskLruCache.Snapshot>;
				public isClosed(): boolean;
				public getDirectory(): java.io.File;
				public static create(param0: okhttp3.internal.io.FileSystem, param1: java.io.File, param2: number, param3: number, param4: number): okhttp3.internal.cache.DiskLruCache;
				public get(param0: string): okhttp3.internal.cache.DiskLruCache.Snapshot;
				public size(): number;
				public flush(): void;
				public setMaxSize(param0: number): void;
				public edit(param0: string): okhttp3.internal.cache.DiskLruCache.Editor;
				public initialize(): void;
				public delete(): void;
				public getMaxSize(): number;
				public evictAll(): void;
			}
			export module DiskLruCache {
				export class Editor extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.cache.DiskLruCache.Editor>;
					public newSource(param0: number): okio.Source;
					public commit(): void;
					public newSink(param0: number): okio.Sink;
					public abortUnlessCommitted(): void;
					public abort(): void;
				}
				export class Entry extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.cache.DiskLruCache.Entry>;
				}
				export class Snapshot extends java.lang.Object implements java.io.Closeable {
					public static class: java.lang.Class<okhttp3.internal.cache.DiskLruCache.Snapshot>;
					public close(): void;
					public key(): string;
					public getLength(param0: number): number;
					public edit(): okhttp3.internal.cache.DiskLruCache.Editor;
					public getSource(param0: number): okio.Source;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module cache {
			export class FaultHidingSink extends okio.ForwardingSink {
				public static class: java.lang.Class<okhttp3.internal.cache.FaultHidingSink>;
				public close(): void;
				public timeout(): okio.Timeout;
				public write(param0: okio.Buffer, param1: number): void;
				public flush(): void;
				public onException(param0: java.io.IOException): void;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module cache {
			export class InternalCache extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.cache.InternalCache>;
				/**
				 * Constructs a new instance of the okhttp3.internal.cache.InternalCache interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					get(param0: okhttp3.Request): okhttp3.Response;
					put(param0: okhttp3.Response): okhttp3.internal.cache.CacheRequest;
					remove(param0: okhttp3.Request): void;
					update(param0: okhttp3.Response, param1: okhttp3.Response): void;
					trackConditionalCacheHit(): void;
					trackResponse(param0: okhttp3.internal.cache.CacheStrategy): void;
				});
				public constructor();
				public put(param0: okhttp3.Response): okhttp3.internal.cache.CacheRequest;
				public get(param0: okhttp3.Request): okhttp3.Response;
				public remove(param0: okhttp3.Request): void;
				public update(param0: okhttp3.Response, param1: okhttp3.Response): void;
				public trackConditionalCacheHit(): void;
				public trackResponse(param0: okhttp3.internal.cache.CacheStrategy): void;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module cache2 {
			export class FileOperator extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.cache2.FileOperator>;
				public write(param0: number, param1: okio.Buffer, param2: number): void;
				public read(param0: number, param1: okio.Buffer, param2: number): void;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module cache2 {
			export class Relay extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.cache2.Relay>;
				public newSource(): okio.Source;
				public metadata(): okio.ByteString;
				public static edit(param0: java.io.File, param1: okio.Source, param2: okio.ByteString, param3: number): okhttp3.internal.cache2.Relay;
				public static read(param0: java.io.File): okhttp3.internal.cache2.Relay;
			}
			export module Relay {
				export class RelaySource extends java.lang.Object implements okio.Source {
					public static class: java.lang.Class<okhttp3.internal.cache2.Relay.RelaySource>;
					public close(): void;
					public timeout(): okio.Timeout;
					public read(param0: okio.Buffer, param1: number): number;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module connection {
			export class ConnectInterceptor extends java.lang.Object implements okhttp3.Interceptor {
				public static class: java.lang.Class<okhttp3.internal.connection.ConnectInterceptor>;
				public client: okhttp3.OkHttpClient;
				public constructor(param0: okhttp3.OkHttpClient);
				public intercept(param0: okhttp3.Interceptor.Chain): okhttp3.Response;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module connection {
			export class ConnectionSpecSelector extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.connection.ConnectionSpecSelector>;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module connection {
			export class Exchange extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.connection.Exchange>;
				public finishRequest(): void;
				public trailers(): okhttp3.Headers;
				public timeoutEarlyExit(): void;
				public readResponseHeaders(param0: boolean): okhttp3.Response.Builder;
				public newWebSocketStreams(): okhttp3.internal.ws.RealWebSocket.Streams;
				public writeRequestHeaders(param0: okhttp3.Request): void;
				public responseHeadersStart(): void;
				public noRequestBody(): void;
				public detachWithViolence(): void;
				public openResponseBody(param0: okhttp3.Response): okhttp3.ResponseBody;
				public isDuplex(): boolean;
				public constructor(param0: okhttp3.internal.connection.Transmitter, param1: okhttp3.Call, param2: okhttp3.EventListener, param3: okhttp3.internal.connection.ExchangeFinder, param4: okhttp3.internal.http.ExchangeCodec);
				public responseHeadersEnd(param0: okhttp3.Response): void;
				public webSocketUpgradeFailed(): void;
				public createRequestBody(param0: okhttp3.Request, param1: boolean): okio.Sink;
				public cancel(): void;
				public flushRequest(): void;
				public connection(): okhttp3.internal.connection.RealConnection;
				public noNewExchangesOnConnection(): void;
			}
			export module Exchange {
				export class RequestBodySink extends okio.ForwardingSink {
					public static class: java.lang.Class<okhttp3.internal.connection.Exchange.RequestBodySink>;
					public close(): void;
					public flush(): void;
					public write(param0: okio.Buffer, param1: number): void;
					public timeout(): okio.Timeout;
				}
				export class ResponseBodySource extends okio.ForwardingSource {
					public static class: java.lang.Class<okhttp3.internal.connection.Exchange.ResponseBodySource>;
					public close(): void;
					public timeout(): okio.Timeout;
					public read(param0: okio.Buffer, param1: number): number;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module connection {
			export class ExchangeFinder extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.connection.ExchangeFinder>;
				public find(param0: okhttp3.OkHttpClient, param1: okhttp3.Interceptor.Chain, param2: boolean): okhttp3.internal.http.ExchangeCodec;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module connection {
			export class RealConnection extends okhttp3.internal.http2.Http2Connection.Listener implements okhttp3.Connection {
				public static class: java.lang.Class<okhttp3.internal.connection.RealConnection>;
				public connectionPool: okhttp3.internal.connection.RealConnectionPool;
				public constructor(param0: okhttp3.internal.connection.RealConnectionPool, param1: okhttp3.Route);
				public onSettings(param0: okhttp3.internal.http2.Http2Connection): void;
				public connect(param0: number, param1: number, param2: number, param3: number, param4: boolean, param5: okhttp3.Call, param6: okhttp3.EventListener): void;
				public protocol(): okhttp3.Protocol;
				public route(): okhttp3.Route;
				public noNewExchanges(): void;
				public toString(): string;
				public socket(): java.net.Socket;
				public onStream(param0: okhttp3.internal.http2.Http2Stream): void;
				public constructor();
				public isHealthy(param0: boolean): boolean;
				public supportsUrl(param0: okhttp3.HttpUrl): boolean;
				public cancel(): void;
				public isMultiplexed(): boolean;
				public handshake(): okhttp3.Handshake;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module connection {
			export class RealConnectionPool extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.connection.RealConnectionPool>;
				public constructor(param0: number, param1: number, param2: java.util.concurrent.TimeUnit);
				public connectionCount(): number;
				public evictAll(): void;
				public idleConnectionCount(): number;
				public connectFailed(param0: okhttp3.Route, param1: java.io.IOException): void;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module connection {
			export class RouteDatabase extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.connection.RouteDatabase>;
				public shouldPostpone(param0: okhttp3.Route): boolean;
				public connected(param0: okhttp3.Route): void;
				public failed(param0: okhttp3.Route): void;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module connection {
			export class RouteException extends java.lang.RuntimeException {
				public static class: java.lang.Class<okhttp3.internal.connection.RouteException>;
				public getLastConnectException(): java.io.IOException;
				public getFirstConnectException(): java.io.IOException;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module connection {
			export class RouteSelector extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.connection.RouteSelector>;
				public next(): okhttp3.internal.connection.RouteSelector.Selection;
				public hasNext(): boolean;
			}
			export module RouteSelector {
				export class Selection extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.connection.RouteSelector.Selection>;
					public getAll(): java.util.List<okhttp3.Route>;
					public next(): okhttp3.Route;
					public hasNext(): boolean;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module connection {
			export class Transmitter extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.connection.Transmitter>;
				public connection: okhttp3.internal.connection.RealConnection;
				public timeout(): okio.Timeout;
				public timeoutEnter(): void;
				public isCanceled(): boolean;
				public timeoutEarlyExit(): void;
				public callStart(): void;
				public exchangeDoneDueToException(): void;
				public noMoreExchanges(param0: java.io.IOException): java.io.IOException;
				public cancel(): void;
				public canRetry(): boolean;
				public prepareToConnect(param0: okhttp3.Request): void;
				public constructor(param0: okhttp3.OkHttpClient, param1: okhttp3.Call);
				public hasExchange(): boolean;
			}
			export module Transmitter {
				export class TransmitterReference extends java.lang.ref.WeakReference<okhttp3.internal.connection.Transmitter> {
					public static class: java.lang.Class<okhttp3.internal.connection.Transmitter.TransmitterReference>;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http {
			export class BridgeInterceptor extends java.lang.Object implements okhttp3.Interceptor {
				public static class: java.lang.Class<okhttp3.internal.http.BridgeInterceptor>;
				public intercept(param0: okhttp3.Interceptor.Chain): okhttp3.Response;
				public constructor(param0: okhttp3.CookieJar);
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http {
			export class CallServerInterceptor extends java.lang.Object implements okhttp3.Interceptor {
				public static class: java.lang.Class<okhttp3.internal.http.CallServerInterceptor>;
				public intercept(param0: okhttp3.Interceptor.Chain): okhttp3.Response;
				public constructor(param0: boolean);
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http {
			export class ExchangeCodec extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http.ExchangeCodec>;
				/**
				 * Constructs a new instance of the okhttp3.internal.http.ExchangeCodec interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					connection(): okhttp3.internal.connection.RealConnection;
					createRequestBody(param0: okhttp3.Request, param1: number): okio.Sink;
					writeRequestHeaders(param0: okhttp3.Request): void;
					flushRequest(): void;
					finishRequest(): void;
					readResponseHeaders(param0: boolean): okhttp3.Response.Builder;
					reportedContentLength(param0: okhttp3.Response): number;
					openResponseBodySource(param0: okhttp3.Response): okio.Source;
					trailers(): okhttp3.Headers;
					cancel(): void;
				});
				public constructor();
				public static DISCARD_STREAM_TIMEOUT_MILLIS: number;
				public finishRequest(): void;
				public trailers(): okhttp3.Headers;
				public reportedContentLength(param0: okhttp3.Response): number;
				public openResponseBodySource(param0: okhttp3.Response): okio.Source;
				public readResponseHeaders(param0: boolean): okhttp3.Response.Builder;
				public cancel(): void;
				public flushRequest(): void;
				public connection(): okhttp3.internal.connection.RealConnection;
				public createRequestBody(param0: okhttp3.Request, param1: number): okio.Sink;
				public writeRequestHeaders(param0: okhttp3.Request): void;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http {
			export class HttpDate extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http.HttpDate>;
				public static MAX_DATE: number;
				public static parse(param0: string): java.util.Date;
				public static format(param0: java.util.Date): string;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http {
			export class HttpHeaders extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http.HttpHeaders>;
				public static varyHeaders(param0: okhttp3.Headers, param1: okhttp3.Headers): okhttp3.Headers;
				public static hasBody(param0: okhttp3.Response): boolean;
				public static receiveHeaders(param0: okhttp3.CookieJar, param1: okhttp3.HttpUrl, param2: okhttp3.Headers): void;
				public static varyHeaders(param0: okhttp3.Response): okhttp3.Headers;
				public static varyMatches(param0: okhttp3.Response, param1: okhttp3.Headers, param2: okhttp3.Request): boolean;
				public static skipWhitespace(param0: string, param1: number): number;
				public static hasVaryAll(param0: okhttp3.Headers): boolean;
				public static contentLength(param0: okhttp3.Response): number;
				public static hasVaryAll(param0: okhttp3.Response): boolean;
				public static skipUntil(param0: string, param1: number, param2: string): number;
				public static varyFields(param0: okhttp3.Headers): java.util.Set<string>;
				public static contentLength(param0: okhttp3.Headers): number;
				public static parseChallenges(param0: okhttp3.Headers, param1: string): java.util.List<okhttp3.Challenge>;
				public static parseSeconds(param0: string, param1: number): number;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http {
			export class HttpMethod extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http.HttpMethod>;
				public static invalidatesCache(param0: string): boolean;
				public static requiresRequestBody(param0: string): boolean;
				public static permitsRequestBody(param0: string): boolean;
				public static redirectsWithBody(param0: string): boolean;
				public static redirectsToGet(param0: string): boolean;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http {
			export class RealInterceptorChain extends java.lang.Object implements okhttp3.Interceptor.Chain {
				public static class: java.lang.Class<okhttp3.internal.http.RealInterceptorChain>;
				public exchange(): okhttp3.internal.connection.Exchange;
				public request(): okhttp3.Request;
				public transmitter(): okhttp3.internal.connection.Transmitter;
				public connectTimeoutMillis(): number;
				public proceed(param0: okhttp3.Request, param1: okhttp3.internal.connection.Transmitter, param2: okhttp3.internal.connection.Exchange): okhttp3.Response;
				public withWriteTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.Interceptor.Chain;
				public constructor(param0: java.util.List<okhttp3.Interceptor>, param1: okhttp3.internal.connection.Transmitter, param2: okhttp3.internal.connection.Exchange, param3: number, param4: okhttp3.Request, param5: okhttp3.Call, param6: number, param7: number, param8: number);
				public connection(): okhttp3.Connection;
				public writeTimeoutMillis(): number;
				public readTimeoutMillis(): number;
				public call(): okhttp3.Call;
				public withConnectTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.Interceptor.Chain;
				public proceed(param0: okhttp3.Request): okhttp3.Response;
				public withReadTimeout(param0: number, param1: java.util.concurrent.TimeUnit): okhttp3.Interceptor.Chain;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http {
			export class RealResponseBody extends okhttp3.ResponseBody {
				public static class: java.lang.Class<okhttp3.internal.http.RealResponseBody>;
				public close(): void;
				public contentLength(): number;
				public constructor(param0: string, param1: number, param2: okio.BufferedSource);
				public source(): okio.BufferedSource;
				public contentType(): okhttp3.MediaType;
				public constructor();
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http {
			export class RequestLine extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http.RequestLine>;
				public static requestPath(param0: okhttp3.HttpUrl): string;
				public static get(param0: okhttp3.Request, param1: java.net.Proxy.Type): string;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http {
			export class RetryAndFollowUpInterceptor extends java.lang.Object implements okhttp3.Interceptor {
				public static class: java.lang.Class<okhttp3.internal.http.RetryAndFollowUpInterceptor>;
				public constructor(param0: okhttp3.OkHttpClient);
				public intercept(param0: okhttp3.Interceptor.Chain): okhttp3.Response;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http {
			export class StatusLine extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http.StatusLine>;
				public static HTTP_TEMP_REDIRECT: number;
				public static HTTP_PERM_REDIRECT: number;
				public static HTTP_CONTINUE: number;
				public protocol: okhttp3.Protocol;
				public code: number;
				public message: string;
				public constructor(param0: okhttp3.Protocol, param1: number, param2: string);
				public static parse(param0: string): okhttp3.internal.http.StatusLine;
				public toString(): string;
				public static get(param0: okhttp3.Response): okhttp3.internal.http.StatusLine;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http1 {
			export class Http1ExchangeCodec extends java.lang.Object implements okhttp3.internal.http.ExchangeCodec {
				public static class: java.lang.Class<okhttp3.internal.http1.Http1ExchangeCodec>;
				public finishRequest(): void;
				public trailers(): okhttp3.Headers;
				public openResponseBodySource(param0: okhttp3.Response): okio.Source;
				public isClosed(): boolean;
				public readResponseHeaders(param0: boolean): okhttp3.Response.Builder;
				public skipConnectBody(param0: okhttp3.Response): void;
				public writeRequestHeaders(param0: okhttp3.Request): void;
				public writeRequest(param0: okhttp3.Headers, param1: string): void;
				public reportedContentLength(param0: okhttp3.Response): number;
				public cancel(): void;
				public flushRequest(): void;
				public constructor(param0: okhttp3.OkHttpClient, param1: okhttp3.internal.connection.RealConnection, param2: okio.BufferedSource, param3: okio.BufferedSink);
				public connection(): okhttp3.internal.connection.RealConnection;
				public createRequestBody(param0: okhttp3.Request, param1: number): okio.Sink;
			}
			export module Http1ExchangeCodec {
				export abstract class AbstractSource extends java.lang.Object implements okio.Source {
					public static class: java.lang.Class<okhttp3.internal.http1.Http1ExchangeCodec.AbstractSource>;
					public closed: boolean;
					public close(): void;
					public timeout(): okio.Timeout;
					public read(param0: okio.Buffer, param1: number): number;
				}
				export class ChunkedSink extends java.lang.Object implements okio.Sink {
					public static class: java.lang.Class<okhttp3.internal.http1.Http1ExchangeCodec.ChunkedSink>;
					public close(): void;
					public flush(): void;
					public write(param0: okio.Buffer, param1: number): void;
					public timeout(): okio.Timeout;
				}
				export class ChunkedSource extends okhttp3.internal.http1.Http1ExchangeCodec.AbstractSource {
					public static class: java.lang.Class<okhttp3.internal.http1.Http1ExchangeCodec.ChunkedSource>;
					public close(): void;
					public timeout(): okio.Timeout;
					public read(param0: okio.Buffer, param1: number): number;
				}
				export class FixedLengthSource extends okhttp3.internal.http1.Http1ExchangeCodec.AbstractSource {
					public static class: java.lang.Class<okhttp3.internal.http1.Http1ExchangeCodec.FixedLengthSource>;
					public close(): void;
					public timeout(): okio.Timeout;
					public read(param0: okio.Buffer, param1: number): number;
				}
				export class KnownLengthSink extends java.lang.Object implements okio.Sink {
					public static class: java.lang.Class<okhttp3.internal.http1.Http1ExchangeCodec.KnownLengthSink>;
					public close(): void;
					public flush(): void;
					public write(param0: okio.Buffer, param1: number): void;
					public timeout(): okio.Timeout;
				}
				export class UnknownLengthSource extends okhttp3.internal.http1.Http1ExchangeCodec.AbstractSource {
					public static class: java.lang.Class<okhttp3.internal.http1.Http1ExchangeCodec.UnknownLengthSource>;
					public close(): void;
					public timeout(): okio.Timeout;
					public read(param0: okio.Buffer, param1: number): number;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class ConnectionShutdownException extends java.io.IOException {
				public static class: java.lang.Class<okhttp3.internal.http2.ConnectionShutdownException>;
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: java.lang.Throwable);
				public constructor(param0: string);
				public constructor();
				public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class ErrorCode {
				public static class: java.lang.Class<okhttp3.internal.http2.ErrorCode>;
				public static NO_ERROR: okhttp3.internal.http2.ErrorCode;
				public static PROTOCOL_ERROR: okhttp3.internal.http2.ErrorCode;
				public static INTERNAL_ERROR: okhttp3.internal.http2.ErrorCode;
				public static FLOW_CONTROL_ERROR: okhttp3.internal.http2.ErrorCode;
				public static REFUSED_STREAM: okhttp3.internal.http2.ErrorCode;
				public static CANCEL: okhttp3.internal.http2.ErrorCode;
				public static COMPRESSION_ERROR: okhttp3.internal.http2.ErrorCode;
				public static CONNECT_ERROR: okhttp3.internal.http2.ErrorCode;
				public static ENHANCE_YOUR_CALM: okhttp3.internal.http2.ErrorCode;
				public static INADEQUATE_SECURITY: okhttp3.internal.http2.ErrorCode;
				public static HTTP_1_1_REQUIRED: okhttp3.internal.http2.ErrorCode;
				public httpCode: number;
				public static valueOf(param0: string): okhttp3.internal.http2.ErrorCode;
				public static fromHttp2(param0: number): okhttp3.internal.http2.ErrorCode;
				public static values(): native.Array<okhttp3.internal.http2.ErrorCode>;
				public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class Header extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http2.Header>;
				public static PSEUDO_PREFIX: okio.ByteString;
				public static RESPONSE_STATUS_UTF8: string;
				public static TARGET_METHOD_UTF8: string;
				public static TARGET_PATH_UTF8: string;
				public static TARGET_SCHEME_UTF8: string;
				public static TARGET_AUTHORITY_UTF8: string;
				public static RESPONSE_STATUS: okio.ByteString;
				public static TARGET_METHOD: okio.ByteString;
				public static TARGET_PATH: okio.ByteString;
				public static TARGET_SCHEME: okio.ByteString;
				public static TARGET_AUTHORITY: okio.ByteString;
				public name: okio.ByteString;
				public value: okio.ByteString;
				public constructor(param0: okio.ByteString, param1: okio.ByteString);
				public hashCode(): number;
				public equals(param0: any): boolean;
				public constructor(param0: okio.ByteString, param1: string);
				public toString(): string;
				public constructor(param0: string, param1: string);
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class Hpack extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http2.Hpack>;
			}
			export module Hpack {
				export class Reader extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.http2.Hpack.Reader>;
					public getAndResetHeaderList(): java.util.List<okhttp3.internal.http2.Header>;
				}
				export class Writer extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.http2.Hpack.Writer>;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class Http2 extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http2.Http2>;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class Http2Connection extends java.lang.Object implements java.io.Closeable {
				public static class: java.lang.Class<okhttp3.internal.http2.Http2Connection>;
				public maxConcurrentStreams(): number;
				public pushStream(param0: number, param1: java.util.List<okhttp3.internal.http2.Header>, param2: boolean): okhttp3.internal.http2.Http2Stream;
				public writeData(param0: number, param1: boolean, param2: okio.Buffer, param3: number): void;
				public close(): void;
				public start(): void;
				public newStream(param0: java.util.List<okhttp3.internal.http2.Header>, param1: boolean): okhttp3.internal.http2.Http2Stream;
				public isShutdown(): boolean;
				public openStreamCount(): number;
				public shutdown(param0: okhttp3.internal.http2.ErrorCode): void;
				public setSettings(param0: okhttp3.internal.http2.Settings): void;
				public flush(): void;
			}
			export module Http2Connection {
				export class Builder extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.http2.Http2Connection.Builder>;
					public constructor(param0: boolean);
					public listener(param0: okhttp3.internal.http2.Http2Connection.Listener): okhttp3.internal.http2.Http2Connection.Builder;
					public pingIntervalMillis(param0: number): okhttp3.internal.http2.Http2Connection.Builder;
					public build(): okhttp3.internal.http2.Http2Connection;
					public socket(param0: java.net.Socket, param1: string, param2: okio.BufferedSource, param3: okio.BufferedSink): okhttp3.internal.http2.Http2Connection.Builder;
					public socket(param0: java.net.Socket): okhttp3.internal.http2.Http2Connection.Builder;
					public pushObserver(param0: okhttp3.internal.http2.PushObserver): okhttp3.internal.http2.Http2Connection.Builder;
				}
				export abstract class Listener extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.http2.Http2Connection.Listener>;
					public static REFUSE_INCOMING_STREAMS: okhttp3.internal.http2.Http2Connection.Listener;
					public onStream(param0: okhttp3.internal.http2.Http2Stream): void;
					public constructor();
					public onSettings(param0: okhttp3.internal.http2.Http2Connection): void;
				}
				export class PingRunnable extends okhttp3.internal.NamedRunnable {
					public static class: java.lang.Class<okhttp3.internal.http2.Http2Connection.PingRunnable>;
					public execute(): void;
					public run(): void;
				}
				export class ReaderRunnable extends okhttp3.internal.NamedRunnable implements okhttp3.internal.http2.Http2Reader.Handler {
					public static class: java.lang.Class<okhttp3.internal.http2.Http2Connection.ReaderRunnable>;
					public ackSettings(): void;
					public headers(param0: boolean, param1: number, param2: number, param3: java.util.List<okhttp3.internal.http2.Header>): void;
					public priority(param0: number, param1: number, param2: number, param3: boolean): void;
					public execute(): void;
					public run(): void;
					public pushPromise(param0: number, param1: number, param2: java.util.List<okhttp3.internal.http2.Header>): void;
					public settings(param0: boolean, param1: okhttp3.internal.http2.Settings): void;
					public alternateService(param0: number, param1: string, param2: okio.ByteString, param3: string, param4: number, param5: number): void;
					public data(param0: boolean, param1: number, param2: okio.BufferedSource, param3: number): void;
					public rstStream(param0: number, param1: okhttp3.internal.http2.ErrorCode): void;
					public goAway(param0: number, param1: okhttp3.internal.http2.ErrorCode, param2: okio.ByteString): void;
					public windowUpdate(param0: number, param1: number): void;
					public ping(param0: boolean, param1: number, param2: number): void;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class Http2ExchangeCodec extends java.lang.Object implements okhttp3.internal.http.ExchangeCodec {
				public static class: java.lang.Class<okhttp3.internal.http2.Http2ExchangeCodec>;
				public finishRequest(): void;
				public static readHttp2HeadersList(param0: okhttp3.Headers, param1: okhttp3.Protocol): okhttp3.Response.Builder;
				public trailers(): okhttp3.Headers;
				public openResponseBodySource(param0: okhttp3.Response): okio.Source;
				public readResponseHeaders(param0: boolean): okhttp3.Response.Builder;
				public writeRequestHeaders(param0: okhttp3.Request): void;
				public static http2HeadersList(param0: okhttp3.Request): java.util.List<okhttp3.internal.http2.Header>;
				public constructor(param0: okhttp3.OkHttpClient, param1: okhttp3.internal.connection.RealConnection, param2: okhttp3.Interceptor.Chain, param3: okhttp3.internal.http2.Http2Connection);
				public reportedContentLength(param0: okhttp3.Response): number;
				public cancel(): void;
				public flushRequest(): void;
				public connection(): okhttp3.internal.connection.RealConnection;
				public createRequestBody(param0: okhttp3.Request, param1: number): okio.Sink;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class Http2Reader extends java.lang.Object implements java.io.Closeable {
				public static class: java.lang.Class<okhttp3.internal.http2.Http2Reader>;
				public close(): void;
				public nextFrame(param0: boolean, param1: okhttp3.internal.http2.Http2Reader.Handler): boolean;
				public readConnectionPreface(param0: okhttp3.internal.http2.Http2Reader.Handler): void;
			}
			export module Http2Reader {
				export class ContinuationSource extends java.lang.Object implements okio.Source {
					public static class: java.lang.Class<okhttp3.internal.http2.Http2Reader.ContinuationSource>;
					public close(): void;
					public timeout(): okio.Timeout;
					public read(param0: okio.Buffer, param1: number): number;
				}
				export class Handler extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.http2.Http2Reader.Handler>;
					/**
					 * Constructs a new instance of the okhttp3.internal.http2.Http2Reader$Handler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						data(param0: boolean, param1: number, param2: okio.BufferedSource, param3: number): void;
						headers(param0: boolean, param1: number, param2: number, param3: java.util.List<okhttp3.internal.http2.Header>): void;
						rstStream(param0: number, param1: okhttp3.internal.http2.ErrorCode): void;
						settings(param0: boolean, param1: okhttp3.internal.http2.Settings): void;
						ackSettings(): void;
						ping(param0: boolean, param1: number, param2: number): void;
						goAway(param0: number, param1: okhttp3.internal.http2.ErrorCode, param2: okio.ByteString): void;
						windowUpdate(param0: number, param1: number): void;
						priority(param0: number, param1: number, param2: number, param3: boolean): void;
						pushPromise(param0: number, param1: number, param2: java.util.List<okhttp3.internal.http2.Header>): void;
						alternateService(param0: number, param1: string, param2: okio.ByteString, param3: string, param4: number, param5: number): void;
					});
					public constructor();
					public settings(param0: boolean, param1: okhttp3.internal.http2.Settings): void;
					public alternateService(param0: number, param1: string, param2: okio.ByteString, param3: string, param4: number, param5: number): void;
					public ackSettings(): void;
					public data(param0: boolean, param1: number, param2: okio.BufferedSource, param3: number): void;
					public headers(param0: boolean, param1: number, param2: number, param3: java.util.List<okhttp3.internal.http2.Header>): void;
					public priority(param0: number, param1: number, param2: number, param3: boolean): void;
					public pushPromise(param0: number, param1: number, param2: java.util.List<okhttp3.internal.http2.Header>): void;
					public rstStream(param0: number, param1: okhttp3.internal.http2.ErrorCode): void;
					public goAway(param0: number, param1: okhttp3.internal.http2.ErrorCode, param2: okio.ByteString): void;
					public windowUpdate(param0: number, param1: number): void;
					public ping(param0: boolean, param1: number, param2: number): void;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class Http2Stream extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http2.Http2Stream>;
				public getSource(): okio.Source;
				public closeLater(param0: okhttp3.internal.http2.ErrorCode): void;
				public enqueueTrailers(param0: okhttp3.Headers): void;
				public trailers(): okhttp3.Headers;
				public writeTimeout(): okio.Timeout;
				public writeHeaders(param0: java.util.List<okhttp3.internal.http2.Header>, param1: boolean, param2: boolean): void;
				public getId(): number;
				public getErrorCode(): okhttp3.internal.http2.ErrorCode;
				public takeHeaders(): okhttp3.Headers;
				public close(param0: okhttp3.internal.http2.ErrorCode, param1: java.io.IOException): void;
				public getConnection(): okhttp3.internal.http2.Http2Connection;
				public isOpen(): boolean;
				public readTimeout(): okio.Timeout;
				public getSink(): okio.Sink;
				public isLocallyInitiated(): boolean;
			}
			export module Http2Stream {
				export class FramingSink extends java.lang.Object implements okio.Sink {
					public static class: java.lang.Class<okhttp3.internal.http2.Http2Stream.FramingSink>;
					public close(): void;
					public flush(): void;
					public write(param0: okio.Buffer, param1: number): void;
					public timeout(): okio.Timeout;
				}
				export class FramingSource extends java.lang.Object implements okio.Source {
					public static class: java.lang.Class<okhttp3.internal.http2.Http2Stream.FramingSource>;
					public close(): void;
					public timeout(): okio.Timeout;
					public read(param0: okio.Buffer, param1: number): number;
				}
				export class StreamTimeout extends okio.AsyncTimeout {
					public static class: java.lang.Class<okhttp3.internal.http2.Http2Stream.StreamTimeout>;
					public timedOut(): void;
					public newTimeoutException(param0: java.io.IOException): java.io.IOException;
					public exitAndThrowIfTimedOut(): void;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class Http2Writer extends java.lang.Object implements java.io.Closeable {
				public static class: java.lang.Class<okhttp3.internal.http2.Http2Writer>;
				public close(): void;
				public settings(param0: okhttp3.internal.http2.Settings): void;
				public ping(param0: boolean, param1: number, param2: number): void;
				public windowUpdate(param0: number, param1: number): void;
				public frameHeader(param0: number, param1: number, param2: number, param3: number): void;
				public maxDataLength(): number;
				public goAway(param0: number, param1: okhttp3.internal.http2.ErrorCode, param2: native.Array<number>): void;
				public flush(): void;
				public connectionPreface(): void;
				public pushPromise(param0: number, param1: number, param2: java.util.List<okhttp3.internal.http2.Header>): void;
				public data(param0: boolean, param1: number, param2: okio.Buffer, param3: number): void;
				public rstStream(param0: number, param1: okhttp3.internal.http2.ErrorCode): void;
				public headers(param0: boolean, param1: number, param2: java.util.List<okhttp3.internal.http2.Header>): void;
				public applyAndAckSettings(param0: okhttp3.internal.http2.Settings): void;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class Huffman extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http2.Huffman>;
				public static get(): okhttp3.internal.http2.Huffman;
			}
			export module Huffman {
				export class Node extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.http2.Huffman.Node>;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class PushObserver extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http2.PushObserver>;
				/**
				 * Constructs a new instance of the okhttp3.internal.http2.PushObserver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					onRequest(param0: number, param1: java.util.List<okhttp3.internal.http2.Header>): boolean;
					onHeaders(param0: number, param1: java.util.List<okhttp3.internal.http2.Header>, param2: boolean): boolean;
					onData(param0: number, param1: okio.BufferedSource, param2: number, param3: boolean): boolean;
					onReset(param0: number, param1: okhttp3.internal.http2.ErrorCode): void;
					<clinit>(): void;
				});
				public constructor();
				public static CANCEL: okhttp3.internal.http2.PushObserver;
				public onRequest(param0: number, param1: java.util.List<okhttp3.internal.http2.Header>): boolean;
				public onHeaders(param0: number, param1: java.util.List<okhttp3.internal.http2.Header>, param2: boolean): boolean;
				public onData(param0: number, param1: okio.BufferedSource, param2: number, param3: boolean): boolean;
				public onReset(param0: number, param1: okhttp3.internal.http2.ErrorCode): void;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class Settings extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.http2.Settings>;
				public constructor();
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module http2 {
			export class StreamResetException extends java.io.IOException {
				public static class: java.lang.Class<okhttp3.internal.http2.StreamResetException>;
				public errorCode: okhttp3.internal.http2.ErrorCode;
				public constructor(param0: okhttp3.internal.http2.ErrorCode);
				public constructor(param0: string, param1: java.lang.Throwable);
				public constructor(param0: java.lang.Throwable);
				public constructor(param0: string);
				public constructor();
				public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module io {
			export class FileSystem extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.io.FileSystem>;
				/**
				 * Constructs a new instance of the okhttp3.internal.io.FileSystem interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					source(param0: java.io.File): okio.Source;
					sink(param0: java.io.File): okio.Sink;
					appendingSink(param0: java.io.File): okio.Sink;
					delete(param0: java.io.File): void;
					exists(param0: java.io.File): boolean;
					size(param0: java.io.File): number;
					rename(param0: java.io.File, param1: java.io.File): void;
					deleteContents(param0: java.io.File): void;
					<clinit>(): void;
				});
				public constructor();
				public static SYSTEM: okhttp3.internal.io.FileSystem;
				public source(param0: java.io.File): okio.Source;
				public size(param0: java.io.File): number;
				public deleteContents(param0: java.io.File): void;
				public appendingSink(param0: java.io.File): okio.Sink;
				public sink(param0: java.io.File): okio.Sink;
				public exists(param0: java.io.File): boolean;
				public rename(param0: java.io.File, param1: java.io.File): void;
				public delete(param0: java.io.File): void;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module platform {
			export class AndroidPlatform extends okhttp3.internal.platform.Platform {
				public static class: java.lang.Class<okhttp3.internal.platform.AndroidPlatform>;
				public connectSocket(param0: java.net.Socket, param1: java.net.InetSocketAddress, param2: number): void;
				public configureTlsExtensions(param0: javax.net.ssl.SSLSocket, param1: string, param2: java.util.List<okhttp3.Protocol>): void;
				public log(param0: number, param1: string, param2: java.lang.Throwable): void;
				public logCloseableLeak(param0: string, param1: any): void;
				public buildTrustRootIndex(param0: javax.net.ssl.X509TrustManager): okhttp3.internal.tls.TrustRootIndex;
				public isCleartextTrafficPermitted(param0: string): boolean;
				public buildCertificateChainCleaner(param0: javax.net.ssl.X509TrustManager): okhttp3.internal.tls.CertificateChainCleaner;
				public buildCertificateChainCleaner(param0: javax.net.ssl.SSLSocketFactory): okhttp3.internal.tls.CertificateChainCleaner;
				public getSelectedProtocol(param0: javax.net.ssl.SSLSocket): string;
				public trustManager(param0: javax.net.ssl.SSLSocketFactory): javax.net.ssl.X509TrustManager;
				public getStackTraceForCloseable(param0: string): any;
				public static buildIfSupported(): okhttp3.internal.platform.Platform;
				public getSSLContext(): javax.net.ssl.SSLContext;
			}
			export module AndroidPlatform {
				export class AndroidCertificateChainCleaner extends okhttp3.internal.tls.CertificateChainCleaner {
					public static class: java.lang.Class<okhttp3.internal.platform.AndroidPlatform.AndroidCertificateChainCleaner>;
					public equals(param0: any): boolean;
					public clean(param0: java.util.List<java.security.cert.Certificate>, param1: string): java.util.List<java.security.cert.Certificate>;
					public hashCode(): number;
				}
				export class CloseGuard extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.platform.AndroidPlatform.CloseGuard>;
				}
				export class CustomTrustRootIndex extends java.lang.Object implements okhttp3.internal.tls.TrustRootIndex {
					public static class: java.lang.Class<okhttp3.internal.platform.AndroidPlatform.CustomTrustRootIndex>;
					public equals(param0: any): boolean;
					public findByIssuerAndSignature(param0: java.security.cert.X509Certificate): java.security.cert.X509Certificate;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module platform {
			export class ConscryptPlatform extends okhttp3.internal.platform.Platform {
				public static class: java.lang.Class<okhttp3.internal.platform.ConscryptPlatform>;
				public static buildIfSupported(): okhttp3.internal.platform.ConscryptPlatform;
				public getSelectedProtocol(param0: javax.net.ssl.SSLSocket): string;
				public trustManager(param0: javax.net.ssl.SSLSocketFactory): javax.net.ssl.X509TrustManager;
				public configureSslSocketFactory(param0: javax.net.ssl.SSLSocketFactory): void;
				public configureTlsExtensions(param0: javax.net.ssl.SSLSocket, param1: string, param2: java.util.List<okhttp3.Protocol>): void;
				public getSSLContext(): javax.net.ssl.SSLContext;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module platform {
			export class Jdk8WithJettyBootPlatform extends okhttp3.internal.platform.Platform {
				public static class: java.lang.Class<okhttp3.internal.platform.Jdk8WithJettyBootPlatform>;
				public getSelectedProtocol(param0: javax.net.ssl.SSLSocket): string;
				public afterHandshake(param0: javax.net.ssl.SSLSocket): void;
				public configureTlsExtensions(param0: javax.net.ssl.SSLSocket, param1: string, param2: java.util.List<okhttp3.Protocol>): void;
				public static buildIfSupported(): okhttp3.internal.platform.Platform;
			}
			export module Jdk8WithJettyBootPlatform {
				export class AlpnProvider extends java.lang.Object implements java.lang.reflect.InvocationHandler {
					public static class: java.lang.Class<okhttp3.internal.platform.Jdk8WithJettyBootPlatform.AlpnProvider>;
					public invoke(param0: any, param1: java.lang.reflect.Method, param2: native.Array<any>): any;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module platform {
			export class Jdk9Platform extends okhttp3.internal.platform.Platform {
				public static class: java.lang.Class<okhttp3.internal.platform.Jdk9Platform>;
				public getSelectedProtocol(param0: javax.net.ssl.SSLSocket): string;
				public trustManager(param0: javax.net.ssl.SSLSocketFactory): javax.net.ssl.X509TrustManager;
				public static buildIfSupported(): okhttp3.internal.platform.Jdk9Platform;
				public configureTlsExtensions(param0: javax.net.ssl.SSLSocket, param1: string, param2: java.util.List<okhttp3.Protocol>): void;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module platform {
			export class Platform extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.platform.Platform>;
				public static INFO: number;
				public static WARN: number;
				public getPrefix(): string;
				public connectSocket(param0: java.net.Socket, param1: java.net.InetSocketAddress, param2: number): void;
				public configureSslSocketFactory(param0: javax.net.ssl.SSLSocketFactory): void;
				public configureTlsExtensions(param0: javax.net.ssl.SSLSocket, param1: string, param2: java.util.List<okhttp3.Protocol>): void;
				public static isConscryptPreferred(): boolean;
				public log(param0: number, param1: string, param2: java.lang.Throwable): void;
				public logCloseableLeak(param0: string, param1: any): void;
				public buildTrustRootIndex(param0: javax.net.ssl.X509TrustManager): okhttp3.internal.tls.TrustRootIndex;
				public toString(): string;
				public isCleartextTrafficPermitted(param0: string): boolean;
				public constructor();
				public buildCertificateChainCleaner(param0: javax.net.ssl.X509TrustManager): okhttp3.internal.tls.CertificateChainCleaner;
				public buildCertificateChainCleaner(param0: javax.net.ssl.SSLSocketFactory): okhttp3.internal.tls.CertificateChainCleaner;
				public getSelectedProtocol(param0: javax.net.ssl.SSLSocket): string;
				public trustManager(param0: javax.net.ssl.SSLSocketFactory): javax.net.ssl.X509TrustManager;
				public afterHandshake(param0: javax.net.ssl.SSLSocket): void;
				public static get(): okhttp3.internal.platform.Platform;
				public getStackTraceForCloseable(param0: string): any;
				public static alpnProtocolNames(param0: java.util.List<okhttp3.Protocol>): java.util.List<string>;
				public getSSLContext(): javax.net.ssl.SSLContext;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module proxy {
			export class NullProxySelector extends java.net.ProxySelector {
				public static class: java.lang.Class<okhttp3.internal.proxy.NullProxySelector>;
				public select(param0: java.net.URI): java.util.List<java.net.Proxy>;
				public connectFailed(param0: java.net.URI, param1: java.net.SocketAddress, param2: java.io.IOException): void;
				public constructor();
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module publicsuffix {
			export class PublicSuffixDatabase extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.publicsuffix.PublicSuffixDatabase>;
				public static PUBLIC_SUFFIX_RESOURCE: string;
				public static get(): okhttp3.internal.publicsuffix.PublicSuffixDatabase;
				public getEffectiveTldPlusOne(param0: string): string;
				public constructor();
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module tls {
			export class BasicCertificateChainCleaner extends okhttp3.internal.tls.CertificateChainCleaner {
				public static class: java.lang.Class<okhttp3.internal.tls.BasicCertificateChainCleaner>;
				public clean(param0: java.util.List<java.security.cert.Certificate>, param1: string): java.util.List<java.security.cert.Certificate>;
				public hashCode(): number;
				public equals(param0: any): boolean;
				public constructor(param0: okhttp3.internal.tls.TrustRootIndex);
				public constructor();
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module tls {
			export class BasicTrustRootIndex extends java.lang.Object implements okhttp3.internal.tls.TrustRootIndex {
				public static class: java.lang.Class<okhttp3.internal.tls.BasicTrustRootIndex>;
				public constructor(param0: native.Array<java.security.cert.X509Certificate>);
				public hashCode(): number;
				public equals(param0: any): boolean;
				public findByIssuerAndSignature(param0: java.security.cert.X509Certificate): java.security.cert.X509Certificate;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module tls {
			export abstract class CertificateChainCleaner extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.tls.CertificateChainCleaner>;
				public static get(param0: javax.net.ssl.X509TrustManager): okhttp3.internal.tls.CertificateChainCleaner;
				public clean(param0: java.util.List<java.security.cert.Certificate>, param1: string): java.util.List<java.security.cert.Certificate>;
				public static get(param0: native.Array<java.security.cert.X509Certificate>): okhttp3.internal.tls.CertificateChainCleaner;
				public constructor();
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module tls {
			export class DistinguishedNameParser extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.tls.DistinguishedNameParser>;
				public findMostSpecific(param0: string): string;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module tls {
			export class OkHostnameVerifier extends java.lang.Object implements javax.net.ssl.HostnameVerifier {
				public static class: java.lang.Class<okhttp3.internal.tls.OkHostnameVerifier>;
				public static INSTANCE: okhttp3.internal.tls.OkHostnameVerifier;
				public verify(param0: string, param1: javax.net.ssl.SSLSession): boolean;
				public verifyHostname(param0: string, param1: string): boolean;
				public static allSubjectAltNames(param0: java.security.cert.X509Certificate): java.util.List<string>;
				public verify(param0: string, param1: java.security.cert.X509Certificate): boolean;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module tls {
			export class TrustRootIndex extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.tls.TrustRootIndex>;
				/**
				 * Constructs a new instance of the okhttp3.internal.tls.TrustRootIndex interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					findByIssuerAndSignature(param0: java.security.cert.X509Certificate): java.security.cert.X509Certificate;
				});
				public constructor();
				public findByIssuerAndSignature(param0: java.security.cert.X509Certificate): java.security.cert.X509Certificate;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module ws {
			export class RealWebSocket extends java.lang.Object implements okhttp3.WebSocket, okhttp3.internal.ws.WebSocketReader.FrameCallback {
				public static class: java.lang.Class<okhttp3.internal.ws.RealWebSocket>;
				public constructor(param0: okhttp3.Request, param1: okhttp3.WebSocketListener, param2: java.util.Random, param3: number);
				public request(): okhttp3.Request;
				public send(param0: string): boolean;
				public onReadPong(param0: okio.ByteString): void;
				public onReadPing(param0: okio.ByteString): void;
				public initReaderAndWriter(param0: string, param1: okhttp3.internal.ws.RealWebSocket.Streams): void;
				public queueSize(): number;
				public close(param0: number, param1: string): boolean;
				public loopReader(): void;
				public send(param0: okio.ByteString): boolean;
				public onReadMessage(param0: okio.ByteString): void;
				public failWebSocket(param0: java.lang.Exception, param1: okhttp3.Response): void;
				public cancel(): void;
				public connect(param0: okhttp3.OkHttpClient): void;
				public onReadClose(param0: number, param1: string): void;
				public onReadMessage(param0: string): void;
			}
			export module RealWebSocket {
				export class CancelRunnable extends java.lang.Object implements java.lang.Runnable {
					public static class: java.lang.Class<okhttp3.internal.ws.RealWebSocket.CancelRunnable>;
					public run(): void;
				}
				export class Close extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.ws.RealWebSocket.Close>;
				}
				export class Message extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.ws.RealWebSocket.Message>;
				}
				export class PingRunnable extends java.lang.Object implements java.lang.Runnable {
					public static class: java.lang.Class<okhttp3.internal.ws.RealWebSocket.PingRunnable>;
					public run(): void;
				}
				export abstract class Streams extends java.lang.Object implements java.io.Closeable {
					public static class: java.lang.Class<okhttp3.internal.ws.RealWebSocket.Streams>;
					public client: boolean;
					public source: okio.BufferedSource;
					public sink: okio.BufferedSink;
					public constructor(param0: boolean, param1: okio.BufferedSource, param2: okio.BufferedSink);
					public close(): void;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module ws {
			export class WebSocketProtocol extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.ws.WebSocketProtocol>;
				public static acceptHeader(param0: string): string;
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module ws {
			export class WebSocketReader extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.ws.WebSocketReader>;
			}
			export module WebSocketReader {
				export class FrameCallback extends java.lang.Object {
					public static class: java.lang.Class<okhttp3.internal.ws.WebSocketReader.FrameCallback>;
					/**
					 * Constructs a new instance of the okhttp3.internal.ws.WebSocketReader$FrameCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onReadMessage(param0: string): void;
						onReadMessage(param0: okio.ByteString): void;
						onReadPing(param0: okio.ByteString): void;
						onReadPong(param0: okio.ByteString): void;
						onReadClose(param0: number, param1: string): void;
					});
					public constructor();
					public onReadClose(param0: number, param1: string): void;
					public onReadMessage(param0: string): void;
					public onReadMessage(param0: okio.ByteString): void;
					public onReadPing(param0: okio.ByteString): void;
					public onReadPong(param0: okio.ByteString): void;
				}
			}
		}
	}
}

declare module okhttp3 {
	export module internal {
		export module ws {
			export class WebSocketWriter extends java.lang.Object {
				public static class: java.lang.Class<okhttp3.internal.ws.WebSocketWriter>;
			}
			export module WebSocketWriter {
				export class FrameSink extends java.lang.Object implements okio.Sink {
					public static class: java.lang.Class<okhttp3.internal.ws.WebSocketWriter.FrameSink>;
					public close(): void;
					public flush(): void;
					public write(param0: okio.Buffer, param1: number): void;
					public timeout(): okio.Timeout;
				}
			}
		}
	}
}


declare module okio {
	export class AsyncTimeout extends okio.Timeout {
		public static class: java.lang.Class<okio.AsyncTimeout>;
		public constructor();
		public enter(): void;
		public sink(param0: okio.Sink): okio.Sink;
		public timedOut(): void;
		public newTimeoutException(param0: java.io.IOException): java.io.IOException;
		public source(param0: okio.Source): okio.Source;
		public exit(): boolean;
	}
	export module AsyncTimeout {
		export class Watchdog extends java.lang.Thread {
			public static class: java.lang.Class<okio.AsyncTimeout.Watchdog>;
			public run(): void;
		}
	}
}

declare module okio {
	export class Base64 extends java.lang.Object {
		public static class: java.lang.Class<okio.Base64>;
		public static encodeUrl(param0: native.Array<number>): string;
		public static decode(param0: string): native.Array<number>;
		public static encode(param0: native.Array<number>): string;
	}
}

declare module okio {
	export class Buffer extends java.lang.Object implements okio.BufferedSource, okio.BufferedSink, java.lang.Cloneable, java.nio.channels.ByteChannel {
		public static class: java.lang.Class<okio.Buffer>;
		public readIntLe(): number;
		public writeUtf8(param0: string): okio.Buffer;
		public writeDecimalLong(param0: number): okio.Buffer;
		public readFrom(param0: java.io.InputStream, param1: number): okio.Buffer;
		public writeUtf8(param0: string, param1: number, param2: number): okio.Buffer;
		public readUtf8(param0: number): string;
		public copyTo(param0: java.io.OutputStream): okio.Buffer;
		public writeUtf8CodePoint(param0: number): okio.BufferedSink;
		public writeUtf8(param0: string, param1: number, param2: number): okio.BufferedSink;
		public indexOf(param0: number): number;
		public readByte(): number;
		public emitCompleteSegments(): okio.BufferedSink;
		public readLong(): number;
		public read(param0: okio.Buffer, param1: number): number;
		public writeIntLe(param0: number): okio.BufferedSink;
		public copyTo(param0: okio.Buffer, param1: number, param2: number): okio.Buffer;
		public indexOfElement(param0: okio.ByteString): number;
		public write(param0: native.Array<number>, param1: number, param2: number): okio.BufferedSink;
		public write(param0: java.nio.ByteBuffer): number;
		public readAll(param0: okio.Sink): number;
		public readByteArray(param0: number): native.Array<number>;
		public sha1(): okio.ByteString;
		public write(param0: okio.ByteString): okio.BufferedSink;
		public select(param0: okio.Options): number;
		public readFrom(param0: java.io.InputStream): okio.Buffer;
		public writeTo(param0: java.io.OutputStream): okio.Buffer;
		public outputStream(): java.io.OutputStream;
		public clear(): void;
		public require(param0: number): void;
		public request(param0: number): boolean;
		public indexOf(param0: okio.ByteString, param1: number): number;
		public readString(param0: java.nio.charset.Charset): string;
		public writeLongLe(param0: number): okio.Buffer;
		public writeLong(param0: number): okio.BufferedSink;
		public writeString(param0: string, param1: java.nio.charset.Charset): okio.Buffer;
		public writeByte(param0: number): okio.BufferedSink;
		public readUtf8LineStrict(): string;
		public writeUtf8CodePoint(param0: number): okio.Buffer;
		public writeInt(param0: number): okio.BufferedSink;
		public hmacSha512(param0: okio.ByteString): okio.ByteString;
		public getBuffer(): okio.Buffer;
		public write(param0: native.Array<number>): okio.BufferedSink;
		public sha512(): okio.ByteString;
		public writeShort(param0: number): okio.BufferedSink;
		public rangeEquals(param0: number, param1: okio.ByteString, param2: number, param3: number): boolean;
		public skip(param0: number): void;
		public getByte(param0: number): number;
		public readInt(): number;
		public read(param0: native.Array<number>, param1: number, param2: number): number;
		public writeString(param0: string, param1: number, param2: number, param3: java.nio.charset.Charset): okio.Buffer;
		public copyTo(param0: java.io.OutputStream, param1: number, param2: number): okio.Buffer;
		public writeTo(param0: java.io.OutputStream, param1: number): okio.Buffer;
		public writeAll(param0: okio.Source): number;
		public readFully(param0: native.Array<number>): void;
		public timeout(): okio.Timeout;
		public equals(param0: any): boolean;
		public close(): void;
		public writeDecimalLong(param0: number): okio.BufferedSink;
		public inputStream(): java.io.InputStream;
		public readUtf8LineStrict(param0: number): string;
		public write(param0: okio.ByteString): okio.Buffer;
		public writeHexadecimalUnsignedLong(param0: number): okio.Buffer;
		public writeShortLe(param0: number): okio.BufferedSink;
		public writeUtf8(param0: string): okio.BufferedSink;
		public readUtf8CodePoint(): number;
		public writeShortLe(param0: number): okio.Buffer;
		public readAndWriteUnsafe(): okio.Buffer.UnsafeCursor;
		public snapshot(param0: number): okio.ByteString;
		public writeHexadecimalUnsignedLong(param0: number): okio.BufferedSink;
		public readHexadecimalUnsignedLong(): number;
		public emit(): okio.BufferedSink;
		public writeInt(param0: number): okio.Buffer;
		public constructor();
		public readUnsafe(param0: okio.Buffer.UnsafeCursor): okio.Buffer.UnsafeCursor;
		public readUtf8(): string;
		/** @deprecated */
		public buffer(): okio.Buffer;
		public write(param0: okio.Buffer, param1: number): void;
		public readByteString(param0: number): okio.ByteString;
		public writeShort(param0: number): okio.Buffer;
		public readUnsafe(): okio.Buffer.UnsafeCursor;
		public completeSegmentByteCount(): number;
		public toString(): string;
		public read(param0: native.Array<number>): number;
		public md5(): okio.ByteString;
		public flush(): void;
		public writeString(param0: string, param1: java.nio.charset.Charset): okio.BufferedSink;
		public writeLongLe(param0: number): okio.BufferedSink;
		public readAndWriteUnsafe(param0: okio.Buffer.UnsafeCursor): okio.Buffer.UnsafeCursor;
		public readShort(): number;
		public peek(): okio.BufferedSource;
		public readShortLe(): number;
		public readUtf8Line(): string;
		public write(param0: native.Array<number>, param1: number, param2: number): okio.Buffer;
		public readByteString(): okio.ByteString;
		public writeString(param0: string, param1: number, param2: number, param3: java.nio.charset.Charset): okio.BufferedSink;
		public writeIntLe(param0: number): okio.Buffer;
		public clone(): any;
		public hmacSha1(param0: okio.ByteString): okio.ByteString;
		public size(): number;
		public hashCode(): number;
		public indexOf(param0: number, param1: number, param2: number): number;
		public readString(param0: number, param1: java.nio.charset.Charset): string;
		public readLongLe(): number;
		public readFully(param0: okio.Buffer, param1: number): void;
		public snapshot(): okio.ByteString;
		public read(param0: java.nio.ByteBuffer): number;
		public write(param0: native.Array<number>): okio.Buffer;
		public clone(): okio.Buffer;
		public emitCompleteSegments(): okio.Buffer;
		public readDecimalLong(): number;
		public sha256(): okio.ByteString;
		public writeByte(param0: number): okio.Buffer;
		public rangeEquals(param0: number, param1: okio.ByteString): boolean;
		public isOpen(): boolean;
		public readByteArray(): native.Array<number>;
		public writeLong(param0: number): okio.Buffer;
		public indexOfElement(param0: okio.ByteString, param1: number): number;
		public exhausted(): boolean;
		public write(param0: okio.Source, param1: number): okio.BufferedSink;
		public buffer(): okio.Buffer;
		public hmacSha256(param0: okio.ByteString): okio.ByteString;
		public indexOf(param0: number, param1: number): number;
		public indexOf(param0: okio.ByteString): number;
	}
	export module Buffer {
		export class UnsafeCursor extends java.lang.Object implements java.io.Closeable {
			public static class: java.lang.Class<okio.Buffer.UnsafeCursor>;
			public buffer: okio.Buffer;
			public readWrite: boolean;
			public offset: number;
			public data: native.Array<number>;
			public start: number;
			public end: number;
			public next(): number;
			public seek(param0: number): number;
			public resizeBuffer(param0: number): number;
			public constructor();
			public expandBuffer(param0: number): number;
			public close(): void;
		}
	}
}

declare module okio {
	export class BufferedSink extends java.lang.Object implements okio.Sink, java.nio.channels.WritableByteChannel {
		public static class: java.lang.Class<okio.BufferedSink>;
		/**
		 * Constructs a new instance of the okio.BufferedSink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			buffer(): okio.Buffer;
			write(param0: okio.ByteString): okio.BufferedSink;
			write(param0: native.Array<number>): okio.BufferedSink;
			write(param0: native.Array<number>, param1: number, param2: number): okio.BufferedSink;
			writeAll(param0: okio.Source): number;
			write(param0: okio.Source, param1: number): okio.BufferedSink;
			writeUtf8(param0: string): okio.BufferedSink;
			writeUtf8(param0: string, param1: number, param2: number): okio.BufferedSink;
			writeUtf8CodePoint(param0: number): okio.BufferedSink;
			writeString(param0: string, param1: java.nio.charset.Charset): okio.BufferedSink;
			writeString(param0: string, param1: number, param2: number, param3: java.nio.charset.Charset): okio.BufferedSink;
			writeByte(param0: number): okio.BufferedSink;
			writeShort(param0: number): okio.BufferedSink;
			writeShortLe(param0: number): okio.BufferedSink;
			writeInt(param0: number): okio.BufferedSink;
			writeIntLe(param0: number): okio.BufferedSink;
			writeLong(param0: number): okio.BufferedSink;
			writeLongLe(param0: number): okio.BufferedSink;
			writeDecimalLong(param0: number): okio.BufferedSink;
			writeHexadecimalUnsignedLong(param0: number): okio.BufferedSink;
			flush(): void;
			emit(): okio.BufferedSink;
			emitCompleteSegments(): okio.BufferedSink;
			outputStream(): java.io.OutputStream;
			write(param0: okio.Buffer, param1: number): void;
			flush(): void;
			timeout(): okio.Timeout;
			close(): void;
			write(param0: java.nio.ByteBuffer): number;
			close(): void;
			flush(): void;
			isOpen(): boolean;
			close(): void;
			close(): void;
			close(): void;
			close(): void;
		});
		public constructor();
		public writeDecimalLong(param0: number): okio.BufferedSink;
		public close(): void;
		public writeByte(param0: number): okio.BufferedSink;
		public writeString(param0: string, param1: number, param2: number, param3: java.nio.charset.Charset): okio.BufferedSink;
		public writeShortLe(param0: number): okio.BufferedSink;
		public writeInt(param0: number): okio.BufferedSink;
		public writeUtf8CodePoint(param0: number): okio.BufferedSink;
		public writeUtf8(param0: string): okio.BufferedSink;
		public write(param0: native.Array<number>): okio.BufferedSink;
		public writeUtf8(param0: string, param1: number, param2: number): okio.BufferedSink;
		public writeShort(param0: number): okio.BufferedSink;
		public writeHexadecimalUnsignedLong(param0: number): okio.BufferedSink;
		public emitCompleteSegments(): okio.BufferedSink;
		public emit(): okio.BufferedSink;
		public writeIntLe(param0: number): okio.BufferedSink;
		public write(param0: okio.Buffer, param1: number): void;
		public write(param0: native.Array<number>, param1: number, param2: number): okio.BufferedSink;
		public write(param0: java.nio.ByteBuffer): number;
		public flush(): void;
		public isOpen(): boolean;
		public write(param0: okio.ByteString): okio.BufferedSink;
		public writeString(param0: string, param1: java.nio.charset.Charset): okio.BufferedSink;
		public writeLongLe(param0: number): okio.BufferedSink;
		public write(param0: okio.Source, param1: number): okio.BufferedSink;
		public buffer(): okio.Buffer;
		public outputStream(): java.io.OutputStream;
		public writeAll(param0: okio.Source): number;
		public writeLong(param0: number): okio.BufferedSink;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class BufferedSource extends java.lang.Object implements okio.Source, java.nio.channels.ReadableByteChannel {
		public static class: java.lang.Class<okio.BufferedSource>;
		/**
		 * Constructs a new instance of the okio.BufferedSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			buffer(): okio.Buffer;
			getBuffer(): okio.Buffer;
			exhausted(): boolean;
			require(param0: number): void;
			request(param0: number): boolean;
			readByte(): number;
			readShort(): number;
			readShortLe(): number;
			readInt(): number;
			readIntLe(): number;
			readLong(): number;
			readLongLe(): number;
			readDecimalLong(): number;
			readHexadecimalUnsignedLong(): number;
			skip(param0: number): void;
			readByteString(): okio.ByteString;
			readByteString(param0: number): okio.ByteString;
			select(param0: okio.Options): number;
			readByteArray(): native.Array<number>;
			readByteArray(param0: number): native.Array<number>;
			read(param0: native.Array<number>): number;
			readFully(param0: native.Array<number>): void;
			read(param0: native.Array<number>, param1: number, param2: number): number;
			readFully(param0: okio.Buffer, param1: number): void;
			readAll(param0: okio.Sink): number;
			readUtf8(): string;
			readUtf8(param0: number): string;
			readUtf8Line(): string;
			readUtf8LineStrict(): string;
			readUtf8LineStrict(param0: number): string;
			readUtf8CodePoint(): number;
			readString(param0: java.nio.charset.Charset): string;
			readString(param0: number, param1: java.nio.charset.Charset): string;
			indexOf(param0: number): number;
			indexOf(param0: number, param1: number): number;
			indexOf(param0: number, param1: number, param2: number): number;
			indexOf(param0: okio.ByteString): number;
			indexOf(param0: okio.ByteString, param1: number): number;
			indexOfElement(param0: okio.ByteString): number;
			indexOfElement(param0: okio.ByteString, param1: number): number;
			rangeEquals(param0: number, param1: okio.ByteString): boolean;
			rangeEquals(param0: number, param1: okio.ByteString, param2: number, param3: number): boolean;
			peek(): okio.BufferedSource;
			inputStream(): java.io.InputStream;
			read(param0: okio.Buffer, param1: number): number;
			timeout(): okio.Timeout;
			close(): void;
			read(param0: java.nio.ByteBuffer): number;
			close(): void;
			isOpen(): boolean;
			close(): void;
			close(): void;
			close(): void;
			close(): void;
		});
		public constructor();
		public close(): void;
		public inputStream(): java.io.InputStream;
		public readIntLe(): number;
		public readUtf8LineStrict(param0: number): string;
		public readUtf8(param0: number): string;
		public readUtf8CodePoint(): number;
		public indexOf(param0: number): number;
		public readByte(): number;
		public readHexadecimalUnsignedLong(): number;
		public readLong(): number;
		public read(param0: okio.Buffer, param1: number): number;
		public readUtf8(): string;
		/** @deprecated */
		public buffer(): okio.Buffer;
		public readByteString(param0: number): okio.ByteString;
		public indexOfElement(param0: okio.ByteString): number;
		public read(param0: native.Array<number>): number;
		public readAll(param0: okio.Sink): number;
		public readByteArray(param0: number): native.Array<number>;
		public select(param0: okio.Options): number;
		public readShort(): number;
		public require(param0: number): void;
		public request(param0: number): boolean;
		public indexOf(param0: okio.ByteString, param1: number): number;
		public peek(): okio.BufferedSource;
		public readString(param0: java.nio.charset.Charset): string;
		public readShortLe(): number;
		public readUtf8Line(): string;
		public readByteString(): okio.ByteString;
		public readUtf8LineStrict(): string;
		public getBuffer(): okio.Buffer;
		public indexOf(param0: number, param1: number, param2: number): number;
		public readString(param0: number, param1: java.nio.charset.Charset): string;
		public readLongLe(): number;
		public readFully(param0: okio.Buffer, param1: number): void;
		public rangeEquals(param0: number, param1: okio.ByteString, param2: number, param3: number): boolean;
		public read(param0: java.nio.ByteBuffer): number;
		public skip(param0: number): void;
		public readDecimalLong(): number;
		public readInt(): number;
		public rangeEquals(param0: number, param1: okio.ByteString): boolean;
		public isOpen(): boolean;
		public read(param0: native.Array<number>, param1: number, param2: number): number;
		public readByteArray(): native.Array<number>;
		public indexOfElement(param0: okio.ByteString, param1: number): number;
		public exhausted(): boolean;
		public indexOf(param0: number, param1: number): number;
		public readFully(param0: native.Array<number>): void;
		public indexOf(param0: okio.ByteString): number;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class ByteString extends java.lang.Object {
		public static class: java.lang.Class<okio.ByteString>;
		public static EMPTY: okio.ByteString;
		public static of(param0: native.Array<number>): okio.ByteString;
		public base64(): string;
		public static encodeString(param0: string, param1: java.nio.charset.Charset): okio.ByteString;
		public substring(param0: number): okio.ByteString;
		public equals(param0: any): boolean;
		public hmacSha512(param0: okio.ByteString): okio.ByteString;
		public base64Url(): string;
		public hmacSha1(param0: okio.ByteString): okio.ByteString;
		public static read(param0: java.io.InputStream, param1: number): okio.ByteString;
		public asByteBuffer(): java.nio.ByteBuffer;
		public sha512(): okio.ByteString;
		public size(): number;
		public lastIndexOf(param0: native.Array<number>): number;
		public hex(): string;
		public hashCode(): number;
		public toAsciiUppercase(): okio.ByteString;
		public indexOf(param0: native.Array<number>, param1: number): number;
		public static decodeBase64(param0: string): okio.ByteString;
		public lastIndexOf(param0: okio.ByteString, param1: number): number;
		public rangeEquals(param0: number, param1: okio.ByteString, param2: number, param3: number): boolean;
		public lastIndexOf(param0: okio.ByteString): number;
		public static decodeHex(param0: string): okio.ByteString;
		public compareTo(param0: okio.ByteString): number;
		public indexOf(param0: native.Array<number>): number;
		public startsWith(param0: native.Array<number>): boolean;
		public sha256(): okio.ByteString;
		public getByte(param0: number): number;
		public toString(): string;
		public static encodeUtf8(param0: string): okio.ByteString;
		public string(param0: java.nio.charset.Charset): string;
		public md5(): okio.ByteString;
		public startsWith(param0: okio.ByteString): boolean;
		public endsWith(param0: okio.ByteString): boolean;
		public endsWith(param0: native.Array<number>): boolean;
		public toAsciiLowercase(): okio.ByteString;
		public static of(param0: java.nio.ByteBuffer): okio.ByteString;
		public sha1(): okio.ByteString;
		public write(param0: java.io.OutputStream): void;
		public lastIndexOf(param0: native.Array<number>, param1: number): number;
		public static of(param0: native.Array<number>, param1: number, param2: number): okio.ByteString;
		public rangeEquals(param0: number, param1: native.Array<number>, param2: number, param3: number): boolean;
		public utf8(): string;
		public substring(param0: number, param1: number): okio.ByteString;
		public indexOf(param0: okio.ByteString, param1: number): number;
		public toByteArray(): native.Array<number>;
		public hmacSha256(param0: okio.ByteString): okio.ByteString;
		public indexOf(param0: okio.ByteString): number;
	}
}

declare module okio {
	export class DeflaterSink extends java.lang.Object implements okio.Sink {
		public static class: java.lang.Class<okio.DeflaterSink>;
		public close(): void;
		public write(param0: okio.Buffer, param1: number): void;
		public constructor(param0: okio.Sink, param1: java.util.zip.Deflater);
		public toString(): string;
		public flush(): void;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export abstract class ForwardingSink extends java.lang.Object implements okio.Sink {
		public static class: java.lang.Class<okio.ForwardingSink>;
		public delegate(): okio.Sink;
		public close(): void;
		public constructor(param0: okio.Sink);
		public write(param0: okio.Buffer, param1: number): void;
		public toString(): string;
		public flush(): void;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export abstract class ForwardingSource extends java.lang.Object implements okio.Source {
		public static class: java.lang.Class<okio.ForwardingSource>;
		public close(): void;
		public constructor(param0: okio.Source);
		public delegate(): okio.Source;
		public toString(): string;
		public read(param0: okio.Buffer, param1: number): number;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class ForwardingTimeout extends okio.Timeout {
		public static class: java.lang.Class<okio.ForwardingTimeout>;
		public constructor();
		public throwIfReached(): void;
		public setDelegate(param0: okio.Timeout): okio.ForwardingTimeout;
		public clearDeadline(): okio.Timeout;
		public hasDeadline(): boolean;
		public delegate(): okio.Timeout;
		public timeout(param0: number, param1: java.util.concurrent.TimeUnit): okio.Timeout;
		public timeoutNanos(): number;
		public deadlineNanoTime(): number;
		public deadlineNanoTime(param0: number): okio.Timeout;
		public constructor(param0: okio.Timeout);
		public clearTimeout(): okio.Timeout;
	}
}

declare module okio {
	export class GzipSink extends java.lang.Object implements okio.Sink {
		public static class: java.lang.Class<okio.GzipSink>;
		public deflater(): java.util.zip.Deflater;
		public close(): void;
		public constructor(param0: okio.Sink);
		public write(param0: okio.Buffer, param1: number): void;
		public flush(): void;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class GzipSource extends java.lang.Object implements okio.Source {
		public static class: java.lang.Class<okio.GzipSource>;
		public close(): void;
		public constructor(param0: okio.Source);
		public read(param0: okio.Buffer, param1: number): number;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class HashingSink extends okio.ForwardingSink {
		public static class: java.lang.Class<okio.HashingSink>;
		public close(): void;
		public static hmacSha256(param0: okio.Sink, param1: okio.ByteString): okio.HashingSink;
		public write(param0: okio.Buffer, param1: number): void;
		public static sha512(param0: okio.Sink): okio.HashingSink;
		public static hmacSha1(param0: okio.Sink, param1: okio.ByteString): okio.HashingSink;
		public static md5(param0: okio.Sink): okio.HashingSink;
		public static sha1(param0: okio.Sink): okio.HashingSink;
		public static hmacSha512(param0: okio.Sink, param1: okio.ByteString): okio.HashingSink;
		public hash(): okio.ByteString;
		public static sha256(param0: okio.Sink): okio.HashingSink;
		public flush(): void;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class HashingSource extends okio.ForwardingSource {
		public static class: java.lang.Class<okio.HashingSource>;
		public close(): void;
		public static hmacSha256(param0: okio.Source, param1: okio.ByteString): okio.HashingSource;
		public static sha1(param0: okio.Source): okio.HashingSource;
		public static md5(param0: okio.Source): okio.HashingSource;
		public static sha256(param0: okio.Source): okio.HashingSource;
		public static hmacSha1(param0: okio.Source, param1: okio.ByteString): okio.HashingSource;
		public hash(): okio.ByteString;
		public read(param0: okio.Buffer, param1: number): number;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class InflaterSource extends java.lang.Object implements okio.Source {
		public static class: java.lang.Class<okio.InflaterSource>;
		public close(): void;
		public refill(): boolean;
		public constructor(param0: okio.Source, param1: java.util.zip.Inflater);
		public read(param0: okio.Buffer, param1: number): number;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class Okio extends java.lang.Object {
		public static class: java.lang.Class<okio.Okio>;
		public static buffer(param0: okio.Source): okio.BufferedSource;
		public static source(param0: java.io.InputStream): okio.Source;
		public static appendingSink(param0: java.io.File): okio.Sink;
		public static sink(param0: java.io.OutputStream): okio.Sink;
		public static source(param0: java.io.File): okio.Source;
		public static sink(param0: java.io.File): okio.Sink;
		public static blackhole(): okio.Sink;
		public static source(param0: java.net.Socket): okio.Source;
		public static sink(param0: java.nio.file.Path, param1: native.Array<java.nio.file.OpenOption>): okio.Sink;
		public static buffer(param0: okio.Sink): okio.BufferedSink;
		public static sink(param0: java.net.Socket): okio.Sink;
		public static source(param0: java.nio.file.Path, param1: native.Array<java.nio.file.OpenOption>): okio.Source;
	}
}

declare module okio {
	export class Options extends java.util.AbstractList<okio.ByteString> implements java.util.RandomAccess  {
		public static class: java.lang.Class<okio.Options>;
		public toArray(): native.Array<any>;
		public equals(param0: any): boolean;
		public static of(param0: native.Array<okio.ByteString>): okio.Options;
		public sort(param0: java.util.Comparator<any>): void;
		public addAll(param0: number, param1: java.util.Collection<any>): boolean;
		public iterator(): java.util.Iterator<any>;
		public indexOf(param0: any): number;
		public remove(param0: any): boolean;
		public stream(): java.util.stream.Stream<any>;
		public add(param0: any): boolean;
		public size(): number;
		public remove(param0: number): any;
		public hashCode(): number;
		public addAll(param0: java.util.Collection<any>): boolean;
		public isEmpty(): boolean;
		public removeIf(param0: any /* any*/): boolean;
		public subList(param0: number, param1: number): java.util.List<any>;
		public lastIndexOf(param0: any): number;
		public listIterator(param0: number): java.util.ListIterator<any>;
		public set(param0: number, param1: any): any;
		public get(param0: number): okio.ByteString;
		public containsAll(param0: java.util.Collection<any>): boolean;
		public toArray(param0: native.Array<any>): native.Array<any>;
		public retainAll(param0: java.util.Collection<any>): boolean;
		public get(param0: number): any;
		public contains(param0: any): boolean;
		public listIterator(): java.util.ListIterator<any>;
		public spliterator(): java.util.Spliterator<any>;
		public replaceAll(param0: any /* any*/): void;
		public removeAll(param0: java.util.Collection<any>): boolean;
		public clear(): void;
		public parallelStream(): java.util.stream.Stream<any>;
		public add(param0: number, param1: any): void;
	}
}

declare module okio {
	export class PeekSource extends java.lang.Object implements okio.Source {
		public static class: java.lang.Class<okio.PeekSource>;
		public close(): void;
		public read(param0: okio.Buffer, param1: number): number;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class Pipe extends java.lang.Object {
		public static class: java.lang.Class<okio.Pipe>;
		public sink(): okio.Sink;
		public constructor(param0: number);
		public fold(param0: okio.Sink): void;
		public source(): okio.Source;
	}
	export module Pipe {
		export class PipeSink extends java.lang.Object implements okio.Sink {
			public static class: java.lang.Class<okio.Pipe.PipeSink>;
			public write(param0: okio.Buffer, param1: number): void;
			public flush(): void;
			public timeout(): okio.Timeout;
			public close(): void;
		}
		export class PipeSource extends java.lang.Object implements okio.Source {
			public static class: java.lang.Class<okio.Pipe.PipeSource>;
			public timeout(): okio.Timeout;
			public read(param0: okio.Buffer, param1: number): number;
			public close(): void;
		}
	}
}

declare module okio {
	export class PushableTimeout extends okio.Timeout {
		public static class: java.lang.Class<okio.PushableTimeout>;
	}
}

declare module okio {
	export class RealBufferedSink extends java.lang.Object implements okio.BufferedSink {
		public static class: java.lang.Class<okio.RealBufferedSink>;
		public sink: okio.Sink;
		public writeDecimalLong(param0: number): okio.BufferedSink;
		public close(): void;
		public writeByte(param0: number): okio.BufferedSink;
		public writeString(param0: string, param1: number, param2: number, param3: java.nio.charset.Charset): okio.BufferedSink;
		public writeShortLe(param0: number): okio.BufferedSink;
		public writeInt(param0: number): okio.BufferedSink;
		public writeUtf8CodePoint(param0: number): okio.BufferedSink;
		public writeUtf8(param0: string): okio.BufferedSink;
		public write(param0: native.Array<number>): okio.BufferedSink;
		public writeUtf8(param0: string, param1: number, param2: number): okio.BufferedSink;
		public writeShort(param0: number): okio.BufferedSink;
		public writeHexadecimalUnsignedLong(param0: number): okio.BufferedSink;
		public emitCompleteSegments(): okio.BufferedSink;
		public emit(): okio.BufferedSink;
		public writeIntLe(param0: number): okio.BufferedSink;
		public write(param0: okio.Buffer, param1: number): void;
		public write(param0: native.Array<number>, param1: number, param2: number): okio.BufferedSink;
		public write(param0: java.nio.ByteBuffer): number;
		public toString(): string;
		public flush(): void;
		public isOpen(): boolean;
		public write(param0: okio.ByteString): okio.BufferedSink;
		public writeString(param0: string, param1: java.nio.charset.Charset): okio.BufferedSink;
		public writeLongLe(param0: number): okio.BufferedSink;
		public write(param0: okio.Source, param1: number): okio.BufferedSink;
		public buffer(): okio.Buffer;
		public outputStream(): java.io.OutputStream;
		public writeAll(param0: okio.Source): number;
		public writeLong(param0: number): okio.BufferedSink;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class RealBufferedSource extends java.lang.Object implements okio.BufferedSource {
		public static class: java.lang.Class<okio.RealBufferedSource>;
		public source: okio.Source;
		public close(): void;
		public inputStream(): java.io.InputStream;
		public readIntLe(): number;
		public readUtf8LineStrict(param0: number): string;
		public readUtf8(param0: number): string;
		public readUtf8CodePoint(): number;
		public indexOf(param0: number): number;
		public readByte(): number;
		public readHexadecimalUnsignedLong(): number;
		public read(param0: okio.Buffer, param1: number): number;
		public readLong(): number;
		public readUtf8(): string;
		/** @deprecated */
		public buffer(): okio.Buffer;
		public readByteString(param0: number): okio.ByteString;
		public indexOfElement(param0: okio.ByteString): number;
		public toString(): string;
		public read(param0: native.Array<number>): number;
		public readAll(param0: okio.Sink): number;
		public readByteArray(param0: number): native.Array<number>;
		public select(param0: okio.Options): number;
		public readShort(): number;
		public require(param0: number): void;
		public request(param0: number): boolean;
		public indexOf(param0: okio.ByteString, param1: number): number;
		public peek(): okio.BufferedSource;
		public readString(param0: java.nio.charset.Charset): string;
		public readShortLe(): number;
		public readUtf8Line(): string;
		public readByteString(): okio.ByteString;
		public readUtf8LineStrict(): string;
		public getBuffer(): okio.Buffer;
		public indexOf(param0: number, param1: number, param2: number): number;
		public readString(param0: number, param1: java.nio.charset.Charset): string;
		public readLongLe(): number;
		public readFully(param0: okio.Buffer, param1: number): void;
		public read(param0: java.nio.ByteBuffer): number;
		public rangeEquals(param0: number, param1: okio.ByteString, param2: number, param3: number): boolean;
		public skip(param0: number): void;
		public readDecimalLong(): number;
		public readInt(): number;
		public rangeEquals(param0: number, param1: okio.ByteString): boolean;
		public isOpen(): boolean;
		public read(param0: native.Array<number>, param1: number, param2: number): number;
		public readByteArray(): native.Array<number>;
		public indexOfElement(param0: okio.ByteString, param1: number): number;
		public exhausted(): boolean;
		public buffer(): okio.Buffer;
		public indexOf(param0: number, param1: number): number;
		public readFully(param0: native.Array<number>): void;
		public indexOf(param0: okio.ByteString): number;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class Segment extends java.lang.Object {
		public static class: java.lang.Class<okio.Segment>;
		public push(param0: okio.Segment): okio.Segment;
		public writeTo(param0: okio.Segment, param1: number): void;
		public compact(): void;
		public pop(): okio.Segment;
		public split(param0: number): okio.Segment;
	}
}

declare module okio {
	export class SegmentPool extends java.lang.Object {
		public static class: java.lang.Class<okio.SegmentPool>;
	}
}

declare module okio {
	export class SegmentedByteString extends okio.ByteString {
		public static class: java.lang.Class<okio.SegmentedByteString>;
		public base64(): string;
		public substring(param0: number): okio.ByteString;
		public equals(param0: any): boolean;
		public base64Url(): string;
		public hmacSha1(param0: okio.ByteString): okio.ByteString;
		public asByteBuffer(): java.nio.ByteBuffer;
		public size(): number;
		public lastIndexOf(param0: native.Array<number>): number;
		public hex(): string;
		public hashCode(): number;
		public toAsciiUppercase(): okio.ByteString;
		public indexOf(param0: native.Array<number>, param1: number): number;
		public lastIndexOf(param0: okio.ByteString, param1: number): number;
		public rangeEquals(param0: number, param1: okio.ByteString, param2: number, param3: number): boolean;
		public lastIndexOf(param0: okio.ByteString): number;
		public indexOf(param0: native.Array<number>): number;
		public sha256(): okio.ByteString;
		public getByte(param0: number): number;
		public toString(): string;
		public string(param0: java.nio.charset.Charset): string;
		public md5(): okio.ByteString;
		public toAsciiLowercase(): okio.ByteString;
		public sha1(): okio.ByteString;
		public write(param0: java.io.OutputStream): void;
		public lastIndexOf(param0: native.Array<number>, param1: number): number;
		public rangeEquals(param0: number, param1: native.Array<number>, param2: number, param3: number): boolean;
		public utf8(): string;
		public substring(param0: number, param1: number): okio.ByteString;
		public indexOf(param0: okio.ByteString, param1: number): number;
		public toByteArray(): native.Array<number>;
		public hmacSha256(param0: okio.ByteString): okio.ByteString;
		public indexOf(param0: okio.ByteString): number;
	}
}

declare module okio {
	export class Sink extends java.lang.Object implements java.io.Closeable, java.io.Flushable {
		public static class: java.lang.Class<okio.Sink>;
		/**
		 * Constructs a new instance of the okio.Sink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			write(param0: okio.Buffer, param1: number): void;
			flush(): void;
			timeout(): okio.Timeout;
			close(): void;
			close(): void;
			flush(): void;
			close(): void;
		});
		public constructor();
		public close(): void;
		public write(param0: okio.Buffer, param1: number): void;
		public flush(): void;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class Source extends java.lang.Object implements java.io.Closeable {
		public static class: java.lang.Class<okio.Source>;
		/**
		 * Constructs a new instance of the okio.Source interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
		 */
		public constructor(implementation: {
			read(param0: okio.Buffer, param1: number): number;
			timeout(): okio.Timeout;
			close(): void;
			close(): void;
			close(): void;
		});
		public constructor();
		public close(): void;
		public read(param0: okio.Buffer, param1: number): number;
		public timeout(): okio.Timeout;
	}
}

declare module okio {
	export class Timeout extends java.lang.Object {
		public static class: java.lang.Class<okio.Timeout>;
		public static NONE: okio.Timeout;
		public constructor();
		public throwIfReached(): void;
		public deadline(param0: number, param1: java.util.concurrent.TimeUnit): okio.Timeout;
		public clearDeadline(): okio.Timeout;
		public hasDeadline(): boolean;
		public timeout(param0: number, param1: java.util.concurrent.TimeUnit): okio.Timeout;
		public timeoutNanos(): number;
		public waitUntilNotified(param0: any): void;
		public deadlineNanoTime(): number;
		public deadlineNanoTime(param0: number): okio.Timeout;
		public clearTimeout(): okio.Timeout;
	}
}

declare module okio {
	export class Utf8 extends java.lang.Object {
		public static class: java.lang.Class<okio.Utf8>;
		public static size(param0: string, param1: number, param2: number): number;
		public static size(param0: string): number;
	}
}

declare module okio {
	export class Util extends java.lang.Object {
		public static class: java.lang.Class<okio.Util>;
		public static UTF_8: java.nio.charset.Charset;
		public static reverseBytesShort(param0: number): number;
		public static reverseBytesLong(param0: number): number;
		public static checkOffsetAndCount(param0: number, param1: number, param2: number): void;
		public static reverseBytesInt(param0: number): number;
		public static sneakyRethrow(param0: java.lang.Throwable): void;
		public static arrayRangeEquals(param0: native.Array<number>, param1: number, param2: native.Array<number>, param3: number, param4: number): boolean;
	}
}


declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class AlreadySelectedException extends org.apache.commons.cli.ParseException {
					public static class: java.lang.Class<org.apache.commons.cli.AlreadySelectedException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: org.apache.commons.cli.OptionGroup, param1: org.apache.commons.cli.Option);
					public getOptionGroup(): org.apache.commons.cli.OptionGroup;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
					public getOption(): org.apache.commons.cli.Option;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class BasicParser extends org.apache.commons.cli.Parser {
					public static class: java.lang.Class<org.apache.commons.cli.BasicParser>;
					public constructor();
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: java.util.Properties): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: java.util.Properties, param3: boolean): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: boolean): org.apache.commons.cli.CommandLine;
					public flatten(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: boolean): native.Array<string>;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class CommandLine extends java.lang.Object implements java.io.Serializable {
					public static class: java.lang.Class<org.apache.commons.cli.CommandLine>;
					public getOptionValue(param0: string): string;
					public getArgList(): java.util.List<any>;
					public getParsedOptionValue(param0: string): any;
					public getOptionValues(param0: string): native.Array<string>;
					public getOptionObject(param0: string): any;
					public getOptionValue(param0: string, param1: string): string;
					public getArgs(): native.Array<string>;
					public getOptions(): native.Array<org.apache.commons.cli.Option>;
					public iterator(): java.util.Iterator<any>;
					public getOptionProperties(param0: string): java.util.Properties;
					public hasOption(param0: string): boolean;
					/** @deprecated */
					public getOptionObject(param0: string): any;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class CommandLineParser extends java.lang.Object {
					public static class: java.lang.Class<org.apache.commons.cli.CommandLineParser>;
					/**
					 * Constructs a new instance of the org.apache.commons.cli.CommandLineParser interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>): org.apache.commons.cli.CommandLine;
						parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: boolean): org.apache.commons.cli.CommandLine;
					});
					public constructor();
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: boolean): org.apache.commons.cli.CommandLine;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class GnuParser extends org.apache.commons.cli.Parser {
					public static class: java.lang.Class<org.apache.commons.cli.GnuParser>;
					public constructor();
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: java.util.Properties): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: java.util.Properties, param3: boolean): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: boolean): org.apache.commons.cli.CommandLine;
					public flatten(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: boolean): native.Array<string>;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class HelpFormatter extends java.lang.Object {
					public static class: java.lang.Class<org.apache.commons.cli.HelpFormatter>;
					public static DEFAULT_WIDTH: number;
					public static DEFAULT_LEFT_PAD: number;
					public static DEFAULT_DESC_PAD: number;
					public static DEFAULT_SYNTAX_PREFIX: string;
					public static DEFAULT_OPT_PREFIX: string;
					public static DEFAULT_LONG_OPT_PREFIX: string;
					public static DEFAULT_ARG_NAME: string;
					public defaultWidth: number;
					public defaultLeftPad: number;
					public defaultDescPad: number;
					public defaultSyntaxPrefix: string;
					public defaultNewLine: string;
					public defaultOptPrefix: string;
					public defaultLongOptPrefix: string;
					public defaultArgName: string;
					public optionComparator: java.util.Comparator<any>;
					public getArgName(): string;
					public printWrapped(param0: java.io.PrintWriter, param1: number, param2: string): void;
					public getLeftPadding(): number;
					public printHelp(param0: string, param1: string, param2: org.apache.commons.cli.Options, param3: string, param4: boolean): void;
					public setNewLine(param0: string): void;
					public createPadding(param0: number): string;
					public setOptionComparator(param0: java.util.Comparator<any>): void;
					public printHelp(param0: string, param1: org.apache.commons.cli.Options, param2: boolean): void;
					public renderWrappedText(param0: java.lang.StringBuffer, param1: number, param2: number, param3: string): java.lang.StringBuffer;
					public printHelp(param0: string, param1: string, param2: org.apache.commons.cli.Options, param3: string): void;
					public setOptPrefix(param0: string): void;
					public printHelp(param0: java.io.PrintWriter, param1: number, param2: string, param3: string, param4: org.apache.commons.cli.Options, param5: number, param6: number, param7: string, param8: boolean): void;
					public getOptPrefix(): string;
					public constructor();
					public getDescPadding(): number;
					public printHelp(param0: string, param1: org.apache.commons.cli.Options): void;
					public getNewLine(): string;
					public getLongOptPrefix(): string;
					public printOptions(param0: java.io.PrintWriter, param1: number, param2: org.apache.commons.cli.Options, param3: number, param4: number): void;
					public setDescPadding(param0: number): void;
					public getSyntaxPrefix(): string;
					public findWrapPos(param0: string, param1: number, param2: number): number;
					public rtrim(param0: string): string;
					public setWidth(param0: number): void;
					public setLeftPadding(param0: number): void;
					public getWidth(): number;
					public setLongOptPrefix(param0: string): void;
					public setArgName(param0: string): void;
					public setSyntaxPrefix(param0: string): void;
					public renderOptions(param0: java.lang.StringBuffer, param1: number, param2: org.apache.commons.cli.Options, param3: number, param4: number): java.lang.StringBuffer;
					public printUsage(param0: java.io.PrintWriter, param1: number, param2: string): void;
					public getOptionComparator(): java.util.Comparator<any>;
					public printHelp(param0: number, param1: string, param2: string, param3: org.apache.commons.cli.Options, param4: string): void;
					public printUsage(param0: java.io.PrintWriter, param1: number, param2: string, param3: org.apache.commons.cli.Options): void;
					public printHelp(param0: java.io.PrintWriter, param1: number, param2: string, param3: string, param4: org.apache.commons.cli.Options, param5: number, param6: number, param7: string): void;
					public printWrapped(param0: java.io.PrintWriter, param1: number, param2: number, param3: string): void;
					public printHelp(param0: number, param1: string, param2: string, param3: org.apache.commons.cli.Options, param4: string, param5: boolean): void;
				}
				export module HelpFormatter {
					export class OptionComparator extends java.lang.Object implements java.util.Comparator<any> {
						public static class: java.lang.Class<org.apache.commons.cli.HelpFormatter.OptionComparator>;
						public thenComparing(param0: any /* any*/, param1: java.util.Comparator<any>): java.util.Comparator<any>;
						public static comparing(param0: any /* any*/, param1: java.util.Comparator<any>): java.util.Comparator<any>;
						public thenComparingLong(param0: any /* any*/): java.util.Comparator<any>;
						public equals(param0: any): boolean;
						public static comparingInt(param0: any /* any*/): java.util.Comparator<any>;
						public static comparingDouble(param0: any /* any*/): java.util.Comparator<any>;
						public static reverseOrder(): java.util.Comparator<any>;
						public static comparing(param0: any /* any*/): java.util.Comparator<any>;
						public thenComparingInt(param0: any /* any*/): java.util.Comparator<any>;
						public reversed(): java.util.Comparator<any>;
						public static nullsFirst(param0: java.util.Comparator<any>): java.util.Comparator<any>;
						public thenComparingDouble(param0: any /* any*/): java.util.Comparator<any>;
						public static nullsLast(param0: java.util.Comparator<any>): java.util.Comparator<any>;
						public thenComparing(param0: any /* any*/): java.util.Comparator<any>;
						public static naturalOrder(): java.util.Comparator<any>;
						public compare(param0: any, param1: any): number;
						public thenComparing(param0: java.util.Comparator<any>): java.util.Comparator<any>;
						public static comparingLong(param0: any /* any*/): java.util.Comparator<any>;
					}
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class MissingArgumentException extends org.apache.commons.cli.ParseException {
					public static class: java.lang.Class<org.apache.commons.cli.MissingArgumentException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
					public constructor(param0: org.apache.commons.cli.Option);
					public getOption(): org.apache.commons.cli.Option;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class MissingOptionException extends org.apache.commons.cli.ParseException {
					public static class: java.lang.Class<org.apache.commons.cli.MissingOptionException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
					public getMissingOptions(): java.util.List<any>;
					public constructor(param0: java.util.List<any>);
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class Option extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable {
					public static class: java.lang.Class<org.apache.commons.cli.Option>;
					public static UNINITIALIZED: number;
					public static UNLIMITED_VALUES: number;
					public setOptionalArg(param0: boolean): void;
					public getArgName(): string;
					public setDescription(param0: string): void;
					public getOpt(): string;
					public setArgs(param0: number): void;
					public getArgs(): number;
					public constructor(param0: string, param1: boolean, param2: string);
					public setType(param0: any): void;
					public hasArgName(): boolean;
					public getValueSeparator(): string;
					public constructor(param0: string, param1: string);
					public hasArg(): boolean;
					public getValue(): string;
					public toString(): string;
					public clone(): any;
					public getValues(): native.Array<string>;
					public hasArgs(): boolean;
					public getType(): any;
					public getValue(param0: string): string;
					public setRequired(param0: boolean): void;
					public hashCode(): number;
					/** @deprecated */
					public addValue(param0: string): boolean;
					public getLongOpt(): string;
					public getId(): number;
					public setValueSeparator(param0: string): void;
					public setLongOpt(param0: string): void;
					public isRequired(): boolean;
					public setArgName(param0: string): void;
					public equals(param0: any): boolean;
					public getValuesList(): java.util.List<any>;
					public hasValueSeparator(): boolean;
					public constructor(param0: string, param1: string, param2: boolean, param3: string);
					public getValue(param0: number): string;
					public hasOptionalArg(): boolean;
					public getDescription(): string;
					public hasLongOpt(): boolean;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class OptionBuilder extends java.lang.Object {
					public static class: java.lang.Class<org.apache.commons.cli.OptionBuilder>;
					public static hasArgs(param0: number): org.apache.commons.cli.OptionBuilder;
					public static hasArg(param0: boolean): org.apache.commons.cli.OptionBuilder;
					public static withValueSeparator(param0: string): org.apache.commons.cli.OptionBuilder;
					public static withValueSeparator(): org.apache.commons.cli.OptionBuilder;
					public static withType(param0: any): org.apache.commons.cli.OptionBuilder;
					public static isRequired(): org.apache.commons.cli.OptionBuilder;
					public static create(param0: string): org.apache.commons.cli.Option;
					public static hasOptionalArgs(param0: number): org.apache.commons.cli.OptionBuilder;
					public static withArgName(param0: string): org.apache.commons.cli.OptionBuilder;
					public static isRequired(param0: boolean): org.apache.commons.cli.OptionBuilder;
					public static withLongOpt(param0: string): org.apache.commons.cli.OptionBuilder;
					public static hasOptionalArgs(): org.apache.commons.cli.OptionBuilder;
					public static hasArg(): org.apache.commons.cli.OptionBuilder;
					public static create(): org.apache.commons.cli.Option;
					public static hasArgs(): org.apache.commons.cli.OptionBuilder;
					public static withDescription(param0: string): org.apache.commons.cli.OptionBuilder;
					public static hasOptionalArg(): org.apache.commons.cli.OptionBuilder;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class OptionGroup extends java.lang.Object implements java.io.Serializable {
					public static class: java.lang.Class<org.apache.commons.cli.OptionGroup>;
					public addOption(param0: org.apache.commons.cli.Option): org.apache.commons.cli.OptionGroup;
					public getSelected(): string;
					public setSelected(param0: org.apache.commons.cli.Option): void;
					public toString(): string;
					public constructor();
					public getOptions(): java.util.Collection<any>;
					public getNames(): java.util.Collection<any>;
					public setRequired(param0: boolean): void;
					public isRequired(): boolean;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class OptionValidator extends java.lang.Object {
					public static class: java.lang.Class<org.apache.commons.cli.OptionValidator>;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class Options extends java.lang.Object implements java.io.Serializable {
					public static class: java.lang.Class<org.apache.commons.cli.Options>;
					public toString(): string;
					public getOption(param0: string): org.apache.commons.cli.Option;
					public addOptionGroup(param0: org.apache.commons.cli.OptionGroup): org.apache.commons.cli.Options;
					public addOption(param0: string, param1: string, param2: boolean, param3: string): org.apache.commons.cli.Options;
					public constructor();
					public getRequiredOptions(): java.util.List<any>;
					public addOption(param0: org.apache.commons.cli.Option): org.apache.commons.cli.Options;
					public getOptions(): java.util.Collection<any>;
					public getOptionGroup(param0: org.apache.commons.cli.Option): org.apache.commons.cli.OptionGroup;
					public hasOption(param0: string): boolean;
					public addOption(param0: string, param1: boolean, param2: string): org.apache.commons.cli.Options;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class ParseException extends java.lang.Exception {
					public static class: java.lang.Class<org.apache.commons.cli.ParseException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export abstract class Parser extends java.lang.Object implements org.apache.commons.cli.CommandLineParser {
					public static class: java.lang.Class<org.apache.commons.cli.Parser>;
					public cmd: org.apache.commons.cli.CommandLine;
					public processProperties(param0: java.util.Properties): void;
					public processOption(param0: string, param1: java.util.ListIterator<any>): void;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: java.util.Properties): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: boolean): org.apache.commons.cli.CommandLine;
					public flatten(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: boolean): native.Array<string>;
					public processArgs(param0: org.apache.commons.cli.Option, param1: java.util.ListIterator<any>): void;
					public getOptions(): org.apache.commons.cli.Options;
					public setOptions(param0: org.apache.commons.cli.Options): void;
					public constructor();
					public getRequiredOptions(): java.util.List<any>;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: java.util.Properties, param3: boolean): org.apache.commons.cli.CommandLine;
					public checkRequiredOptions(): void;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class PatternOptionBuilder extends java.lang.Object {
					public static class: java.lang.Class<org.apache.commons.cli.PatternOptionBuilder>;
					public static STRING_VALUE: java.lang.Class<any>;
					public static OBJECT_VALUE: java.lang.Class<any>;
					public static NUMBER_VALUE: java.lang.Class<any>;
					public static DATE_VALUE: java.lang.Class<any>;
					public static CLASS_VALUE: java.lang.Class<any>;
					public static EXISTING_FILE_VALUE: java.lang.Class<any>;
					public static FILE_VALUE: java.lang.Class<any>;
					public static FILES_VALUE: java.lang.Class<any>;
					public static URL_VALUE: java.lang.Class<any>;
					public static parsePattern(param0: string): org.apache.commons.cli.Options;
					public constructor();
					public static isValueCode(param0: string): boolean;
					public static getValueClass(param0: string): any;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class PosixParser extends org.apache.commons.cli.Parser {
					public static class: java.lang.Class<org.apache.commons.cli.PosixParser>;
					public burstToken(param0: string, param1: boolean): void;
					public constructor();
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: java.util.Properties): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: java.util.Properties, param3: boolean): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>): org.apache.commons.cli.CommandLine;
					public parse(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: boolean): org.apache.commons.cli.CommandLine;
					public flatten(param0: org.apache.commons.cli.Options, param1: native.Array<string>, param2: boolean): native.Array<string>;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class TypeHandler extends java.lang.Object {
					public static class: java.lang.Class<org.apache.commons.cli.TypeHandler>;
					public static createClass(param0: string): java.lang.Class<any>;
					public static createURL(param0: string): java.net.URL;
					public constructor();
					public static createValue(param0: string, param1: any): any;
					public static createFile(param0: string): java.io.File;
					public static createDate(param0: string): java.util.Date;
					public static createValue(param0: string, param1: java.lang.Class<any>): any;
					public static createObject(param0: string): any;
					public static createNumber(param0: string): java.lang.Number;
					public static createFiles(param0: string): native.Array<java.io.File>;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class UnrecognizedOptionException extends org.apache.commons.cli.ParseException {
					public static class: java.lang.Class<org.apache.commons.cli.UnrecognizedOptionException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: boolean, param3: boolean);
					public constructor(param0: string, param1: string);
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
					public getOption(): string;
				}
			}
		}
	}
}

declare module org {
	export module apache {
		export module commons {
			export module cli {
				export class Util extends java.lang.Object {
					public static class: java.lang.Class<org.apache.commons.cli.Util>;
				}
			}
		}
	}
}

//Generics information:
//androidx.appcompat.view.menu.BaseMenuWrapper:1
//androidx.appcompat.view.menu.BaseWrapper:1
//androidx.arch.core.internal.FastSafeIterableMap:2
//androidx.arch.core.internal.SafeIterableMap:2
//androidx.arch.core.internal.SafeIterableMap.AscendingIterator:2
//androidx.arch.core.internal.SafeIterableMap.DescendingIterator:2
//androidx.arch.core.internal.SafeIterableMap.Entry:2
//androidx.arch.core.internal.SafeIterableMap.ListIterator:2
//androidx.arch.core.internal.SafeIterableMap.SupportRemove:2
//androidx.arch.core.util.Function:2
//androidx.collection.ArrayMap:2
//androidx.collection.ArraySet:1
//androidx.collection.CircularArray:1
//androidx.collection.LongSparseArray:1
//androidx.collection.LruCache:2
//androidx.collection.MapCollections:2
//androidx.collection.MapCollections.ArrayIterator:1
//androidx.collection.SimpleArrayMap:2
//androidx.collection.SparseArrayCompat:1
//androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior:1
//androidx.coordinatorlayout.widget.DirectedAcyclicGraph:1
//androidx.core.graphics.TypefaceCompatBaseImpl.StyleExtractor:1
//androidx.core.os.ParcelableCompat.ParcelableCompatCreatorHoneycombMR2:1
//androidx.core.os.ParcelableCompatCreatorCallbacks:1
//androidx.core.provider.SelfDestructiveThread.ReplyCallback:1
//androidx.core.util.Consumer:1
//androidx.core.util.Pair:2
//androidx.core.util.Pools.Pool:1
//androidx.core.util.Pools.SimplePool:1
//androidx.core.util.Pools.SynchronizedPool:1
//androidx.customview.widget.FocusStrategy.BoundsAdapter:1
//androidx.customview.widget.FocusStrategy.CollectionAdapter:2
//androidx.customview.widget.FocusStrategy.SequentialComparator:1
//androidx.fragment.app.FragmentHostCallback:1
//androidx.lifecycle.ComputableLiveData:1
//androidx.lifecycle.LiveData:1
//androidx.lifecycle.MediatorLiveData:1
//androidx.lifecycle.MediatorLiveData.Source:1
//androidx.lifecycle.MutableLiveData:1
//androidx.lifecycle.Observer:1
//androidx.loader.app.LoaderManager.LoaderCallbacks:1
//androidx.loader.app.LoaderManagerImpl.LoaderInfo:1
//androidx.loader.app.LoaderManagerImpl.LoaderObserver:1
//androidx.loader.content.AsyncTaskLoader:1
//androidx.loader.content.Loader:1
//androidx.loader.content.Loader.OnLoadCanceledListener:1
//androidx.loader.content.Loader.OnLoadCompleteListener:1
//androidx.loader.content.ModernAsyncTask:3
//androidx.loader.content.ModernAsyncTask.AsyncTaskResult:1
//androidx.loader.content.ModernAsyncTask.WorkerRunnable:2
//androidx.recyclerview.widget.AsyncDifferConfig:1
//androidx.recyclerview.widget.AsyncDifferConfig.Builder:1
//androidx.recyclerview.widget.AsyncListDiffer:1
//androidx.recyclerview.widget.AsyncListUtil:1
//androidx.recyclerview.widget.AsyncListUtil.DataCallback:1
//androidx.recyclerview.widget.DiffUtil.ItemCallback:1
//androidx.recyclerview.widget.ListAdapter:2
//androidx.recyclerview.widget.MessageThreadUtil:1
//androidx.recyclerview.widget.RecyclerView.Adapter:1
//androidx.recyclerview.widget.SortedList:1
//androidx.recyclerview.widget.SortedList.BatchedCallback:1
//androidx.recyclerview.widget.SortedList.Callback:1
//androidx.recyclerview.widget.SortedListAdapterCallback:1
//androidx.recyclerview.widget.ThreadUtil:1
//androidx.recyclerview.widget.ThreadUtil.BackgroundCallback:1
//androidx.recyclerview.widget.ThreadUtil.MainThreadCallback:1
//androidx.recyclerview.widget.TileList:1
//androidx.recyclerview.widget.TileList.Tile:1
//bolts.Capture:1
//bolts.Continuation:2
//bolts.Task:1
//bolts.TaskCompletionSource:1
//com.facebook.common.executors.ScheduledFutureImpl:1
//com.facebook.common.executors.StatefulRunnable:1
//com.facebook.common.internal.ImmutableList:1
//com.facebook.common.internal.ImmutableMap:2
//com.facebook.common.internal.ImmutableSet:1
//com.facebook.common.internal.Predicate:1
//com.facebook.common.internal.Supplier:1
//com.facebook.common.memory.Pool:1
//com.facebook.common.references.CloseableReference:1
//com.facebook.common.references.OOMSoftReference:1
//com.facebook.common.references.ResourceReleaser:1
//com.facebook.common.references.SharedReference:1
//com.facebook.datasource.AbstractDataSource:1
//com.facebook.datasource.BaseDataSubscriber:1
//com.facebook.datasource.DataSource:1
//com.facebook.datasource.DataSources.ValueHolder:1
//com.facebook.datasource.DataSubscriber:1
//com.facebook.datasource.FirstAvailableDataSourceSupplier:1
//com.facebook.datasource.IncreasingQualityDataSourceSupplier:1
//com.facebook.datasource.RetainingDataSourceSupplier:1
//com.facebook.datasource.RetainingDataSourceSupplier.RetainingDataSource:1
//com.facebook.datasource.SimpleDataSource:1
//com.facebook.drawee.controller.AbstractDraweeController:2
//com.facebook.drawee.controller.AbstractDraweeController.InternalForwardingListener:1
//com.facebook.drawee.controller.AbstractDraweeControllerBuilder:4
//com.facebook.drawee.controller.BaseControllerListener:1
//com.facebook.drawee.controller.ControllerListener:1
//com.facebook.drawee.controller.ForwardingControllerListener:1
//com.facebook.drawee.view.DraweeHolder:1
//com.facebook.drawee.view.DraweeView:1
//com.facebook.drawee.view.MultiDraweeHolder:1
//com.facebook.flipper.plugins.common.RingBuffer:1
//com.facebook.flipper.plugins.databases.DatabaseDriver:1
//com.facebook.flipper.plugins.inspector.InspectorValue:1
//com.facebook.flipper.plugins.inspector.InspectorValue.Type:1
//com.facebook.flipper.plugins.inspector.Named:1
//com.facebook.flipper.plugins.inspector.NodeDescriptor:1
//com.facebook.flipper.plugins.inspector.SelfRegisteringNodeDescriptor:1
//com.facebook.imagepipeline.cache.CountingLruMap:2
//com.facebook.imagepipeline.cache.CountingMemoryCache:2
//com.facebook.imagepipeline.cache.CountingMemoryCache.Entry:2
//com.facebook.imagepipeline.cache.CountingMemoryCache.EntryStateObserver:1
//com.facebook.imagepipeline.cache.CountingMemoryCacheInspector:2
//com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo:2
//com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfoEntry:2
//com.facebook.imagepipeline.cache.InstrumentedMemoryCache:2
//com.facebook.imagepipeline.cache.MemoryCache:2
//com.facebook.imagepipeline.cache.MemoryCacheTracker:1
//com.facebook.imagepipeline.cache.ValueDescriptor:1
//com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter:1
//com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter:1
//com.facebook.imagepipeline.datasource.ListDataSource:1
//com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter:1
//com.facebook.imagepipeline.datasource.SettableDataSource:1
//com.facebook.imagepipeline.debug.LruMap:2
//com.facebook.imagepipeline.memory.BasePool:1
//com.facebook.imagepipeline.memory.Bucket:1
//com.facebook.imagepipeline.memory.BucketMap:1
//com.facebook.imagepipeline.memory.BucketMap.LinkedEntry:1
//com.facebook.imagepipeline.memory.LruBucketsPoolBackend:1
//com.facebook.imagepipeline.memory.OOMSoftReferenceBucket:1
//com.facebook.imagepipeline.memory.PoolBackend:1
//com.facebook.imagepipeline.producers.BaseConsumer:1
//com.facebook.imagepipeline.producers.BaseNetworkFetcher:1
//com.facebook.imagepipeline.producers.Consumer:1
//com.facebook.imagepipeline.producers.DelegatingConsumer:2
//com.facebook.imagepipeline.producers.MultiplexProducer:2
//com.facebook.imagepipeline.producers.NetworkFetcher:1
//com.facebook.imagepipeline.producers.NullProducer:1
//com.facebook.imagepipeline.producers.Producer:1
//com.facebook.imagepipeline.producers.StatefulProducerRunnable:1
//com.facebook.imagepipeline.producers.SwallowResultProducer:1
//com.facebook.imagepipeline.producers.ThreadHandoffProducer:1
//com.facebook.imagepipeline.producers.ThrottlingProducer:1
//com.facebook.imagepipeline.producers.ThumbnailProducer:1
//com.facebook.litho.Component.Builder:1
//com.facebook.litho.Component.ContainerBuilder:1
//com.facebook.litho.Copyable:1
//com.facebook.litho.DelegatingEventHandler:1
//com.facebook.litho.Diff:1
//com.facebook.litho.DrawableComponent:1
//com.facebook.litho.DynamicValue:1
//com.facebook.litho.DynamicValue.OnValueChangeListener:1
//com.facebook.litho.Equivalence:1
//com.facebook.litho.EventHandler:1
//com.facebook.litho.EventTrigger:1
//com.facebook.litho.LayoutPriorityThreadPoolExecutor.ComparableFutureTask:1
//com.facebook.litho.MatrixDrawable:1
//com.facebook.litho.MountContentPool:1
//com.facebook.litho.Output:1
//com.facebook.litho.OutputUnitsAffinityGroup:1
//com.facebook.litho.RecyclePool:1
//com.facebook.litho.StateValue:1
//com.facebook.litho.TransitionIdMap:1
//com.facebook.litho.ViewCompatComponent:1
//com.facebook.litho.ViewCompatComponent.Builder:1
//com.facebook.litho.internal.ArraySet:1
//com.facebook.litho.sections.ListEventsHandler:1
//com.facebook.litho.sections.Section.Builder:1
//com.facebook.litho.sections.common.DataDiffSection:1
//com.facebook.litho.sections.common.DataDiffSection.Builder:1
//com.facebook.litho.sections.common.DataDiffSectionSpec:1
//com.facebook.litho.sections.common.DataDiffSectionSpec.Callback:1
//com.facebook.litho.sections.common.HideableDataDiffSection:1
//com.facebook.litho.sections.common.HideableDataDiffSection.Builder:1
//com.facebook.litho.sections.common.HideableDataDiffSection.HideableDataDiffSectionStateContainer:1
//com.facebook.litho.sections.common.HideableDataDiffSectionSpec:1
//com.facebook.litho.viewcompat.SimpleViewBinder:1
//com.facebook.litho.viewcompat.ViewBinder:1
//com.facebook.litho.viewcompat.ViewCreator:1
//com.facebook.litho.widget.BaseRenderInfo.Builder:1
//com.facebook.litho.widget.Binder:1
//com.facebook.litho.widget.RecyclerBinderUpdateCallback:1
//com.facebook.litho.widget.RecyclerBinderUpdateCallback.ComponentRenderer:1
//com.facebook.stetho.Stetho.PluginBuilder:1
//com.facebook.stetho.common.Accumulator:1
//com.facebook.stetho.common.ArrayListAccumulator:1
//com.facebook.stetho.common.ListUtil.FiveItemImmutableList:1
//com.facebook.stetho.common.ListUtil.FourItemImmutableList:1
//com.facebook.stetho.common.ListUtil.ImmutableArrayList:1
//com.facebook.stetho.common.ListUtil.ImmutableList:1
//com.facebook.stetho.common.ListUtil.OneItemImmutableList:1
//com.facebook.stetho.common.ListUtil.ThreeItemImmutableList:1
//com.facebook.stetho.common.ListUtil.TwoItemImmutableList:1
//com.facebook.stetho.common.Predicate:1
//com.facebook.stetho.common.UncheckedCallable:1
//com.facebook.stetho.common.android.DialogFragmentAccessor:3
//com.facebook.stetho.common.android.FragmentAccessor:2
//com.facebook.stetho.common.android.FragmentActivityAccessor:2
//com.facebook.stetho.common.android.FragmentCompat:4
//com.facebook.stetho.common.android.FragmentCompat.FragmentManagerAccessorViaReflection:2
//com.facebook.stetho.common.android.FragmentManagerAccessor:2
//com.facebook.stetho.common.android.HandlerUtil.WaitableRunnable:1
//com.facebook.stetho.inspector.elements.AbstractChainedDescriptor:1
//com.facebook.stetho.inspector.elements.ChainedDescriptor:1
//com.facebook.stetho.inspector.elements.Descriptor:1
//com.facebook.stetho.inspector.elements.NodeDescriptor:1
//com.facebook.stetho.inspector.elements.android.HighlightableDescriptor:1
//com.facebook.stetho.inspector.elements.android.MethodInvoker.TypedMethodInvoker:1
//com.facebook.stetho.inspector.network.MimeMatcher:1
//com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver:1
//com.facebook.stetho.inspector.protocol.module.BaseDatabaseDriver.ExecuteResultHandler:1
//com.facebook.stetho.inspector.protocol.module.DatabaseDriver2:1
//javax.annotation.meta.TypeQualifierValidator:1

